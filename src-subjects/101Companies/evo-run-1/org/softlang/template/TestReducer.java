/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.template;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.company.Company;
import org.softlang.company.Department;
import org.softlang.company.impl.bean.DepartmentImpl;
import org.softlang.company.impl.pojo.CompanyImpl;
import org.softlang.features.TotalReducer;

@RunWith(EvoSuiteRunner.class)
public class TestReducer {


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Weak Mutation 0: org.softlang.template.Reducer.visit(Lorg/softlang/company/Company;)Ljava/lang/Object;:22 - DeleteField: monoidLorg/softlang/util/Monoid;
   * 2 Weak Mutation 1: org.softlang.template.Reducer.visit(Lorg/softlang/company/Company;)Ljava/lang/Object;:22 - DeleteStatement: unit()Ljava/lang/Object;
   * 3 org.softlang.template.Reducer.visit(Lorg/softlang/company/Company;)Ljava/lang/Object;: root-Branch
   * 4 org.softlang.template.Reducer.<init>(Lorg/softlang/util/Monoid;)V: root-Branch
   * 5 Weak Mutation 0: org.softlang.template.Reducer.visit(Lorg/softlang/company/Company;)Ljava/lang/Object;:22 - DeleteField: monoidLorg/softlang/util/Monoid;
   * 6 Weak Mutation 1: org.softlang.template.Reducer.visit(Lorg/softlang/company/Company;)Ljava/lang/Object;:22 - DeleteStatement: unit()Ljava/lang/Object;
   */
  @Test
  public void test0()  throws Throwable  {
      TotalReducer totalReducer0 = new TotalReducer();
      CompanyImpl companyImpl0 = new CompanyImpl();
      Double double0 = totalReducer0.visit((Company) companyImpl0);
      assertEquals(0, double0.intValue());
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 2: org.softlang.template.Reducer.visit(Lorg/softlang/company/Department;)Ljava/lang/Object;:26 - DeleteField: monoidLorg/softlang/util/Monoid;
   * 2 Weak Mutation 3: org.softlang.template.Reducer.visit(Lorg/softlang/company/Department;)Ljava/lang/Object;:26 - DeleteStatement: unit()Ljava/lang/Object;
   * 3 org.softlang.template.Reducer.visit(Lorg/softlang/company/Department;)Ljava/lang/Object;: root-Branch
   * 4 Weak Mutation 2: org.softlang.template.Reducer.visit(Lorg/softlang/company/Department;)Ljava/lang/Object;:26 - DeleteField: monoidLorg/softlang/util/Monoid;
   * 5 Weak Mutation 3: org.softlang.template.Reducer.visit(Lorg/softlang/company/Department;)Ljava/lang/Object;:26 - DeleteStatement: unit()Ljava/lang/Object;
   */
  @Test
  public void test1()  throws Throwable  {
      TotalReducer totalReducer0 = new TotalReducer();
      DepartmentImpl departmentImpl0 = new DepartmentImpl();
      Double double0 = totalReducer0.visit((Department) departmentImpl0);
      assertEquals(false, double0.isInfinite());
  }
}
