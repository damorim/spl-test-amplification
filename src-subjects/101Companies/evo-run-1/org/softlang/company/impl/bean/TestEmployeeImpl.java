/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.company.impl.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.company.impl.bean.EmployeeImpl;

@RunWith(EvoSuiteRunner.class)
public class TestEmployeeImpl {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Weak Mutation 0: org.softlang.company.impl.bean.EmployeeImpl.getName()Ljava/lang/String;:26 - DeleteField: nameLjava/lang/String;
   * 2 org.softlang.company.impl.bean.EmployeeImpl.<init>()V: root-Branch
   * 3 org.softlang.company.impl.bean.EmployeeImpl.setName(Ljava/lang/String;)V: root-Branch
   * 4 org.softlang.company.impl.bean.EmployeeImpl.getName()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 0: org.softlang.company.impl.bean.EmployeeImpl.getName()Ljava/lang/String;:26 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test0()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setName("q\"");
      String string0 = employeeImpl0.getName();
      assertEquals("q\"", string0);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 Weak Mutation 1: org.softlang.company.impl.bean.EmployeeImpl.getAddress()Ljava/lang/String;:38 - DeleteField: addressLjava/lang/String;
   * 2 org.softlang.company.impl.bean.EmployeeImpl.getAddress()Ljava/lang/String;: root-Branch
   * 3 org.softlang.company.impl.bean.EmployeeImpl.setAddress(Ljava/lang/String;)V: root-Branch
   * 4 Weak Mutation 1: org.softlang.company.impl.bean.EmployeeImpl.getAddress()Ljava/lang/String;:38 - DeleteField: addressLjava/lang/String;
   */
  @Test
  public void test1()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setAddress("FK\"H+K3ee.0z|s");
      String string0 = employeeImpl0.getAddress();
      assertEquals("FK\"H+K3ee.0z|s", string0);
  }

  //Test case number: 2
  /*
   * 14 covered goals:
   * 1 Weak Mutation 2: org.softlang.company.impl.bean.EmployeeImpl.getSalary()D:50 - InsertUnaryOp Negation
   * 2 Weak Mutation 4: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - InsertUnaryOp Negation
   * 3 Weak Mutation 5: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: getSalary()D
   * 4 Weak Mutation 6: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: doubleSub(DD)I
   * 5 Weak Mutation 7: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> >=
   * 6 Weak Mutation 10: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:58 - InsertUnaryOp Negation
   * 7 org.softlang.company.impl.bean.EmployeeImpl.getSalary()D: root-Branch
   * 8 org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V: I6 Branch 1 IFEQ L54 - false
   * 9 Weak Mutation 2: org.softlang.company.impl.bean.EmployeeImpl.getSalary()D:50 - InsertUnaryOp Negation
   * 10 Weak Mutation 4: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - InsertUnaryOp Negation
   * 11 Weak Mutation 5: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: getSalary()D
   * 12 Weak Mutation 6: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: doubleSub(DD)I
   * 13 Weak Mutation 7: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> >=
   * 14 Weak Mutation 10: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:58 - InsertUnaryOp Negation
   */
  @Test
  public void test2()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setSalary(490.4050709567115);
      assertEquals(490.4050709567115, employeeImpl0.getSalary(), 0.01D);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 3: org.softlang.company.impl.bean.EmployeeImpl.getSalary()D:50 - DeleteField: salaryD
   * 2 Weak Mutation 8: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> <=
   * 3 Weak Mutation 10: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:58 - InsertUnaryOp Negation
   * 4 Weak Mutation 3: org.softlang.company.impl.bean.EmployeeImpl.getSalary()D:50 - DeleteField: salaryD
   * 5 Weak Mutation 8: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> <=
   */
  @Test
  public void test3()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setSalary((-1002.6485040346025));
      double double0 = employeeImpl0.getSalary();
      assertEquals((-1002.6485040346025), employeeImpl0.getSalary(), 0.01D);
      assertEquals((-1002.6485040346025), double0, 0.01D);
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 Weak Mutation 9: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> -2
   * 2 org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V: I6 Branch 1 IFEQ L54 - true
   * 3 Weak Mutation 2: org.softlang.company.impl.bean.EmployeeImpl.getSalary()D:50 - InsertUnaryOp Negation
   * 4 Weak Mutation 4: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - InsertUnaryOp Negation
   * 5 Weak Mutation 5: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: getSalary()D
   * 6 Weak Mutation 6: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - DeleteStatement: doubleSub(DD)I
   * 7 Weak Mutation 9: org.softlang.company.impl.bean.EmployeeImpl.setSalary(D)V:54 - ReplaceComparisonOperator == -> -2
   */
  @Test
  public void test4()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setSalary(0.0);
      assertEquals(0.0, employeeImpl0.getSalary(), 0.01D);
  }

  //Test case number: 5
  /*
   * 12 covered goals:
   * 1 Weak Mutation 12: org.softlang.company.impl.bean.EmployeeImpl.getManager()Z:73 - DeleteField: managerZ
   * 2 Weak Mutation 13: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp Negation
   * 3 Weak Mutation 14: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp IINC 1
   * 4 Weak Mutation 15: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp IINC -1
   * 5 org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V: root-Branch
   * 6 Weak Mutation 11: org.softlang.company.impl.bean.EmployeeImpl.getManager()Z:73 - InsertUnaryOp Negation
   * 7 Weak Mutation 11: org.softlang.company.impl.bean.EmployeeImpl.getManager()Z:73 - InsertUnaryOp Negation
   * 8 Weak Mutation 12: org.softlang.company.impl.bean.EmployeeImpl.getManager()Z:73 - DeleteField: managerZ
   * 9 Weak Mutation 13: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp Negation
   * 10 Weak Mutation 14: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 15: org.softlang.company.impl.bean.EmployeeImpl.setManager(Z)V:77 - InsertUnaryOp IINC -1
   * 12 org.softlang.company.impl.bean.EmployeeImpl.getManager()Z: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      employeeImpl0.setManager(true);
      boolean boolean0 = employeeImpl0.getManager();
      assertEquals(true, boolean0);
  }
}
