/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.company.impl.bean;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.company.Subunit;
import org.softlang.company.impl.bean.CompanyImpl;
import org.softlang.company.impl.bean.DepartmentImpl;
import org.softlang.company.impl.bean.EmployeeImpl;

@RunWith(EvoSuiteRunner.class)
public class TestComponentImpl {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Weak Mutation 0: org.softlang.company.impl.bean.ComponentImpl.getName()Ljava/lang/String;:17 - DeleteField: nameLjava/lang/String;
   * 2 org.softlang.company.impl.bean.ComponentImpl.getName()Ljava/lang/String;: root-Branch
   * 3 org.softlang.company.impl.bean.ComponentImpl.<init>()V: root-Branch
   * 4 org.softlang.company.impl.bean.ComponentImpl.setName(Ljava/lang/String;)V: root-Branch
   * 5 Weak Mutation 0: org.softlang.company.impl.bean.ComponentImpl.getName()Ljava/lang/String;:17 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test0()  throws Throwable  {
      CompanyImpl companyImpl0 = new CompanyImpl();
      companyImpl0.setName("&uY.{");
      String string0 = companyImpl0.getName();
      assertEquals("&uY.{", string0);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 Weak Mutation 1: org.softlang.company.impl.bean.ComponentImpl.getParent()Lorg/softlang/company/impl/bean/ComponentImpl;:26 - DeleteField: parentLorg/softlang/company/impl/bean/ComponentImpl;
   * 2 org.softlang.company.impl.bean.ComponentImpl.getParent()Lorg/softlang/company/impl/bean/ComponentImpl;: root-Branch
   * 3 org.softlang.company.impl.bean.ComponentImpl.setParent(Lorg/softlang/company/impl/bean/ComponentImpl;)V: root-Branch
   * 4 Weak Mutation 1: org.softlang.company.impl.bean.ComponentImpl.getParent()Lorg/softlang/company/impl/bean/ComponentImpl;:26 - DeleteField: parentLorg/softlang/company/impl/bean/ComponentImpl;
   */
  @Test
  public void test1()  throws Throwable  {
      DepartmentImpl departmentImpl0 = new DepartmentImpl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      departmentImpl0.add((Subunit) employeeImpl0);
      // Undeclared exception!
      try {
        departmentImpl0.add((Subunit) employeeImpl0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Attemped re-parenting.
         */
      }
  }
}
