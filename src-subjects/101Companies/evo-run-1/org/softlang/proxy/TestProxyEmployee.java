/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.company.Employee;
import org.softlang.company.impl.pojo.EmployeeImpl;
import org.softlang.proxy.AccessControl;
import org.softlang.proxy.ProxyEmployee;

@RunWith(EvoSuiteRunner.class)
public class TestProxyEmployee {


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Weak Mutation 0: org.softlang.proxy.ProxyEmployee.getName()Ljava/lang/String;:21 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 1: org.softlang.proxy.ProxyEmployee.getName()Ljava/lang/String;:21 - DeleteStatement: getName()Ljava/lang/String;
   * 3 org.softlang.proxy.ProxyEmployee.<init>(Lorg/softlang/proxy/AccessControl;Lorg/softlang/company/Employee;)V: root-Branch
   * 4 org.softlang.proxy.ProxyEmployee.getName()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 0: org.softlang.proxy.ProxyEmployee.getName()Ljava/lang/String;:21 - DeleteField: subjectLorg/softlang/company/Employee;
   * 6 Weak Mutation 1: org.softlang.proxy.ProxyEmployee.getName()Ljava/lang/String;:21 - DeleteStatement: getName()Ljava/lang/String;
   */
  @Test
  public void test0()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      String string0 = proxyEmployee0.getName();
      assertNull(string0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 2: org.softlang.proxy.ProxyEmployee.setName(Ljava/lang/String;)V:24 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 3: org.softlang.proxy.ProxyEmployee.setName(Ljava/lang/String;)V:24 - DeleteStatement: setName(Ljava/lang/String;)V
   * 3 org.softlang.proxy.ProxyEmployee.setName(Ljava/lang/String;)V: root-Branch
   * 4 Weak Mutation 2: org.softlang.proxy.ProxyEmployee.setName(Ljava/lang/String;)V:24 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 3: org.softlang.proxy.ProxyEmployee.setName(Ljava/lang/String;)V:24 - DeleteStatement: setName(Ljava/lang/String;)V
   */
  @Test
  public void test1()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      proxyEmployee0.setName((String) null);
      assertEquals(0.0, proxyEmployee0.getSalary(), 0.01D);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 4: org.softlang.proxy.ProxyEmployee.getAddress()Ljava/lang/String;:27 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 5: org.softlang.proxy.ProxyEmployee.getAddress()Ljava/lang/String;:27 - DeleteStatement: getAddress()Ljava/lang/String;
   * 3 org.softlang.proxy.ProxyEmployee.getAddress()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 4: org.softlang.proxy.ProxyEmployee.getAddress()Ljava/lang/String;:27 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 5: org.softlang.proxy.ProxyEmployee.getAddress()Ljava/lang/String;:27 - DeleteStatement: getAddress()Ljava/lang/String;
   */
  @Test
  public void test2()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      org.softlang.company.impl.bean.EmployeeImpl employeeImpl0 = new org.softlang.company.impl.bean.EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      String string0 = proxyEmployee0.getAddress();
      assertNull(string0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 6: org.softlang.proxy.ProxyEmployee.setAddress(Ljava/lang/String;)V:30 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 7: org.softlang.proxy.ProxyEmployee.setAddress(Ljava/lang/String;)V:30 - DeleteStatement: setAddress(Ljava/lang/String;)V
   * 3 org.softlang.proxy.ProxyEmployee.setAddress(Ljava/lang/String;)V: root-Branch
   * 4 Weak Mutation 6: org.softlang.proxy.ProxyEmployee.setAddress(Ljava/lang/String;)V:30 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 7: org.softlang.proxy.ProxyEmployee.setAddress(Ljava/lang/String;)V:30 - DeleteStatement: setAddress(Ljava/lang/String;)V
   */
  @Test
  public void test3()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      proxyEmployee0.setAddress((String) null);
      assertNull(proxyEmployee0.getAddress());
  }

  //Test case number: 4
  /*
   * 11 covered goals:
   * 1 Weak Mutation 8: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 2 Weak Mutation 9: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteStatement: isReadable()Z
   * 3 Weak Mutation 10: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 11: org.softlang.proxy.ProxyEmployee.getSalary()D:34 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 12: org.softlang.proxy.ProxyEmployee.getSalary()D:34 - DeleteStatement: getSalary()D
   * 6 org.softlang.proxy.ProxyEmployee.getSalary()D: I5 Branch 1 IFEQ L33 - false
   * 7 Weak Mutation 8: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 8 Weak Mutation 9: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteStatement: isReadable()Z
   * 9 Weak Mutation 10: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 11: org.softlang.proxy.ProxyEmployee.getSalary()D:34 - DeleteField: subjectLorg/softlang/company/Employee;
   * 11 Weak Mutation 12: org.softlang.proxy.ProxyEmployee.getSalary()D:34 - DeleteStatement: getSalary()D
   */
  @Test
  public void test4()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      org.softlang.company.impl.bean.EmployeeImpl employeeImpl0 = new org.softlang.company.impl.bean.EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      double double0 = proxyEmployee0.getSalary();
      assertEquals(0.0, double0, 0.01D);
  }

  //Test case number: 5
  /*
   * 6 covered goals:
   * 1 Weak Mutation 13: org.softlang.proxy.ProxyEmployee.getSalary()D:36 - ReplaceConstant - Receiver without read access for salary. -> 
   * 2 org.softlang.proxy.ProxyEmployee.getSalary()D: I5 Branch 1 IFEQ L33 - true
   * 3 Weak Mutation 8: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 4 Weak Mutation 9: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - DeleteStatement: isReadable()Z
   * 5 Weak Mutation 10: org.softlang.proxy.ProxyEmployee.getSalary()D:33 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 13: org.softlang.proxy.ProxyEmployee.getSalary()D:36 - ReplaceConstant - Receiver without read access for salary. -> 
   */
  @Test
  public void test5()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      org.softlang.company.impl.bean.EmployeeImpl employeeImpl0 = new org.softlang.company.impl.bean.EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      accessControl0.disableReadAcccess();
      // Undeclared exception!
      try {
        proxyEmployee0.getSalary();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Receiver without read access for salary.
         */
      }
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 Weak Mutation 14: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 2 Weak Mutation 15: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteStatement: isWritable()Z
   * 3 Weak Mutation 16: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 17: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 19: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - DeleteStatement: setSalary(D)V
   * 6 Weak Mutation 18: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - InsertUnaryOp Negation
   * 7 org.softlang.proxy.ProxyEmployee.setSalary(D)V: I5 Branch 2 IFEQ L39 - false
   * 8 Weak Mutation 14: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 9 Weak Mutation 15: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteStatement: isWritable()Z
   * 10 Weak Mutation 17: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - DeleteField: subjectLorg/softlang/company/Employee;
   * 11 Weak Mutation 16: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 19: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - DeleteStatement: setSalary(D)V
   * 13 Weak Mutation 18: org.softlang.proxy.ProxyEmployee.setSalary(D)V:40 - InsertUnaryOp Negation
   */
  @Test
  public void test6()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      proxyEmployee0.setSalary(0.0);
      assertEquals(0.0, employeeImpl0.getSalary(), 0.01D);
      assertEquals(0.0, proxyEmployee0.getSalary(), 0.01D);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 Weak Mutation 20: org.softlang.proxy.ProxyEmployee.setSalary(D)V:42 - ReplaceConstant - Receiver without write access for salary. -> 
   * 2 org.softlang.proxy.ProxyEmployee.setSalary(D)V: I5 Branch 2 IFEQ L39 - true
   * 3 Weak Mutation 14: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 4 Weak Mutation 15: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteStatement: isWritable()Z
   * 5 Weak Mutation 16: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 20: org.softlang.proxy.ProxyEmployee.setSalary(D)V:42 - ReplaceConstant - Receiver without write access for salary. -> 
   */
  @Test
  public void test7()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      accessControl0.disableWriteAcccess();
      // Undeclared exception!
      try {
        proxyEmployee0.setSalary(0.0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Receiver without write access for salary.
         */
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: org.softlang.proxy.ProxyEmployee.getManager()Z:45 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 22: org.softlang.proxy.ProxyEmployee.getManager()Z:45 - DeleteStatement: getManager()Z
   * 3 org.softlang.proxy.ProxyEmployee.getManager()Z: root-Branch
   * 4 Weak Mutation 21: org.softlang.proxy.ProxyEmployee.getManager()Z:45 - DeleteField: subjectLorg/softlang/company/Employee;
   * 5 Weak Mutation 22: org.softlang.proxy.ProxyEmployee.getManager()Z:45 - DeleteStatement: getManager()Z
   */
  @Test
  public void test8()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      boolean boolean0 = proxyEmployee0.getManager();
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 11 covered goals:
   * 1 Weak Mutation 23: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - DeleteField: subjectLorg/softlang/company/Employee;
   * 2 Weak Mutation 25: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp IINC 1
   * 3 Weak Mutation 24: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp Negation
   * 4 Weak Mutation 27: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - DeleteStatement: setManager(Z)V
   * 5 Weak Mutation 26: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp IINC -1
   * 6 org.softlang.proxy.ProxyEmployee.setManager(Z)V: root-Branch
   * 7 Weak Mutation 23: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - DeleteField: subjectLorg/softlang/company/Employee;
   * 8 Weak Mutation 25: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 24: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp Negation
   * 10 Weak Mutation 27: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - DeleteStatement: setManager(Z)V
   * 11 Weak Mutation 26: org.softlang.proxy.ProxyEmployee.setManager(Z)V:48 - InsertUnaryOp IINC -1
   */
  @Test
  public void test9()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      proxyEmployee0.setManager(false);
      assertEquals(false, proxyEmployee0.getManager());
      assertEquals(false, employeeImpl0.getManager());
  }
}
