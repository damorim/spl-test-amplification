/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.company.Employee;
import org.softlang.company.impl.pojo.EmployeeImpl;
import org.softlang.proxy.AccessControl;
import org.softlang.proxy.ProxyEmployee;

@RunWith(EvoSuiteRunner.class)
public class TestProxyEmployee_7 {


  //Test case number: 7
  /*
   * 6 covered goals:
   * 1 Weak Mutation 20: org.softlang.proxy.ProxyEmployee.setSalary(D)V:42 - ReplaceConstant - Receiver without write access for salary. -> 
   * 2 org.softlang.proxy.ProxyEmployee.setSalary(D)V: I5 Branch 2 IFEQ L39 - true
   * 3 Weak Mutation 14: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteField: contextLorg/softlang/proxy/AccessControl;
   * 4 Weak Mutation 15: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - DeleteStatement: isWritable()Z
   * 5 Weak Mutation 16: org.softlang.proxy.ProxyEmployee.setSalary(D)V:39 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 20: org.softlang.proxy.ProxyEmployee.setSalary(D)V:42 - ReplaceConstant - Receiver without write access for salary. -> 
   */
  @Test
  public void test7()  throws Throwable  {
      AccessControl accessControl0 = new AccessControl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      accessControl0.disableWriteAcccess();
      ProxyEmployee proxyEmployee0 = new ProxyEmployee(accessControl0, (Employee) employeeImpl0);
      // Undeclared exception!
      try {
        proxyEmployee0.setSalary(375.12388078063657);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Receiver without write access for salary.
         */
      }
  }
}
