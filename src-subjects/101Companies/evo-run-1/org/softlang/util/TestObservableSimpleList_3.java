/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observable;
import java.util.Observer;
import org.softlang.features.Logging;
import org.softlang.features.Precedence;
import org.softlang.util.ObservableSimpleList;
import org.softlang.util.SimpleLinkedList;
import org.softlang.util.SimpleList;

@RunWith(EvoSuiteRunner.class)
public class TestObservableSimpleList_3 {


  //Test case number: 3
  /*
   * 22 covered goals:
   * 1 Weak Mutation 31: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:68 - DeleteStatement: setChanged()V
   * 2 Weak Mutation 32: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:69 - DeleteStatement: notifyObservers(Ljava/lang/Object;)V
   * 3 org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z: I10 Branch 8 IFEQ L67 - false
   * 4 Weak Mutation 21: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 5 Weak Mutation 20: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 6 Weak Mutation 23: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 22: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - InsertUnaryOp Negation
   * 8 Weak Mutation 25: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:60 - DeleteStatement: notifyObservers(Ljava/lang/Object;)V
   * 9 Weak Mutation 24: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:59 - DeleteStatement: setChanged()V
   * 10 Weak Mutation 27: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:66 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 11 Weak Mutation 26: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:62 - InsertUnaryOp Negation
   * 12 Weak Mutation 29: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:67 - InsertUnaryOp Negation
   * 13 Weak Mutation 28: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:66 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 14 Weak Mutation 30: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:67 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 33: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:71 - InsertUnaryOp Negation
   * 16 Weak Mutation 27: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:66 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 17 Weak Mutation 29: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:67 - InsertUnaryOp Negation
   * 18 Weak Mutation 28: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:66 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 19 Weak Mutation 31: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:68 - DeleteStatement: setChanged()V
   * 20 Weak Mutation 30: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:67 - ReplaceComparisonOperator == -> !=
   * 21 Weak Mutation 32: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:69 - DeleteStatement: notifyObservers(Ljava/lang/Object;)V
   * 22 Weak Mutation 33: org.softlang.util.ObservableSimpleList.remove(Ljava/lang/Object;)Z:71 - InsertUnaryOp Negation
   */
  @Test
  public void test3()  throws Throwable  {
      SimpleLinkedList<String> simpleLinkedList0 = new SimpleLinkedList<String>();
      ObservableSimpleList<String> observableSimpleList0 = new ObservableSimpleList<String>((SimpleList<String>) simpleLinkedList0);
      boolean boolean0 = observableSimpleList0.add("%_o\"LL]-siNtwZ");
      assertEquals(true, boolean0);
      
      boolean boolean1 = observableSimpleList0.remove("%_o\"LL]-siNtwZ");
      assertEquals(true, boolean1);
      assertEquals(false, observableSimpleList0.hasChanged());
  }
}
