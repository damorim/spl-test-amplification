/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observable;
import java.util.Observer;
import org.softlang.features.Logging;
import org.softlang.features.Precedence;
import org.softlang.util.ObservableSimpleList;
import org.softlang.util.SimpleLinkedList;
import org.softlang.util.SimpleList;

@RunWith(EvoSuiteRunner.class)
public class TestObservableSimpleList_1 {


  //Test case number: 1
  /*
   * 12 covered goals:
   * 1 Weak Mutation 9: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:34 - DeleteStatement: next()Ljava/lang/Object;
   * 2 Weak Mutation 10: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:35 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 11: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:36 - DeleteStatement: deleteObserver(Ljava/util/Observer;)V
   * 4 org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V: I13 Branch 3 IFEQ L34 - false
   * 5 org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V: I21 Branch 4 IFEQ L35 - false
   * 6 Weak Mutation 6: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:34 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 7 Weak Mutation 7: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:34 - DeleteStatement: hasNext()Z
   * 8 Weak Mutation 8: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:34 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 9: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:34 - DeleteStatement: next()Ljava/lang/Object;
   * 10 Weak Mutation 10: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:35 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 11: org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V:36 - DeleteStatement: deleteObserver(Ljava/util/Observer;)V
   * 12 org.softlang.util.ObservableSimpleList.deleteObserver(Ljava/util/Observer;)V: I13 Branch 3 IFEQ L34 - true
   */
  @Test
  public void test1()  throws Throwable  {
      SimpleLinkedList<Object> simpleLinkedList0 = new SimpleLinkedList<Object>();
      ObservableSimpleList<Object> observableSimpleList0 = new ObservableSimpleList<Object>((SimpleList<Object>) simpleLinkedList0);
      SimpleLinkedList<Observable> simpleLinkedList1 = new SimpleLinkedList<Observable>();
      ObservableSimpleList<Observable> observableSimpleList1 = new ObservableSimpleList<Observable>((SimpleList<Observable>) simpleLinkedList1);
      boolean boolean0 = observableSimpleList0.add((Object) observableSimpleList1);
      assertEquals(true, boolean0);
      
      Precedence precedence0 = new Precedence();
      observableSimpleList0.deleteObserver((Observer) precedence0);
      assertEquals(false, observableSimpleList0.hasChanged());
  }
}
