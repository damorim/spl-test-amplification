/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observable;
import java.util.Observer;
import org.softlang.features.Logging;
import org.softlang.util.ObservableSimpleList;
import org.softlang.util.SimpleLinkedList;
import org.softlang.util.SimpleList;

@RunWith(EvoSuiteRunner.class)
public class TestObservableSimpleList_0 {


  //Test case number: 0
  /*
   * 31 covered goals:
   * 1 Weak Mutation 3: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:27 - DeleteStatement: next()Ljava/lang/Object;
   * 2 Weak Mutation 4: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:28 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 5: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:29 - DeleteStatement: addObserver(Ljava/util/Observer;)V
   * 4 Weak Mutation 21: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 5 Weak Mutation 20: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 6 Weak Mutation 23: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 22: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - InsertUnaryOp Negation
   * 8 Weak Mutation 24: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:59 - DeleteStatement: setChanged()V
   * 9 Weak Mutation 25: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:60 - DeleteStatement: notifyObservers(Ljava/lang/Object;)V
   * 10 Weak Mutation 26: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:62 - InsertUnaryOp Negation
   * 11 org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V: I13 Branch 1 IFEQ L27 - false
   * 12 org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V: I21 Branch 2 IFEQ L28 - false
   * 13 org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z: I10 Branch 7 IFEQ L58 - false
   * 14 Weak Mutation 0: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:27 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 15 Weak Mutation 1: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:27 - DeleteStatement: hasNext()Z
   * 16 Weak Mutation 2: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:27 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 3: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:27 - DeleteStatement: next()Ljava/lang/Object;
   * 18 Weak Mutation 4: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:28 - ReplaceComparisonOperator == -> !=
   * 19 Weak Mutation 5: org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V:29 - DeleteStatement: addObserver(Ljava/util/Observer;)V
   * 20 Weak Mutation 19: org.softlang.util.ObservableSimpleList.iterator()Ljava/util/Iterator;:53 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 21 Weak Mutation 18: org.softlang.util.ObservableSimpleList.iterator()Ljava/util/Iterator;:53 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 22 Weak Mutation 21: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 23 Weak Mutation 20: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:57 - DeleteField: innerLorg/softlang/util/SimpleList;
   * 24 Weak Mutation 23: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - ReplaceComparisonOperator == -> !=
   * 25 Weak Mutation 22: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:58 - InsertUnaryOp Negation
   * 26 Weak Mutation 25: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:60 - DeleteStatement: notifyObservers(Ljava/lang/Object;)V
   * 27 Weak Mutation 24: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:59 - DeleteStatement: setChanged()V
   * 28 Weak Mutation 26: org.softlang.util.ObservableSimpleList.add(Ljava/lang/Object;)Z:62 - InsertUnaryOp Negation
   * 29 org.softlang.util.ObservableSimpleList.<init>(Lorg/softlang/util/SimpleList;)V: root-Branch
   * 30 org.softlang.util.ObservableSimpleList.iterator()Ljava/util/Iterator;: root-Branch
   * 31 org.softlang.util.ObservableSimpleList.addObserver(Ljava/util/Observer;)V: I13 Branch 1 IFEQ L27 - true
   */
  @Test
  public void test0()  throws Throwable  {
      SimpleLinkedList<Object> simpleLinkedList0 = new SimpleLinkedList<Object>();
      ObservableSimpleList<Object> observableSimpleList0 = new ObservableSimpleList<Object>((SimpleList<Object>) simpleLinkedList0);
      SimpleLinkedList<Observable> simpleLinkedList1 = new SimpleLinkedList<Observable>();
      ObservableSimpleList<Observable> observableSimpleList1 = new ObservableSimpleList<Observable>((SimpleList<Observable>) simpleLinkedList1);
      boolean boolean0 = observableSimpleList0.add((Object) observableSimpleList1);
      assertEquals(true, boolean0);
      
      Logging logging0 = new Logging();
      observableSimpleList0.addObserver((Observer) logging0);
      assertEquals(false, observableSimpleList0.hasChanged());
  }
}
