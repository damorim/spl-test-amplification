/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import org.softlang.features.Logging;
import org.softlang.features.Precedence;
import org.softlang.util.ObservableSimpleList;
import org.softlang.util.SimpleLinkedList;
import org.softlang.util.SimpleList;

@RunWith(EvoSuiteRunner.class)
public class TestObservableSimpleList_6 {


  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 org.softlang.util.ObservableSimpleList.deleteObservers()V: I20 Branch 6 IFEQ L42 - true
   * 2 Weak Mutation 12: org.softlang.util.ObservableSimpleList.deleteObservers()V:41 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 13: org.softlang.util.ObservableSimpleList.deleteObservers()V:41 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 14: org.softlang.util.ObservableSimpleList.deleteObservers()V:41 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 15: org.softlang.util.ObservableSimpleList.deleteObservers()V:41 - DeleteStatement: next()Ljava/lang/Object;
   * 6 Weak Mutation 16: org.softlang.util.ObservableSimpleList.deleteObservers()V:42 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 19: org.softlang.util.ObservableSimpleList.iterator()Ljava/util/Iterator;:53 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 8 Weak Mutation 18: org.softlang.util.ObservableSimpleList.iterator()Ljava/util/Iterator;:53 - DeleteField: innerLorg/softlang/util/SimpleList;
   */
  @Test
  public void test6()  throws Throwable  {
      SimpleLinkedList<Object> simpleLinkedList0 = new SimpleLinkedList<Object>();
      ObservableSimpleList<Object> observableSimpleList0 = new ObservableSimpleList<Object>((SimpleList<Object>) simpleLinkedList0);
      Iterator<Object> iterator0 = simpleLinkedList0.iterator();
      simpleLinkedList0.add((Object) iterator0);
      observableSimpleList0.deleteObservers();
      assertEquals(0, observableSimpleList0.countObservers());
  }
}
