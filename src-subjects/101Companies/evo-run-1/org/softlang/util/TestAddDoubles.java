/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.softlang.util.AddDoubles;

@RunWith(EvoSuiteRunner.class)
public class TestAddDoubles {


  //Test case number: 0
  /*
   * 29 covered goals:
   * 1 Weak Mutation 8: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 11: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 0: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:10 - DeleteField: instanceLorg/softlang/util/AddDoubles;
   * 4 Weak Mutation 1: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:10 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 2: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:12 - DeleteField: instanceLorg/softlang/util/AddDoubles;
   * 6 Weak Mutation 3: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - ReplaceConstant - 0.0 -> 1.0
   * 7 Weak Mutation 4: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - ReplaceConstant - 0.0 -> -1.0
   * 8 Weak Mutation 5: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 9 Weak Mutation 6: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: doubleValue()D
   * 10 Weak Mutation 7: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: doubleValue()D
   * 11 Weak Mutation 9: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> %
   * 12 Weak Mutation 10: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 12: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 14 Weak Mutation 0: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:10 - DeleteField: instanceLorg/softlang/util/AddDoubles;
   * 15 Weak Mutation 1: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:10 - ReplaceComparisonOperator != null -> = null
   * 16 Weak Mutation 2: org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;:12 - DeleteField: instanceLorg/softlang/util/AddDoubles;
   * 17 Weak Mutation 3: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - ReplaceConstant - 0.0 -> 1.0
   * 18 Weak Mutation 4: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - ReplaceConstant - 0.0 -> -1.0
   * 19 Weak Mutation 5: org.softlang.util.AddDoubles.unit()Ljava/lang/Double;:14 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 20 Weak Mutation 6: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: doubleValue()D
   * 21 Weak Mutation 7: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: doubleValue()D
   * 22 Weak Mutation 8: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> -
   * 23 Weak Mutation 9: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> %
   * 24 Weak Mutation 10: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> /
   * 25 Weak Mutation 11: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - ReplaceArithmeticOperator + -> *
   * 26 Weak Mutation 12: org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;:15 - DeleteStatement: valueOf(D)Ljava/lang/Double;
   * 27 org.softlang.util.AddDoubles.append(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;: root-Branch
   * 28 org.softlang.util.AddDoubles.unit()Ljava/lang/Double;: root-Branch
   * 29 org.softlang.util.AddDoubles.getInstance()Lorg/softlang/util/AddDoubles;: I3 Branch 1 IFNONNULL L10 - true
   */
  @Test
  public void test0()  throws Throwable  {
      AddDoubles addDoubles0 = AddDoubles.getInstance();
      assertNotNull(addDoubles0);
      
      Double double0 = addDoubles0.unit();
      Double double1 = new Double((-1506.2060522696113));
      Double double2 = addDoubles0.append(double0, double1);
      assertEquals((-1506.2060522696113), (double)double2, 0.01D);
  }
}
