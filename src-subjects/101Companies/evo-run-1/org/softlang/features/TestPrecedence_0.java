/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.features;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observable;
import org.softlang.company.impl.bean.EmployeeImpl;
import org.softlang.features.Precedence;

@RunWith(EvoSuiteRunner.class)
public class TestPrecedence_0 {


  //Test case number: 0
  /*
   * 10 covered goals:
   * 1 Weak Mutation 4: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:16 - ReplaceComparisonOperator <= -> ==
   * 2 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I19 Branch 3 IFLE L16 - true
   * 3 Weak Mutation 0: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:14 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 1: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:14 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 2: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:16 - ReplaceConstant - salary -> 
   * 6 Weak Mutation 3: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:16 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 7 Weak Mutation 4: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:16 - ReplaceComparisonOperator <= -> ==
   * 8 org.softlang.features.Precedence.<init>()V: root-Branch
   * 9 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I4 Branch 1 IFEQ L14 - false
   * 10 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I7 Branch 2 IFEQ L14 - false
   */
  @Test
  public void test0()  throws Throwable  {
      Precedence precedence0 = new Precedence();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      precedence0.update((Observable) employeeImpl0, (Object) "salRry");
      assertEquals(0, employeeImpl0.countObservers());
  }
}
