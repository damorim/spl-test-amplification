/*
 * This file was automatically generated by EvoSuite
 */

package org.softlang.features;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Observable;
import org.softlang.company.Subunit;
import org.softlang.company.impl.bean.DepartmentImpl;
import org.softlang.company.impl.bean.EmployeeImpl;
import org.softlang.features.Precedence;

@RunWith(EvoSuiteRunner.class)
public class TestPrecedence_1 {


  //Test case number: 1
  /*
   * 29 covered goals:
   * 1 Weak Mutation 13: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - DeleteStatement: doubleSub(DD)I
   * 2 Weak Mutation 15: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - ReplaceComparisonOperator < -> <=
   * 3 Weak Mutation 31: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - ReplaceConstant - Precedence constraint violated for employee " -> 
   * 4 Weak Mutation 34: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 35: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - ReplaceConstant - ". -> 
   * 6 Weak Mutation 32: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 33: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: getName()Ljava/lang/String;
   * 8 Weak Mutation 36: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 9 Weak Mutation 37: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: toString()Ljava/lang/String;
   * 10 org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;: root-Branch
   * 11 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I39 Branch 5 IFLT L20 - false
   * 12 Weak Mutation 6: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:16 - ReplaceComparisonOperator <= -> -1
   * 13 Weak Mutation 7: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:17 - DeleteStatement: getParent()Lorg/softlang/company/impl/bean/ComponentImpl;
   * 14 Weak Mutation 8: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:18 - DeleteStatement: getManager()Z
   * 15 Weak Mutation 9: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:18 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 10: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - DeleteStatement: getSalary()D
   * 17 Weak Mutation 11: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - DeleteStatement: getManager()Lorg/softlang/company/Employee;
   * 18 Weak Mutation 12: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - DeleteStatement: getSalary()D
   * 19 Weak Mutation 13: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - DeleteStatement: doubleSub(DD)I
   * 20 Weak Mutation 15: org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V:20 - ReplaceComparisonOperator < -> <=
   * 21 Weak Mutation 31: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - ReplaceConstant - Precedence constraint violated for employee " -> 
   * 22 Weak Mutation 34: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 23 Weak Mutation 35: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - ReplaceConstant - ". -> 
   * 24 Weak Mutation 32: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 25 Weak Mutation 33: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: getName()Ljava/lang/String;
   * 26 Weak Mutation 36: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 27 Weak Mutation 37: org.softlang.features.Precedence.exception(Lorg/softlang/company/Employee;)Ljava/lang/Exception;:75 - DeleteStatement: toString()Ljava/lang/String;
   * 28 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I19 Branch 3 IFLE L16 - false
   * 29 org.softlang.features.Precedence.update(Ljava/util/Observable;Ljava/lang/Object;)V: I30 Branch 4 IFNE L18 - false
   */
  @Test
  public void test1()  throws Throwable  {
      DepartmentImpl departmentImpl0 = new DepartmentImpl();
      EmployeeImpl employeeImpl0 = new EmployeeImpl();
      Precedence precedence0 = new Precedence();
      departmentImpl0.add((Subunit) employeeImpl0);
      employeeImpl0.setManager(true);
      EmployeeImpl employeeImpl1 = new EmployeeImpl();
      departmentImpl0.add((Subunit) employeeImpl1);
      precedence0.update((Observable) employeeImpl1, (Object) "salary");
      assertNotSame(employeeImpl1, employeeImpl0);
  }
}
