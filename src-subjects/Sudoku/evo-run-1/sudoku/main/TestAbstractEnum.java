/*
 * This file was automatically generated by EvoSuite
 */

package sudoku.main;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Collection;
import sudoku.main.AbstractEnum;
import sudoku.main.Structure;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractEnum {


  //Test case number: 0
  /*
   * 53 covered goals:
   * 1 Weak Mutation 0: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:88 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 2 Weak Mutation 1: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:89 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 2: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:90 - DeleteStatement: getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;
   * 4 Weak Mutation 3: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:90 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 5 Weak Mutation 4: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:91 - DeleteStatement: hasNext()Z
   * 6 Weak Mutation 5: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:91 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 6: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp Negation
   * 8 Weak Mutation 7: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 8: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp IINC -1
   * 10 Weak Mutation 9: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - DeleteStatement: next()Ljava/lang/Object;
   * 11 Weak Mutation 10: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:111 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 12 Weak Mutation 11: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteField: ALL_COUNTSLjava/util/Map;
   * 13 Weak Mutation 12: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 14 Weak Mutation 15: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 17: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 16 Weak Mutation 16: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteField: ALL_COUNTSLjava/util/Map;
   * 17 Weak Mutation 18: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: intValue()I
   * 18 Weak Mutation 77: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 73: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - DeleteField: ALL_VALUES_BY_ORDINALLjava/util/Map;
   * 20 Weak Mutation 74: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 21 Weak Mutation 78: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:253 - DeleteField: ALL_VALUES_BY_ORDINALLjava/util/Map;
   * 22 Weak Mutation 79: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:253 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 23 Weak Mutation 96: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - DeleteStatement: isAssignableFrom(Ljava/lang/Class;)Z
   * 24 Weak Mutation 97: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - ReplaceComparisonOperator != -> ==
   * 25 sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;: I18 Branch 1 IFEQ L91 - true
   * 26 sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;: I18 Branch 1 IFEQ L91 - false
   * 27 sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I: I9 Branch 2 IFLE L112 - false
   * 28 sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;: I5 Branch 6 IFLE L252 - false
   * 29 sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V: I5 Branch 7 IFNE L267 - true
   * 30 Weak Mutation 0: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:88 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 31 Weak Mutation 1: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:89 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 2: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:90 - DeleteStatement: getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;
   * 33 Weak Mutation 3: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:90 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 34 Weak Mutation 4: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:91 - DeleteStatement: hasNext()Z
   * 35 Weak Mutation 5: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:91 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 6: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp Negation
   * 37 Weak Mutation 7: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp IINC 1
   * 38 Weak Mutation 8: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 9: sudoku.main.AbstractEnum.values0(Ljava/lang/Class;[Lsudoku/main/AbstractEnum;)[Lsudoku/main/AbstractEnum;:93 - DeleteStatement: next()Ljava/lang/Object;
   * 40 Weak Mutation 10: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:111 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 41 Weak Mutation 11: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteField: ALL_COUNTSLjava/util/Map;
   * 42 Weak Mutation 12: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 43 Weak Mutation 15: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceComparisonOperator <= -> -1
   * 44 Weak Mutation 17: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 45 Weak Mutation 16: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteField: ALL_COUNTSLjava/util/Map;
   * 46 Weak Mutation 18: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: intValue()I
   * 47 Weak Mutation 77: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - ReplaceComparisonOperator <= -> -1
   * 48 Weak Mutation 78: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:253 - DeleteField: ALL_VALUES_BY_ORDINALLjava/util/Map;
   * 49 Weak Mutation 79: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:253 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 50 Weak Mutation 73: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - DeleteField: ALL_VALUES_BY_ORDINALLjava/util/Map;
   * 51 Weak Mutation 74: sudoku.main.AbstractEnum.getValuesByOrdinal(Ljava/lang/Class;)Ljava/util/SortedSet;:252 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 52 Weak Mutation 96: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - DeleteStatement: isAssignableFrom(Ljava/lang/Class;)Z
   * 53 Weak Mutation 97: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - ReplaceComparisonOperator != -> ==
   */
  @Test
  public void test0()  throws Throwable  {
      Structure[] structureArray0 = Structure.values();
      assertNotNull(structureArray0);
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 13: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 19: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceConstant - 0 -> 1
   * 3 sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I: I9 Branch 2 IFLE L112 - true
   * 4 Weak Mutation 11: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteField: ALL_COUNTSLjava/util/Map;
   * 5 Weak Mutation 12: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 6 Weak Mutation 13: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceComparisonOperator <= -> ==
   * 7 Weak Mutation 19: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:112 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test1()  throws Throwable  {
      Class<?> class0 = AbstractEnum.class;
      int int0 = AbstractEnum.count(class0);
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 20 covered goals:
   * 1 Weak Mutation 20: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:145 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 2 Weak Mutation 21: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:146 - DeleteStatement: getValuesByName(Ljava/lang/Class;)Ljava/util/Map;
   * 3 Weak Mutation 23: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - ReplaceComparisonOperator <= -> ==
   * 4 Weak Mutation 22: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 5 Weak Mutation 59: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 6 Weak Mutation 63: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - ReplaceComparisonOperator <= -> -1
   * 7 Weak Mutation 60: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 8 Weak Mutation 64: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 9 Weak Mutation 65: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 10 sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;: I14 Branch 3 IFLE L147 - true
   * 11 sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;: I5 Branch 5 IFLE L242 - false
   * 12 Weak Mutation 21: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:146 - DeleteStatement: getValuesByName(Ljava/lang/Class;)Ljava/util/Map;
   * 13 Weak Mutation 20: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:145 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 14 Weak Mutation 23: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - ReplaceComparisonOperator <= -> ==
   * 15 Weak Mutation 22: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 16 Weak Mutation 59: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 17 Weak Mutation 63: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 60: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 19 Weak Mutation 64: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 20 Weak Mutation 65: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   */
  @Test
  public void test2()  throws Throwable  {
      Class<?> class0 = AbstractEnum.class;
      try {
        AbstractEnum.valueOf0((Class) class0, "r'IlH~@=}u8*tL~i");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * r'IlH~@=}u8*tL~i
         */
      }
  }

  //Test case number: 3
  /*
   * 13 covered goals:
   * 1 Weak Mutation 25: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 26: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:148 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 3 sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;: I14 Branch 3 IFLE L147 - false
   * 4 Weak Mutation 21: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:146 - DeleteStatement: getValuesByName(Ljava/lang/Class;)Ljava/util/Map;
   * 5 Weak Mutation 20: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:145 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 6 Weak Mutation 22: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 7 Weak Mutation 59: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 8 Weak Mutation 63: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - ReplaceComparisonOperator <= -> -1
   * 9 Weak Mutation 60: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:242 - DeleteStatement: mapContainsKey(Ljava/util/Map;Ljava/lang/Object;)I
   * 10 Weak Mutation 64: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteField: ALL_VALUES_BY_NAMELjava/util/Map;
   * 11 Weak Mutation 65: sudoku.main.AbstractEnum.getValuesByName(Ljava/lang/Class;)Ljava/util/Map;:243 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 12 Weak Mutation 25: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:147 - ReplaceComparisonOperator <= -> -1
   * 13 Weak Mutation 26: sudoku.main.AbstractEnum.valueOf0(Ljava/lang/Class;Ljava/lang/String;)Lsudoku/main/AbstractEnum;:148 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   */
  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      Structure structure0 = null;
      try {
        structure0 = Structure.valueOf("COL");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * COL
         */
      }
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 35: sudoku.main.AbstractEnum.name()Ljava/lang/String;:179 - DeleteField: nameLjava/lang/String;
   * 2 sudoku.main.AbstractEnum.name()Ljava/lang/String;: root-Branch
   * 3 Weak Mutation 35: sudoku.main.AbstractEnum.name()Ljava/lang/String;:179 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test4()  throws Throwable  {
      Structure structure0 = Structure.COL;
      String string0 = structure0.name();
      assertEquals("COL", string0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 38: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp -1
   * 2 Weak Mutation 39: sudoku.main.AbstractEnum.ordinal()I:193 - DeleteField: ordinalI
   * 3 Weak Mutation 36: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp Negation
   * 4 Weak Mutation 37: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp +1
   * 5 sudoku.main.AbstractEnum.ordinal()I: root-Branch
   * 6 Weak Mutation 38: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp -1
   * 7 Weak Mutation 39: sudoku.main.AbstractEnum.ordinal()I:193 - DeleteField: ordinalI
   * 8 Weak Mutation 36: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp Negation
   * 9 Weak Mutation 37: sudoku.main.AbstractEnum.ordinal()I:193 - InsertUnaryOp +1
   */
  @Test
  public void test5()  throws Throwable  {
      Structure structure0 = Structure.COL;
      int int0 = structure0.ordinal();
      assertEquals(1, int0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 40: sudoku.main.AbstractEnum.toString()Ljava/lang/String;:220 - DeleteField: nameLjava/lang/String;
   * 2 sudoku.main.AbstractEnum.toString()Ljava/lang/String;: root-Branch
   * 3 Weak Mutation 40: sudoku.main.AbstractEnum.toString()Ljava/lang/String;:220 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test6()  throws Throwable  {
      Structure structure0 = Structure.COL;
      String string0 = structure0.toString();
      assertEquals("COL", string0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 46: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:236 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 45: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:236 - DeleteStatement: getClass()Ljava/lang/Class;
   * 3 sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I: I7 Branch 4 IFNE L235 - false
   * 4 Weak Mutation 42: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: getClass()Ljava/lang/Class;
   * 5 Weak Mutation 43: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 6 Weak Mutation 41: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: getClass()Ljava/lang/Class;
   * 7 Weak Mutation 46: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:236 - DeleteStatement: toString()Ljava/lang/String;
   * 8 Weak Mutation 44: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - ReplaceComparisonOperator != -> ==
   * 9 Weak Mutation 45: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:236 - DeleteStatement: getClass()Ljava/lang/Class;
   */
  @Test
  public void test7()  throws Throwable  {
      Structure structure0 = Structure.COL;
      // Undeclared exception!
      try {
        structure0.compareTo((Object) "COL");
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * class java.lang.String
         */
      }
  }

  //Test case number: 8
  /*
   * 29 covered goals:
   * 1 Weak Mutation 56: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> %
   * 2 Weak Mutation 42: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: getClass()Ljava/lang/Class;
   * 3 Weak Mutation 43: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: equals(Ljava/lang/Object;)Z
   * 4 Weak Mutation 41: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - DeleteStatement: getClass()Ljava/lang/Class;
   * 5 Weak Mutation 47: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp Negation
   * 6 Weak Mutation 44: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:235 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 51: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp Negation
   * 8 Weak Mutation 50: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - DeleteField: ordinalI
   * 9 Weak Mutation 49: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp -1
   * 10 Weak Mutation 48: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp +1
   * 11 Weak Mutation 55: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> +
   * 12 Weak Mutation 54: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - DeleteField: ordinalI
   * 13 Weak Mutation 53: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp -1
   * 14 Weak Mutation 52: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp +1
   * 15 Weak Mutation 58: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> *
   * 16 Weak Mutation 57: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> /
   * 17 Weak Mutation 47: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp Negation
   * 18 Weak Mutation 51: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp Negation
   * 19 Weak Mutation 50: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - DeleteField: ordinalI
   * 20 Weak Mutation 49: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp -1
   * 21 Weak Mutation 48: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp +1
   * 22 Weak Mutation 55: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> +
   * 23 Weak Mutation 54: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - DeleteField: ordinalI
   * 24 Weak Mutation 53: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp -1
   * 25 Weak Mutation 52: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - InsertUnaryOp +1
   * 26 Weak Mutation 58: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> *
   * 27 Weak Mutation 57: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> /
   * 28 Weak Mutation 56: sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I:237 - ReplaceArithmeticOperator - -> %
   * 29 sudoku.main.AbstractEnum.compareTo(Ljava/lang/Object;)I: I7 Branch 4 IFNE L235 - true
   */
  @Test
  public void test8()  throws Throwable  {
      Structure structure0 = Structure.COL;
      Structure structure1 = Structure.BOX;
      int int0 = structure0.compareTo((Object) structure1);
      assertEquals((-1), int0);
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * 1 Weak Mutation 98: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:268 - DeleteStatement: toString()Ljava/lang/String;
   * 2 sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V: I5 Branch 7 IFNE L267 - false
   * 3 Weak Mutation 10: sudoku.main.AbstractEnum.count(Ljava/lang/Class;)I:111 - DeleteStatement: checkClassIsEnum(Ljava/lang/Class;)V
   * 4 Weak Mutation 96: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - DeleteStatement: isAssignableFrom(Ljava/lang/Class;)Z
   * 5 Weak Mutation 97: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:267 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 98: sudoku.main.AbstractEnum.checkClassIsEnum(Ljava/lang/Class;)V:268 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test9()  throws Throwable  {
      Class<?> class0 = Collection.class;
      // Undeclared exception!
      try {
        AbstractEnum.count(class0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * interface java.util.Collection
         */
      }
  }
}
