/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.TestExceptions;

@RunWith(EvoSuiteRunner.class)
public class TestTestExceptions_2 {


  //Test case number: 2
  /*
   * 81 covered goals:
   * 1 Weak Mutation 96: de.susebox.TestExceptions.testMessageFormatting()V:226 - ReplaceConstant - Class {0}, reason "{1}", user {2}. -> 
   * 2 Weak Mutation 102: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 103: de.susebox.TestExceptions.testMessageFormatting()V:227 - DeleteField: _classToTestLjava/lang/String;
   * 4 Weak Mutation 100: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 2
   * 5 Weak Mutation 101: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 4
   * 6 Weak Mutation 98: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 1
   * 7 Weak Mutation 99: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> -1
   * 8 Weak Mutation 97: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 0
   * 9 Weak Mutation 110: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - myself -> 
   * 10 Weak Mutation 108: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> -1
   * 11 Weak Mutation 109: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 3
   * 12 Weak Mutation 106: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 0
   * 13 Weak Mutation 107: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 1
   * 14 Weak Mutation 104: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 105: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - bad weather -> 
   * 16 Weak Mutation 111: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 0
   * 17 Weak Mutation 118: de.susebox.TestExceptions.testMessageFormatting()V:228 - DeleteStatement: getClass()Ljava/lang/Class;
   * 18 Weak Mutation 117: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 116: de.susebox.TestExceptions.testMessageFormatting()V:228 - DeleteStatement: getClass()Ljava/lang/Class;
   * 20 Weak Mutation 115: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 114: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 3
   * 22 Weak Mutation 113: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> -1
   * 23 Weak Mutation 112: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 1
   * 24 Weak Mutation 119: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteField: _classToTestLjava/lang/String;
   * 25 Weak Mutation 121: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteStatement: getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
   * 26 Weak Mutation 120: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteStatement: forName(Ljava/lang/String;)Ljava/lang/Class;
   * 27 Weak Mutation 127: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 126: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 125: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 3
   * 30 Weak Mutation 124: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> -1
   * 31 Weak Mutation 123: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 1
   * 32 Weak Mutation 122: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 0
   * 33 Weak Mutation 128: de.susebox.TestExceptions.testMessageFormatting()V:232 - DeleteStatement: newInstance([Ljava/lang/Object;)Ljava/lang/Object;
   * 34 Weak Mutation 129: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceConstant - Format not found. -> 
   * 35 Weak Mutation 131: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 130: de.susebox.TestExceptions.testMessageFormatting()V:235 - DeleteStatement: getFormat()Ljava/lang/String;
   * 37 Weak Mutation 132: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 134: de.susebox.TestExceptions.testMessageFormatting()V:235 - DeleteStatement: assertTrue(Ljava/lang/String;Z)V
   * 39 Weak Mutation 135: de.susebox.TestExceptions.testMessageFormatting()V:237 - DeleteStatement: format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   * 40 Weak Mutation 136: de.susebox.TestExceptions.testMessageFormatting()V:238 - DeleteStatement: getMessage()Ljava/lang/String;
   * 41 de.susebox.TestExceptions.testMessageFormatting()V: I67 Branch 10 IF_ACMPNE L235 - false
   * 42 Weak Mutation 102: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 103: de.susebox.TestExceptions.testMessageFormatting()V:227 - DeleteField: _classToTestLjava/lang/String;
   * 44 Weak Mutation 100: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 2
   * 45 Weak Mutation 101: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 4
   * 46 Weak Mutation 98: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 1
   * 47 Weak Mutation 99: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> -1
   * 48 Weak Mutation 96: de.susebox.TestExceptions.testMessageFormatting()V:226 - ReplaceConstant - Class {0}, reason "{1}", user {2}. -> 
   * 49 Weak Mutation 97: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 3 -> 0
   * 50 Weak Mutation 110: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - myself -> 
   * 51 Weak Mutation 111: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 0
   * 52 Weak Mutation 108: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> -1
   * 53 Weak Mutation 109: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 3
   * 54 Weak Mutation 106: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 0
   * 55 Weak Mutation 107: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 2 -> 1
   * 56 Weak Mutation 104: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - 1 -> 0
   * 57 Weak Mutation 105: de.susebox.TestExceptions.testMessageFormatting()V:227 - ReplaceConstant - bad weather -> 
   * 58 Weak Mutation 119: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteField: _classToTestLjava/lang/String;
   * 59 Weak Mutation 118: de.susebox.TestExceptions.testMessageFormatting()V:228 - DeleteStatement: getClass()Ljava/lang/Class;
   * 60 Weak Mutation 117: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 1 -> 0
   * 61 Weak Mutation 116: de.susebox.TestExceptions.testMessageFormatting()V:228 - DeleteStatement: getClass()Ljava/lang/Class;
   * 62 Weak Mutation 115: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 0 -> 1
   * 63 Weak Mutation 114: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 3
   * 64 Weak Mutation 113: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> -1
   * 65 Weak Mutation 112: de.susebox.TestExceptions.testMessageFormatting()V:228 - ReplaceConstant - 2 -> 1
   * 66 Weak Mutation 127: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 1 -> 0
   * 67 Weak Mutation 126: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 125: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 3
   * 69 Weak Mutation 124: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> -1
   * 70 Weak Mutation 123: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 1
   * 71 Weak Mutation 122: de.susebox.TestExceptions.testMessageFormatting()V:232 - ReplaceConstant - 2 -> 0
   * 72 Weak Mutation 121: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteStatement: getConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
   * 73 Weak Mutation 120: de.susebox.TestExceptions.testMessageFormatting()V:231 - DeleteStatement: forName(Ljava/lang/String;)Ljava/lang/Class;
   * 74 Weak Mutation 136: de.susebox.TestExceptions.testMessageFormatting()V:238 - DeleteStatement: getMessage()Ljava/lang/String;
   * 75 Weak Mutation 129: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceConstant - Format not found. -> 
   * 76 Weak Mutation 128: de.susebox.TestExceptions.testMessageFormatting()V:232 - DeleteStatement: newInstance([Ljava/lang/Object;)Ljava/lang/Object;
   * 77 Weak Mutation 131: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceComparisonOperator != -> ==
   * 78 Weak Mutation 130: de.susebox.TestExceptions.testMessageFormatting()V:235 - DeleteStatement: getFormat()Ljava/lang/String;
   * 79 Weak Mutation 132: de.susebox.TestExceptions.testMessageFormatting()V:235 - ReplaceConstant - 1 -> 0
   * 80 Weak Mutation 135: de.susebox.TestExceptions.testMessageFormatting()V:237 - DeleteStatement: format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
   * 81 Weak Mutation 134: de.susebox.TestExceptions.testMessageFormatting()V:235 - DeleteStatement: assertTrue(Ljava/lang/String;Z)V
   */
  @Test
  public void test2()  throws Throwable  {
      TestExceptions testExceptions0 = new TestExceptions("de.susebox.java.io.ExtIOException", "de.susebox.java.io.ExtIOException");
      testExceptions0.testMessageFormatting();
      assertEquals(1, testExceptions0.countTestCases());
  }
}
