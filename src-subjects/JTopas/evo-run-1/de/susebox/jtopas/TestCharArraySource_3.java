/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.CharArraySource;

@RunWith(EvoSuiteRunner.class)
public class TestCharArraySource_3 {


  //Test case number: 3
  /*
   * 75 covered goals:
   * 1 Weak Mutation 29: de.susebox.jtopas.CharArraySource.read([CII)I:107 - ReplaceArithmeticOperator - -> +
   * 2 Weak Mutation 28: de.susebox.jtopas.CharArraySource.read([CII)I:107 - DeleteField: _readOffsetI
   * 3 Weak Mutation 32: de.susebox.jtopas.CharArraySource.read([CII)I:107 - ReplaceArithmeticOperator - -> *
   * 4 Weak Mutation 42: de.susebox.jtopas.CharArraySource.read([CII)I:109 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 43: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteField: _data[C
   * 6 Weak Mutation 46: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp -1
   * 7 Weak Mutation 44: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 8 Weak Mutation 45: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp +1
   * 9 Weak Mutation 51: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteField: _readOffsetI
   * 10 Weak Mutation 50: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp -1
   * 11 Weak Mutation 49: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp +1
   * 12 Weak Mutation 48: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 13 Weak Mutation 55: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> *
   * 14 Weak Mutation 54: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 53: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 52: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> -
   * 17 Weak Mutation 59: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 18 Weak Mutation 58: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 57: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 56: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 21 Weak Mutation 62: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 22 Weak Mutation 61: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 60: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 63: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp Negation
   * 25 Weak Mutation 68: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp IINC 1
   * 26 Weak Mutation 69: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 70: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 71: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> %
   * 29 Weak Mutation 64: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp +1
   * 30 Weak Mutation 65: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp -1
   * 31 Weak Mutation 66: de.susebox.jtopas.CharArraySource.read([CII)I:111 - DeleteField: _readOffsetI
   * 32 Weak Mutation 67: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp Negation
   * 33 Weak Mutation 72: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> /
   * 34 Weak Mutation 73: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 76: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 74: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp Negation
   * 37 Weak Mutation 75: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp IINC 1
   * 38 de.susebox.jtopas.CharArraySource.read([CII)I: I13 Branch 4 IFLE L109 - false
   * 39 Weak Mutation 29: de.susebox.jtopas.CharArraySource.read([CII)I:107 - ReplaceArithmeticOperator - -> +
   * 40 Weak Mutation 28: de.susebox.jtopas.CharArraySource.read([CII)I:107 - DeleteField: _readOffsetI
   * 41 Weak Mutation 32: de.susebox.jtopas.CharArraySource.read([CII)I:107 - ReplaceArithmeticOperator - -> *
   * 42 Weak Mutation 42: de.susebox.jtopas.CharArraySource.read([CII)I:109 - ReplaceComparisonOperator <= -> -1
   * 43 Weak Mutation 43: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteField: _data[C
   * 44 Weak Mutation 46: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp -1
   * 45 Weak Mutation 44: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 46 Weak Mutation 45: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp +1
   * 47 Weak Mutation 51: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteField: _readOffsetI
   * 48 Weak Mutation 50: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp -1
   * 49 Weak Mutation 49: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp +1
   * 50 Weak Mutation 48: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 51 Weak Mutation 55: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> *
   * 52 Weak Mutation 54: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 53: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 52: de.susebox.jtopas.CharArraySource.read([CII)I:110 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 59: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 56 Weak Mutation 58: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC -1
   * 57 Weak Mutation 57: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC 1
   * 58 Weak Mutation 56: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp Negation
   * 59 Weak Mutation 63: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp Negation
   * 60 Weak Mutation 62: de.susebox.jtopas.CharArraySource.read([CII)I:110 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 61 Weak Mutation 61: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC -1
   * 62 Weak Mutation 60: de.susebox.jtopas.CharArraySource.read([CII)I:110 - InsertUnaryOp IINC 1
   * 63 Weak Mutation 68: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp IINC 1
   * 64 Weak Mutation 69: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp IINC -1
   * 65 Weak Mutation 70: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> -
   * 66 Weak Mutation 71: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> %
   * 67 Weak Mutation 64: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp +1
   * 68 Weak Mutation 65: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp -1
   * 69 Weak Mutation 66: de.susebox.jtopas.CharArraySource.read([CII)I:111 - DeleteField: _readOffsetI
   * 70 Weak Mutation 67: de.susebox.jtopas.CharArraySource.read([CII)I:111 - InsertUnaryOp Negation
   * 71 Weak Mutation 76: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp IINC -1
   * 72 Weak Mutation 72: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> /
   * 73 Weak Mutation 73: de.susebox.jtopas.CharArraySource.read([CII)I:111 - ReplaceArithmeticOperator + -> *
   * 74 Weak Mutation 74: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp Negation
   * 75 Weak Mutation 75: de.susebox.jtopas.CharArraySource.read([CII)I:112 - InsertUnaryOp IINC 1
   */
  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharArraySource charArraySource0 = new CharArraySource(charArray0);
      charArraySource0.read(charArray0, 1, 1);
      int int0 = charArraySource0.read(charArray0, 1, 1);
      assertEquals(1, int0);
      assertEquals(2, charArraySource0.length());
  }
}
