/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.Token;

@RunWith(EvoSuiteRunner.class)
public class TestToken_4 {


  //Test case number: 4
  /*
   * 35 covered goals:
   * 1 Weak Mutation 21: de.susebox.jtopas.Token.getLength()I:298 - InsertUnaryOp Negation
   * 2 Weak Mutation 23: de.susebox.jtopas.Token.getLength()I:298 - InsertUnaryOp -1
   * 3 Weak Mutation 22: de.susebox.jtopas.Token.getLength()I:298 - InsertUnaryOp +1
   * 4 Weak Mutation 24: de.susebox.jtopas.Token.getLength()I:298 - DeleteField: _lengthI
   * 5 Weak Mutation 29: de.susebox.jtopas.Token.getStartPosition()I:344 - InsertUnaryOp Negation
   * 6 Weak Mutation 31: de.susebox.jtopas.Token.getStartPosition()I:344 - InsertUnaryOp -1
   * 7 Weak Mutation 30: de.susebox.jtopas.Token.getStartPosition()I:344 - InsertUnaryOp +1
   * 8 Weak Mutation 32: de.susebox.jtopas.Token.getStartPosition()I:344 - DeleteField: _startPositionI
   * 9 Weak Mutation 106: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:555 - ReplaceComparisonOperator != null -> = null
   * 10 Weak Mutation 108: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:557 - ReplaceComparisonOperator != -> ==
   * 11 Weak Mutation 110: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:559 - DeleteStatement: getClass()Ljava/lang/Class;
   * 12 Weak Mutation 111: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:559 - DeleteStatement: getClass()Ljava/lang/Class;
   * 13 Weak Mutation 112: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:559 - ReplaceComparisonOperator == -> !=
   * 14 Weak Mutation 117: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:566 - ReplaceComparisonOperator == -> -2
   * 15 Weak Mutation 115: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:566 - DeleteStatement: getType()I
   * 16 Weak Mutation 114: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:566 - DeleteStatement: getType()I
   * 17 Weak Mutation 123: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:568 - ReplaceComparisonOperator == -> -2
   * 18 Weak Mutation 121: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:568 - DeleteStatement: getStartPosition()I
   * 19 Weak Mutation 120: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:568 - DeleteStatement: getStartPosition()I
   * 20 Weak Mutation 127: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:570 - DeleteStatement: getLength()I
   * 21 Weak Mutation 126: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:570 - DeleteStatement: getLength()I
   * 22 Weak Mutation 130: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:570 - ReplaceComparisonOperator == -> <=
   * 23 Weak Mutation 131: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:571 - ReplaceConstant - 0 -> 1
   * 24 de.susebox.jtopas.Token.getLength()I: root-Branch
   * 25 de.susebox.jtopas.Token.getStartPosition()I: root-Branch
   * 26 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I3 Branch 3 IFNONNULL L555 - true
   * 27 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I12 Branch 4 IF_ACMPNE L557 - true
   * 28 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I23 Branch 5 IF_ACMPEQ L559 - true
   * 29 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I39 Branch 6 IF_ICMPEQ L566 - true
   * 30 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I50 Branch 7 IF_ICMPEQ L568 - true
   * 31 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I61 Branch 8 IF_ICMPEQ L570 - false
   * 32 Weak Mutation 9: de.susebox.jtopas.Token.setImage(Ljava/lang/String;)V:170 - DeleteField: _imageLjava/lang/String;
   * 33 Weak Mutation 10: de.susebox.jtopas.Token.setImage(Ljava/lang/String;)V:170 - DeleteStatement: length()I
   * 34 Weak Mutation 130: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:570 - ReplaceComparisonOperator == -> <=
   * 35 de.susebox.jtopas.Token.setImage(Ljava/lang/String;)V: I6 Branch 1 IFNONNULL L167 - true
   */
  @Test
  public void test4()  throws Throwable  {
      Token token0 = new Token((-1));
      assertNotNull(token0);
      
      Token token1 = new Token((-1), "6;oE9~#].{A(", (Object) null);
      assertNotNull(token1);
      
      boolean boolean0 = token0.equals((Object) token1);
      assertEquals(-1, token0.getEndLine());
      assertEquals(false, boolean0);
      assertEquals(1, token0.getEndPosition());
      assertEquals(-1, token0.getStartLine());
      assertEquals(-1, token0.getEndColumn());
      assertEquals(13, token1.getEndPosition());
      assertEquals(-1, token0.getStartColumn());
      assertEquals("Type EOF", token0.toString());
  }
}
