/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestTokenizerProperty_1 {


  //Test case number: 1
  /*
   * 75 covered goals:
   * 1 Weak Mutation 25: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp Negation
   * 2 Weak Mutation 27: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp -1
   * 3 Weak Mutation 26: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp +1
   * 4 Weak Mutation 28: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - DeleteField: _flagsI
   * 5 Weak Mutation 29: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp Negation
   * 6 Weak Mutation 31: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp -1
   * 7 Weak Mutation 30: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp +1
   * 8 Weak Mutation 32: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - DeleteField: _flagMaskI
   * 9 Weak Mutation 34: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp IINC 1
   * 10 Weak Mutation 35: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 33: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp Negation
   * 12 Weak Mutation 36: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - DeleteStatement: containsFlag(I)Z
   * 13 Weak Mutation 37: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - ReplaceComparisonOperator == -> !=
   * 14 Weak Mutation 38: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - DeleteStatement: getFlags()I
   * 15 Weak Mutation 39: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp Negation
   * 16 Weak Mutation 42: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceBitwiseOperator & -> |
   * 17 Weak Mutation 43: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceBitwiseOperator & -> ^
   * 18 Weak Mutation 40: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 41: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 46: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 47: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceComparisonOperator != -> >
   * 22 Weak Mutation 44: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp Negation
   * 23 Weak Mutation 45: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 51: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 55: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC 1
   * 26 Weak Mutation 54: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp Negation
   * 27 Weak Mutation 53: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - DeleteStatement: getFlagMask()I
   * 28 Weak Mutation 59: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp Negation
   * 29 Weak Mutation 58: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceBitwiseOperator & -> ^
   * 30 Weak Mutation 56: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC -1
   * 31 Weak Mutation 61: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 60: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC 1
   * 33 Weak Mutation 64: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceComparisonOperator != -> -1
   * 34 Weak Mutation 65: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceConstant - 1 -> 0
   * 35 de.susebox.jtopas.TokenizerProperty.getFlags()I: root-Branch
   * 36 de.susebox.jtopas.TokenizerProperty.getFlagMask()I: root-Branch
   * 37 de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z: I5 Branch 1 IFEQ L184 - false
   * 38 de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z: I13 Branch 2 IF_ICMPNE L185 - true
   * 39 de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z: I7 Branch 3 IF_ICMPNE L210 - false
   * 40 Weak Mutation 21: de.susebox.jtopas.TokenizerProperty.setFlags(II)V:138 - ReplaceBitwiseOperator & -> ^
   * 41 Weak Mutation 20: de.susebox.jtopas.TokenizerProperty.setFlags(II)V:138 - ReplaceBitwiseOperator & -> |
   * 42 Weak Mutation 25: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp Negation
   * 43 Weak Mutation 27: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp -1
   * 44 Weak Mutation 26: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp +1
   * 45 Weak Mutation 29: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp Negation
   * 46 Weak Mutation 28: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - DeleteField: _flagsI
   * 47 Weak Mutation 31: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp -1
   * 48 Weak Mutation 30: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - InsertUnaryOp +1
   * 49 Weak Mutation 34: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp IINC 1
   * 50 Weak Mutation 35: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp IINC -1
   * 51 Weak Mutation 32: de.susebox.jtopas.TokenizerProperty.getFlagMask()I:163 - DeleteField: _flagMaskI
   * 52 Weak Mutation 33: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - InsertUnaryOp Negation
   * 53 Weak Mutation 38: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - DeleteStatement: getFlags()I
   * 54 Weak Mutation 39: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp Negation
   * 55 Weak Mutation 36: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - DeleteStatement: containsFlag(I)Z
   * 56 Weak Mutation 37: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:184 - ReplaceComparisonOperator == -> !=
   * 57 Weak Mutation 42: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceBitwiseOperator & -> |
   * 58 Weak Mutation 43: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceBitwiseOperator & -> ^
   * 59 Weak Mutation 40: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC 1
   * 60 Weak Mutation 41: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC -1
   * 61 Weak Mutation 46: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC -1
   * 62 Weak Mutation 47: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceComparisonOperator != -> >
   * 63 Weak Mutation 44: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp Negation
   * 64 Weak Mutation 45: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 51: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceConstant - 0 -> 1
   * 66 Weak Mutation 55: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC 1
   * 67 Weak Mutation 54: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp Negation
   * 68 Weak Mutation 53: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - DeleteStatement: getFlagMask()I
   * 69 Weak Mutation 59: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp Negation
   * 70 Weak Mutation 58: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceBitwiseOperator & -> ^
   * 71 Weak Mutation 56: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC -1
   * 72 Weak Mutation 61: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC -1
   * 73 Weak Mutation 60: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - InsertUnaryOp IINC 1
   * 74 Weak Mutation 64: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceComparisonOperator != -> -1
   * 75 Weak Mutation 65: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[17];
      Object object0 = new Object();
      TokenizerProperty tokenizerProperty0 = new TokenizerProperty(538, stringArray0, object0, 1129, 538);
      boolean boolean0 = tokenizerProperty0.isFlagSet(538, true);
      assertEquals(8, tokenizerProperty0.getFlags());
      assertEquals(538, tokenizerProperty0.getType());
      assertEquals(false, boolean0);
      assertEquals(538, tokenizerProperty0.getFlagMask());
      assertEquals("de.susebox.jtopas.TokenizerProperty: UNKNOWN, flags/mask 0x8/0x21a:", tokenizerProperty0.toString());
  }
}
