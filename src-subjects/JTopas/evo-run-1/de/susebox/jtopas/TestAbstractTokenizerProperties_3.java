/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.StandardTokenizerProperties;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractTokenizerProperties_3 {


  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 Weak Mutation 101: de.susebox.jtopas.AbstractTokenizerProperties.addWhitespaces(Ljava/lang/String;)V:287 - ReplaceComparisonOperator <= -> <
   * 2 de.susebox.jtopas.AbstractTokenizerProperties.addWhitespaces(Ljava/lang/String;)V: I4 Branch 5 IFLE L287 - true
   * 3 Weak Mutation 99: de.susebox.jtopas.AbstractTokenizerProperties.addWhitespaces(Ljava/lang/String;)V:287 - DeleteStatement: length()I
   * 4 Weak Mutation 101: de.susebox.jtopas.AbstractTokenizerProperties.addWhitespaces(Ljava/lang/String;)V:287 - ReplaceComparisonOperator <= -> <
   */
  @Test
  public void test3()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties(0, "%^_Zd?5H5u", "%^_Zd?5H5u");
      assertNotNull(standardTokenizerProperties0);
      
      standardTokenizerProperties0.addWhitespaces("");
      assertEquals(0, standardTokenizerProperties0.getParseFlags());
      assertEquals("%^_Zd?5H5u", standardTokenizerProperties0.getSeparators());
      assertEquals("%^_Zd?5H5u", standardTokenizerProperties0.getWhitespaces());
  }
}
