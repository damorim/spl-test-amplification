/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestTokenizerProperty_22 {


  //Test case number: 22
  /*
   * 36 covered goals:
   * 1 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I98 Branch 15 IFGT L375 - false
   * 2 Weak Mutation 25: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp Negation
   * 3 Weak Mutation 27: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp -1
   * 4 Weak Mutation 26: de.susebox.jtopas.TokenizerProperty.getFlags()I:150 - InsertUnaryOp +1
   * 5 Weak Mutation 67: de.susebox.jtopas.TokenizerProperty.getImages()[Ljava/lang/String;:236 - DeleteField: _images[Ljava/lang/String;
   * 6 Weak Mutation 84: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:354 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 87: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - DeleteStatement: getClass()Ljava/lang/Class;
   * 8 Weak Mutation 86: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - DeleteStatement: getClass()Ljava/lang/Class;
   * 9 Weak Mutation 82: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:352 - ReplaceComparisonOperator != null -> = null
   * 10 Weak Mutation 95: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 11 Weak Mutation 94: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 88: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 91: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getType()I
   * 14 Weak Mutation 90: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getType()I
   * 15 Weak Mutation 102: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - ReplaceComparisonOperator != -> -1
   * 16 Weak Mutation 103: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:367 - DeleteStatement: getImages()[Ljava/lang/String;
   * 17 Weak Mutation 98: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getFlags()I
   * 18 Weak Mutation 99: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getFlags()I
   * 19 Weak Mutation 96: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 20 Weak Mutation 97: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 109: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:371 - ReplaceComparisonOperator == -> -2
   * 22 Weak Mutation 106: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:371 - ReplaceComparisonOperator = null -> != null
   * 23 Weak Mutation 107: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:371 - ReplaceComparisonOperator = null -> != null
   * 24 Weak Mutation 104: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:368 - DeleteStatement: getImages()[Ljava/lang/String;
   * 25 Weak Mutation 105: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:370 - ReplaceComparisonOperator == -> !=
   * 26 Weak Mutation 115: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 114: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp IINC 1
   * 28 Weak Mutation 113: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp Negation
   * 29 Weak Mutation 112: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 109: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:371 - ReplaceComparisonOperator == -> -2
   * 31 Weak Mutation 115: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 114: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp IINC 1
   * 33 Weak Mutation 113: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - InsertUnaryOp Negation
   * 34 Weak Mutation 112: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:374 - ReplaceConstant - 0 -> 1
   * 35 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I75 Branch 13 IF_ICMPEQ L371 - true
   * 36 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I88 Branch 14 IF_ICMPGE L374 - false
   */
  @Test
  public void test22()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "fags/ask 0x";
      TokenizerProperty tokenizerProperty0 = new TokenizerProperty((-1095), stringArray0);
      String[] stringArray1 = new String[6];
      TokenizerProperty tokenizerProperty1 = new TokenizerProperty((-1095), stringArray1);
      boolean boolean0 = tokenizerProperty0.equals((Object) tokenizerProperty1);
      assertEquals("de.susebox.jtopas.TokenizerProperty: UNKNOWN, flags/mask 0x0/0x0: fags/ask 0x", tokenizerProperty0.toString());
      assertEquals(-1095, tokenizerProperty0.getType());
      assertEquals(false, boolean0);
      assertEquals(0, tokenizerProperty0.getFlags());
  }
}
