/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestTokenizerProperty_7 {


  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Weak Mutation 83: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:353 - ReplaceConstant - 0 -> 1
   * 2 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I3 Branch 4 IFNONNULL L352 - false
   * 3 Weak Mutation 83: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:353 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test7()  throws Throwable  {
      String[] stringArray0 = new String[2];
      Object object0 = new Object();
      TokenizerProperty tokenizerProperty0 = new TokenizerProperty(127, stringArray0, object0, 127);
      boolean boolean0 = tokenizerProperty0.equals((Object) null);
      assertEquals(false, boolean0);
      assertEquals("de.susebox.jtopas.TokenizerProperty: PARSE FLAG MASK, flags/mask 0x7f/0x7f:", tokenizerProperty0.toString());
  }
}
