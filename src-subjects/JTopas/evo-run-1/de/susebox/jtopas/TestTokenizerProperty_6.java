/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestTokenizerProperty_6 {


  //Test case number: 6
  /*
   * 19 covered goals:
   * 1 Weak Mutation 68: de.susebox.jtopas.TokenizerProperty.getCompanion()Ljava/lang/Object;:257 - DeleteField: _companionLjava/lang/Object;
   * 2 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I44 Branch 8 IF_ACMPNE L363 - true
   * 3 Weak Mutation 68: de.susebox.jtopas.TokenizerProperty.getCompanion()Ljava/lang/Object;:257 - DeleteField: _companionLjava/lang/Object;
   * 4 Weak Mutation 84: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:354 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 87: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - DeleteStatement: getClass()Ljava/lang/Class;
   * 6 Weak Mutation 86: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - DeleteStatement: getClass()Ljava/lang/Class;
   * 7 Weak Mutation 82: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:352 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 95: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 9 Weak Mutation 94: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 88: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:356 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 91: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getType()I
   * 12 Weak Mutation 90: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getType()I
   * 13 Weak Mutation 96: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 14 Weak Mutation 97: de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z:363 - ReplaceComparisonOperator != -> ==
   * 15 de.susebox.jtopas.TokenizerProperty.getCompanion()Ljava/lang/Object;: root-Branch
   * 16 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I3 Branch 4 IFNONNULL L352 - true
   * 17 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I12 Branch 5 IF_ACMPNE L354 - true
   * 18 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I23 Branch 6 IF_ACMPEQ L356 - true
   * 19 de.susebox.jtopas.TokenizerProperty.equals(Ljava/lang/Object;)Z: I39 Branch 7 IF_ICMPNE L363 - false
   */
  @Test
  public void test6()  throws Throwable  {
      TokenizerProperty tokenizerProperty0 = new TokenizerProperty(101);
      String[] stringArray0 = new String[5];
      TokenizerProperty tokenizerProperty1 = new TokenizerProperty(101, stringArray0, (Object) "de.susebox.jtopas.TokenizerProperty: UNKNOWN, flags/mask 0x0/0x0");
      boolean boolean0 = tokenizerProperty0.equals((Object) tokenizerProperty1);
      assertEquals("de.susebox.jtopas.TokenizerProperty: UNKNOWN, flags/mask 0x0/0x0:", tokenizerProperty1.toString());
      assertEquals(101, tokenizerProperty0.getType());
      assertEquals(false, boolean0);
  }
}
