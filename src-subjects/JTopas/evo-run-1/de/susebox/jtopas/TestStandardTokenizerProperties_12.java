/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.java.lang.ExtIllegalArgumentException;
import de.susebox.java.lang.ExtUnsupportedOperationException;
import de.susebox.jtopas.StandardTokenizer;
import de.susebox.jtopas.StandardTokenizerProperties;
import de.susebox.jtopas.TokenizerProperties;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestStandardTokenizerProperties_12 {


  //Test case number: 12
  /*
   * 19 covered goals:
   * 1 Weak Mutation 237: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceBitwiseOperator & -> ^
   * 2 Weak Mutation 236: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceBitwiseOperator & -> |
   * 3 Weak Mutation 235: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 234: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 233: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 232: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp Negation
   * 7 Weak Mutation 231: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - DeleteField: _charFlags[I
   * 8 Weak Mutation 242: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 240: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceComparisonOperator == -> -2
   * 10 de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z: I8 Branch 54 IFEQ L532 - true
   * 11 Weak Mutation 237: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceBitwiseOperator & -> ^
   * 12 Weak Mutation 236: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceBitwiseOperator & -> |
   * 13 Weak Mutation 235: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 234: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 233: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 232: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - InsertUnaryOp Negation
   * 17 Weak Mutation 231: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - DeleteField: _charFlags[I
   * 18 Weak Mutation 242: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 240: de.susebox.jtopas.StandardTokenizerProperties.isWhitespace(C)Z:532 - ReplaceComparisonOperator == -> -2
   */
  @Test
  public void test12()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties((-171), " NOR;MAL, ", " NOR;MAL, ");
      assertNotNull(standardTokenizerProperties0);
      
      boolean boolean0 = standardTokenizerProperties0.isWhitespace('J');
      assertEquals(false, boolean0);
      assertEquals(-171, standardTokenizerProperties0.getParseFlags());
      assertEquals(" NOR;MAL, ", standardTokenizerProperties0.getWhitespaces());
  }
}
