/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas.sef;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.sef.SEFTestTokenizerSource;
import java.io.File;
import java.io.IOException;
import java.io.PipedInputStream;
import java.net.URI;
import junit.framework.TestCase;
import org.evosuite.testcase.TestCaseExecutor;

@RunWith(EvoSuiteRunner.class)
public class TestSEFTestTokenizerSource_0 {


  //Test case number: 0
  /*
   * 32 covered goals:
   * 1 de.susebox.jtopas.sef.SEFTestTokenizerSource.<init>(Ljava/lang/String;)V: root-Branch
   * 2 de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;: I17 Branch 24 IF_ICMPGE L524 - true
   * 3 de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;: I17 Branch 24 IF_ICMPGE L524 - false
   * 4 Weak Mutation 154: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> 0
   * 5 Weak Mutation 159: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:244 - DeleteStatement: length()I
   * 6 Weak Mutation 154: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> 0
   * 7 Weak Mutation 155: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> 1
   * 8 Weak Mutation 156: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> -1
   * 9 Weak Mutation 157: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> 19999
   * 10 Weak Mutation 158: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:243 - ReplaceConstant - 20000 -> 20001
   * 11 Weak Mutation 159: de.susebox.jtopas.sef.SEFTestTokenizerSource.testSpeed()V:244 - DeleteStatement: length()I
   * 12 Weak Mutation 305: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 304: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - InsertUnaryOp Negation
   * 14 Weak Mutation 307: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - ReplaceArithmeticOperator * -> -
   * 15 Weak Mutation 306: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 309: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - ReplaceArithmeticOperator * -> %
   * 17 Weak Mutation 308: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - ReplaceArithmeticOperator * -> +
   * 18 Weak Mutation 311: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 310: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - ReplaceArithmeticOperator * -> /
   * 20 Weak Mutation 313: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 312: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp Negation
   * 22 Weak Mutation 315: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp Negation
   * 23 Weak Mutation 314: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 317: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 316: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - InsertUnaryOp IINC 1
   * 26 Weak Mutation 319: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - ReplaceComparisonOperator >= -> >
   * 27 Weak Mutation 302: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - ReplaceConstant - this is a simple text with a lot of perfectly normal
token. And a few separators (brackets are some, for instance)
as well.     There could	also be some	tabs ("\t")
in between. And 'some strings' :-).
And the smileys (;-), =8-[, .-\ etc.) should be regarded as
'special sequences'.

 -> 
   * 28 Weak Mutation 303: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:522 - DeleteStatement: length()I
   * 29 Weak Mutation 322: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:525 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 30 Weak Mutation 323: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:527 - DeleteStatement: toString()Ljava/lang/String;
   * 31 Weak Mutation 320: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:524 - ReplaceComparisonOperator >= -> -1
   * 32 Weak Mutation 321: de.susebox.jtopas.sef.SEFTestTokenizerSource.expandData(I)Ljava/lang/String;:525 - ReplaceConstant - this is a simple text with a lot of perfectly normal
token. And a few separators (brackets are some, for instance)
as well.     There could	also be some	tabs ("\t")
in between. And 'some strings' :-).
And the smileys (;-), =8-[, .-\ etc.) should be regarded as
'special sequences'.

 -> 
   */
  @Test
  public void test0()  throws Throwable  {
      String string0 = null;
      SEFTestTokenizerSource sEFTestTokenizerSource0 = new SEFTestTokenizerSource((String) null);
      try {
        sEFTestTokenizerSource0.testSpeed();
        fail("Expecting exception: OutOfMemoryError");
      } catch(OutOfMemoryError e) {
        /*
         * Java heap space
         */
      }
  }
}
