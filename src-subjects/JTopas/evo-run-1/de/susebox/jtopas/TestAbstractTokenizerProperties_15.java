/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.StandardTokenizerProperties;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractTokenizerProperties_15 {


  //Test case number: 15
  /*
   * 21 covered goals:
   * 1 Weak Mutation 222: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:595 - DeleteStatement: removeProperty(Lde/susebox/jtopas/TokenizerProperty;)V
   * 2 de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V: I9 Branch 14 IFNULL L594 - false
   * 3 Weak Mutation 69: de.susebox.jtopas.AbstractTokenizerProperties.isFlagSet(I)Z:225 - ReplaceComparisonOperator != -> -1
   * 4 Weak Mutation 70: de.susebox.jtopas.AbstractTokenizerProperties.isFlagSet(I)Z:225 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 220: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:592 - DeleteStatement: getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 6 Weak Mutation 221: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:594 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 69: de.susebox.jtopas.AbstractTokenizerProperties.isFlagSet(I)Z:225 - ReplaceComparisonOperator != -> -1
   * 8 Weak Mutation 70: de.susebox.jtopas.AbstractTokenizerProperties.isFlagSet(I)Z:225 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 220: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:592 - DeleteStatement: getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 10 Weak Mutation 221: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:594 - ReplaceComparisonOperator = null -> != null
   * 11 Weak Mutation 222: de.susebox.jtopas.AbstractTokenizerProperties.removeLineComment(Ljava/lang/String;)V:595 - DeleteStatement: removeProperty(Lde/susebox/jtopas/TokenizerProperty;)V
   * 12 Weak Mutation 238: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - DeleteStatement: doGetProperty(ILjava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 13 Weak Mutation 237: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - ReplaceConstant - 7 -> 8
   * 14 Weak Mutation 236: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - ReplaceConstant - 7 -> 6
   * 15 Weak Mutation 235: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - ReplaceConstant - 7 -> -1
   * 16 Weak Mutation 234: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - ReplaceConstant - 7 -> 1
   * 17 Weak Mutation 233: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:648 - ReplaceConstant - 7 -> 0
   * 18 Weak Mutation 232: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:644 - DeleteStatement: checkArgument(Ljava/lang/String;Ljava/lang/String;)V
   * 19 Weak Mutation 231: de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:644 - ReplaceConstant - Line comment -> 
   * 20 de.susebox.jtopas.AbstractTokenizerProperties.getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;: root-Branch
   * 21 de.susebox.jtopas.AbstractTokenizerProperties.isFlagSet(I)Z: I7 Branch 2 IF_ICMPNE L225 - false
   */
  @Test
  public void test15()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties((-79));
      assertNotNull(standardTokenizerProperties0);
      
      standardTokenizerProperties0.addSpecialSequence("//", (Object) null, 7);
      standardTokenizerProperties0.removeLineComment("//");
      assertEquals(true, standardTokenizerProperties0.hasSequenceCommentOrString());
      assertEquals(true, standardTokenizerProperties0.newlineIsWhitespace());
  }
}
