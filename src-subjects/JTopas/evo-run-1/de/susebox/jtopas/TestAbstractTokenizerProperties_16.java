/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.StandardTokenizerProperties;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractTokenizerProperties_16 {


  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 Weak Mutation 225: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:612 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 2 de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;: I9 Branch 15 IFNULL L611 - false
   * 3 Weak Mutation 223: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:609 - DeleteStatement: getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 4 Weak Mutation 224: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:611 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 223: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:609 - DeleteStatement: getLineComment(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 6 Weak Mutation 225: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:612 - DeleteStatement: getCompanion()Ljava/lang/Object;
   * 7 Weak Mutation 224: de.susebox.jtopas.AbstractTokenizerProperties.getLineCommentCompanion(Ljava/lang/String;)Ljava/lang/Object;:611 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test16()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties();
      standardTokenizerProperties0.addBlockComment(">v,klva<jZ8mA/N`QS ", " BLOCK_COMMENT, ", (Object) "+yf", (int) '+', (int) '+');
      standardTokenizerProperties0.getLineCommentCompanion(">v,klva<jZ8mA/N`QS ");
      assertEquals(true, standardTokenizerProperties0.hasSequenceCommentOrString());
      assertEquals(0, standardTokenizerProperties0.getParseFlags());
  }
}
