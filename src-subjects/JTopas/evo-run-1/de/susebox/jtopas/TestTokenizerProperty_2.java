/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.TokenizerProperty;

@RunWith(EvoSuiteRunner.class)
public class TestTokenizerProperty_2 {


  //Test case number: 2
  /*
   * 22 covered goals:
   * 1 Weak Mutation 50: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 49: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceComparisonOperator != -> -1
   * 3 Weak Mutation 57: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceBitwiseOperator & -> |
   * 4 de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z: I13 Branch 2 IF_ICMPNE L185 - false
   * 5 Weak Mutation 7: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp Negation
   * 6 Weak Mutation 8: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 9: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC -1
   * 8 Weak Mutation 10: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp Negation
   * 9 Weak Mutation 11: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC 1
   * 10 Weak Mutation 12: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 13: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - DeleteStatement: setFlags(II)V
   * 12 Weak Mutation 7: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp Negation
   * 13 Weak Mutation 8: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC 1
   * 14 Weak Mutation 9: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 10: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp Negation
   * 16 Weak Mutation 11: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 12: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 13: de.susebox.jtopas.TokenizerProperty.setFlags(I)V:115 - DeleteStatement: setFlags(II)V
   * 19 Weak Mutation 50: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 49: de.susebox.jtopas.TokenizerProperty.isFlagSet(IZ)Z:185 - ReplaceComparisonOperator != -> -1
   * 21 Weak Mutation 57: de.susebox.jtopas.TokenizerProperty.containsFlag(I)Z:210 - ReplaceBitwiseOperator & -> |
   * 22 de.susebox.jtopas.TokenizerProperty.setFlags(I)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[5];
      TokenizerProperty tokenizerProperty0 = new TokenizerProperty((-1), stringArray0);
      tokenizerProperty0.setFlags((-1));
      boolean boolean0 = tokenizerProperty0.isFlagSet(926, false);
      assertEquals("de.susebox.jtopas.TokenizerProperty: EOF, flags/mask 0xffffffff/0xffffffff:", tokenizerProperty0.toString());
      assertEquals(true, boolean0);
  }
}
