/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.StandardTokenizerProperties;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractTokenizerProperties_14 {


  //Test case number: 14
  /*
   * 8 covered goals:
   * 1 Weak Mutation 188: de.susebox.jtopas.AbstractTokenizerProperties.stringExists(Ljava/lang/String;)Z:500 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 184: de.susebox.jtopas.AbstractTokenizerProperties.stringExists(Ljava/lang/String;)Z:498 - DeleteStatement: getString(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 3 Weak Mutation 188: de.susebox.jtopas.AbstractTokenizerProperties.stringExists(Ljava/lang/String;)Z:500 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 728: de.susebox.jtopas.AbstractTokenizerProperties.checkArgument(Ljava/lang/String;Ljava/lang/String;)V:1507 - ReplaceConstant - {0} is empty. -> 
   * 5 Weak Mutation 729: de.susebox.jtopas.AbstractTokenizerProperties.checkArgument(Ljava/lang/String;Ljava/lang/String;)V:1507 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 730: de.susebox.jtopas.AbstractTokenizerProperties.checkArgument(Ljava/lang/String;Ljava/lang/String;)V:1507 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 726: de.susebox.jtopas.AbstractTokenizerProperties.checkArgument(Ljava/lang/String;Ljava/lang/String;)V:1506 - ReplaceComparisonOperator > -> >=
   * 8 de.susebox.jtopas.AbstractTokenizerProperties.checkArgument(Ljava/lang/String;Ljava/lang/String;)V: I21 Branch 66 IFGT L1506 - false
   */
  @Test
  public void test14()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties();
      boolean boolean0 = standardTokenizerProperties0.stringExists("");
      assertEquals(true, standardTokenizerProperties0.newlineIsWhitespace());
      assertEquals(false, boolean0);
      assertEquals(0, standardTokenizerProperties0.getParseFlags());
      assertEquals("!#-/:-@[-^`{-~", standardTokenizerProperties0.getSeparators());
  }
}
