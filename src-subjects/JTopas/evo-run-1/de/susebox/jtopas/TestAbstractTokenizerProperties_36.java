/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.StandardTokenizer;
import de.susebox.jtopas.StandardTokenizerProperties;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractTokenizerProperties_36 {


  //Test case number: 36
  /*
   * 33 covered goals:
   * 1 Weak Mutation 396: de.susebox.jtopas.AbstractTokenizerProperties.patternExists(Ljava/lang/String;)Z:1168 - ReplaceConstant - 1 -> 0
   * 2 de.susebox.jtopas.AbstractTokenizerProperties.patternExists(Ljava/lang/String;)Z: I5 Branch 28 IFNULL L1168 - false
   * 3 Weak Mutation 373: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;II)V
   * 4 Weak Mutation 372: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 369: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 368: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 371: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 370: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp Negation
   * 9 Weak Mutation 364: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;)V:1069 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;)V
   * 10 Weak Mutation 365: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;)V:1085 - DeleteStatement: getParseFlags()I
   * 11 Weak Mutation 366: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;)V:1085 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;I)V
   * 12 Weak Mutation 367: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp Negation
   * 13 Weak Mutation 402: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - ReplaceConstant - 3 -> 1
   * 14 Weak Mutation 403: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - ReplaceConstant - 3 -> -1
   * 15 Weak Mutation 401: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - ReplaceConstant - 3 -> 0
   * 16 Weak Mutation 406: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - DeleteStatement: doGetProperty(ILjava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;
   * 17 Weak Mutation 404: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - ReplaceConstant - 3 -> 2
   * 18 Weak Mutation 405: de.susebox.jtopas.AbstractTokenizerProperties.getPattern(Ljava/lang/String;)Lde/susebox/jtopas/TokenizerProperty;:1192 - ReplaceConstant - 3 -> 4
   * 19 Weak Mutation 395: de.susebox.jtopas.AbstractTokenizerProperties.patternExists(Ljava/lang/String;)Z:1168 - ReplaceComparisonOperator = null -> != null
   * 20 Weak Mutation 373: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;II)V
   * 21 Weak Mutation 372: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC -1
   * 22 Weak Mutation 369: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 368: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 371: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp IINC 1
   * 25 Weak Mutation 370: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp Negation
   * 26 Weak Mutation 364: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;)V:1069 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;)V
   * 27 Weak Mutation 365: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;)V:1085 - DeleteStatement: getParseFlags()I
   * 28 Weak Mutation 366: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;)V:1085 - DeleteStatement: addPattern(Ljava/lang/String;Ljava/lang/Object;I)V
   * 29 Weak Mutation 367: de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V:1102 - InsertUnaryOp Negation
   * 30 Weak Mutation 396: de.susebox.jtopas.AbstractTokenizerProperties.patternExists(Ljava/lang/String;)Z:1168 - ReplaceConstant - 1 -> 0
   * 31 de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;)V: root-Branch
   * 32 de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;I)V: root-Branch
   * 33 de.susebox.jtopas.AbstractTokenizerProperties.addPattern(Ljava/lang/String;Ljava/lang/Object;)V: root-Branch
   */
  @Test
  public void test36()  throws Throwable  {
      StandardTokenizerProperties standardTokenizerProperties0 = new StandardTokenizerProperties();
      standardTokenizerProperties0.addPattern("c^o<$eAm_ao=sM&RK");
      boolean boolean0 = standardTokenizerProperties0.patternExists("c^o<$eAm_ao=sM&RK");
      assertEquals(true, standardTokenizerProperties0.hasPattern());
      assertEquals(true, boolean0);
  }
}
