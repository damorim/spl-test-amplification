/*
 * This file was automatically generated by EvoSuite
 */

package de.susebox.jtopas;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import de.susebox.jtopas.Token;

@RunWith(EvoSuiteRunner.class)
public class TestToken_15 {


  //Test case number: 15
  /*
   * 14 covered goals:
   * 1 Weak Mutation 140: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:574 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 143: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:575 - ReplaceConstant - 0 -> 1
   * 3 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I83 Branch 10 IF_ICMPEQ L574 - false
   * 4 Weak Mutation 63: de.susebox.jtopas.Token.getStartColumn()I:429 - InsertUnaryOp -1
   * 5 Weak Mutation 62: de.susebox.jtopas.Token.getStartColumn()I:429 - InsertUnaryOp +1
   * 6 Weak Mutation 61: de.susebox.jtopas.Token.getStartColumn()I:429 - InsertUnaryOp Negation
   * 7 Weak Mutation 64: de.susebox.jtopas.Token.getStartColumn()I:429 - DeleteField: _startColumnI
   * 8 Weak Mutation 139: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:574 - DeleteStatement: getStartColumn()I
   * 9 Weak Mutation 138: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:574 - DeleteStatement: getStartColumn()I
   * 10 Weak Mutation 140: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:574 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 143: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:575 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 135: de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z:572 - ReplaceComparisonOperator == -> -2
   * 13 de.susebox.jtopas.Token.getStartColumn()I: root-Branch
   * 14 de.susebox.jtopas.Token.equals(Ljava/lang/Object;)Z: I72 Branch 9 IF_ICMPEQ L572 - true
   */
  @Test
  public void test15()  throws Throwable  {
      Token token0 = new Token(3, "%O#_.;s", (Object) "%O#_.;s");
      assertNotNull(token0);
      
      token0.setStartColumn(3);
      Token token1 = new Token(3, "%O#_.;s", (Object) token0);
      boolean boolean0 = token0.equals((Object) token1);
      assertEquals(3, token0.getStartColumn());
      assertEquals(false, boolean0);
  }
}
