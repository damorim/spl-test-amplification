/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_8 {


  //Test case number: 8
  /*
   * 37 covered goals:
   * 1 Weak Mutation 30: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - DeleteField: keyI
   * 2 Weak Mutation 34: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - DeleteField: keyI
   * 3 Weak Mutation 44: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - DeleteField: keyI
   * 4 Weak Mutation 48: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - DeleteField: keyI
   * 5 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I141 Branch 25 IFLT L297 - true
   * 6 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I158 Branch 26 IFEQ L303 - true
   * 7 Weak Mutation 27: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp Negation
   * 8 Weak Mutation 29: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp -1
   * 9 Weak Mutation 28: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp +1
   * 10 Weak Mutation 31: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp Negation
   * 11 Weak Mutation 30: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - DeleteField: keyI
   * 12 Weak Mutation 34: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - DeleteField: keyI
   * 13 Weak Mutation 32: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp +1
   * 14 Weak Mutation 33: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp -1
   * 15 Weak Mutation 36: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - ReplaceComparisonOperator >= -> >
   * 16 Weak Mutation 42: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp +1
   * 17 Weak Mutation 43: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp -1
   * 18 Weak Mutation 41: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp Negation
   * 19 Weak Mutation 46: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp +1
   * 20 Weak Mutation 47: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp -1
   * 21 Weak Mutation 44: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - DeleteField: keyI
   * 22 Weak Mutation 45: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp Negation
   * 23 Weak Mutation 51: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - ReplaceComparisonOperator != -> -1
   * 24 Weak Mutation 48: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - DeleteField: keyI
   * 25 Weak Mutation 52: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:332 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 306: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:263 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 27 Weak Mutation 302: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - DeleteField: keyI
   * 28 Weak Mutation 303: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> >=
   * 29 smashed.Graph$2.<init>(Lsmashed/Graph;)V: root-Branch
   * 30 smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 3 IF_ICMPGE L328 - true
   * 31 smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 4 IF_ICMPNE L331 - false
   * 32 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I76 Branch 22 IFEQ L262 - false
   * 33 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I120 Branch 24 IF_ICMPGE L288 - false
   * 34 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I141 Branch 25 IFLT L297 - false
   * 35 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I158 Branch 26 IFEQ L303 - false
   * 36 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I162 Branch 27 IF_ICMPGE L303 - false
   * 37 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I200 Branch 28 IFGE L338 - true
   */
  @Test
  public void test8()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      Edge edge0 = new Edge(vertex0, vertex0, 0);
      vertex0.addWeight(0);
      graph0.addEdge(edge0.start, edge0.start, (-130));
      Vertex vertex1 = new Vertex();
      graph0.addEdge(vertex0, vertex1, 0);
      graph0.addVertex(vertex1);
      graph0.addVertex(vertex1);
      assertEquals(Integer.MAX_VALUE, vertex1.VertexCycle);
      
      graph0.Prim(edge0.end);
      assertEquals(0, vertex0.key);
  }
}
