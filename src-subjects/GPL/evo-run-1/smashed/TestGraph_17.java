/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.Reader;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_17 {


  //Test case number: 17
  /*
   * 42 covered goals:
   * 1 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I88 Branch 19 IF_ICMPGE L201 - false
   * 2 Weak Mutation 220: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 3 Weak Mutation 221: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 4 Weak Mutation 222: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 223: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 216: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:178 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 217: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 218: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 9 Weak Mutation 219: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 10 Weak Mutation 212: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 213: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 214: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteField: verticesLjava/util/LinkedList;
   * 13 Weak Mutation 215: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteStatement: size()I
   * 14 Weak Mutation 239: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 15 Weak Mutation 238: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 237: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 236: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 18 Weak Mutation 235: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 234: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: addVertex(Lsmashed/Vertex;)V
   * 20 Weak Mutation 233: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: assignName(Ljava/lang/String;)Lsmashed/Vertex;
   * 21 Weak Mutation 231: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteStatement: get(I)Ljava/lang/Object;
   * 22 Weak Mutation 230: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 229: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 228: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp Negation
   * 25 Weak Mutation 227: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: verticesLjava/util/LinkedList;
   * 26 Weak Mutation 226: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> -1
   * 27 Weak Mutation 225: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> >
   * 28 Weak Mutation 254: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 255: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp Negation
   * 30 Weak Mutation 253: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteStatement: findsVertex(Ljava/lang/String;)Lsmashed/Vertex;
   * 31 Weak Mutation 250: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 32 Weak Mutation 251: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteStatement: size()I
   * 33 Weak Mutation 248: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC -1
   * 34 Weak Mutation 249: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteStatement: get(I)Ljava/lang/Object;
   * 35 Weak Mutation 246: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp Negation
   * 36 Weak Mutation 247: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC 1
   * 37 Weak Mutation 244: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> -1
   * 38 Weak Mutation 245: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteField: verticesLjava/util/LinkedList;
   * 39 Weak Mutation 240: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 241: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 41 Weak Mutation 256: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC 1
   * 42 Weak Mutation 257: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC -1
   */
  @Test
  public void test17()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addAnEdge(vertex0, vertex0, 0);
      graph0.addVertex(vertex0);
      // Undeclared exception!
      try {
        graph0.ComputeTranspose(graph0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
