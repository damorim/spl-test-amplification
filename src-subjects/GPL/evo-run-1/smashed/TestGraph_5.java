/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_5 {


  //Test case number: 5
  /*
   * 136 covered goals:
   * 1 Weak Mutation 3: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 2 Weak Mutation 7: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 3 Weak Mutation 17: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 4 Weak Mutation 21: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 5 Weak Mutation 0: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 6 Weak Mutation 1: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 7 Weak Mutation 2: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 8 Weak Mutation 4: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 9 Weak Mutation 5: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 10 Weak Mutation 6: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 11 Weak Mutation 9: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> <
   * 12 Weak Mutation 14: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 13 Weak Mutation 15: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 14 Weak Mutation 16: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 15 Weak Mutation 19: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 16 Weak Mutation 18: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 17 Weak Mutation 20: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 18 Weak Mutation 25: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:153 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 24: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> -1
   * 20 Weak Mutation 0: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 21 Weak Mutation 1: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 22 Weak Mutation 2: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 23 Weak Mutation 3: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 24 Weak Mutation 4: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 25 Weak Mutation 5: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 26 Weak Mutation 6: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 27 Weak Mutation 7: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 28 Weak Mutation 9: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> <
   * 29 Weak Mutation 14: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 30 Weak Mutation 15: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 31 Weak Mutation 17: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 32 Weak Mutation 16: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 33 Weak Mutation 19: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 34 Weak Mutation 18: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 35 Weak Mutation 21: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 36 Weak Mutation 20: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 37 Weak Mutation 25: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:153 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 24: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> -1
   * 39 Weak Mutation 171: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 170: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 41 Weak Mutation 169: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceConstant - 0 -> 1
   * 42 Weak Mutation 175: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 174: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 44 Weak Mutation 173: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 45 Weak Mutation 172: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 46 Weak Mutation 166: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> <
   * 47 Weak Mutation 186: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 48 Weak Mutation 187: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 49 Weak Mutation 184: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:98 - DeleteStatement: init_vertex(Lsmashed/WorkSpace;)V
   * 50 Weak Mutation 185: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceConstant - 0 -> 1
   * 51 Weak Mutation 190: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 191: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 188: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 189: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 55 Weak Mutation 178: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> -1
   * 56 Weak Mutation 179: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteField: verticesLjava/util/LinkedList;
   * 57 Weak Mutation 177: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> >
   * 58 Weak Mutation 182: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC -1
   * 59 Weak Mutation 183: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteStatement: get(I)Ljava/lang/Object;
   * 60 Weak Mutation 180: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp Negation
   * 61 Weak Mutation 181: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC 1
   * 62 Weak Mutation 204: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:107 - DeleteStatement: nodeSearch(Lsmashed/Vertex;Lsmashed/WorkSpace;)V
   * 63 Weak Mutation 207: smashed.Graph.StrongComponents()Lsmashed/Graph;:137 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 64 Weak Mutation 200: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - InsertUnaryOp Negation
   * 65 Weak Mutation 203: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:106 - DeleteStatement: nextRegionAction(Lsmashed/Vertex;)V
   * 66 Weak Mutation 202: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - ReplaceComparisonOperator != -> ==
   * 67 Weak Mutation 197: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC 1
   * 68 Weak Mutation 196: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp Negation
   * 69 Weak Mutation 199: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteStatement: get(I)Ljava/lang/Object;
   * 70 Weak Mutation 198: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC -1
   * 71 Weak Mutation 193: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> >
   * 72 Weak Mutation 195: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteField: verticesLjava/util/LinkedList;
   * 73 Weak Mutation 194: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> -1
   * 74 Weak Mutation 220: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 75 Weak Mutation 221: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 76 Weak Mutation 222: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 77 Weak Mutation 223: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 78 Weak Mutation 216: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:178 - ReplaceConstant - 0 -> 1
   * 79 Weak Mutation 217: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceConstant - 0 -> 1
   * 80 Weak Mutation 218: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 81 Weak Mutation 219: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 82 Weak Mutation 212: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 83 Weak Mutation 213: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 84 Weak Mutation 214: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteField: verticesLjava/util/LinkedList;
   * 85 Weak Mutation 215: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteStatement: size()I
   * 86 Weak Mutation 208: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteField: verticesLjava/util/LinkedList;
   * 87 Weak Mutation 209: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteStatement: sort(Ljava/util/List;Ljava/util/Comparator;)V
   * 88 Weak Mutation 210: smashed.Graph.StrongComponents()Lsmashed/Graph;:160 - DeleteStatement: ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;
   * 89 Weak Mutation 211: smashed.Graph.StrongComponents()Lsmashed/Graph;:164 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 90 Weak Mutation 239: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 91 Weak Mutation 238: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 92 Weak Mutation 237: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 93 Weak Mutation 236: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 94 Weak Mutation 235: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceConstant - 0 -> 1
   * 95 Weak Mutation 234: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: addVertex(Lsmashed/Vertex;)V
   * 96 Weak Mutation 233: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: assignName(Ljava/lang/String;)Lsmashed/Vertex;
   * 97 Weak Mutation 231: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteStatement: get(I)Ljava/lang/Object;
   * 98 Weak Mutation 230: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC -1
   * 99 Weak Mutation 229: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC 1
   * 100 Weak Mutation 228: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp Negation
   * 101 Weak Mutation 227: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: verticesLjava/util/LinkedList;
   * 102 Weak Mutation 226: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> -1
   * 103 Weak Mutation 225: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> >
   * 104 Weak Mutation 254: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - ReplaceConstant - 0 -> 1
   * 105 Weak Mutation 255: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp Negation
   * 106 Weak Mutation 253: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteStatement: findsVertex(Ljava/lang/String;)Lsmashed/Vertex;
   * 107 Weak Mutation 250: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 108 Weak Mutation 251: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteStatement: size()I
   * 109 Weak Mutation 248: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC -1
   * 110 Weak Mutation 249: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteStatement: get(I)Ljava/lang/Object;
   * 111 Weak Mutation 246: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp Negation
   * 112 Weak Mutation 247: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC 1
   * 113 Weak Mutation 244: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> -1
   * 114 Weak Mutation 245: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteField: verticesLjava/util/LinkedList;
   * 115 Weak Mutation 243: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> >
   * 116 Weak Mutation 240: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 117 Weak Mutation 241: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 118 Weak Mutation 256: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC 1
   * 119 Weak Mutation 257: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC -1
   * 120 smashed.Graph$1.<init>(Lsmashed/Graph;)V: root-Branch
   * 121 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 1 IF_ICMPLE L149 - true
   * 122 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 2 IF_ICMPNE L152 - false
   * 123 smashed.Graph.StrongComponents()Lsmashed/Graph;: root-Branch
   * 124 smashed.Graph.nodeSearch(Lsmashed/Vertex;Lsmashed/WorkSpace;)V: root-Branch
   * 125 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I9 Branch 13 IFNE L92 - true
   * 126 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I20 Branch 14 IF_ICMPGE L96 - true
   * 127 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I20 Branch 14 IF_ICMPGE L96 - false
   * 128 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I45 Branch 15 IF_ICMPGE L103 - true
   * 129 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I45 Branch 15 IF_ICMPGE L103 - false
   * 130 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I58 Branch 16 IFNE L105 - false
   * 131 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I29 Branch 17 IF_ICMPGE L185 - true
   * 132 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I29 Branch 17 IF_ICMPGE L185 - false
   * 133 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I59 Branch 18 IF_ICMPGE L192 - true
   * 134 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I59 Branch 18 IF_ICMPGE L192 - false
   * 135 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I88 Branch 19 IF_ICMPGE L201 - true
   * 136 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I7 Branch 9 IFNONNULL L32 - false
   */
  @Test
  public void test5()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      graph0.addVertex(vertex0);
      FinishTimeWorkSpace finishTimeWorkSpace0 = new FinishTimeWorkSpace();
      vertex0.dftNodeSearch((WorkSpace) finishTimeWorkSpace0);
      Graph graph1 = graph0.StrongComponents();
      assertEquals(false, graph1.CycleCheck());
  }
}
