/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.FinishTimeWorkSpace;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestFinishTimeWorkSpace {


  //Test case number: 0
  /*
   * 49 covered goals:
   * 1 Weak Mutation 2: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - DeleteField: visitedZ
   * 2 smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V: I5 Branch 1 IF_ICMPEQ L22 - true
   * 3 Weak Mutation 1: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - InsertUnaryOp Negation
   * 4 Weak Mutation 3: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 4: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 5: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp Negation
   * 7 Weak Mutation 6: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp +1
   * 8 Weak Mutation 7: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp -1
   * 9 Weak Mutation 8: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - DeleteField: FinishCounterI
   * 10 Weak Mutation 9: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 10: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> -
   * 12 Weak Mutation 11: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 12: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 13: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 14: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp Negation
   * 16 Weak Mutation 15: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp +1
   * 17 Weak Mutation 17: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - DeleteField: FinishCounterI
   * 18 Weak Mutation 16: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp -1
   * 19 Weak Mutation 19: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> -
   * 20 Weak Mutation 18: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 21: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 20: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 22: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> *
   * 24 Weak Mutation 0: smashed.FinishTimeWorkSpace.<init>()V:15 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 1: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - InsertUnaryOp Negation
   * 26 Weak Mutation 2: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - DeleteField: visitedZ
   * 27 Weak Mutation 3: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 4: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:22 - ReplaceComparisonOperator == -> !=
   * 29 Weak Mutation 5: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp Negation
   * 30 Weak Mutation 6: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp +1
   * 31 Weak Mutation 7: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - InsertUnaryOp -1
   * 32 Weak Mutation 8: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - DeleteField: FinishCounterI
   * 33 Weak Mutation 9: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 10: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> -
   * 35 Weak Mutation 11: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> %
   * 36 Weak Mutation 12: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> /
   * 37 Weak Mutation 13: smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V:23 - ReplaceArithmeticOperator + -> *
   * 38 Weak Mutation 14: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp Negation
   * 39 Weak Mutation 15: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp +1
   * 40 Weak Mutation 17: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - DeleteField: FinishCounterI
   * 41 Weak Mutation 16: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - InsertUnaryOp -1
   * 42 Weak Mutation 19: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> -
   * 43 Weak Mutation 18: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceConstant - 1 -> 0
   * 44 Weak Mutation 21: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> /
   * 45 Weak Mutation 20: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> %
   * 46 Weak Mutation 22: smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V:29 - ReplaceArithmeticOperator + -> *
   * 47 smashed.FinishTimeWorkSpace.postVisitAction(Lsmashed/Vertex;)V: root-Branch
   * 48 smashed.FinishTimeWorkSpace.<init>()V: root-Branch
   * 49 smashed.FinishTimeWorkSpace.preVisitAction(Lsmashed/Vertex;)V: I5 Branch 1 IF_ICMPEQ L22 - false
   */
  @Test
  public void test0()  throws Throwable  {
      Vertex vertex0 = new Vertex();
      FinishTimeWorkSpace finishTimeWorkSpace0 = new FinishTimeWorkSpace();
      vertex0.bftNodeSearch((WorkSpace) finishTimeWorkSpace0);
      finishTimeWorkSpace0.preVisitAction(vertex0);
      assertEquals(3, finishTimeWorkSpace0.FinishCounter);
      assertEquals(2, vertex0.finishTime);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 smashed.FinishTimeWorkSpace.checkNeighborAction(Lsmashed/Vertex;Lsmashed/Vertex;)V: root-Branch
   * 2 Weak Mutation 0: smashed.FinishTimeWorkSpace.<init>()V:15 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test1()  throws Throwable  {
      FinishTimeWorkSpace finishTimeWorkSpace0 = new FinishTimeWorkSpace();
      finishTimeWorkSpace0.checkNeighborAction((Vertex) null, (Vertex) null);
      assertEquals(1, finishTimeWorkSpace0.FinishCounter);
  }
}
