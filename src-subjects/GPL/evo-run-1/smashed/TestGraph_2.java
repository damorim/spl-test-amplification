/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.Edge;
import smashed.Graph;
import smashed.Vertex;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_2 {


  //Test case number: 2
  /*
   * 18 covered goals:
   * 1 Weak Mutation 162: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteStatement: size()I
   * 2 Weak Mutation 161: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteField: verticesLjava/util/LinkedList;
   * 3 Weak Mutation 168: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> -1
   * 4 Weak Mutation 163: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp Negation
   * 5 Weak Mutation 165: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 164: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 258: smashed.Graph.CycleCheck()Z:228 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 8 Weak Mutation 259: smashed.Graph.CycleCheck()Z:229 - InsertUnaryOp Negation
   * 9 smashed.Graph.CycleCheck()Z: root-Branch
   * 10 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I9 Branch 13 IFNE L92 - false
   * 11 Weak Mutation 168: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 163: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp Negation
   * 13 Weak Mutation 162: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteStatement: size()I
   * 14 Weak Mutation 161: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteField: verticesLjava/util/LinkedList;
   * 15 Weak Mutation 165: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 164: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 258: smashed.Graph.CycleCheck()Z:228 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 18 Weak Mutation 259: smashed.Graph.CycleCheck()Z:229 - InsertUnaryOp Negation
   */
  @Test
  public void test2()  throws Throwable  {
      Graph graph0 = new Graph();
      boolean boolean0 = graph0.CycleCheck();
      assertEquals(false, boolean0);
  }
}
