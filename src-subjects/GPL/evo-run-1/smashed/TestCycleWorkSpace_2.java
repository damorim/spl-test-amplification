/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.CycleWorkSpace;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestCycleWorkSpace_2 {


  //Test case number: 2
  /*
   * 14 covered goals:
   * 1 Weak Mutation 15: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - DeleteField: counterI
   * 2 Weak Mutation 8: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp Negation
   * 3 Weak Mutation 10: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:32 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 11: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:32 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 12: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - InsertUnaryOp Negation
   * 6 Weak Mutation 13: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - InsertUnaryOp +1
   * 7 Weak Mutation 14: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - InsertUnaryOp -1
   * 8 Weak Mutation 17: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 16: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 19: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - ReplaceArithmeticOperator + -> /
   * 11 Weak Mutation 18: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - ReplaceArithmeticOperator + -> %
   * 12 Weak Mutation 21: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:36 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 20: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - ReplaceArithmeticOperator + -> *
   * 14 Weak Mutation 15: smashed.CycleWorkSpace.preVisitAction(Lsmashed/Vertex;)V:35 - DeleteField: counterI
   */
  @Test
  public void test2()  throws Throwable  {
      CycleWorkSpace cycleWorkSpace0 = new CycleWorkSpace();
      cycleWorkSpace0.counter = (-1082);
      Vertex vertex0 = new Vertex();
      cycleWorkSpace0.preVisitAction(vertex0);
      assertEquals((-1082), vertex0.VertexCycle);
      assertEquals((-1081), cycleWorkSpace0.counter);
  }
}
