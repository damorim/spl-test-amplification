/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_10 {


  //Test case number: 10
  /*
   * 80 covered goals:
   * 1 Weak Mutation 55: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 2 Weak Mutation 54: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 3 Weak Mutation 59: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 4 Weak Mutation 58: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 5 Weak Mutation 56: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 6 Weak Mutation 63: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> >
   * 7 Weak Mutation 60: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 8 Weak Mutation 68: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 9 Weak Mutation 69: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 10 Weak Mutation 70: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 11 Weak Mutation 78: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 72: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 13 Weak Mutation 73: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 14 Weak Mutation 74: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 15 Weak Mutation 79: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:465 - ReplaceConstant - 0 -> 1
   * 16 smashed.Graph.Kruskal()Lsmashed/Graph;: I93 Branch 37 IF_ICMPGE L446 - false
   * 17 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 5 IF_ICMPGE L462 - true
   * 18 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 6 IF_ICMPNE L464 - false
   * 19 smashed.Graph.Kruskal()Lsmashed/Graph;: I142 Branch 38 IF_ICMPGE L475 - false
   * 20 Weak Mutation 55: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 21 Weak Mutation 54: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 22 Weak Mutation 59: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 23 Weak Mutation 58: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 24 Weak Mutation 56: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 25 Weak Mutation 63: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> >
   * 26 Weak Mutation 60: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 27 Weak Mutation 68: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 28 Weak Mutation 69: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 29 Weak Mutation 70: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 30 Weak Mutation 78: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> -1
   * 31 Weak Mutation 79: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:465 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 72: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 33 Weak Mutation 73: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 34 Weak Mutation 74: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 35 Weak Mutation 133: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 132: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp Negation
   * 37 Weak Mutation 135: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V
   * 38 Weak Mutation 134: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 307: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteField: verticesLjava/util/LinkedList;
   * 40 Weak Mutation 309: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 308: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteStatement: size()I
   * 42 Weak Mutation 311: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 43 Weak Mutation 310: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 44 Weak Mutation 313: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 45 Weak Mutation 312: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 46 Weak Mutation 315: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 47 Weak Mutation 314: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 48 Weak Mutation 317: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> >
   * 49 Weak Mutation 319: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteField: verticesLjava/util/LinkedList;
   * 50 Weak Mutation 318: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> -1
   * 51 Weak Mutation 343: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteStatement: size()I
   * 52 Weak Mutation 342: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 53 Weak Mutation 341: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteStatement: get(I)Ljava/lang/Object;
   * 54 Weak Mutation 340: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC -1
   * 55 Weak Mutation 339: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC 1
   * 56 Weak Mutation 338: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp Negation
   * 57 Weak Mutation 337: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteField: verticesLjava/util/LinkedList;
   * 58 Weak Mutation 336: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> -1
   * 59 Weak Mutation 326: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 60 Weak Mutation 327: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceConstant - 0 -> 1
   * 61 Weak Mutation 324: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 62 Weak Mutation 325: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 63 Weak Mutation 322: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC -1
   * 64 Weak Mutation 323: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteStatement: get(I)Ljava/lang/Object;
   * 65 Weak Mutation 320: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp Negation
   * 66 Weak Mutation 321: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC 1
   * 67 Weak Mutation 335: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> >
   * 68 Weak Mutation 332: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 69 Weak Mutation 333: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 70 Weak Mutation 330: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 71 Weak Mutation 331: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 72 Weak Mutation 328: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 73 Weak Mutation 329: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 74 smashed.Graph$3.<init>(Lsmashed/Graph;)V: root-Branch
   * 75 smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V: root-Branch
   * 76 smashed.Graph.Kruskal()Lsmashed/Graph;: I19 Branch 35 IF_ICMPGE L427 - true
   * 77 smashed.Graph.Kruskal()Lsmashed/Graph;: I19 Branch 35 IF_ICMPGE L427 - false
   * 78 smashed.Graph.Kruskal()Lsmashed/Graph;: I71 Branch 36 IF_ICMPGE L442 - true
   * 79 smashed.Graph.Kruskal()Lsmashed/Graph;: I71 Branch 36 IF_ICMPGE L442 - false
   * 80 smashed.Graph.Kruskal()Lsmashed/Graph;: I93 Branch 37 IF_ICMPGE L446 - true
   */
  @Test
  public void test10()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addAnEdge(vertex0, vertex0, 0);
      graph0.addEdge(vertex0, vertex0, 0);
      graph0.addVertex(vertex0);
      // Undeclared exception!
      try {
        graph0.Kruskal();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }
}
