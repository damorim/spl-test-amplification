/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.CharArrayReader;
import java.io.IOException;
import java.io.Reader;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph_18 {


  //Test case number: 18
  /*
   * 58 covered goals:
   * 1 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I162 Branch 27 IF_ICMPGE L303 - true
   * 2 Weak Mutation 27: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp Negation
   * 3 Weak Mutation 29: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp -1
   * 4 Weak Mutation 28: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp +1
   * 5 Weak Mutation 31: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp Negation
   * 6 Weak Mutation 32: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp +1
   * 7 Weak Mutation 33: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - InsertUnaryOp -1
   * 8 Weak Mutation 36: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:328 - ReplaceComparisonOperator >= -> >
   * 9 Weak Mutation 42: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp +1
   * 10 Weak Mutation 43: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp -1
   * 11 Weak Mutation 41: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp Negation
   * 12 Weak Mutation 46: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp +1
   * 13 Weak Mutation 47: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp -1
   * 14 Weak Mutation 45: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - InsertUnaryOp Negation
   * 15 Weak Mutation 51: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:331 - ReplaceComparisonOperator != -> -1
   * 16 Weak Mutation 52: smashed.Graph$2.compare(Ljava/lang/Object;Ljava/lang/Object;)I:332 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 275: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 274: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp Negation
   * 19 Weak Mutation 273: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteField: verticesLjava/util/LinkedList;
   * 20 Weak Mutation 272: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> -1
   * 21 Weak Mutation 279: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 1
   * 22 Weak Mutation 278: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 0
   * 23 Weak Mutation 277: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteStatement: get(I)Ljava/lang/Object;
   * 24 Weak Mutation 276: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 283: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:251 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 282: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -2147483648
   * 27 Weak Mutation 281: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 2147483646
   * 28 Weak Mutation 280: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -1
   * 29 Weak Mutation 287: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 286: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 31 Weak Mutation 285: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 32 Weak Mutation 284: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 262: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteStatement: size()I
   * 34 Weak Mutation 263: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceConstant - 0 -> 1
   * 35 Weak Mutation 261: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteField: verticesLjava/util/LinkedList;
   * 36 Weak Mutation 266: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 37 Weak Mutation 267: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 38 Weak Mutation 264: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 39 Weak Mutation 265: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 271: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> >
   * 41 Weak Mutation 268: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 42 Weak Mutation 269: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 306: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:263 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 44 Weak Mutation 288: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 45 Weak Mutation 289: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 46 Weak Mutation 290: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 47 Weak Mutation 292: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> >
   * 48 Weak Mutation 293: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> -1
   * 49 Weak Mutation 294: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteField: verticesLjava/util/LinkedList;
   * 50 Weak Mutation 295: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp Negation
   * 51 Weak Mutation 296: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 297: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 298: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteStatement: get(I)Ljava/lang/Object;
   * 54 Weak Mutation 299: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp Negation
   * 55 Weak Mutation 300: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp +1
   * 56 Weak Mutation 301: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp -1
   * 57 Weak Mutation 302: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - DeleteField: keyI
   * 58 Weak Mutation 303: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> >=
   */
  @Test
  public void test18()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      Edge edge0 = new Edge(vertex0, vertex0, 0);
      Vertex vertex1 = new Vertex();
      graph0.addEdge(vertex0, vertex1, 0);
      graph0.addVertex(vertex1);
      graph0.addVertex(vertex1);
      graph0.addEdge(vertex1, vertex1, 0);
      assertEquals(Integer.MAX_VALUE, vertex1.VertexCycle);
      
      graph0.Prim(edge0.end);
      assertEquals(0, vertex0.key);
  }
}
