/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import smashed.RegionWorkSpace;
import smashed.Vertex;

@RunWith(EvoSuiteRunner.class)
public class TestRegionWorkSpace_2 {


  //Test case number: 2
  /*
   * 19 covered goals:
   * 1 Weak Mutation 11: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - DeleteField: counterI
   * 2 Weak Mutation 8: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp Negation
   * 3 Weak Mutation 9: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp +1
   * 4 Weak Mutation 10: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp -1
   * 5 Weak Mutation 12: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 13: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> -
   * 7 Weak Mutation 14: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 15: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> /
   * 9 Weak Mutation 16: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> *
   * 10 Weak Mutation 8: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp Negation
   * 11 Weak Mutation 9: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp +1
   * 12 Weak Mutation 10: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - InsertUnaryOp -1
   * 13 Weak Mutation 11: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - DeleteField: counterI
   * 14 Weak Mutation 12: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 13: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> -
   * 16 Weak Mutation 14: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 15: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> /
   * 18 Weak Mutation 16: smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V:32 - ReplaceArithmeticOperator + -> *
   * 19 smashed.RegionWorkSpace.nextRegionAction(Lsmashed/Vertex;)V: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      RegionWorkSpace regionWorkSpace0 = new RegionWorkSpace();
      regionWorkSpace0.counter = 0;
      regionWorkSpace0.counter = 1;
      regionWorkSpace0.nextRegionAction((Vertex) null);
      assertEquals(2, regionWorkSpace0.counter);
  }
}
