/*
 * This file was automatically generated by EvoSuite
 */

package smashed;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import smashed.Edge;
import smashed.FinishTimeWorkSpace;
import smashed.Graph;
import smashed.Vertex;
import smashed.WorkSpace;

@RunWith(EvoSuiteRunner.class)
public class TestGraph {


  //Test case number: 0
  /*
   * 115 covered goals:
   * 1 Weak Mutation 120: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 125: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteStatement: get(I)Ljava/lang/Object;
   * 3 Weak Mutation 124: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 123: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 122: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp Negation
   * 6 Weak Mutation 121: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteField: verticesLjava/util/LinkedList;
   * 7 Weak Mutation 127: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 8 Weak Mutation 126: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteField: nameLjava/lang/String;
   * 9 Weak Mutation 130: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - ReplaceComparisonOperator <= -> -1
   * 10 Weak Mutation 131: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V:48 - DeleteStatement: addAdjacent(Lsmashed/Vertex;)V
   * 11 Weak Mutation 133: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 132: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp Negation
   * 13 Weak Mutation 135: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V
   * 14 Weak Mutation 134: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 136: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:62 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V
   * 16 Weak Mutation 137: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp Negation
   * 17 Weak Mutation 139: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 138: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 140: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - DeleteStatement: addWeight(I)V
   * 20 smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V: root-Branch
   * 21 smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V: root-Branch
   * 22 smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V: root-Branch
   * 23 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I21 Branch 10 IF_ICMPGE L35 - false
   * 24 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I36 Branch 11 IFLE L38 - false
   * 25 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I128 Branch 54 IF_ICMPGE L703 - false
   * 26 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I153 Branch 55 IF_ICMPLE L709 - false
   * 27 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I184 Branch 56 IFLT L717 - true
   * 28 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I291 Branch 60 IFNONNULL L780 - true
   * 29 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I339 Branch 61 IFLE L800 - false
   * 30 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I351 Branch 62 IFNE L805 - true
   * 31 Weak Mutation 388: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - ReplaceComparisonOperator == -> -2
   * 32 Weak Mutation 110: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:28 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 111: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:32 - ReplaceComparisonOperator != null -> = null
   * 34 Weak Mutation 108: smashed.Graph.addVertex(Lsmashed/Vertex;)V:22 - DeleteField: verticesLjava/util/LinkedList;
   * 35 Weak Mutation 109: smashed.Graph.addVertex(Lsmashed/Vertex;)V:22 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 36 Weak Mutation 117: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - DeleteStatement: size()I
   * 37 Weak Mutation 116: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - DeleteField: verticesLjava/util/LinkedList;
   * 38 Weak Mutation 115: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 114: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 113: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp Negation
   * 41 Weak Mutation 112: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceConstant - 0 -> 1
   * 42 Weak Mutation 127: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 43 Weak Mutation 126: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteField: nameLjava/lang/String;
   * 44 Weak Mutation 125: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteStatement: get(I)Ljava/lang/Object;
   * 45 Weak Mutation 124: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC -1
   * 46 Weak Mutation 123: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC 1
   * 47 Weak Mutation 122: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp Negation
   * 48 Weak Mutation 121: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteField: verticesLjava/util/LinkedList;
   * 49 Weak Mutation 120: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceComparisonOperator >= -> -1
   * 50 Weak Mutation 137: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp Negation
   * 51 Weak Mutation 136: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:62 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V
   * 52 Weak Mutation 139: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 138: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC 1
   * 54 Weak Mutation 140: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - DeleteStatement: addWeight(I)V
   * 55 Weak Mutation 131: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V:48 - DeleteStatement: addAdjacent(Lsmashed/Vertex;)V
   * 56 Weak Mutation 130: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - ReplaceComparisonOperator <= -> -1
   * 57 Weak Mutation 133: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC 1
   * 58 Weak Mutation 132: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp Negation
   * 59 Weak Mutation 135: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V
   * 60 Weak Mutation 134: smashed.Graph.addAnEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:57 - InsertUnaryOp IINC -1
   * 61 Weak Mutation 351: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC 1
   * 62 Weak Mutation 350: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp Negation
   * 63 Weak Mutation 349: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC -1
   * 64 Weak Mutation 348: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 347: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp Negation
   * 66 Weak Mutation 346: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceConstant - 0 -> 1
   * 67 Weak Mutation 345: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:651 - DeleteStatement: size()I
   * 68 Weak Mutation 344: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:651 - DeleteField: verticesLjava/util/LinkedList;
   * 69 Weak Mutation 373: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC -1
   * 70 Weak Mutation 372: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC 1
   * 71 Weak Mutation 375: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceComparisonOperator >= -> >
   * 72 Weak Mutation 369: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC 1
   * 73 Weak Mutation 368: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp Negation
   * 74 Weak Mutation 371: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp Negation
   * 75 Weak Mutation 370: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC -1
   * 76 Weak Mutation 381: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - DeleteStatement: get(I)Ljava/lang/Object;
   * 77 Weak Mutation 380: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp IINC -1
   * 78 Weak Mutation 383: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp +1
   * 79 Weak Mutation 382: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp Negation
   * 80 Weak Mutation 377: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - DeleteField: verticesLjava/util/LinkedList;
   * 81 Weak Mutation 376: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceComparisonOperator >= -> -1
   * 82 Weak Mutation 379: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp IINC 1
   * 83 Weak Mutation 378: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp Negation
   * 84 Weak Mutation 356: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - DeleteField: verticesLjava/util/LinkedList;
   * 85 Weak Mutation 357: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp Negation
   * 86 Weak Mutation 358: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp IINC 1
   * 87 Weak Mutation 359: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp IINC -1
   * 88 Weak Mutation 352: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC -1
   * 89 Weak Mutation 354: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceComparisonOperator >= -> >
   * 90 Weak Mutation 355: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceComparisonOperator >= -> -1
   * 91 Weak Mutation 364: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 2147483646
   * 92 Weak Mutation 365: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> -2147483648
   * 93 Weak Mutation 366: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:665 - ReplaceConstant - 0 -> 1
   * 94 Weak Mutation 367: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceConstant - 0 -> 1
   * 95 Weak Mutation 360: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - DeleteStatement: get(I)Ljava/lang/Object;
   * 96 Weak Mutation 361: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 0
   * 97 Weak Mutation 362: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 1
   * 98 Weak Mutation 363: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> -1
   * 99 Weak Mutation 384: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp -1
   * 100 Weak Mutation 388: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - ReplaceComparisonOperator == -> -2
   * 101 smashed.Graph.addVertex(Lsmashed/Vertex;)V: root-Branch
   * 102 smashed.Graph.<init>()V: root-Branch
   * 103 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I7 Branch 9 IFNONNULL L32 - true
   * 104 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I17 Branch 50 IF_ICMPGE L658 - true
   * 105 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I17 Branch 50 IF_ICMPGE L658 - false
   * 106 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I69 Branch 51 IF_ICMPGE L673 - true
   * 107 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I69 Branch 51 IF_ICMPGE L673 - false
   * 108 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I82 Branch 52 IFEQ L676 - true
   * 109 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I102 Branch 53 IFEQ L691 - true
   * 110 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I102 Branch 53 IFEQ L691 - false
   * 111 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I128 Branch 54 IF_ICMPGE L703 - true
   * 112 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I238 Branch 58 IF_ICMPGE L760 - true
   * 113 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I238 Branch 58 IF_ICMPGE L760 - false
   * 114 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I272 Branch 59 IF_ICMPGE L772 - true
   * 115 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I272 Branch 59 IF_ICMPGE L772 - false
   */
  @Test
  public void test0()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      Vertex vertex1 = vertex0.assignName("");
      Edge edge0 = new Edge(vertex1, vertex0, 0);
      graph0.addVertex(edge0.end);
      graph0.addAnEdge(edge0.end, edge0.end, (-2147483647));
      graph0.ShortestPath(edge0.start);
      assertEquals(Integer.MAX_VALUE, vertex1.VertexCycle);
      assertEquals((-2147483647), vertex0.dweight);
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * 1 Weak Mutation 128: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - ReplaceComparisonOperator <= -> ==
   * 2 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I36 Branch 11 IFLE L38 - true
   * 3 Weak Mutation 119: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceComparisonOperator >= -> >
   * 4 Weak Mutation 119: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceComparisonOperator >= -> >
   * 5 Weak Mutation 128: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - ReplaceComparisonOperator <= -> ==
   * 6 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I21 Branch 10 IF_ICMPGE L35 - true
   */
  @Test
  public void test1()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      Vertex vertex1 = graph0.findsVertex(")&'");
      assertNull(vertex1);
  }

  //Test case number: 2
  /*
   * 40 covered goals:
   * 1 Weak Mutation 154: smashed.Graph.display()V:78 - ReplaceComparisonOperator >= -> -1
   * 2 Weak Mutation 155: smashed.Graph.display()V:80 - DeleteField: verticesLjava/util/LinkedList;
   * 3 Weak Mutation 156: smashed.Graph.display()V:80 - InsertUnaryOp Negation
   * 4 Weak Mutation 157: smashed.Graph.display()V:80 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 158: smashed.Graph.display()V:80 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 159: smashed.Graph.display()V:80 - DeleteStatement: get(I)Ljava/lang/Object;
   * 7 Weak Mutation 160: smashed.Graph.display()V:81 - DeleteStatement: display()V
   * 8 smashed.Graph.display()V: I17 Branch 12 IF_ICMPGE L78 - false
   * 9 Weak Mutation 141: smashed.Graph.display()V:74 - DeleteField: verticesLjava/util/LinkedList;
   * 10 Weak Mutation 143: smashed.Graph.display()V:77 - ReplaceConstant - Vertices  -> 
   * 11 Weak Mutation 142: smashed.Graph.display()V:74 - DeleteStatement: size()I
   * 12 Weak Mutation 153: smashed.Graph.display()V:78 - ReplaceComparisonOperator >= -> >
   * 13 Weak Mutation 144: smashed.Graph.display()V:77 - DeleteStatement: splPrint___(Ljava/lang/String;)V
   * 14 Weak Mutation 145: smashed.Graph.display()V:78 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 146: smashed.Graph.display()V:78 - InsertUnaryOp Negation
   * 16 Weak Mutation 147: smashed.Graph.display()V:78 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 148: smashed.Graph.display()V:78 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 149: smashed.Graph.display()V:78 - InsertUnaryOp Negation
   * 19 Weak Mutation 150: smashed.Graph.display()V:78 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 151: smashed.Graph.display()V:78 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 141: smashed.Graph.display()V:74 - DeleteField: verticesLjava/util/LinkedList;
   * 22 Weak Mutation 143: smashed.Graph.display()V:77 - ReplaceConstant - Vertices  -> 
   * 23 Weak Mutation 142: smashed.Graph.display()V:74 - DeleteStatement: size()I
   * 24 Weak Mutation 153: smashed.Graph.display()V:78 - ReplaceComparisonOperator >= -> >
   * 25 Weak Mutation 154: smashed.Graph.display()V:78 - ReplaceComparisonOperator >= -> -1
   * 26 Weak Mutation 155: smashed.Graph.display()V:80 - DeleteField: verticesLjava/util/LinkedList;
   * 27 Weak Mutation 156: smashed.Graph.display()V:80 - InsertUnaryOp Negation
   * 28 Weak Mutation 157: smashed.Graph.display()V:80 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 158: smashed.Graph.display()V:80 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 159: smashed.Graph.display()V:80 - DeleteStatement: get(I)Ljava/lang/Object;
   * 31 Weak Mutation 144: smashed.Graph.display()V:77 - DeleteStatement: splPrint___(Ljava/lang/String;)V
   * 32 Weak Mutation 145: smashed.Graph.display()V:78 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 146: smashed.Graph.display()V:78 - InsertUnaryOp Negation
   * 34 Weak Mutation 147: smashed.Graph.display()V:78 - InsertUnaryOp IINC 1
   * 35 Weak Mutation 148: smashed.Graph.display()V:78 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 149: smashed.Graph.display()V:78 - InsertUnaryOp Negation
   * 37 Weak Mutation 150: smashed.Graph.display()V:78 - InsertUnaryOp IINC 1
   * 38 Weak Mutation 151: smashed.Graph.display()V:78 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 160: smashed.Graph.display()V:81 - DeleteStatement: display()V
   * 40 smashed.Graph.display()V: I17 Branch 12 IF_ICMPGE L78 - true
   */
  @Test
  public void test2()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      graph0.display();
      assertEquals(false, graph0.CycleCheck());
  }

  //Test case number: 3
  /*
   * 16 covered goals:
   * 1 Weak Mutation 162: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteStatement: size()I
   * 2 Weak Mutation 161: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteField: verticesLjava/util/LinkedList;
   * 3 Weak Mutation 168: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> -1
   * 4 Weak Mutation 163: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp Negation
   * 5 Weak Mutation 165: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 164: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 206: smashed.Graph.ConnectedComponents()V:127 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 8 smashed.Graph.ConnectedComponents()V: root-Branch
   * 9 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I9 Branch 13 IFNE L92 - false
   * 10 Weak Mutation 168: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> -1
   * 11 Weak Mutation 163: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp Negation
   * 12 Weak Mutation 162: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteStatement: size()I
   * 13 Weak Mutation 161: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteField: verticesLjava/util/LinkedList;
   * 14 Weak Mutation 165: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 164: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 206: smashed.Graph.ConnectedComponents()V:127 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   */
  @Test
  public void test3()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.ConnectedComponents();
      assertEquals(0, graph0.ch);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 205: smashed.Graph.NumberVertices()V:123 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 2 smashed.Graph.NumberVertices()V: root-Branch
   * 3 Weak Mutation 205: smashed.Graph.NumberVertices()V:123 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   */
  @Test
  public void test4()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.NumberVertices();
      assertEquals(0, graph0.ch);
  }

  //Test case number: 5
  /*
   * 124 covered goals:
   * 1 Weak Mutation 3: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 2 Weak Mutation 7: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 3 Weak Mutation 17: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 4 Weak Mutation 21: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 5 Weak Mutation 9: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 25: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:153 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 24: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> -1
   * 8 Weak Mutation 0: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 9 Weak Mutation 1: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 10 Weak Mutation 2: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 11 Weak Mutation 3: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 12 Weak Mutation 4: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 13 Weak Mutation 5: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 14 Weak Mutation 6: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 15 Weak Mutation 7: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 16 Weak Mutation 9: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> <
   * 17 Weak Mutation 14: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 18 Weak Mutation 15: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 19 Weak Mutation 17: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 20 Weak Mutation 16: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 21 Weak Mutation 19: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 22 Weak Mutation 18: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 23 Weak Mutation 21: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 24 Weak Mutation 20: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 25 Weak Mutation 25: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:153 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 24: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> -1
   * 27 Weak Mutation 171: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 28 Weak Mutation 170: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 29 Weak Mutation 169: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 175: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 31 Weak Mutation 174: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 173: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 33 Weak Mutation 172: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 34 Weak Mutation 166: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> <
   * 35 Weak Mutation 186: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 36 Weak Mutation 187: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 37 Weak Mutation 184: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:98 - DeleteStatement: init_vertex(Lsmashed/WorkSpace;)V
   * 38 Weak Mutation 185: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 190: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 191: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 41 Weak Mutation 188: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 42 Weak Mutation 189: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 43 Weak Mutation 178: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> -1
   * 44 Weak Mutation 179: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteField: verticesLjava/util/LinkedList;
   * 45 Weak Mutation 177: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> >
   * 46 Weak Mutation 182: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC -1
   * 47 Weak Mutation 183: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteStatement: get(I)Ljava/lang/Object;
   * 48 Weak Mutation 180: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp Negation
   * 49 Weak Mutation 181: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC 1
   * 50 Weak Mutation 204: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:107 - DeleteStatement: nodeSearch(Lsmashed/Vertex;Lsmashed/WorkSpace;)V
   * 51 Weak Mutation 207: smashed.Graph.StrongComponents()Lsmashed/Graph;:137 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 52 Weak Mutation 200: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - InsertUnaryOp Negation
   * 53 Weak Mutation 203: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:106 - DeleteStatement: nextRegionAction(Lsmashed/Vertex;)V
   * 54 Weak Mutation 202: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - ReplaceComparisonOperator != -> ==
   * 55 Weak Mutation 197: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC 1
   * 56 Weak Mutation 196: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp Negation
   * 57 Weak Mutation 199: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteStatement: get(I)Ljava/lang/Object;
   * 58 Weak Mutation 198: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC -1
   * 59 Weak Mutation 193: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> >
   * 60 Weak Mutation 195: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteField: verticesLjava/util/LinkedList;
   * 61 Weak Mutation 194: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> -1
   * 62 Weak Mutation 220: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 63 Weak Mutation 221: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 64 Weak Mutation 222: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 223: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 66 Weak Mutation 216: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:178 - ReplaceConstant - 0 -> 1
   * 67 Weak Mutation 217: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 218: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 69 Weak Mutation 219: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 70 Weak Mutation 212: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 71 Weak Mutation 213: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 72 Weak Mutation 214: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteField: verticesLjava/util/LinkedList;
   * 73 Weak Mutation 215: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteStatement: size()I
   * 74 Weak Mutation 208: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteField: verticesLjava/util/LinkedList;
   * 75 Weak Mutation 209: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteStatement: sort(Ljava/util/List;Ljava/util/Comparator;)V
   * 76 Weak Mutation 210: smashed.Graph.StrongComponents()Lsmashed/Graph;:160 - DeleteStatement: ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;
   * 77 Weak Mutation 211: smashed.Graph.StrongComponents()Lsmashed/Graph;:164 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 78 Weak Mutation 239: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 79 Weak Mutation 238: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 80 Weak Mutation 237: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 81 Weak Mutation 236: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 82 Weak Mutation 235: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceConstant - 0 -> 1
   * 83 Weak Mutation 234: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: addVertex(Lsmashed/Vertex;)V
   * 84 Weak Mutation 233: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: assignName(Ljava/lang/String;)Lsmashed/Vertex;
   * 85 Weak Mutation 231: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteStatement: get(I)Ljava/lang/Object;
   * 86 Weak Mutation 230: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC -1
   * 87 Weak Mutation 229: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC 1
   * 88 Weak Mutation 228: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp Negation
   * 89 Weak Mutation 227: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: verticesLjava/util/LinkedList;
   * 90 Weak Mutation 226: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> -1
   * 91 Weak Mutation 225: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> >
   * 92 Weak Mutation 254: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - ReplaceConstant - 0 -> 1
   * 93 Weak Mutation 255: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp Negation
   * 94 Weak Mutation 253: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteStatement: findsVertex(Ljava/lang/String;)Lsmashed/Vertex;
   * 95 Weak Mutation 250: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 96 Weak Mutation 251: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteStatement: size()I
   * 97 Weak Mutation 248: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC -1
   * 98 Weak Mutation 249: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteStatement: get(I)Ljava/lang/Object;
   * 99 Weak Mutation 246: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp Negation
   * 100 Weak Mutation 247: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC 1
   * 101 Weak Mutation 244: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> -1
   * 102 Weak Mutation 245: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteField: verticesLjava/util/LinkedList;
   * 103 Weak Mutation 243: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> >
   * 104 Weak Mutation 240: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 105 Weak Mutation 241: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 106 Weak Mutation 256: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC 1
   * 107 Weak Mutation 257: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC -1
   * 108 smashed.Graph$1.<init>(Lsmashed/Graph;)V: root-Branch
   * 109 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 1 IF_ICMPLE L149 - true
   * 110 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 2 IF_ICMPNE L152 - false
   * 111 smashed.Graph.StrongComponents()Lsmashed/Graph;: root-Branch
   * 112 smashed.Graph.nodeSearch(Lsmashed/Vertex;Lsmashed/WorkSpace;)V: root-Branch
   * 113 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I9 Branch 13 IFNE L92 - true
   * 114 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I20 Branch 14 IF_ICMPGE L96 - true
   * 115 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I20 Branch 14 IF_ICMPGE L96 - false
   * 116 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I45 Branch 15 IF_ICMPGE L103 - true
   * 117 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I45 Branch 15 IF_ICMPGE L103 - false
   * 118 smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V: I58 Branch 16 IFNE L105 - false
   * 119 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I29 Branch 17 IF_ICMPGE L185 - true
   * 120 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I29 Branch 17 IF_ICMPGE L185 - false
   * 121 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I59 Branch 18 IF_ICMPGE L192 - true
   * 122 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I59 Branch 18 IF_ICMPGE L192 - false
   * 123 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I88 Branch 19 IF_ICMPGE L201 - true
   * 124 smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;: I7 Branch 9 IFNONNULL L32 - false
   */
  @Test
  public void test5()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      Edge edge0 = new Edge(vertex0, vertex0, (-238));
      graph0.addVertex(vertex0);
      FinishTimeWorkSpace finishTimeWorkSpace0 = new FinishTimeWorkSpace();
      edge0.start.dftNodeSearch((WorkSpace) finishTimeWorkSpace0);
      Graph graph1 = graph0.StrongComponents();
      assertNotSame(graph1, graph0);
  }

  //Test case number: 6
  /*
   * 31 covered goals:
   * 1 Weak Mutation 10: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 11: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> 0
   * 3 Weak Mutation 12: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 13: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> -2
   * 5 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 1 IF_ICMPLE L149 - false
   * 6 Weak Mutation 0: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 7 Weak Mutation 1: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 8 Weak Mutation 2: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 9 Weak Mutation 3: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 10 Weak Mutation 4: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp Negation
   * 11 Weak Mutation 5: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp +1
   * 12 Weak Mutation 6: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - InsertUnaryOp -1
   * 13 Weak Mutation 7: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - DeleteField: finishTimeI
   * 14 Weak Mutation 8: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> ==
   * 15 Weak Mutation 14: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 16 Weak Mutation 15: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 17 Weak Mutation 17: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - DeleteField: finishTimeI
   * 18 Weak Mutation 16: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 19 Weak Mutation 19: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp +1
   * 20 Weak Mutation 18: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp Negation
   * 21 Weak Mutation 20: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - InsertUnaryOp -1
   * 22 Weak Mutation 22: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> >
   * 23 Weak Mutation 26: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:154 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 8: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> ==
   * 25 Weak Mutation 10: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:149 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 11: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> 0
   * 27 Weak Mutation 12: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> 1
   * 28 Weak Mutation 13: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:150 - ReplaceConstant - -1 -> -2
   * 29 Weak Mutation 22: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:152 - ReplaceComparisonOperator != -> >
   * 30 Weak Mutation 26: smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I:154 - ReplaceConstant - 1 -> 0
   * 31 smashed.Graph$1.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 2 IF_ICMPNE L152 - true
   */
  @Test
  public void test6()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      vertex0.finishTime = (-1279);
      Vertex vertex1 = new Vertex();
      Vertex vertex2 = vertex1.assignName((String) null);
      graph0.addVertex(vertex2);
      graph0.StrongComponents();
      Graph graph1 = graph0.StrongComponents();
      assertNotSame(graph1, graph0);
  }

  //Test case number: 7
  /*
   * 21 covered goals:
   * 1 Weak Mutation 232: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: nameLjava/lang/String;
   * 2 Weak Mutation 252: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteField: nameLjava/lang/String;
   * 3 Weak Mutation 117: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - DeleteStatement: size()I
   * 4 Weak Mutation 116: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - DeleteField: verticesLjava/util/LinkedList;
   * 5 Weak Mutation 115: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 114: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 113: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - InsertUnaryOp Negation
   * 8 Weak Mutation 112: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 127: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 10 Weak Mutation 126: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - DeleteField: nameLjava/lang/String;
   * 11 Weak Mutation 125: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteStatement: get(I)Ljava/lang/Object;
   * 12 Weak Mutation 124: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 123: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp IINC 1
   * 14 Weak Mutation 122: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - InsertUnaryOp Negation
   * 15 Weak Mutation 121: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:37 - DeleteField: verticesLjava/util/LinkedList;
   * 16 Weak Mutation 120: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:35 - ReplaceComparisonOperator >= -> -1
   * 17 Weak Mutation 130: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:38 - ReplaceComparisonOperator <= -> -1
   * 18 Weak Mutation 211: smashed.Graph.StrongComponents()Lsmashed/Graph;:164 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 19 Weak Mutation 243: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> >
   * 20 Weak Mutation 232: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: nameLjava/lang/String;
   * 21 Weak Mutation 252: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test7()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      Edge edge0 = new Edge(vertex0, vertex0, (-238));
      edge0.start.assignName("");
      Graph graph1 = graph0.StrongComponents();
      assertEquals(0, graph1.ch);
  }

  //Test case number: 8
  /*
   * 6 covered goals:
   * 1 Weak Mutation 258: smashed.Graph.CycleCheck()Z:228 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 2 Weak Mutation 259: smashed.Graph.CycleCheck()Z:229 - InsertUnaryOp Negation
   * 3 smashed.Graph.CycleCheck()Z: root-Branch
   * 4 Weak Mutation 168: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> -1
   * 5 Weak Mutation 258: smashed.Graph.CycleCheck()Z:228 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 6 Weak Mutation 259: smashed.Graph.CycleCheck()Z:229 - InsertUnaryOp Negation
   */
  @Test
  public void test8()  throws Throwable  {
      Graph graph0 = new Graph();
      boolean boolean0 = graph0.CycleCheck();
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 60 covered goals:
   * 1 Weak Mutation 302: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - DeleteField: keyI
   * 2 Weak Mutation 303: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> >=
   * 3 Weak Mutation 306: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:263 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 4 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I76 Branch 22 IFEQ L262 - false
   * 5 Weak Mutation 275: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 274: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp Negation
   * 7 Weak Mutation 273: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteField: verticesLjava/util/LinkedList;
   * 8 Weak Mutation 272: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> -1
   * 9 Weak Mutation 279: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 1
   * 10 Weak Mutation 278: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 0
   * 11 Weak Mutation 277: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteStatement: get(I)Ljava/lang/Object;
   * 12 Weak Mutation 276: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 283: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:251 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 282: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -2147483648
   * 15 Weak Mutation 281: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 2147483646
   * 16 Weak Mutation 280: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -1
   * 17 Weak Mutation 287: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 286: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 285: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 20 Weak Mutation 284: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 262: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteStatement: size()I
   * 22 Weak Mutation 263: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 261: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteField: verticesLjava/util/LinkedList;
   * 24 Weak Mutation 266: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 267: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 26 Weak Mutation 264: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 27 Weak Mutation 265: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 28 Weak Mutation 271: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> >
   * 29 Weak Mutation 268: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 30 Weak Mutation 269: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 31 Weak Mutation 305: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> -2
   * 32 Weak Mutation 306: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:263 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 33 Weak Mutation 288: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 34 Weak Mutation 289: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 35 Weak Mutation 290: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 292: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> >
   * 37 Weak Mutation 293: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> -1
   * 38 Weak Mutation 294: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteField: verticesLjava/util/LinkedList;
   * 39 Weak Mutation 295: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp Negation
   * 40 Weak Mutation 296: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC 1
   * 41 Weak Mutation 297: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC -1
   * 42 Weak Mutation 298: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteStatement: get(I)Ljava/lang/Object;
   * 43 Weak Mutation 299: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp Negation
   * 44 Weak Mutation 300: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp +1
   * 45 Weak Mutation 301: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp -1
   * 46 Weak Mutation 302: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - DeleteField: keyI
   * 47 Weak Mutation 303: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> >=
   * 48 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I17 Branch 20 IF_ICMPGE L243 - true
   * 49 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I17 Branch 20 IF_ICMPGE L243 - false
   * 50 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I63 Branch 21 IF_ICMPGE L259 - true
   * 51 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I63 Branch 21 IF_ICMPGE L259 - false
   * 52 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I76 Branch 22 IFEQ L262 - true
   * 53 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I100 Branch 23 IFEQ L279 - true
   * 54 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I100 Branch 23 IFEQ L279 - false
   * 55 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I120 Branch 24 IF_ICMPGE L288 - true
   * 56 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I234 Branch 29 IF_ICMPGE L357 - true
   * 57 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I234 Branch 29 IF_ICMPGE L357 - false
   * 58 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I268 Branch 30 IF_ICMPGE L369 - true
   * 59 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I268 Branch 30 IF_ICMPGE L369 - false
   * 60 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I287 Branch 31 IFNONNULL L377 - false
   */
  @Test
  public void test9()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      Graph graph1 = graph0.Prim(vertex0);
      graph1.Prim(vertex0);
      assertEquals(Integer.MAX_VALUE, vertex0.VertexCycle);
  }

  //Test case number: 10
  /*
   * 99 covered goals:
   * 1 Weak Mutation 62: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 77: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> <
   * 3 Weak Mutation 80: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:466 - ReplaceConstant - 1 -> 0
   * 4 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 6 IF_ICMPNE L464 - true
   * 5 Weak Mutation 55: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 6 Weak Mutation 54: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 7 Weak Mutation 59: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 8 Weak Mutation 58: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 9 Weak Mutation 57: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - DeleteField: weightI
   * 10 Weak Mutation 56: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 11 Weak Mutation 63: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> >
   * 12 Weak Mutation 61: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - DeleteField: weightI
   * 13 Weak Mutation 60: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 14 Weak Mutation 68: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 15 Weak Mutation 69: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 16 Weak Mutation 70: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 17 Weak Mutation 71: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - DeleteField: weightI
   * 18 Weak Mutation 64: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> -1
   * 19 Weak Mutation 65: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> 0
   * 20 Weak Mutation 66: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> 1
   * 21 Weak Mutation 67: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> -2
   * 22 Weak Mutation 78: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> -1
   * 23 Weak Mutation 79: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:465 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 72: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 25 Weak Mutation 73: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 26 Weak Mutation 74: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 27 Weak Mutation 75: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - DeleteField: weightI
   * 28 Weak Mutation 55: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 29 Weak Mutation 54: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 30 Weak Mutation 59: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp +1
   * 31 Weak Mutation 58: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp Negation
   * 32 Weak Mutation 57: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - DeleteField: weightI
   * 33 Weak Mutation 56: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 34 Weak Mutation 63: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> >
   * 35 Weak Mutation 62: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> ==
   * 36 Weak Mutation 61: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - DeleteField: weightI
   * 37 Weak Mutation 60: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - InsertUnaryOp -1
   * 38 Weak Mutation 68: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 39 Weak Mutation 69: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 40 Weak Mutation 70: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 41 Weak Mutation 71: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - DeleteField: weightI
   * 42 Weak Mutation 64: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:462 - ReplaceComparisonOperator >= -> -1
   * 43 Weak Mutation 65: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> 0
   * 44 Weak Mutation 66: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> 1
   * 45 Weak Mutation 67: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:463 - ReplaceConstant - -1 -> -2
   * 46 Weak Mutation 77: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> <
   * 47 Weak Mutation 78: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - ReplaceComparisonOperator != -> -1
   * 48 Weak Mutation 79: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:465 - ReplaceConstant - 0 -> 1
   * 49 Weak Mutation 72: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp Negation
   * 50 Weak Mutation 73: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp +1
   * 51 Weak Mutation 74: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - InsertUnaryOp -1
   * 52 Weak Mutation 75: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:464 - DeleteField: weightI
   * 53 Weak Mutation 80: smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I:466 - ReplaceConstant - 1 -> 0
   * 54 Weak Mutation 307: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteField: verticesLjava/util/LinkedList;
   * 55 Weak Mutation 309: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceConstant - 0 -> 1
   * 56 Weak Mutation 308: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteStatement: size()I
   * 57 Weak Mutation 311: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 58 Weak Mutation 310: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 59 Weak Mutation 313: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 60 Weak Mutation 312: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 61 Weak Mutation 315: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 62 Weak Mutation 314: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 63 Weak Mutation 317: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> >
   * 64 Weak Mutation 319: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteField: verticesLjava/util/LinkedList;
   * 65 Weak Mutation 318: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> -1
   * 66 Weak Mutation 343: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteStatement: size()I
   * 67 Weak Mutation 342: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 68 Weak Mutation 341: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteStatement: get(I)Ljava/lang/Object;
   * 69 Weak Mutation 340: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC -1
   * 70 Weak Mutation 339: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC 1
   * 71 Weak Mutation 338: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp Negation
   * 72 Weak Mutation 337: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteField: verticesLjava/util/LinkedList;
   * 73 Weak Mutation 336: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> -1
   * 74 Weak Mutation 326: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 75 Weak Mutation 327: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceConstant - 0 -> 1
   * 76 Weak Mutation 324: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 325: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 78 Weak Mutation 322: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC -1
   * 79 Weak Mutation 323: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteStatement: get(I)Ljava/lang/Object;
   * 80 Weak Mutation 320: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp Negation
   * 81 Weak Mutation 321: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC 1
   * 82 Weak Mutation 335: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> >
   * 83 Weak Mutation 332: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 84 Weak Mutation 333: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 85 Weak Mutation 330: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 86 Weak Mutation 331: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 87 Weak Mutation 328: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 88 Weak Mutation 329: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 89 smashed.Graph$3.<init>(Lsmashed/Graph;)V: root-Branch
   * 90 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 5 IF_ICMPGE L462 - true
   * 91 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I16 Branch 5 IF_ICMPGE L462 - false
   * 92 smashed.Graph$3.compare(Ljava/lang/Object;Ljava/lang/Object;)I: I27 Branch 6 IF_ICMPNE L464 - false
   * 93 smashed.Graph.Kruskal()Lsmashed/Graph;: I19 Branch 35 IF_ICMPGE L427 - true
   * 94 smashed.Graph.Kruskal()Lsmashed/Graph;: I19 Branch 35 IF_ICMPGE L427 - false
   * 95 smashed.Graph.Kruskal()Lsmashed/Graph;: I71 Branch 36 IF_ICMPGE L442 - true
   * 96 smashed.Graph.Kruskal()Lsmashed/Graph;: I71 Branch 36 IF_ICMPGE L442 - false
   * 97 smashed.Graph.Kruskal()Lsmashed/Graph;: I93 Branch 37 IF_ICMPGE L446 - true
   * 98 smashed.Graph.Kruskal()Lsmashed/Graph;: I93 Branch 37 IF_ICMPGE L446 - false
   * 99 smashed.Graph.Kruskal()Lsmashed/Graph;: I142 Branch 38 IF_ICMPGE L475 - false
   */
  @Test
  public void test10()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addEdge(vertex0, vertex0, (-1));
      graph0.addEdge(vertex0, vertex0, 0);
      graph0.addVertex(vertex0);
      graph0.addVertex(vertex0);
      // Undeclared exception!
      try {
        graph0.Kruskal();
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  //Test case number: 11
  /*
   * 47 covered goals:
   * 1 Weak Mutation 386: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 385: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - DeleteField: dweightI
   * 3 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I82 Branch 52 IFEQ L676 - false
   * 4 Weak Mutation 275: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 274: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp Negation
   * 6 Weak Mutation 273: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteField: verticesLjava/util/LinkedList;
   * 7 Weak Mutation 272: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> -1
   * 8 Weak Mutation 279: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 1
   * 9 Weak Mutation 278: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 0
   * 10 Weak Mutation 277: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - DeleteStatement: get(I)Ljava/lang/Object;
   * 11 Weak Mutation 276: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:245 - InsertUnaryOp IINC -1
   * 12 Weak Mutation 282: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -2147483648
   * 13 Weak Mutation 281: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> 2147483646
   * 14 Weak Mutation 280: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:247 - ReplaceConstant - 2147483647 -> -1
   * 15 Weak Mutation 305: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - ReplaceComparisonOperator == -> -2
   * 16 Weak Mutation 293: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> -1
   * 17 Weak Mutation 294: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteField: verticesLjava/util/LinkedList;
   * 18 Weak Mutation 295: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp Negation
   * 19 Weak Mutation 296: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 297: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 298: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:261 - DeleteStatement: get(I)Ljava/lang/Object;
   * 22 Weak Mutation 299: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp Negation
   * 23 Weak Mutation 300: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp +1
   * 24 Weak Mutation 301: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:262 - InsertUnaryOp -1
   * 25 Weak Mutation 381: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - DeleteStatement: get(I)Ljava/lang/Object;
   * 26 Weak Mutation 380: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 383: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp +1
   * 28 Weak Mutation 382: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp Negation
   * 29 Weak Mutation 377: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - DeleteField: verticesLjava/util/LinkedList;
   * 30 Weak Mutation 376: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceComparisonOperator >= -> -1
   * 31 Weak Mutation 379: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 378: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:675 - InsertUnaryOp Negation
   * 33 Weak Mutation 356: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - DeleteField: verticesLjava/util/LinkedList;
   * 34 Weak Mutation 357: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp Negation
   * 35 Weak Mutation 358: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 359: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - InsertUnaryOp IINC -1
   * 37 Weak Mutation 355: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceComparisonOperator >= -> -1
   * 38 Weak Mutation 364: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 2147483646
   * 39 Weak Mutation 365: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> -2147483648
   * 40 Weak Mutation 360: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:660 - DeleteStatement: get(I)Ljava/lang/Object;
   * 41 Weak Mutation 361: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 0
   * 42 Weak Mutation 362: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> 1
   * 43 Weak Mutation 363: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:662 - ReplaceConstant - 2147483647 -> -1
   * 44 Weak Mutation 384: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - InsertUnaryOp -1
   * 45 Weak Mutation 386: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - ReplaceComparisonOperator == -> >=
   * 46 Weak Mutation 385: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:676 - DeleteField: dweightI
   * 47 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I291 Branch 60 IFNONNULL L780 - false
   */
  @Test
  public void test11()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addVertex(vertex0);
      Graph graph1 = graph0.Prim(vertex0);
      Edge edge0 = new Edge(vertex0, vertex0, (-238));
      graph1.ShortestPath(edge0.end);
      assertEquals(Integer.MAX_VALUE, vertex0.VertexCycle);
  }

  //Test case number: 12
  /*
   * 15 covered goals:
   * 1 Weak Mutation 395: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 2 Weak Mutation 394: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - ReplaceConstant -  cannot be read -> 
   * 3 Weak Mutation 393: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 392: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 397: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: splPrint___(Ljava/lang/String;)V
   * 6 Weak Mutation 396: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: toString()Ljava/lang/String;
   * 7 Weak Mutation 391: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - ReplaceConstant - Your file  -> 
   * 8 smashed.Graph.runBenchmark(Ljava/lang/String;)V: root-Branch
   * 9 Weak Mutation 395: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 394: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - ReplaceConstant -  cannot be read -> 
   * 11 Weak Mutation 393: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 392: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 13 Weak Mutation 397: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: splPrint___(Ljava/lang/String;)V
   * 14 Weak Mutation 396: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - DeleteStatement: toString()Ljava/lang/String;
   * 15 Weak Mutation 391: smashed.Graph.runBenchmark(Ljava/lang/String;)V:840 - ReplaceConstant - Your file  -> 
   */
  @Test
  public void test12()  throws Throwable  {
      Graph graph0 = new Graph();
      graph0.runBenchmark("");
      assertEquals(false, graph0.CycleCheck());
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Weak Mutation 399: smashed.Graph.stopBenchmark()V:849 - DeleteStatement: close()V
   * 2 smashed.Graph.stopBenchmark()V: root-Branch
   * 3 Weak Mutation 399: smashed.Graph.stopBenchmark()V:849 - DeleteStatement: close()V
   */
  @Test
  public void test13()  throws Throwable  {
      Graph graph0 = new Graph();
      // Undeclared exception!
      try {
        graph0.stopBenchmark();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 14
  /*
   * 80 covered goals:
   * 1 Weak Mutation 407: smashed.Graph.readNumber()I:860 - DeleteField: inFileLjava/io/Reader;
   * 2 Weak Mutation 410: smashed.Graph.readNumber()I:861 - InsertUnaryOp IINC 1
   * 3 Weak Mutation 411: smashed.Graph.readNumber()I:861 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 409: smashed.Graph.readNumber()I:861 - InsertUnaryOp Negation
   * 5 Weak Mutation 414: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> -1
   * 6 Weak Mutation 415: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 31
   * 7 Weak Mutation 412: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 0
   * 8 Weak Mutation 413: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 1
   * 9 Weak Mutation 417: smashed.Graph.readNumber()I:861 - ReplaceComparisonOperator != -> >
   * 10 Weak Mutation 416: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 33
   * 11 Weak Mutation 425: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> 0
   * 12 Weak Mutation 424: smashed.Graph.readNumber()I:865 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 427: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> -2
   * 14 Weak Mutation 426: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> 1
   * 15 Weak Mutation 429: smashed.Graph.readNumber()I:865 - ReplaceComparisonOperator == -> -2
   * 16 Weak Mutation 423: smashed.Graph.readNumber()I:865 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 422: smashed.Graph.readNumber()I:865 - InsertUnaryOp Negation
   * 18 Weak Mutation 464: smashed.Graph.readNumber()I:870 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 463: smashed.Graph.readNumber()I:870 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 462: smashed.Graph.readNumber()I:870 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 461: smashed.Graph.readNumber()I:870 - InsertUnaryOp Negation
   * 22 Weak Mutation 468: smashed.Graph.readNumber()I:874 - DeleteStatement: trim()Ljava/lang/String;
   * 23 Weak Mutation 466: smashed.Graph.readNumber()I:874 - InsertUnaryOp Negation
   * 24 Weak Mutation 467: smashed.Graph.readNumber()I:874 - DeleteStatement: substring(II)Ljava/lang/String;
   * 25 Weak Mutation 465: smashed.Graph.readNumber()I:874 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 474: smashed.Graph.readNumber()I:875 - DeleteStatement: parseInt(Ljava/lang/String;I)I
   * 27 Weak Mutation 472: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 9
   * 28 Weak Mutation 473: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 11
   * 29 Weak Mutation 470: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 1
   * 30 Weak Mutation 471: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> -1
   * 31 Weak Mutation 469: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 0
   * 32 smashed.Graph.readNumber()I: I23 Branch 64 IF_ICMPNE L861 - true
   * 33 smashed.Graph.readNumber()I: I35 Branch 65 IF_ICMPEQ L865 - true
   * 34 Weak Mutation 408: smashed.Graph.readNumber()I:860 - DeleteStatement: read()I
   * 35 Weak Mutation 402: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 1
   * 36 Weak Mutation 403: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> -1
   * 37 Weak Mutation 400: smashed.Graph.readNumber()I:856 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 401: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 0
   * 39 Weak Mutation 406: smashed.Graph.readNumber()I:858 - ReplaceConstant - 0 -> 1
   * 40 Weak Mutation 404: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 79
   * 41 Weak Mutation 405: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 81
   * 42 Weak Mutation 410: smashed.Graph.readNumber()I:861 - InsertUnaryOp IINC 1
   * 43 Weak Mutation 411: smashed.Graph.readNumber()I:861 - InsertUnaryOp IINC -1
   * 44 Weak Mutation 408: smashed.Graph.readNumber()I:860 - DeleteStatement: read()I
   * 45 Weak Mutation 409: smashed.Graph.readNumber()I:861 - InsertUnaryOp Negation
   * 46 Weak Mutation 414: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> -1
   * 47 Weak Mutation 415: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 31
   * 48 Weak Mutation 412: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 0
   * 49 Weak Mutation 413: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 1
   * 50 Weak Mutation 402: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 1
   * 51 Weak Mutation 403: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> -1
   * 52 Weak Mutation 400: smashed.Graph.readNumber()I:856 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 401: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 0
   * 54 Weak Mutation 406: smashed.Graph.readNumber()I:858 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 407: smashed.Graph.readNumber()I:860 - DeleteField: inFileLjava/io/Reader;
   * 56 Weak Mutation 404: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 79
   * 57 Weak Mutation 405: smashed.Graph.readNumber()I:857 - ReplaceConstant - 80 -> 81
   * 58 Weak Mutation 425: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> 0
   * 59 Weak Mutation 424: smashed.Graph.readNumber()I:865 - InsertUnaryOp IINC -1
   * 60 Weak Mutation 427: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> -2
   * 61 Weak Mutation 426: smashed.Graph.readNumber()I:865 - ReplaceConstant - -1 -> 1
   * 62 Weak Mutation 429: smashed.Graph.readNumber()I:865 - ReplaceComparisonOperator == -> -2
   * 63 Weak Mutation 417: smashed.Graph.readNumber()I:861 - ReplaceComparisonOperator != -> >
   * 64 Weak Mutation 416: smashed.Graph.readNumber()I:861 - ReplaceConstant - 32 -> 33
   * 65 Weak Mutation 423: smashed.Graph.readNumber()I:865 - InsertUnaryOp IINC 1
   * 66 Weak Mutation 422: smashed.Graph.readNumber()I:865 - InsertUnaryOp Negation
   * 67 Weak Mutation 474: smashed.Graph.readNumber()I:875 - DeleteStatement: parseInt(Ljava/lang/String;I)I
   * 68 Weak Mutation 472: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 9
   * 69 Weak Mutation 473: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 11
   * 70 Weak Mutation 470: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 1
   * 71 Weak Mutation 471: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> -1
   * 72 Weak Mutation 468: smashed.Graph.readNumber()I:874 - DeleteStatement: trim()Ljava/lang/String;
   * 73 Weak Mutation 469: smashed.Graph.readNumber()I:875 - ReplaceConstant - 10 -> 0
   * 74 Weak Mutation 466: smashed.Graph.readNumber()I:874 - InsertUnaryOp Negation
   * 75 Weak Mutation 467: smashed.Graph.readNumber()I:874 - DeleteStatement: substring(II)Ljava/lang/String;
   * 76 Weak Mutation 464: smashed.Graph.readNumber()I:870 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 465: smashed.Graph.readNumber()I:874 - ReplaceConstant - 0 -> 1
   * 78 Weak Mutation 463: smashed.Graph.readNumber()I:870 - InsertUnaryOp IINC -1
   * 79 Weak Mutation 462: smashed.Graph.readNumber()I:870 - InsertUnaryOp IINC 1
   * 80 Weak Mutation 461: smashed.Graph.readNumber()I:870 - InsertUnaryOp Negation
   */
  @Test
  public void test14()  throws Throwable  {
      Graph graph0 = new Graph();
      StringReader stringReader0 = new StringReader("");
      graph0.inFile = (Reader) stringReader0;
      // Undeclared exception!
      try {
        graph0.readNumber();
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * For input string: \"\"
         */
      }
  }

  //Test case number: 15
  /*
   * 87 covered goals:
   * 1 smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;: I88 Branch 19 IF_ICMPGE L201 - false
   * 2 Weak Mutation 110: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:28 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 111: smashed.Graph.findsVertex(Ljava/lang/String;)Lsmashed/Vertex;:32 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 171: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 170: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 6 Weak Mutation 169: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 175: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 8 Weak Mutation 174: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 173: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp Negation
   * 10 Weak Mutation 172: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 163: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp Negation
   * 12 Weak Mutation 162: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteStatement: size()I
   * 13 Weak Mutation 161: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:91 - DeleteField: verticesLjava/util/LinkedList;
   * 14 Weak Mutation 166: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - ReplaceComparisonOperator != -> <
   * 15 Weak Mutation 165: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 164: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:92 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 186: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 18 Weak Mutation 187: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 184: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:98 - DeleteStatement: init_vertex(Lsmashed/WorkSpace;)V
   * 20 Weak Mutation 185: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 190: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 191: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 188: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 189: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - InsertUnaryOp Negation
   * 25 Weak Mutation 178: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> -1
   * 26 Weak Mutation 179: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteField: verticesLjava/util/LinkedList;
   * 27 Weak Mutation 177: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:96 - ReplaceComparisonOperator >= -> >
   * 28 Weak Mutation 182: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC -1
   * 29 Weak Mutation 183: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - DeleteStatement: get(I)Ljava/lang/Object;
   * 30 Weak Mutation 180: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp Negation
   * 31 Weak Mutation 181: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:97 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 204: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:107 - DeleteStatement: nodeSearch(Lsmashed/Vertex;Lsmashed/WorkSpace;)V
   * 33 Weak Mutation 207: smashed.Graph.StrongComponents()Lsmashed/Graph;:137 - DeleteStatement: GraphSearch(Lsmashed/WorkSpace;)V
   * 34 Weak Mutation 200: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - InsertUnaryOp Negation
   * 35 Weak Mutation 203: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:106 - DeleteStatement: nextRegionAction(Lsmashed/Vertex;)V
   * 36 Weak Mutation 202: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:105 - ReplaceComparisonOperator != -> ==
   * 37 Weak Mutation 197: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC 1
   * 38 Weak Mutation 196: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp Negation
   * 39 Weak Mutation 199: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteStatement: get(I)Ljava/lang/Object;
   * 40 Weak Mutation 198: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - InsertUnaryOp IINC -1
   * 41 Weak Mutation 193: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> >
   * 42 Weak Mutation 195: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:104 - DeleteField: verticesLjava/util/LinkedList;
   * 43 Weak Mutation 194: smashed.Graph.GraphSearch(Lsmashed/WorkSpace;)V:103 - ReplaceComparisonOperator >= -> -1
   * 44 Weak Mutation 220: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 45 Weak Mutation 221: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 46 Weak Mutation 222: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 47 Weak Mutation 223: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC -1
   * 48 Weak Mutation 216: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:178 - ReplaceConstant - 0 -> 1
   * 49 Weak Mutation 217: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceConstant - 0 -> 1
   * 50 Weak Mutation 218: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp Negation
   * 51 Weak Mutation 219: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 212: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 213: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:174 - ReplaceConstant - 0 -> 1
   * 54 Weak Mutation 214: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteField: verticesLjava/util/LinkedList;
   * 55 Weak Mutation 215: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:175 - DeleteStatement: size()I
   * 56 Weak Mutation 208: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteField: verticesLjava/util/LinkedList;
   * 57 Weak Mutation 209: smashed.Graph.StrongComponents()Lsmashed/Graph;:140 - DeleteStatement: sort(Ljava/util/List;Ljava/util/Comparator;)V
   * 58 Weak Mutation 210: smashed.Graph.StrongComponents()Lsmashed/Graph;:160 - DeleteStatement: ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;
   * 59 Weak Mutation 239: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 60 Weak Mutation 238: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 61 Weak Mutation 237: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 62 Weak Mutation 236: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp Negation
   * 63 Weak Mutation 235: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceConstant - 0 -> 1
   * 64 Weak Mutation 234: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: addVertex(Lsmashed/Vertex;)V
   * 65 Weak Mutation 233: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:188 - DeleteStatement: assignName(Ljava/lang/String;)Lsmashed/Vertex;
   * 66 Weak Mutation 231: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteStatement: get(I)Ljava/lang/Object;
   * 67 Weak Mutation 230: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC -1
   * 68 Weak Mutation 229: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp IINC 1
   * 69 Weak Mutation 228: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - InsertUnaryOp Negation
   * 70 Weak Mutation 227: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:187 - DeleteField: verticesLjava/util/LinkedList;
   * 71 Weak Mutation 226: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> -1
   * 72 Weak Mutation 225: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:185 - ReplaceComparisonOperator >= -> >
   * 73 Weak Mutation 254: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - ReplaceConstant - 0 -> 1
   * 74 Weak Mutation 255: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp Negation
   * 75 Weak Mutation 253: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:198 - DeleteStatement: findsVertex(Ljava/lang/String;)Lsmashed/Vertex;
   * 76 Weak Mutation 250: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 77 Weak Mutation 251: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:195 - DeleteStatement: size()I
   * 78 Weak Mutation 248: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC -1
   * 79 Weak Mutation 249: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteStatement: get(I)Ljava/lang/Object;
   * 80 Weak Mutation 246: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp Negation
   * 81 Weak Mutation 247: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - InsertUnaryOp IINC 1
   * 82 Weak Mutation 244: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - ReplaceComparisonOperator >= -> -1
   * 83 Weak Mutation 245: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:194 - DeleteField: verticesLjava/util/LinkedList;
   * 84 Weak Mutation 240: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC 1
   * 85 Weak Mutation 241: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:192 - InsertUnaryOp IINC -1
   * 86 Weak Mutation 256: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC 1
   * 87 Weak Mutation 257: smashed.Graph.ComputeTranspose(Lsmashed/Graph;)Lsmashed/Graph;:201 - InsertUnaryOp IINC -1
   */
  @Test
  public void test15()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addEdge(vertex0, vertex0, (-1));
      graph0.addVertex(vertex0);
      // Undeclared exception!
      try {
        graph0.StrongComponents();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 16
  /*
   * 22 covered goals:
   * 1 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I120 Branch 24 IF_ICMPGE L288 - false
   * 2 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I141 Branch 25 IFLT L297 - true
   * 3 smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;: I158 Branch 26 IFEQ L303 - true
   * 4 Weak Mutation 283: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:251 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 287: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 286: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 285: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 8 Weak Mutation 284: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 262: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteStatement: size()I
   * 10 Weak Mutation 263: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 261: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:238 - DeleteField: verticesLjava/util/LinkedList;
   * 12 Weak Mutation 266: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 267: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 14 Weak Mutation 264: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp Negation
   * 15 Weak Mutation 265: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 271: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - ReplaceComparisonOperator >= -> >
   * 17 Weak Mutation 268: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 269: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:243 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 288: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp Negation
   * 20 Weak Mutation 289: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 290: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - InsertUnaryOp IINC -1
   * 22 Weak Mutation 292: smashed.Graph.Prim(Lsmashed/Vertex;)Lsmashed/Graph;:259 - ReplaceComparisonOperator >= -> >
   */
  @Test
  public void test16()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addEdge(vertex0, vertex0, (-1));
      Graph graph1 = graph0.Prim(vertex0);
      assertEquals(0, vertex0.key);
      assertNotNull(graph1);
  }

  //Test case number: 17
  /*
   * 42 covered goals:
   * 1 smashed.Graph.Kruskal()Lsmashed/Graph;: I169 Branch 39 IFGT L482 - true
   * 2 Weak Mutation 108: smashed.Graph.addVertex(Lsmashed/Vertex;)V:22 - DeleteField: verticesLjava/util/LinkedList;
   * 3 Weak Mutation 109: smashed.Graph.addVertex(Lsmashed/Vertex;)V:22 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 4 Weak Mutation 307: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteField: verticesLjava/util/LinkedList;
   * 5 Weak Mutation 309: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 308: smashed.Graph.Kruskal()Lsmashed/Graph;:423 - DeleteStatement: size()I
   * 7 Weak Mutation 311: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 310: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 9 Weak Mutation 313: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp Negation
   * 10 Weak Mutation 312: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 315: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC -1
   * 12 Weak Mutation 314: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 317: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> >
   * 14 Weak Mutation 319: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteField: verticesLjava/util/LinkedList;
   * 15 Weak Mutation 318: smashed.Graph.Kruskal()Lsmashed/Graph;:427 - ReplaceComparisonOperator >= -> -1
   * 16 Weak Mutation 343: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteStatement: size()I
   * 17 Weak Mutation 342: smashed.Graph.Kruskal()Lsmashed/Graph;:445 - DeleteField: adjacentVerticesLjava/util/LinkedList;
   * 18 Weak Mutation 341: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteStatement: get(I)Ljava/lang/Object;
   * 19 Weak Mutation 340: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 339: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 338: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - InsertUnaryOp Negation
   * 22 Weak Mutation 337: smashed.Graph.Kruskal()Lsmashed/Graph;:444 - DeleteField: verticesLjava/util/LinkedList;
   * 23 Weak Mutation 336: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> -1
   * 24 Weak Mutation 326: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 327: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 324: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 325: smashed.Graph.Kruskal()Lsmashed/Graph;:441 - ReplaceConstant - 0 -> 1
   * 28 Weak Mutation 322: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC -1
   * 29 Weak Mutation 323: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - DeleteStatement: get(I)Ljava/lang/Object;
   * 30 Weak Mutation 320: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp Negation
   * 31 Weak Mutation 321: smashed.Graph.Kruskal()Lsmashed/Graph;:429 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 335: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - ReplaceComparisonOperator >= -> >
   * 33 Weak Mutation 332: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 34 Weak Mutation 333: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 330: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 331: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 37 Weak Mutation 328: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp Negation
   * 38 Weak Mutation 329: smashed.Graph.Kruskal()Lsmashed/Graph;:442 - InsertUnaryOp IINC 1
   * 39 smashed.Graph.Kruskal()Lsmashed/Graph;: I142 Branch 38 IF_ICMPGE L475 - true
   * 40 smashed.Graph.Kruskal()Lsmashed/Graph;: I351 Branch 45 IF_ICMPGE L535 - true
   * 41 smashed.Graph.Kruskal()Lsmashed/Graph;: I351 Branch 45 IF_ICMPGE L535 - false
   * 42 smashed.Graph.Kruskal()Lsmashed/Graph;: I386 Branch 46 IF_ICMPGE L547 - true
   */
  @Test
  public void test17()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addEdge(vertex0, vertex0, (-1));
      graph0.addVertex(vertex0);
      Edge edge0 = new Edge(vertex0, vertex0, (-238));
      edge0.start.assignName("");
      Graph graph1 = graph0.Kruskal();
      assertEquals(0, graph1.ch);
  }

  //Test case number: 18
  /*
   * 26 covered goals:
   * 1 smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;: I153 Branch 55 IF_ICMPLE L709 - true
   * 2 Weak Mutation 137: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp Negation
   * 3 Weak Mutation 136: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:62 - DeleteStatement: addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V
   * 4 Weak Mutation 139: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 138: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 140: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;I)V:63 - DeleteStatement: addWeight(I)V
   * 7 Weak Mutation 131: smashed.Graph.addEdge(Lsmashed/Vertex;Lsmashed/Vertex;)V:48 - DeleteStatement: addAdjacent(Lsmashed/Vertex;)V
   * 8 Weak Mutation 351: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 350: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp Negation
   * 10 Weak Mutation 349: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 348: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 347: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp Negation
   * 13 Weak Mutation 346: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 345: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:651 - DeleteStatement: size()I
   * 15 Weak Mutation 344: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:651 - DeleteField: verticesLjava/util/LinkedList;
   * 16 Weak Mutation 373: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC -1
   * 17 Weak Mutation 372: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 375: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceComparisonOperator >= -> >
   * 19 Weak Mutation 369: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 368: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp Negation
   * 21 Weak Mutation 371: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp Negation
   * 22 Weak Mutation 370: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 352: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 354: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:658 - ReplaceComparisonOperator >= -> >
   * 25 Weak Mutation 366: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:665 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 367: smashed.Graph.ShortestPath(Lsmashed/Vertex;)Lsmashed/Graph;:673 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test18()  throws Throwable  {
      Graph graph0 = new Graph();
      Vertex vertex0 = new Vertex();
      graph0.addEdge(vertex0, vertex0, 0);
      Edge edge0 = new Edge(vertex0, vertex0, (-238));
      Graph graph1 = graph0.ShortestPath(edge0.end);
      assertEquals(0, vertex0.dweight);
      assertNotNull(graph1);
  }
}
