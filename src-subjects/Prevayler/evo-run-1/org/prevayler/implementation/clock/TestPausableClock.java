/*
 * This file was automatically generated by EvoSuite
 */

package org.prevayler.implementation.clock;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Date;
import org.prevayler.Clock;
import org.prevayler.implementation.clock.MachineClock;
import org.prevayler.implementation.clock.PausableClock;

@RunWith(EvoSuiteRunner.class)
public class TestPausableClock {


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 1: org.prevayler.implementation.clock.PausableClock.time()Ljava/util/Date;:13 - DeleteField: _activeClockLorg/prevayler/Clock;
   * 2 Weak Mutation 2: org.prevayler.implementation.clock.PausableClock.time()Ljava/util/Date;:13 - DeleteStatement: time()Ljava/util/Date;
   * 3 org.prevayler.implementation.clock.PausableClock.time()Ljava/util/Date;: root-Branch
   * 4 Weak Mutation 0: org.prevayler.implementation.clock.PausableClock.<init>(Lorg/prevayler/Clock;)V:10 - DeleteStatement: resume()V
   * 5 Weak Mutation 1: org.prevayler.implementation.clock.PausableClock.time()Ljava/util/Date;:13 - DeleteField: _activeClockLorg/prevayler/Clock;
   * 6 Weak Mutation 2: org.prevayler.implementation.clock.PausableClock.time()Ljava/util/Date;:13 - DeleteStatement: time()Ljava/util/Date;
   * 7 Weak Mutation 9: org.prevayler.implementation.clock.PausableClock.resume()V:23 - DeleteField: _realClockLorg/prevayler/Clock;
   * 8 org.prevayler.implementation.clock.PausableClock.<init>(Lorg/prevayler/Clock;)V: root-Branch
   * 9 org.prevayler.implementation.clock.PausableClock.resume()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      PausableClock pausableClock0 = new PausableClock((Clock) machineClock0);
      Date date0 = pausableClock0.time();
      assertEquals("2 Jun 2013 17:38:34 GMT", date0.toGMTString());
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 Weak Mutation 3: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteField: _realClockLorg/prevayler/Clock;
   * 2 Weak Mutation 4: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteStatement: time()Ljava/util/Date;
   * 3 Weak Mutation 5: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteStatement: advanceTo(Ljava/util/Date;)V
   * 4 Weak Mutation 6: org.prevayler.implementation.clock.PausableClock.pause()V:17 - DeleteField: _brokenClockLorg/prevayler/implementation/clock/BrokenClock;
   * 5 Weak Mutation 7: org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V:20 - DeleteField: _brokenClockLorg/prevayler/implementation/clock/BrokenClock;
   * 6 Weak Mutation 8: org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V:20 - DeleteStatement: advanceTo(Ljava/util/Date;)V
   * 7 org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V: root-Branch
   * 8 org.prevayler.implementation.clock.PausableClock.pause()V: root-Branch
   * 9 Weak Mutation 3: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteField: _realClockLorg/prevayler/Clock;
   * 10 Weak Mutation 4: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteStatement: time()Ljava/util/Date;
   * 11 Weak Mutation 5: org.prevayler.implementation.clock.PausableClock.pause()V:16 - DeleteStatement: advanceTo(Ljava/util/Date;)V
   * 12 Weak Mutation 6: org.prevayler.implementation.clock.PausableClock.pause()V:17 - DeleteField: _brokenClockLorg/prevayler/implementation/clock/BrokenClock;
   * 13 Weak Mutation 7: org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V:20 - DeleteField: _brokenClockLorg/prevayler/implementation/clock/BrokenClock;
   * 14 Weak Mutation 8: org.prevayler.implementation.clock.PausableClock.advanceTo(Ljava/util/Date;)V:20 - DeleteStatement: advanceTo(Ljava/util/Date;)V
   */
  @Test
  public void test1()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      PausableClock pausableClock0 = new PausableClock((Clock) machineClock0);
      pausableClock0.pause();
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 10: org.prevayler.implementation.clock.PausableClock.realTime()Ljava/util/Date;:26 - DeleteField: _realClockLorg/prevayler/Clock;
   * 2 Weak Mutation 11: org.prevayler.implementation.clock.PausableClock.realTime()Ljava/util/Date;:26 - DeleteStatement: time()Ljava/util/Date;
   * 3 org.prevayler.implementation.clock.PausableClock.realTime()Ljava/util/Date;: root-Branch
   * 4 Weak Mutation 0: org.prevayler.implementation.clock.PausableClock.<init>(Lorg/prevayler/Clock;)V:10 - DeleteStatement: resume()V
   * 5 Weak Mutation 9: org.prevayler.implementation.clock.PausableClock.resume()V:23 - DeleteField: _realClockLorg/prevayler/Clock;
   * 6 Weak Mutation 10: org.prevayler.implementation.clock.PausableClock.realTime()Ljava/util/Date;:26 - DeleteField: _realClockLorg/prevayler/Clock;
   * 7 Weak Mutation 11: org.prevayler.implementation.clock.PausableClock.realTime()Ljava/util/Date;:26 - DeleteStatement: time()Ljava/util/Date;
   */
  @Test
  public void test2()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      PausableClock pausableClock0 = new PausableClock((Clock) machineClock0);
      Date date0 = pausableClock0.realTime();
      assertNotNull(date0);
      assertEquals(1370194714951L, date0.getTime());
  }
}
