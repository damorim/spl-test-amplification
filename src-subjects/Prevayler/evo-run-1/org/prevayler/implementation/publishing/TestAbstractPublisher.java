/*
 * This file was automatically generated by EvoSuite
 */

package org.prevayler.implementation.publishing;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import org.prevayler.Clock;
import org.prevayler.implementation.TransactionTimestamp;
import org.prevayler.implementation.clock.BrokenClock;
import org.prevayler.implementation.clock.MachineClock;
import org.prevayler.implementation.clock.PausableClock;
import org.prevayler.implementation.journal.Journal;
import org.prevayler.implementation.journal.TransientJournal;
import org.prevayler.implementation.publishing.CentralPublisher;
import org.prevayler.implementation.publishing.POBox;
import org.prevayler.implementation.publishing.TransactionSubscriber;

@RunWith(EvoSuiteRunner.class)
public class TestAbstractPublisher {


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 Weak Mutation 0: org.prevayler.implementation.publishing.AbstractPublisher.clock()Lorg/prevayler/Clock;:17 - DeleteField: _clockLorg/prevayler/Clock;
   * 2 org.prevayler.implementation.publishing.AbstractPublisher.<init>(Lorg/prevayler/Clock;)V: root-Branch
   * 3 org.prevayler.implementation.publishing.AbstractPublisher.clock()Lorg/prevayler/Clock;: root-Branch
   * 4 Weak Mutation 0: org.prevayler.implementation.publishing.AbstractPublisher.clock()Lorg/prevayler/Clock;:17 - DeleteField: _clockLorg/prevayler/Clock;
   */
  @Test
  public void test0()  throws Throwable  {
      BrokenClock brokenClock0 = new BrokenClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) transientJournal0);
      PausableClock pausableClock0 = (PausableClock)centralPublisher0.clock();
      assertNotNull(pausableClock0);
  }

  //Test case number: 1
  /*
   * 14 covered goals:
   * 1 Weak Mutation 9: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: next()Ljava/lang/Object;
   * 2 Weak Mutation 10: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: receive(Lorg/prevayler/implementation/TransactionTimestamp;)V
   * 3 org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V: I10 Branch 1 IFEQ L27 - false
   * 4 Weak Mutation 1: org.prevayler.implementation.publishing.AbstractPublisher.addSubscriber(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:20 - DeleteField: _subscribersLjava/util/List;
   * 5 Weak Mutation 2: org.prevayler.implementation.publishing.AbstractPublisher.addSubscriber(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:20 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 6 Weak Mutation 1: org.prevayler.implementation.publishing.AbstractPublisher.addSubscriber(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:20 - DeleteField: _subscribersLjava/util/List;
   * 7 Weak Mutation 2: org.prevayler.implementation.publishing.AbstractPublisher.addSubscriber(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:20 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 8 Weak Mutation 5: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:26 - DeleteField: _subscribersLjava/util/List;
   * 9 Weak Mutation 6: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:26 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 10 Weak Mutation 7: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 8: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 9: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: next()Ljava/lang/Object;
   * 13 Weak Mutation 10: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: receive(Lorg/prevayler/implementation/TransactionTimestamp;)V
   * 14 org.prevayler.implementation.publishing.AbstractPublisher.addSubscriber(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) machineClock0, (Journal) transientJournal0);
      centralPublisher0.subscribe((TransactionSubscriber) null, (-1619L));
      // Undeclared exception!
      try {
        centralPublisher0.notifySubscribers((TransactionTimestamp) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 3: org.prevayler.implementation.publishing.AbstractPublisher.cancelSubscription(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:23 - DeleteField: _subscribersLjava/util/List;
   * 2 Weak Mutation 4: org.prevayler.implementation.publishing.AbstractPublisher.cancelSubscription(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:23 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 3 org.prevayler.implementation.publishing.AbstractPublisher.cancelSubscription(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V: root-Branch
   * 4 Weak Mutation 3: org.prevayler.implementation.publishing.AbstractPublisher.cancelSubscription(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:23 - DeleteField: _subscribersLjava/util/List;
   * 5 Weak Mutation 4: org.prevayler.implementation.publishing.AbstractPublisher.cancelSubscription(Lorg/prevayler/implementation/publishing/TransactionSubscriber;)V:23 - DeleteStatement: remove(Ljava/lang/Object;)Z
   */
  @Test
  public void test2()  throws Throwable  {
      MachineClock machineClock0 = new MachineClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) machineClock0, (Journal) transientJournal0);
      POBox pOBox0 = new POBox((TransactionSubscriber) null);
      centralPublisher0.cancelSubscription((TransactionSubscriber) pOBox0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 5: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:26 - DeleteField: _subscribersLjava/util/List;
   * 2 Weak Mutation 6: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:26 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 3 Weak Mutation 7: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - DeleteStatement: hasNext()Z
   * 4 Weak Mutation 8: org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V:27 - ReplaceComparisonOperator == -> !=
   * 5 org.prevayler.implementation.publishing.AbstractPublisher.notifySubscribers(Lorg/prevayler/implementation/TransactionTimestamp;)V: I10 Branch 1 IFEQ L27 - true
   */
  @Test
  public void test3()  throws Throwable  {
      BrokenClock brokenClock0 = new BrokenClock();
      TransientJournal transientJournal0 = new TransientJournal();
      CentralPublisher centralPublisher0 = new CentralPublisher((Clock) brokenClock0, (Journal) transientJournal0);
      centralPublisher0.notifySubscribers((TransactionTimestamp) null);
  }
}
