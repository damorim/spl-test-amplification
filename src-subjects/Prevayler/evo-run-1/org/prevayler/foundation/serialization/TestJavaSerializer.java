/*
 * This file was automatically generated by EvoSuite
 */

package org.prevayler.foundation.serialization;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import org.prevayler.foundation.serialization.JavaSerializer;

@RunWith(EvoSuiteRunner.class)
public class TestJavaSerializer {


  //Test case number: 0
  /*
   * 6 covered goals:
   * 1 Weak Mutation 0: org.prevayler.foundation.serialization.JavaSerializer.writeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V:21 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 2 Weak Mutation 1: org.prevayler.foundation.serialization.JavaSerializer.writeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V:22 - DeleteStatement: close()V
   * 3 org.prevayler.foundation.serialization.JavaSerializer.writeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V: root-Branch
   * 4 org.prevayler.foundation.serialization.JavaSerializer.<init>()V: root-Branch
   * 5 Weak Mutation 0: org.prevayler.foundation.serialization.JavaSerializer.writeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V:21 - DeleteStatement: writeObject(Ljava/lang/Object;)V
   * 6 Weak Mutation 1: org.prevayler.foundation.serialization.JavaSerializer.writeObject(Ljava/io/OutputStream;Ljava/lang/Object;)V:22 - DeleteStatement: close()V
   */
  @Test
  public void test0()  throws Throwable  {
      JavaSerializer javaSerializer0 = new JavaSerializer();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      javaSerializer0.writeObject((OutputStream) byteArrayOutputStream0, (Object) ":");
      assertEquals("\u00A8\u00CC\u0000\u0005t\u0000\u0001:", byteArrayOutputStream0.toString());
      assertEquals(8, byteArrayOutputStream0.size());
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 Weak Mutation 2: org.prevayler.foundation.serialization.JavaSerializer.readObject(Ljava/io/InputStream;)Ljava/lang/Object;:25 - DeleteField: _loaderLjava/lang/ClassLoader;
   * 2 org.prevayler.foundation.serialization.JavaSerializer.readObject(Ljava/io/InputStream;)Ljava/lang/Object;: root-Branch
   * 3 org.prevayler.foundation.serialization.JavaSerializer.<init>(Ljava/lang/ClassLoader;)V: root-Branch
   * 4 Weak Mutation 2: org.prevayler.foundation.serialization.JavaSerializer.readObject(Ljava/io/InputStream;)Ljava/lang/Object;:25 - DeleteField: _loaderLjava/lang/ClassLoader;
   */
  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JavaSerializer javaSerializer0 = new JavaSerializer(classLoader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try {
        javaSerializer0.readObject((InputStream) pipedInputStream0);
        fail("Expecting exception: IOException");
      } catch(IOException e) {
        /*
         * Pipe not connected
         */
      }
  }
}
