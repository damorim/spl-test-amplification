/*
 * This file was automatically generated by EvoSuite
 */

package org.prevayler.foundation;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.prevayler.foundation.Turn;

@RunWith(EvoSuiteRunner.class)
public class TestTurn {


  //Test case number: 0
  /*
   * 39 covered goals:
   * 1 Weak Mutation 13: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp Negation
   * 2 Weak Mutation 14: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp +1
   * 3 Weak Mutation 15: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp -1
   * 4 Weak Mutation 17: org.prevayler.foundation.Turn.start()V:20 - ReplaceComparisonOperator != -> <
   * 5 Weak Mutation 16: org.prevayler.foundation.Turn.start()V:20 - DeleteField: _ticketsI
   * 6 Weak Mutation 21: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp Negation
   * 7 Weak Mutation 23: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp -1
   * 8 Weak Mutation 22: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp +1
   * 9 Weak Mutation 25: org.prevayler.foundation.Turn.start()V:21 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 24: org.prevayler.foundation.Turn.start()V:21 - DeleteField: _ticketsI
   * 11 Weak Mutation 27: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> %
   * 12 Weak Mutation 26: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> +
   * 13 Weak Mutation 29: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> *
   * 14 Weak Mutation 28: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> /
   * 15 org.prevayler.foundation.Turn.start()V: I4 Branch 2 IFNE L20 - true
   * 16 Weak Mutation 0: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 0
   * 17 Weak Mutation 1: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 1
   * 18 Weak Mutation 2: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> -1
   * 19 Weak Mutation 3: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 999999
   * 20 Weak Mutation 4: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 1000001
   * 21 Weak Mutation 5: org.prevayler.foundation.Turn.<init>(I)V:7 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 6: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp Negation
   * 23 Weak Mutation 7: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 8: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 13: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp Negation
   * 26 Weak Mutation 14: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp +1
   * 27 Weak Mutation 15: org.prevayler.foundation.Turn.start()V:20 - InsertUnaryOp -1
   * 28 Weak Mutation 17: org.prevayler.foundation.Turn.start()V:20 - ReplaceComparisonOperator != -> <
   * 29 Weak Mutation 16: org.prevayler.foundation.Turn.start()V:20 - DeleteField: _ticketsI
   * 30 Weak Mutation 21: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp Negation
   * 31 Weak Mutation 23: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp -1
   * 32 Weak Mutation 22: org.prevayler.foundation.Turn.start()V:21 - InsertUnaryOp +1
   * 33 Weak Mutation 25: org.prevayler.foundation.Turn.start()V:21 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 24: org.prevayler.foundation.Turn.start()V:21 - DeleteField: _ticketsI
   * 35 Weak Mutation 27: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> %
   * 36 Weak Mutation 26: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> +
   * 37 Weak Mutation 29: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> *
   * 38 Weak Mutation 28: org.prevayler.foundation.Turn.start()V:21 - ReplaceArithmeticOperator - -> /
   * 39 org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Turn turn0 = Turn.first();
      turn0.start();
  }

  //Test case number: 1
  /*
   * 79 covered goals:
   * 1 Weak Mutation 33: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - DeleteField: _isAlwaysSkippedZ
   * 2 Weak Mutation 35: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 3 Weak Mutation 38: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 36: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp Negation
   * 5 Weak Mutation 37: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp IINC 1
   * 6 org.prevayler.foundation.Turn.haveSomeTickets(I)V: I4 Branch 3 IFEQ L27 - false
   * 7 Weak Mutation 0: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 0
   * 8 Weak Mutation 1: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 1
   * 9 Weak Mutation 2: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> -1
   * 10 Weak Mutation 3: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 999999
   * 11 Weak Mutation 4: org.prevayler.foundation.Turn.first()Lorg/prevayler/foundation/Turn;:10 - ReplaceConstant - 1000000 -> 1000001
   * 12 Weak Mutation 5: org.prevayler.foundation.Turn.<init>(I)V:7 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 6: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp Negation
   * 14 Weak Mutation 7: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp IINC 1
   * 15 Weak Mutation 8: org.prevayler.foundation.Turn.<init>(I)V:13 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 9: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - DeleteField: _nextLorg/prevayler/foundation/Turn;
   * 17 Weak Mutation 10: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - ReplaceComparisonOperator != null -> = null
   * 18 Weak Mutation 11: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 12: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:17 - DeleteField: _nextLorg/prevayler/foundation/Turn;
   * 20 Weak Mutation 31: org.prevayler.foundation.Turn.end()V:24 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 30: org.prevayler.foundation.Turn.end()V:24 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 22 Weak Mutation 34: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - ReplaceComparisonOperator == -> !=
   * 23 Weak Mutation 32: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - InsertUnaryOp Negation
   * 24 Weak Mutation 39: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp Negation
   * 25 Weak Mutation 42: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - DeleteField: _ticketsI
   * 26 Weak Mutation 43: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp Negation
   * 27 Weak Mutation 40: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp +1
   * 28 Weak Mutation 41: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp -1
   * 29 Weak Mutation 46: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> -
   * 30 Weak Mutation 47: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> %
   * 31 Weak Mutation 44: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 45: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp IINC -1
   * 33 Weak Mutation 51: org.prevayler.foundation.Turn.alwaysSkip()V:35 - DeleteStatement: end()V
   * 34 Weak Mutation 50: org.prevayler.foundation.Turn.haveSomeTickets(I)V:32 - DeleteStatement: notify()V
   * 35 Weak Mutation 49: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> *
   * 36 Weak Mutation 48: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> /
   * 37 Weak Mutation 55: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp +1
   * 38 Weak Mutation 54: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp Negation
   * 39 Weak Mutation 53: org.prevayler.foundation.Turn.alwaysSkip()V:37 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 40 Weak Mutation 52: org.prevayler.foundation.Turn.alwaysSkip()V:36 - ReplaceConstant - 1 -> 0
   * 41 Weak Mutation 57: org.prevayler.foundation.Turn.alwaysSkip()V:37 - DeleteField: _ticketsI
   * 42 Weak Mutation 56: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp -1
   * 43 Weak Mutation 9: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - DeleteField: _nextLorg/prevayler/foundation/Turn;
   * 44 Weak Mutation 10: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - ReplaceComparisonOperator != null -> = null
   * 45 Weak Mutation 11: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:16 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 12: org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;:17 - DeleteField: _nextLorg/prevayler/foundation/Turn;
   * 47 Weak Mutation 31: org.prevayler.foundation.Turn.end()V:24 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 30: org.prevayler.foundation.Turn.end()V:24 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 49 Weak Mutation 34: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - ReplaceComparisonOperator == -> !=
   * 50 Weak Mutation 35: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 51 Weak Mutation 32: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - InsertUnaryOp Negation
   * 52 Weak Mutation 33: org.prevayler.foundation.Turn.haveSomeTickets(I)V:27 - DeleteField: _isAlwaysSkippedZ
   * 53 Weak Mutation 38: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 39: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp Negation
   * 55 Weak Mutation 36: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp Negation
   * 56 Weak Mutation 37: org.prevayler.foundation.Turn.haveSomeTickets(I)V:28 - InsertUnaryOp IINC 1
   * 57 Weak Mutation 42: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - DeleteField: _ticketsI
   * 58 Weak Mutation 43: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp Negation
   * 59 Weak Mutation 40: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp +1
   * 60 Weak Mutation 41: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp -1
   * 61 Weak Mutation 46: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> -
   * 62 Weak Mutation 47: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> %
   * 63 Weak Mutation 44: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp IINC 1
   * 64 Weak Mutation 45: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - InsertUnaryOp IINC -1
   * 65 Weak Mutation 51: org.prevayler.foundation.Turn.alwaysSkip()V:35 - DeleteStatement: end()V
   * 66 Weak Mutation 50: org.prevayler.foundation.Turn.haveSomeTickets(I)V:32 - DeleteStatement: notify()V
   * 67 Weak Mutation 49: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> *
   * 68 Weak Mutation 48: org.prevayler.foundation.Turn.haveSomeTickets(I)V:31 - ReplaceArithmeticOperator + -> /
   * 69 Weak Mutation 55: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp +1
   * 70 Weak Mutation 54: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp Negation
   * 71 Weak Mutation 53: org.prevayler.foundation.Turn.alwaysSkip()V:37 - DeleteStatement: next()Lorg/prevayler/foundation/Turn;
   * 72 Weak Mutation 52: org.prevayler.foundation.Turn.alwaysSkip()V:36 - ReplaceConstant - 1 -> 0
   * 73 Weak Mutation 57: org.prevayler.foundation.Turn.alwaysSkip()V:37 - DeleteField: _ticketsI
   * 74 Weak Mutation 56: org.prevayler.foundation.Turn.alwaysSkip()V:37 - InsertUnaryOp -1
   * 75 org.prevayler.foundation.Turn.alwaysSkip()V: root-Branch
   * 76 org.prevayler.foundation.Turn.end()V: root-Branch
   * 77 org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;: I4 Branch 1 IFNONNULL L16 - true
   * 78 org.prevayler.foundation.Turn.next()Lorg/prevayler/foundation/Turn;: I4 Branch 1 IFNONNULL L16 - false
   * 79 org.prevayler.foundation.Turn.haveSomeTickets(I)V: I4 Branch 3 IFEQ L27 - true
   */
  @Test
  public void test1()  throws Throwable  {
      Turn turn0 = Turn.first();
      Turn turn1 = turn0.next();
      turn1.alwaysSkip();
      turn0.alwaysSkip();
      assertNotSame(turn0, turn1);
  }
}
