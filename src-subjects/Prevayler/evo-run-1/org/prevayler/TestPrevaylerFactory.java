/*
 * This file was automatically generated by EvoSuite
 */

package org.prevayler;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.Serializable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.prevayler.Clock;
import org.prevayler.Prevayler;
import org.prevayler.PrevaylerFactory;
import org.prevayler.foundation.serialization.JavaSerializer;
import org.prevayler.foundation.serialization.SkaringaSerializer;
import org.prevayler.foundation.serialization.XStreamSerializer;
import org.prevayler.implementation.PrevaylerImpl;
import org.prevayler.implementation.clock.MachineClock;

@RunWith(EvoSuiteRunner.class)
public class TestPrevaylerFactory {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = false; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  //Test case number: 0
  /*
   * 20 covered goals:
   * 1 Weak Mutation 13: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - DeleteField: _clockLorg/prevayler/Clock;
   * 2 Weak Mutation 15: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - DeleteField: _clockLorg/prevayler/Clock;
   * 3 org.prevayler.PrevaylerFactory.configureClock(Lorg/prevayler/Clock;)V: root-Branch
   * 4 org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;: I4 Branch 1 IFNULL L190 - false
   * 5 Weak Mutation 0: org.prevayler.PrevaylerFactory.<init>()V:72 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 13: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - DeleteField: _clockLorg/prevayler/Clock;
   * 7 Weak Mutation 14: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 15: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - DeleteField: _clockLorg/prevayler/Clock;
   * 9 Weak Mutation 34: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceConstant - Prevalence -> 
   * 10 Weak Mutation 32: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceComparisonOperator = null -> != null
   * 11 Weak Mutation 39: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 12 Weak Mutation 41: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 13 Weak Mutation 47: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 49: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceConstant - journal -> 
   * 15 org.prevayler.PrevaylerFactory.<init>()V: root-Branch
   * 16 org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;: root-Branch
   * 17 org.prevayler.PrevaylerFactory.publisher()Lorg/prevayler/implementation/publishing/TransactionPublisher;: root-Branch
   * 18 org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;: root-Branch
   * 19 org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;: I4 Branch 6 IFNULL L454 - true
   * 20 org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;: I4 Branch 3 IFNULL L388 - true
   */
  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
          MachineClock machineClock0 = new MachineClock();
          prevaylerFactory0.configureClock((Clock) machineClock0);
          // Undeclared exception!
          try {
            prevaylerFactory0.create();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission Prevalence write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * org.prevayler.foundation.FileManager.produceDirectory(FileManager.java:11)
             * org.prevayler.implementation.PrevaylerDirectory.produceDirectory(PrevaylerDirectory.java:22)
             * org.prevayler.implementation.journal.PersistentJournal.<init>(PersistentJournal.java:84)
             * org.prevayler.PrevaylerFactory.journal(PrevaylerFactory.java:446)
             * org.prevayler.PrevaylerFactory.publisher(PrevaylerFactory.java:420)
             * org.prevayler.PrevaylerFactory.create(PrevaylerFactory.java:372)
             * sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 1
  /*
   * 30 covered goals:
   * 1 Weak Mutation 1: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:113 - ReplaceConstant - PrevalenceBase -> 
   * 2 Weak Mutation 2: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:113 - DeleteStatement: createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;
   * 3 Weak Mutation 3: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:126 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 4 Weak Mutation 4: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:127 - DeleteStatement: configurePrevalenceDirectory(Ljava/lang/String;)V
   * 5 Weak Mutation 5: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:128 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 6 Weak Mutation 14: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 31: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   * 8 Weak Mutation 32: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 33: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   * 10 Weak Mutation 39: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 11 Weak Mutation 41: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 12 Weak Mutation 47: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 49: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceConstant - journal -> 
   * 14 org.prevayler.PrevaylerFactory.configurePrevalentSystem(Ljava/lang/Object;)V: root-Branch
   * 15 org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;: root-Branch
   * 16 org.prevayler.PrevaylerFactory.create()Lorg/prevayler/Prevayler;: root-Branch
   * 17 org.prevayler.PrevaylerFactory.publisher()Lorg/prevayler/implementation/publishing/TransactionPublisher;: root-Branch
   * 18 org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;: root-Branch
   * 19 org.prevayler.PrevaylerFactory.configurePrevalenceDirectory(Ljava/lang/String;)V: root-Branch
   * 20 org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;: root-Branch
   * 21 org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;: I4 Branch 1 IFNULL L190 - true
   * 22 org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;: I4 Branch 3 IFNULL L388 - false
   * 23 org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;: I4 Branch 6 IFNULL L454 - true
   * 24 Weak Mutation 1: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:113 - ReplaceConstant - PrevalenceBase -> 
   * 25 Weak Mutation 2: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:113 - DeleteStatement: createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;
   * 26 Weak Mutation 3: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:126 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 27 Weak Mutation 4: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:127 - DeleteStatement: configurePrevalenceDirectory(Ljava/lang/String;)V
   * 28 Weak Mutation 5: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:128 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 29 Weak Mutation 31: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   * 30 Weak Mutation 33: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   */
  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          // Undeclared exception!
          try {
            PrevaylerFactory.createPrevayler((Serializable) null);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission PrevalenceBase write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * org.prevayler.foundation.FileManager.produceDirectory(FileManager.java:11)
             * org.prevayler.implementation.PrevaylerDirectory.produceDirectory(PrevaylerDirectory.java:22)
             * org.prevayler.implementation.journal.PersistentJournal.<init>(PersistentJournal.java:84)
             * org.prevayler.PrevaylerFactory.journal(PrevaylerFactory.java:446)
             * org.prevayler.PrevaylerFactory.publisher(PrevaylerFactory.java:420)
             * org.prevayler.PrevaylerFactory.create(PrevaylerFactory.java:372)
             * org.prevayler.PrevaylerFactory.createPrevayler(PrevaylerFactory.java:128)
             * org.prevayler.PrevaylerFactory.createPrevayler(PrevaylerFactory.java:113)
             * sun.reflect.GeneratedMethodAccessor11.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 Weak Mutation 6: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:141 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 2 Weak Mutation 7: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:149 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 3 Weak Mutation 8: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:152 - DeleteStatement: printStackTrace()V
   * 4 Weak Mutation 34: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceConstant - Prevalence -> 
   * 5 org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;: root-Branch
   * 6 org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;: I4 Branch 3 IFNULL L388 - true
   * 7 Weak Mutation 6: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:141 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 8 Weak Mutation 7: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:149 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 9 Weak Mutation 8: org.prevayler.PrevaylerFactory.createTransientPrevayler(Ljava/io/Serializable;)Lorg/prevayler/Prevayler;:152 - DeleteStatement: printStackTrace()V
   */
  @Test
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          Prevayler prevayler0 = PrevaylerFactory.createTransientPrevayler((Serializable) "/");
          assertNull(prevayler0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Weak Mutation 9: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:176 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 2 Weak Mutation 10: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:177 - DeleteStatement: configurePrevalenceDirectory(Ljava/lang/String;)V
   * 3 Weak Mutation 11: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:182 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 4 Weak Mutation 12: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:185 - DeleteStatement: printStackTrace()V
   * 5 org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;: root-Branch
   * 6 Weak Mutation 9: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:176 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 7 Weak Mutation 10: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:177 - DeleteStatement: configurePrevalenceDirectory(Ljava/lang/String;)V
   * 8 Weak Mutation 11: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:182 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 9 Weak Mutation 12: org.prevayler.PrevaylerFactory.createCheckpointPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:185 - DeleteStatement: printStackTrace()V
   */
  @Test
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          Prevayler prevayler0 = PrevaylerFactory.createCheckpointPrevayler((Serializable) "Could not iestantiate mapper : ", "Could not iestantiate mapper : ");
          assertNull(prevayler0);
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 Weak Mutation 17: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp IINC 1
   * 2 Weak Mutation 16: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp Negation
   * 3 Weak Mutation 18: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp IINC -1
   * 4 org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V: root-Branch
   * 5 Weak Mutation 17: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 16: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp Negation
   * 7 Weak Mutation 18: org.prevayler.PrevaylerFactory.configureTransactionFiltering(Z)V:278 - InsertUnaryOp IINC -1
   */
  @Test
  public void test4()  throws Throwable  {
      PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
      prevaylerFactory0.configureTransactionFiltering(false);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 40: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - DeleteField: _journalSizeThresholdJ
   * 2 Weak Mutation 19: org.prevayler.PrevaylerFactory.configureJournalFileSizeThreshold(J)V:285 - InsertUnaryOp Negation
   * 3 Weak Mutation 19: org.prevayler.PrevaylerFactory.configureJournalFileSizeThreshold(J)V:285 - InsertUnaryOp Negation
   * 4 Weak Mutation 40: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - DeleteField: _journalSizeThresholdJ
   * 5 org.prevayler.PrevaylerFactory.configureJournalFileSizeThreshold(J)V: root-Branch
   */
  @Test
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
          prevaylerFactory0.configureJournalFileSizeThreshold((-272L));
          // Undeclared exception!
          try {
            prevaylerFactory0.create();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission Prevalence write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * org.prevayler.foundation.FileManager.produceDirectory(FileManager.java:11)
             * org.prevayler.implementation.PrevaylerDirectory.produceDirectory(PrevaylerDirectory.java:22)
             * org.prevayler.implementation.journal.PersistentJournal.<init>(PersistentJournal.java:84)
             * org.prevayler.PrevaylerFactory.journal(PrevaylerFactory.java:446)
             * org.prevayler.PrevaylerFactory.publisher(PrevaylerFactory.java:420)
             * org.prevayler.PrevaylerFactory.create(PrevaylerFactory.java:372)
             * sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * 1 Weak Mutation 42: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - DeleteField: _journalAgeThresholdJ
   * 2 Weak Mutation 20: org.prevayler.PrevaylerFactory.configureJournalFileAgeThreshold(J)V:292 - InsertUnaryOp Negation
   * 3 Weak Mutation 20: org.prevayler.PrevaylerFactory.configureJournalFileAgeThreshold(J)V:292 - InsertUnaryOp Negation
   * 4 Weak Mutation 42: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - DeleteField: _journalAgeThresholdJ
   * 5 org.prevayler.PrevaylerFactory.configureJournalFileAgeThreshold(J)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
          prevaylerFactory0.configureJournalFileAgeThreshold(1975L);
          // Undeclared exception!
          try {
            prevaylerFactory0.create();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission Prevalence write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * org.prevayler.foundation.FileManager.produceDirectory(FileManager.java:11)
             * org.prevayler.implementation.PrevaylerDirectory.produceDirectory(PrevaylerDirectory.java:22)
             * org.prevayler.implementation.journal.PersistentJournal.<init>(PersistentJournal.java:84)
             * org.prevayler.PrevaylerFactory.journal(PrevaylerFactory.java:446)
             * org.prevayler.PrevaylerFactory.publisher(PrevaylerFactory.java:420)
             * org.prevayler.PrevaylerFactory.create(PrevaylerFactory.java:372)
             * sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 7
  /*
   * 18 covered goals:
   * 1 Weak Mutation 28: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:312 - DeleteField: _journalSerializerLorg/prevayler/foundation/serialization/Serializer;
   * 2 Weak Mutation 30: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:313 - ReplaceConstant - Read the javadoc to this method. -> 
   * 3 org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V: I8 Branch 2 IFNULL L312 - false
   * 4 Weak Mutation 21: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V:295 - ReplaceConstant - journal -> 
   * 5 Weak Mutation 23: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V:298 - ReplaceConstant - xstreamjournal -> 
   * 6 Weak Mutation 22: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V:295 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 7 Weak Mutation 24: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V:298 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 8 Weak Mutation 21: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V:295 - ReplaceConstant - journal -> 
   * 9 Weak Mutation 23: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V:298 - ReplaceConstant - xstreamjournal -> 
   * 10 Weak Mutation 22: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V:295 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 11 Weak Mutation 24: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V:298 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 12 Weak Mutation 27: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:311 - DeleteStatement: checkValidJournalSuffix(Ljava/lang/String;)V
   * 13 Weak Mutation 29: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:312 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 28: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:312 - DeleteField: _journalSerializerLorg/prevayler/foundation/serialization/Serializer;
   * 15 Weak Mutation 30: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:313 - ReplaceConstant - Read the javadoc to this method. -> 
   * 16 org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/JavaSerializer;)V: root-Branch
   * 17 org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/XStreamSerializer;)V: root-Branch
   * 18 org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V: I8 Branch 2 IFNULL L312 - true
   */
  @Test
  public void test7()  throws Throwable  {
      PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
      XStreamSerializer xStreamSerializer0 = new XStreamSerializer();
      prevaylerFactory0.configureJournalSerializer(xStreamSerializer0);
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JavaSerializer javaSerializer0 = new JavaSerializer(classLoader0);
      // Undeclared exception!
      try {
        prevaylerFactory0.configureJournalSerializer(javaSerializer0);
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
        /*
         * Read the javadoc to this method.
         */
      }
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Weak Mutation 46: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - DeleteField: _journalSuffixLjava/lang/String;
   * 2 Weak Mutation 48: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - DeleteField: _journalSuffixLjava/lang/String;
   * 3 org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;: I4 Branch 6 IFNULL L454 - false
   * 4 Weak Mutation 25: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/SkaringaSerializer;)V:301 - ReplaceConstant - skaringajournal -> 
   * 5 Weak Mutation 27: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:311 - DeleteStatement: checkValidJournalSuffix(Ljava/lang/String;)V
   * 6 Weak Mutation 26: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/SkaringaSerializer;)V:301 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 7 Weak Mutation 29: org.prevayler.PrevaylerFactory.configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V:312 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 34: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceConstant - Prevalence -> 
   * 9 Weak Mutation 25: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/SkaringaSerializer;)V:301 - ReplaceConstant - skaringajournal -> 
   * 10 Weak Mutation 26: org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/SkaringaSerializer;)V:301 - DeleteStatement: configureJournalSerializer(Ljava/lang/String;Lorg/prevayler/foundation/serialization/Serializer;)V
   * 11 Weak Mutation 46: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - DeleteField: _journalSuffixLjava/lang/String;
   * 12 Weak Mutation 48: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - DeleteField: _journalSuffixLjava/lang/String;
   * 13 org.prevayler.PrevaylerFactory.configureJournalSerializer(Lorg/prevayler/foundation/serialization/SkaringaSerializer;)V: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
        try {
          PrevaylerFactory prevaylerFactory0 = new PrevaylerFactory();
          prevaylerFactory0.configureJournalSerializer((SkaringaSerializer) null);
          // Undeclared exception!
          try {
            prevaylerFactory0.create();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission Prevalence write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * java.io.File.mkdirs(File.java:1184)
             * org.prevayler.foundation.FileManager.produceDirectory(FileManager.java:11)
             * org.prevayler.implementation.PrevaylerDirectory.produceDirectory(PrevaylerDirectory.java:22)
             * org.prevayler.implementation.journal.PersistentJournal.<init>(PersistentJournal.java:84)
             * org.prevayler.PrevaylerFactory.journal(PrevaylerFactory.java:446)
             * org.prevayler.PrevaylerFactory.publisher(PrevaylerFactory.java:420)
             * org.prevayler.PrevaylerFactory.create(PrevaylerFactory.java:372)
             * sun.reflect.GeneratedMethodAccessor12.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 9
  /*
   * 15 covered goals:
   * 1 Weak Mutation 44: org.prevayler.PrevaylerFactory.journalSerializer()Lorg/prevayler/foundation/serialization/Serializer;:450 - ReplaceComparisonOperator = null -> != null
   * 2 org.prevayler.PrevaylerFactory.journalSerializer()Lorg/prevayler/foundation/serialization/Serializer;: I4 Branch 5 IFNULL L450 - true
   * 3 Weak Mutation 0: org.prevayler.PrevaylerFactory.<init>()V:72 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 3: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:126 - DeleteStatement: configurePrevalentSystem(Ljava/lang/Object;)V
   * 5 Weak Mutation 4: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:127 - DeleteStatement: configurePrevalenceDirectory(Ljava/lang/String;)V
   * 6 Weak Mutation 5: org.prevayler.PrevaylerFactory.createPrevayler(Ljava/io/Serializable;Ljava/lang/String;)Lorg/prevayler/Prevayler;:128 - DeleteStatement: create()Lorg/prevayler/Prevayler;
   * 7 Weak Mutation 14: org.prevayler.PrevaylerFactory.clock()Lorg/prevayler/Clock;:190 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 31: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   * 9 Weak Mutation 32: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 33: org.prevayler.PrevaylerFactory.prevalenceDirectory()Ljava/lang/String;:388 - DeleteField: _prevalenceDirectoryLjava/lang/String;
   * 11 Weak Mutation 39: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 12 Weak Mutation 41: org.prevayler.PrevaylerFactory.journal()Lorg/prevayler/implementation/journal/Journal;:446 - InsertUnaryOp Negation
   * 13 Weak Mutation 47: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 49: org.prevayler.PrevaylerFactory.journalSuffix()Ljava/lang/String;:454 - ReplaceConstant - journal -> 
   * 15 Weak Mutation 44: org.prevayler.PrevaylerFactory.journalSerializer()Lorg/prevayler/foundation/serialization/Serializer;:450 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test9()  throws Throwable  {
      PrevaylerImpl prevaylerImpl0 = (PrevaylerImpl)PrevaylerFactory.createPrevayler((Serializable) "/", "/");
      assertNotNull(prevaylerImpl0);
  }
}
