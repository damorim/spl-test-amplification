/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.collections;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.collections.DataView;
import com.sleepycat.collections.StoredIterator;
import com.sleepycat.collections.StoredSortedEntrySet;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;

@RunWith(EvoSuiteRunner.class)
public class TestStoredIterator {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.collections.StoredIterator.close(Ljava/util/Iterator;)V:65 - ReplaceComparisonOperator == -> !=
   * 2 com.sleepycat.collections.StoredIterator.close(Ljava/util/Iterator;)V: I4 Branch 1 IFEQ L65 - true
   * 3 Weak Mutation 0: com.sleepycat.collections.StoredIterator.close(Ljava/util/Iterator;)V:65 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test0()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ListIterator<String> listIterator0 = linkedList0.listIterator(0);
      StoredIterator.close((Iterator) listIterator0);
      assertEquals(false, listIterator0.hasNext());
  }

  //Test case number: 1
  /*
   * 22 covered goals:
   * 1 Weak Mutation 2: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp Negation of writeAllowed
   * 2 Weak Mutation 3: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp IINC 1 writeAllowed
   * 3 Weak Mutation 4: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp IINC -1 writeAllowed
   * 4 Weak Mutation 5: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:90 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 7: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp Negation of writeAllowed
   * 6 Weak Mutation 8: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp IINC 1 writeAllowed
   * 7 Weak Mutation 9: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp IINC -1 writeAllowed
   * 8 Weak Mutation 12: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:99 - DeleteStatement: close()V
   * 9 Weak Mutation 13: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:103 - DeleteStatement: convertException(Ljava/lang/Exception;)Ljava/lang/RuntimeException;
   * 10 Weak Mutation 261: com.sleepycat.collections.StoredIterator.close()V:547 - ReplaceComparisonOperator = null -> != null
   * 11 com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V: I17 Branch 2 IFNONNULL L90 - false
   * 12 com.sleepycat.collections.StoredIterator.close()V: I4 Branch 35 IFNULL L547 - true
   * 13 Weak Mutation 2: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp Negation of writeAllowed
   * 14 Weak Mutation 3: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp IINC 1 writeAllowed
   * 15 Weak Mutation 4: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:89 - InsertUnaryOp IINC -1 writeAllowed
   * 16 Weak Mutation 5: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:90 - ReplaceComparisonOperator != null -> = null
   * 17 Weak Mutation 7: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp Negation of writeAllowed
   * 18 Weak Mutation 8: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp IINC 1 writeAllowed
   * 19 Weak Mutation 9: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:91 - InsertUnaryOp IINC -1 writeAllowed
   * 20 Weak Mutation 12: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:99 - DeleteStatement: close()V
   * 21 Weak Mutation 13: com.sleepycat.collections.StoredIterator.<init>(Lcom/sleepycat/collections/StoredCollection;ZLcom/sleepycat/collections/DataCursor;)V:103 - DeleteStatement: convertException(Ljava/lang/Exception;)Ljava/lang/RuntimeException;
   * 22 Weak Mutation 261: com.sleepycat.collections.StoredIterator.close()V:547 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test1()  throws Throwable  {
      StoredSortedEntrySet storedSortedEntrySet0 = new StoredSortedEntrySet((DataView) null);
      // Undeclared exception!
      try {
        storedSortedEntrySet0.iterator(false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
