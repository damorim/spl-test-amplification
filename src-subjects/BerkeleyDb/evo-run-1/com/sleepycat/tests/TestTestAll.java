/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.tests;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.tests.TestAll;
import java.io.File;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.Properties.SandboxMode;
import org.evosuite.sandbox.Sandbox;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;

@RunWith(EvoSuiteRunner.class)
public class TestTestAll {

  private static ExecutorService executor; 

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = false; 
    org.evosuite.Properties.SANDBOX_MODE = SandboxMode.RECOMMENDED; 
    Sandbox.initializeSecurityManagerForSUT(); 
    executor = Executors.newCachedThreadPool(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    executor.shutdownNow(); 
    Sandbox.resetDefaultSecurityManager(); 
  } 

  @Before 
  public void initTestCase(){ 
    Sandbox.goingToExecuteSUTCode(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    Sandbox.doneWithExecutingSUTCode(); 
  } 


  //Test case number: 0
  /*
   * 21 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.tests.TestAll.test1()V:65 - DeleteStatement: setup()Ljava/io/File;
   * 2 Weak Mutation 76: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - user.dir -> 
   * 3 Weak Mutation 77: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 4 Weak Mutation 78: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 5 Weak Mutation 79: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - /dbEnv -> 
   * 6 Weak Mutation 81: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: toString()Ljava/lang/String;
   * 7 Weak Mutation 80: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 83: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - ReplaceComparisonOperator != -> ==
   * 9 Weak Mutation 82: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - DeleteStatement: exists()Z
   * 10 Weak Mutation 84: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:154 - DeleteStatement: mkdir()Z
   * 11 com.sleepycat.tests.TestAll.setup()Ljava/io/File;: I19 Branch 2 IFNE L153 - false
   * 12 Weak Mutation 0: com.sleepycat.tests.TestAll.test1()V:65 - DeleteStatement: setup()Ljava/io/File;
   * 13 Weak Mutation 76: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - user.dir -> 
   * 14 Weak Mutation 77: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 15 Weak Mutation 78: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 16 Weak Mutation 79: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - /dbEnv -> 
   * 17 Weak Mutation 84: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:154 - DeleteStatement: mkdir()Z
   * 18 Weak Mutation 81: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: toString()Ljava/lang/String;
   * 19 Weak Mutation 80: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 20 Weak Mutation 83: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 82: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - DeleteStatement: exists()Z
   */
  @Test
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          // Undeclared exception!
          try {
            TestAll.test1();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /Users/sabrinasouto/git/spl-test-amplification/libs/dbEnv write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * com.sleepycat.tests.TestAll.setup(TestAll.java:154)
             * com.sleepycat.tests.TestAll.test1(TestAll.java:65)
             * sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 1
  /*
   * 12 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.tests.TestAll.test3()V:99 - DeleteStatement: setup()Ljava/io/File;
   * 2 com.sleepycat.tests.TestAll.test3()V: root-Branch
   * 3 Weak Mutation 76: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - user.dir -> 
   * 4 Weak Mutation 77: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 5 Weak Mutation 78: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 6 Weak Mutation 79: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - ReplaceConstant - /dbEnv -> 
   * 7 Weak Mutation 84: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:154 - DeleteStatement: mkdir()Z
   * 8 Weak Mutation 81: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: toString()Ljava/lang/String;
   * 9 Weak Mutation 80: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:152 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 83: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - ReplaceComparisonOperator != -> ==
   * 11 Weak Mutation 82: com.sleepycat.tests.TestAll.setup()Ljava/io/File;:153 - DeleteStatement: exists()Z
   * 12 Weak Mutation 19: com.sleepycat.tests.TestAll.test3()V:99 - DeleteStatement: setup()Ljava/io/File;
   */
  @Test
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          // Undeclared exception!
          try {
            TestAll.test3();
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /Users/sabrinasouto/git/spl-test-amplification/libs/dbEnv write)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkWrite(SecurityManager.java:962)
             * java.io.File.mkdir(File.java:1155)
             * com.sleepycat.tests.TestAll.setup(TestAll.java:154)
             * com.sleepycat.tests.TestAll.test3(TestAll.java:99)
             * sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }

  //Test case number: 2
  /*
   * 28 covered goals:
   * 1 Weak Mutation 53: com.sleepycat.tests.TestAll.test2()V:125 - DeleteStatement: run(Lcom/sleepycat/tests/gettingStarted/MyDbEnv;)V
   * 2 Weak Mutation 55: com.sleepycat.tests.TestAll.test2()V:128 - DeleteField: errLjava/io/PrintStream;
   * 3 Weak Mutation 59: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Weak Mutation 58: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 57: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 56: com.sleepycat.tests.TestAll.test2()V:128 - ReplaceConstant - ExampleDatabasePut:  -> 
   * 7 Weak Mutation 60: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: println(Ljava/lang/String;)V
   * 8 Weak Mutation 61: com.sleepycat.tests.TestAll.test2()V:129 - DeleteStatement: printStackTrace()V
   * 9 Weak Mutation 62: com.sleepycat.tests.TestAll.test2()V:134 - DeleteStatement: close()V
   * 10 Weak Mutation 73: com.sleepycat.tests.TestAll.test2()V:136 - ReplaceConstant - user.dir -> 
   * 11 Weak Mutation 74: com.sleepycat.tests.TestAll.test2()V:136 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 12 Weak Mutation 85: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - DeleteStatement: exists()Z
   * 13 Weak Mutation 86: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - ReplaceComparisonOperator == -> !=
   * 14 com.sleepycat.tests.TestAll.test2()V: root-Branch
   * 15 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I4 Branch 3 IFEQ L160 - true
   * 16 Weak Mutation 55: com.sleepycat.tests.TestAll.test2()V:128 - DeleteField: errLjava/io/PrintStream;
   * 17 Weak Mutation 53: com.sleepycat.tests.TestAll.test2()V:125 - DeleteStatement: run(Lcom/sleepycat/tests/gettingStarted/MyDbEnv;)V
   * 18 Weak Mutation 59: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: toString()Ljava/lang/String;
   * 19 Weak Mutation 58: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 20 Weak Mutation 57: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: toString()Ljava/lang/String;
   * 21 Weak Mutation 56: com.sleepycat.tests.TestAll.test2()V:128 - ReplaceConstant - ExampleDatabasePut:  -> 
   * 22 Weak Mutation 62: com.sleepycat.tests.TestAll.test2()V:134 - DeleteStatement: close()V
   * 23 Weak Mutation 61: com.sleepycat.tests.TestAll.test2()V:129 - DeleteStatement: printStackTrace()V
   * 24 Weak Mutation 60: com.sleepycat.tests.TestAll.test2()V:128 - DeleteStatement: println(Ljava/lang/String;)V
   * 25 Weak Mutation 73: com.sleepycat.tests.TestAll.test2()V:136 - ReplaceConstant - user.dir -> 
   * 26 Weak Mutation 74: com.sleepycat.tests.TestAll.test2()V:136 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 27 Weak Mutation 85: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - DeleteStatement: exists()Z
   * 28 Weak Mutation 86: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test2()  throws Throwable  {
      TestAll.test2();
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 75: com.sleepycat.tests.TestAll.test4()V:148 - DeleteStatement: run()V
   * 2 com.sleepycat.tests.TestAll.test4()V: root-Branch
   * 3 Weak Mutation 75: com.sleepycat.tests.TestAll.test4()V:148 - DeleteStatement: run()V
   */
  @Test
  public void test3()  throws Throwable  {
      TestAll.test4();
  }

  //Test case number: 4
  /*
   * 43 covered goals:
   * 1 Weak Mutation 87: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:161 - DeleteStatement: isDirectory()Z
   * 2 Weak Mutation 88: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:161 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 92: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:162 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 90: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:162 - InsertUnaryOp Negation
   * 5 Weak Mutation 98: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - DeleteStatement: listFiles()[Ljava/io/File;
   * 6 Weak Mutation 99: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 108: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - ReplaceComparisonOperator < -> -2
   * 8 Weak Mutation 102: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceConstant - svn -> 
   * 9 Weak Mutation 103: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - DeleteStatement: contains(Ljava/lang/CharSequence;)Z
   * 10 Weak Mutation 100: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceVariable f -> file
   * 11 Weak Mutation 101: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - DeleteStatement: getName()Ljava/lang/String;
   * 12 Weak Mutation 104: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 106: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:167 - DeleteStatement: tearDown(Ljava/io/File;)V
   * 14 Weak Mutation 105: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:167 - ReplaceVariable f -> file
   * 15 Weak Mutation 111: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:171 - InsertUnaryOp Negation
   * 16 Weak Mutation 113: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:171 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 119: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:174 - DeleteStatement: delete()Z
   * 18 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I4 Branch 3 IFEQ L160 - false
   * 19 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I9 Branch 4 IFEQ L161 - true
   * 20 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I9 Branch 4 IFEQ L161 - false
   * 21 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I13 Branch 5 IFEQ L162 - true
   * 22 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I58 Branch 7 IF_ICMPLT L165 - true
   * 23 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I47 Branch 6 IFNE L166 - false
   * 24 com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V: I65 Branch 8 IFEQ L171 - true
   * 25 Weak Mutation 85: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - DeleteStatement: exists()Z
   * 26 Weak Mutation 86: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:160 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 87: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:161 - DeleteStatement: isDirectory()Z
   * 28 Weak Mutation 92: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:162 - ReplaceComparisonOperator == -> !=
   * 29 Weak Mutation 88: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:161 - ReplaceComparisonOperator == -> !=
   * 30 Weak Mutation 90: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:162 - InsertUnaryOp Negation
   * 31 Weak Mutation 102: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceConstant - svn -> 
   * 32 Weak Mutation 103: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - DeleteStatement: contains(Ljava/lang/CharSequence;)Z
   * 33 Weak Mutation 100: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceVariable f -> file
   * 34 Weak Mutation 101: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - DeleteStatement: getName()Ljava/lang/String;
   * 35 Weak Mutation 98: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - DeleteStatement: listFiles()[Ljava/io/File;
   * 36 Weak Mutation 99: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 111: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:171 - InsertUnaryOp Negation
   * 38 Weak Mutation 108: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:165 - ReplaceComparisonOperator < -> -2
   * 39 Weak Mutation 106: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:167 - DeleteStatement: tearDown(Ljava/io/File;)V
   * 40 Weak Mutation 104: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:166 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 105: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:167 - ReplaceVariable f -> file
   * 42 Weak Mutation 119: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:174 - DeleteStatement: delete()Z
   * 43 Weak Mutation 113: com.sleepycat.tests.TestAll.tearDown(Ljava/io/File;)V:171 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            public void run() { 
          File file0 = new File("", "");
          // Undeclared exception!
          try {
            TestAll.tearDown(file0);
            fail("Expecting exception: SecurityException");
          } catch(SecurityException e) {
            /*
             * Security manager blocks (java.io.FilePermission /.dbfseventsd delete)
             * java.lang.Thread.getStackTrace(Thread.java:1503)
             * org.evosuite.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:303)
             * java.lang.SecurityManager.checkDelete(SecurityManager.java:990)
             * java.io.File.delete(File.java:902)
             * com.sleepycat.tests.TestAll.tearDown(TestAll.java:174)
             * com.sleepycat.tests.TestAll.tearDown(TestAll.java:167)
             * sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)
             * sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
             * java.lang.reflect.Method.invoke(Method.java:597)
             * org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
             * org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
             * org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
             * org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
             * java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
             * java.util.concurrent.FutureTask.run(FutureTask.java:138)
             * java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
             * java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
             * java.lang.Thread.run(Thread.java:680)
             */
          }
      } 
    }); 
    future.get(6000, TimeUnit.MILLISECONDS); 
  }
}
