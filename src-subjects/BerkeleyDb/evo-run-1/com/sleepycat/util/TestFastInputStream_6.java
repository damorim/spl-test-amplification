/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.FastInputStream;
import java.io.IOException;

@RunWith(EvoSuiteRunner.class)
public class TestFastInputStream_6 {


  //Test case number: 6
  /*
   * 69 covered goals:
   * 1 Weak Mutation 125: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> *
   * 2 Weak Mutation 122: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> +
   * 3 Weak Mutation 121: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - DeleteField: offI
   * 4 Weak Mutation 143: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - ReplaceComparisonOperator <= -> -1
   * 5 Weak Mutation 144: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp Negation
   * 6 Weak Mutation 145: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 146: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp IINC -1
   * 8 Weak Mutation 151: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - DeleteField: offI
   * 9 Weak Mutation 162: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - DeleteField: offI
   * 10 com.sleepycat.util.FastInputStream.readFast([BII)I: I20 Branch 4 IF_ICMPLE L93 - false
   * 11 Weak Mutation 42: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceComparisonOperator <= -> ==
   * 12 Weak Mutation 42: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceComparisonOperator <= -> ==
   * 13 Weak Mutation 72: com.sleepycat.util.FastInputStream.read([B)I:62 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 73: com.sleepycat.util.FastInputStream.read([B)I:62 - DeleteStatement: readFast([BII)I
   * 15 Weak Mutation 119: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp +1
   * 16 Weak Mutation 118: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp Negation
   * 17 Weak Mutation 117: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - DeleteField: lenI
   * 18 Weak Mutation 116: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp -1
   * 19 Weak Mutation 115: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp +1
   * 20 Weak Mutation 114: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp Negation
   * 21 Weak Mutation 127: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 126: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - InsertUnaryOp Negation
   * 23 Weak Mutation 125: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> *
   * 24 Weak Mutation 124: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> /
   * 25 Weak Mutation 123: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> %
   * 26 Weak Mutation 122: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - ReplaceArithmeticOperator - -> +
   * 27 Weak Mutation 121: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - DeleteField: offI
   * 28 Weak Mutation 120: com.sleepycat.util.FastInputStream.readFast([BII)I:89 - InsertUnaryOp -1
   * 29 Weak Mutation 137: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 136: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp IINC 1
   * 31 Weak Mutation 139: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 138: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp Negation
   * 33 Weak Mutation 140: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp IINC -1
   * 34 Weak Mutation 143: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - ReplaceComparisonOperator <= -> -1
   * 35 Weak Mutation 128: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 131: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - ReplaceComparisonOperator > -> -2
   * 37 Weak Mutation 135: com.sleepycat.util.FastInputStream.readFast([BII)I:93 - InsertUnaryOp Negation
   * 38 Weak Mutation 152: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp Negation
   * 39 Weak Mutation 153: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 154: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp IINC -1
   * 41 Weak Mutation 155: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp Negation
   * 42 Weak Mutation 156: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp IINC 1
   * 43 Weak Mutation 157: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp IINC -1
   * 44 Weak Mutation 158: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 45 Weak Mutation 159: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp Negation
   * 46 Weak Mutation 144: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp Negation
   * 47 Weak Mutation 145: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp IINC 1
   * 48 Weak Mutation 146: com.sleepycat.util.FastInputStream.readFast([BII)I:94 - InsertUnaryOp IINC -1
   * 49 Weak Mutation 147: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - DeleteField: buf[B
   * 50 Weak Mutation 148: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp Negation
   * 51 Weak Mutation 149: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp +1
   * 52 Weak Mutation 150: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - InsertUnaryOp -1
   * 53 Weak Mutation 151: com.sleepycat.util.FastInputStream.readFast([BII)I:96 - DeleteField: offI
   * 54 Weak Mutation 171: com.sleepycat.util.FastInputStream.readFast([BII)I:98 - InsertUnaryOp IINC 1
   * 55 Weak Mutation 170: com.sleepycat.util.FastInputStream.readFast([BII)I:98 - InsertUnaryOp Negation
   * 56 Weak Mutation 169: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - ReplaceArithmeticOperator + -> *
   * 57 Weak Mutation 168: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - ReplaceArithmeticOperator + -> /
   * 58 Weak Mutation 172: com.sleepycat.util.FastInputStream.readFast([BII)I:98 - InsertUnaryOp IINC -1
   * 59 Weak Mutation 163: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp Negation
   * 60 Weak Mutation 162: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - DeleteField: offI
   * 61 Weak Mutation 161: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp -1
   * 62 Weak Mutation 160: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp +1
   * 63 Weak Mutation 167: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - ReplaceArithmeticOperator + -> %
   * 64 Weak Mutation 166: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - ReplaceArithmeticOperator + -> -
   * 65 Weak Mutation 165: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp IINC -1
   * 66 Weak Mutation 164: com.sleepycat.util.FastInputStream.readFast([BII)I:97 - InsertUnaryOp IINC 1
   * 67 com.sleepycat.util.FastInputStream.read([B)I: root-Branch
   * 68 com.sleepycat.util.FastInputStream.readFast([BII)I: I11 Branch 3 IFGT L90 - true
   * 69 com.sleepycat.util.FastInputStream.skip(J)J: I13 Branch 1 IF_ICMPLE L52 - true
   */
  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FastInputStream fastInputStream0 = new FastInputStream(byteArray0);
      fastInputStream0.skip(1L);
      int int0 = fastInputStream0.read(byteArray0);
      assertEquals(7, fastInputStream0.getBufferOffset());
      assertEquals(2, int0);
  }
}
