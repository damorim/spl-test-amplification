/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.UtfOps;

@RunWith(EvoSuiteRunner.class)
public class TestUtfOps_15 {


  //Test case number: 15
  /*
   * 68 covered goals:
   * 1 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 32 TABLESWITCH L130 Case 6 - true
   * 2 Weak Mutation 70: com.sleepycat.util.UtfOps.getCharLength([BII)I:82 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 71: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - InsertUnaryOp Negation
   * 4 Weak Mutation 76: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - ReplaceArithmeticOperator + -> %
   * 5 Weak Mutation 77: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 79: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp Negation
   * 7 Weak Mutation 72: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - InsertUnaryOp Negation
   * 8 Weak Mutation 73: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 74: com.sleepycat.util.UtfOps.getCharLength([BII)I:83 - InsertUnaryOp IINC -1
   * 10 Weak Mutation 84: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 87: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 86: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - ReplaceComparisonOperator >= -> >
   * 13 Weak Mutation 81: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp IINC -1
   * 14 Weak Mutation 80: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp IINC 1
   * 15 Weak Mutation 83: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 82: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - InsertUnaryOp Negation
   * 17 Weak Mutation 93: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 255 -> -1
   * 18 Weak Mutation 92: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 255 -> 1
   * 19 Weak Mutation 95: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 255 -> 256
   * 20 Weak Mutation 94: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 255 -> 254
   * 21 Weak Mutation 89: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 88: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - InsertUnaryOp Negation
   * 23 Weak Mutation 91: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 255 -> 0
   * 24 Weak Mutation 90: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 102: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 4 -> 5
   * 26 Weak Mutation 100: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 4 -> -1
   * 27 Weak Mutation 101: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 4 -> 3
   * 28 Weak Mutation 98: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 4 -> 0
   * 29 Weak Mutation 99: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceConstant - 4 -> 1
   * 30 Weak Mutation 96: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceBitwiseOperator & -> |
   * 31 Weak Mutation 97: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceBitwiseOperator & -> ^
   * 32 Weak Mutation 106: com.sleepycat.util.UtfOps.getCharLength([BII)I:108 - InsertUnaryOp IINC 1
   * 33 Weak Mutation 107: com.sleepycat.util.UtfOps.getCharLength([BII)I:108 - InsertUnaryOp IINC -1
   * 34 Weak Mutation 104: com.sleepycat.util.UtfOps.getCharLength([BII)I:85 - ReplaceBitwiseOperator >> -> <<
   * 35 Weak Mutation 105: com.sleepycat.util.UtfOps.getCharLength([BII)I:108 - InsertUnaryOp Negation
   * 36 Weak Mutation 139: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> >
   * 37 Weak Mutation 171: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp Negation
   * 38 Weak Mutation 170: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 169: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 168: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp Negation
   * 41 Weak Mutation 173: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC -1
   * 42 Weak Mutation 172: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC 1
   * 43 Weak Mutation 373: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 44 Weak Mutation 372: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 45 Weak Mutation 375: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - DeleteStatement: getCharLength([BII)I
   * 46 Weak Mutation 374: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 47 Weak Mutation 369: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 48 Weak Mutation 371: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 49 Weak Mutation 370: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 50 Weak Mutation 381: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC -1
   * 51 Weak Mutation 380: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 383: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 53 Weak Mutation 382: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 0 -> 1
   * 54 Weak Mutation 377: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC 1
   * 55 Weak Mutation 376: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp Negation
   * 56 Weak Mutation 379: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 57 Weak Mutation 378: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC -1
   * 58 Weak Mutation 364: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC -1
   * 59 Weak Mutation 365: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - ReplaceComparisonOperator != -> <
   * 60 Weak Mutation 362: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp Negation
   * 61 Weak Mutation 363: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC 1
   * 62 Weak Mutation 387: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - InsertUnaryOp Negation
   * 63 Weak Mutation 386: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - ReplaceConstant - 0 -> 1
   * 64 Weak Mutation 385: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - DeleteStatement: bytesToChars([BI[CIIZ)I
   * 65 Weak Mutation 384: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 1 -> 0
   * 66 Weak Mutation 139: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> >
   * 67 Weak Mutation 365: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - ReplaceComparisonOperator != -> <
   * 68 com.sleepycat.util.UtfOps.getCharLength([BII)I: I24 Branch 13 TABLESWITCH L85 Case 6 - true
   */
  @Test
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)97;
      String string0 = UtfOps.bytesToString(byteArray0, 0, (int) (byte)5);
      assertNotNull(string0);
      assertEquals("\u0000\u0000\u0000\u0000a", string0);
  }
}
