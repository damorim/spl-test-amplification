/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.FastInputStream;
import java.io.IOException;

@RunWith(EvoSuiteRunner.class)
public class TestFastInputStream_13 {


  //Test case number: 13
  /*
   * 14 covered goals:
   * 1 Weak Mutation 113: com.sleepycat.util.FastInputStream.readFast([B)I:81 - DeleteStatement: readFast([BII)I
   * 2 Weak Mutation 112: com.sleepycat.util.FastInputStream.readFast([B)I:81 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 129: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - ReplaceComparisonOperator > -> !=
   * 4 Weak Mutation 133: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> 1
   * 5 Weak Mutation 132: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 134: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> -2
   * 7 com.sleepycat.util.FastInputStream.readFast([B)I: root-Branch
   * 8 com.sleepycat.util.FastInputStream.readFast([BII)I: I11 Branch 3 IFGT L90 - false
   * 9 Weak Mutation 113: com.sleepycat.util.FastInputStream.readFast([B)I:81 - DeleteStatement: readFast([BII)I
   * 10 Weak Mutation 112: com.sleepycat.util.FastInputStream.readFast([B)I:81 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 129: com.sleepycat.util.FastInputStream.readFast([BII)I:90 - ReplaceComparisonOperator > -> !=
   * 12 Weak Mutation 133: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> 1
   * 13 Weak Mutation 132: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> 0
   * 14 Weak Mutation 134: com.sleepycat.util.FastInputStream.readFast([BII)I:91 - ReplaceConstant - -1 -> -2
   */
  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FastInputStream fastInputStream0 = new FastInputStream(byteArray0, (int) (byte)0, (-1978));
      int int0 = fastInputStream0.readFast(byteArray0);
      assertEquals(-1978, fastInputStream0.available());
      assertEquals((-1), int0);
  }
}
