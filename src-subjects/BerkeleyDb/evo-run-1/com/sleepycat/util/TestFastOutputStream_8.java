/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.FastOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

@RunWith(EvoSuiteRunner.class)
public class TestFastOutputStream_8 {


  //Test case number: 8
  /*
   * 71 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - DeleteField: lenI
   * 2 Weak Mutation 95: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 94: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - ReplaceComparisonOperator <= -> -1
   * 4 Weak Mutation 100: com.sleepycat.util.FastOutputStream.writeFast(I)V:118 - DeleteField: lenI
   * 5 Weak Mutation 126: com.sleepycat.util.FastOutputStream.writeFast([B)V:127 - ReplaceComparisonOperator <= -> <
   * 6 Weak Mutation 247: com.sleepycat.util.FastOutputStream.bump(I)V:181 - DeleteField: buf[B
   * 7 Weak Mutation 241: com.sleepycat.util.FastOutputStream.bump(I)V:181 - ReplaceComparisonOperator <= -> <
   * 8 Weak Mutation 269: com.sleepycat.util.FastOutputStream.bump(I)V:183 - DeleteField: lenI
   * 9 com.sleepycat.util.FastOutputStream.writeFast(I)V: I9 Branch 2 IF_ICMPLE L117 - false
   * 10 com.sleepycat.util.FastOutputStream.writeFast([B)V: I15 Branch 3 IFLE L127 - true
   * 11 com.sleepycat.util.FastOutputStream.bump(I)V: I4 Branch 6 IFLE L181 - true
   * 12 Weak Mutation 85: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - DeleteField: lenI
   * 13 Weak Mutation 95: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 94: com.sleepycat.util.FastOutputStream.writeFast(I)V:117 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 100: com.sleepycat.util.FastOutputStream.writeFast(I)V:118 - DeleteField: lenI
   * 16 Weak Mutation 110: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - InsertUnaryOp +1
   * 17 Weak Mutation 111: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - InsertUnaryOp -1
   * 18 Weak Mutation 109: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - InsertUnaryOp Negation
   * 19 Weak Mutation 118: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator - -> +
   * 20 Weak Mutation 117: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - DeleteField: buf[B
   * 21 Weak Mutation 116: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator + -> *
   * 22 Weak Mutation 115: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator + -> /
   * 23 Weak Mutation 114: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator + -> %
   * 24 Weak Mutation 113: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator + -> -
   * 25 Weak Mutation 126: com.sleepycat.util.FastOutputStream.writeFast([B)V:127 - ReplaceComparisonOperator <= -> <
   * 26 Weak Mutation 124: com.sleepycat.util.FastOutputStream.writeFast([B)V:127 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 123: com.sleepycat.util.FastOutputStream.writeFast([B)V:127 - InsertUnaryOp IINC 1
   * 28 Weak Mutation 122: com.sleepycat.util.FastOutputStream.writeFast([B)V:127 - InsertUnaryOp Negation
   * 29 Weak Mutation 121: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator - -> *
   * 30 Weak Mutation 120: com.sleepycat.util.FastOutputStream.writeFast([B)V:126 - ReplaceArithmeticOperator - -> /
   * 31 Weak Mutation 137: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 32 Weak Mutation 139: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - InsertUnaryOp +1
   * 33 Weak Mutation 138: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - InsertUnaryOp Negation
   * 34 Weak Mutation 140: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - InsertUnaryOp -1
   * 35 Weak Mutation 143: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - ReplaceArithmeticOperator + -> %
   * 36 Weak Mutation 142: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - ReplaceArithmeticOperator + -> -
   * 37 Weak Mutation 131: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 133: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - InsertUnaryOp Negation
   * 39 Weak Mutation 132: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - DeleteField: buf[B
   * 40 Weak Mutation 135: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - InsertUnaryOp -1
   * 41 Weak Mutation 134: com.sleepycat.util.FastOutputStream.writeFast([B)V:128 - InsertUnaryOp +1
   * 42 Weak Mutation 144: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - ReplaceArithmeticOperator + -> /
   * 43 Weak Mutation 145: com.sleepycat.util.FastOutputStream.writeFast([B)V:129 - ReplaceArithmeticOperator + -> *
   * 44 Weak Mutation 238: com.sleepycat.util.FastOutputStream.bump(I)V:181 - InsertUnaryOp -1
   * 45 Weak Mutation 237: com.sleepycat.util.FastOutputStream.bump(I)V:181 - InsertUnaryOp +1
   * 46 Weak Mutation 236: com.sleepycat.util.FastOutputStream.bump(I)V:181 - InsertUnaryOp Negation
   * 47 Weak Mutation 254: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> /
   * 48 Weak Mutation 255: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> *
   * 49 Weak Mutation 252: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> -
   * 50 Weak Mutation 253: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> %
   * 51 Weak Mutation 250: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 251: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 248: com.sleepycat.util.FastOutputStream.bump(I)V:182 - DeleteField: buf[B
   * 54 Weak Mutation 249: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp Negation
   * 55 Weak Mutation 247: com.sleepycat.util.FastOutputStream.bump(I)V:181 - DeleteField: buf[B
   * 56 Weak Mutation 241: com.sleepycat.util.FastOutputStream.bump(I)V:181 - ReplaceComparisonOperator <= -> <
   * 57 Weak Mutation 258: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp IINC -1
   * 58 Weak Mutation 259: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> -
   * 59 Weak Mutation 256: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp Negation
   * 60 Weak Mutation 257: com.sleepycat.util.FastOutputStream.bump(I)V:182 - InsertUnaryOp IINC 1
   * 61 Weak Mutation 262: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> *
   * 62 Weak Mutation 263: com.sleepycat.util.FastOutputStream.bump(I)V:183 - DeleteField: buf[B
   * 63 Weak Mutation 260: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> %
   * 64 Weak Mutation 261: com.sleepycat.util.FastOutputStream.bump(I)V:182 - ReplaceArithmeticOperator + -> /
   * 65 Weak Mutation 266: com.sleepycat.util.FastOutputStream.bump(I)V:183 - InsertUnaryOp Negation
   * 66 Weak Mutation 267: com.sleepycat.util.FastOutputStream.bump(I)V:183 - InsertUnaryOp +1
   * 67 Weak Mutation 264: com.sleepycat.util.FastOutputStream.bump(I)V:183 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 265: com.sleepycat.util.FastOutputStream.bump(I)V:183 - ReplaceConstant - 0 -> 1
   * 69 Weak Mutation 270: com.sleepycat.util.FastOutputStream.bump(I)V:183 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 70 Weak Mutation 268: com.sleepycat.util.FastOutputStream.bump(I)V:183 - InsertUnaryOp -1
   * 71 Weak Mutation 269: com.sleepycat.util.FastOutputStream.bump(I)V:183 - DeleteField: lenI
   */
  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FastOutputStream fastOutputStream0 = new FastOutputStream(byteArray0, 0);
      fastOutputStream0.writeFast(byteArray0);
      fastOutputStream0.write(0);
      assertEquals(4, fastOutputStream0.size());
      assertEquals("\u0000\u0000\u0000\u0000", fastOutputStream0.toString());
  }
}
