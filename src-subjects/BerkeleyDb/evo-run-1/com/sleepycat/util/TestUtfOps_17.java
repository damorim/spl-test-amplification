/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.UtfOps;

@RunWith(EvoSuiteRunner.class)
public class TestUtfOps_17 {


  //Test case number: 17
  /*
   * 51 covered goals:
   * 1 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 41 TABLESWITCH L130 Default-Case - true
   * 2 Weak Mutation 110: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 3 Weak Mutation 111: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 4 Weak Mutation 108: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 5 Weak Mutation 109: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 119: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 118: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 8 Weak Mutation 114: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 113: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 10 Weak Mutation 112: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 127: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 12 Weak Mutation 126: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 125: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 14 Weak Mutation 124: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 123: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 122: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 121: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> -
   * 18 Weak Mutation 120: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 137: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 136: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 141: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp Negation
   * 22 Weak Mutation 140: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> -1
   * 23 Weak Mutation 143: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 142: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp IINC 1
   * 25 Weak Mutation 128: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator == -> !=
   * 26 Weak Mutation 133: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 27 Weak Mutation 132: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 28 Weak Mutation 135: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 29 Weak Mutation 134: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 152: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp IINC 1
   * 31 Weak Mutation 153: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 154: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 0
   * 33 Weak Mutation 155: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 1
   * 34 Weak Mutation 156: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> -1
   * 35 Weak Mutation 157: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 254
   * 36 Weak Mutation 158: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 256
   * 37 Weak Mutation 144: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 0
   * 38 Weak Mutation 145: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 1
   * 39 Weak Mutation 146: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> -1
   * 40 Weak Mutation 147: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 254
   * 41 Weak Mutation 148: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 256
   * 42 Weak Mutation 149: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceBitwiseOperator & -> |
   * 43 Weak Mutation 150: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceBitwiseOperator & -> ^
   * 44 Weak Mutation 151: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp Negation
   * 45 Weak Mutation 163: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> -1
   * 46 Weak Mutation 162: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 1
   * 47 Weak Mutation 161: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 0
   * 48 Weak Mutation 160: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator & -> ^
   * 49 Weak Mutation 167: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator >> -> <<
   * 50 Weak Mutation 165: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 5
   * 51 Weak Mutation 164: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 3
   */
  @Test
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-1);
      char[] charArray0 = new char[4];
      try {
        UtfOps.bytesToChars(byteArray0, (int) (byte)0, charArray0, (int) (byte)95, (int) (byte)95, false);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
      }
  }
}
