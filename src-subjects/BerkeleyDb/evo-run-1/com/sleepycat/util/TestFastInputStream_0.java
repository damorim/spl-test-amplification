/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.FastInputStream;

@RunWith(EvoSuiteRunner.class)
public class TestFastInputStream_0 {


  //Test case number: 0
  /*
   * 57 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 33: com.sleepycat.util.FastInputStream.skip(J)J:52 - DeleteField: offI
   * 3 Weak Mutation 37: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 53: com.sleepycat.util.FastInputStream.skip(J)J:53 - ReplaceArithmeticOperator - -> +
   * 5 Weak Mutation 52: com.sleepycat.util.FastInputStream.skip(J)J:53 - DeleteField: offI
   * 6 Weak Mutation 56: com.sleepycat.util.FastInputStream.skip(J)J:53 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 60: com.sleepycat.util.FastInputStream.skip(J)J:55 - DeleteField: offI
   * 8 Weak Mutation 0: com.sleepycat.util.FastInputStream.<init>([BII)V:35 - InsertUnaryOp Negation
   * 9 Weak Mutation 1: com.sleepycat.util.FastInputStream.<init>([BII)V:35 - InsertUnaryOp IINC 1
   * 10 Weak Mutation 2: com.sleepycat.util.FastInputStream.<init>([BII)V:35 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 3: com.sleepycat.util.FastInputStream.<init>([BII)V:36 - InsertUnaryOp Negation
   * 12 Weak Mutation 4: com.sleepycat.util.FastInputStream.<init>([BII)V:36 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 5: com.sleepycat.util.FastInputStream.<init>([BII)V:36 - InsertUnaryOp IINC -1
   * 14 Weak Mutation 27: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp Negation
   * 15 Weak Mutation 26: com.sleepycat.util.FastInputStream.skip(J)J:51 - InsertUnaryOp Negation
   * 16 Weak Mutation 29: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp IINC -1
   * 17 Weak Mutation 28: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 31: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp +1
   * 19 Weak Mutation 30: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp Negation
   * 20 Weak Mutation 34: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> -
   * 21 Weak Mutation 35: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> %
   * 22 Weak Mutation 32: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp -1
   * 23 Weak Mutation 33: com.sleepycat.util.FastInputStream.skip(J)J:52 - DeleteField: offI
   * 24 Weak Mutation 38: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp Negation
   * 25 Weak Mutation 39: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp +1
   * 26 Weak Mutation 36: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> /
   * 27 Weak Mutation 37: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 40: com.sleepycat.util.FastInputStream.skip(J)J:52 - InsertUnaryOp -1
   * 29 Weak Mutation 41: com.sleepycat.util.FastInputStream.skip(J)J:52 - DeleteField: lenI
   * 30 Weak Mutation 46: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp +1
   * 31 Weak Mutation 47: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp -1
   * 32 Weak Mutation 44: com.sleepycat.util.FastInputStream.skip(J)J:52 - ReplaceComparisonOperator <= -> -1
   * 33 Weak Mutation 45: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp Negation
   * 34 Weak Mutation 51: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp -1
   * 35 Weak Mutation 50: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp +1
   * 36 Weak Mutation 49: com.sleepycat.util.FastInputStream.skip(J)J:53 - InsertUnaryOp Negation
   * 37 Weak Mutation 48: com.sleepycat.util.FastInputStream.skip(J)J:53 - DeleteField: lenI
   * 38 Weak Mutation 55: com.sleepycat.util.FastInputStream.skip(J)J:53 - ReplaceArithmeticOperator - -> /
   * 39 Weak Mutation 53: com.sleepycat.util.FastInputStream.skip(J)J:53 - ReplaceArithmeticOperator - -> +
   * 40 Weak Mutation 52: com.sleepycat.util.FastInputStream.skip(J)J:53 - DeleteField: offI
   * 41 Weak Mutation 59: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp -1
   * 42 Weak Mutation 58: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp +1
   * 43 Weak Mutation 57: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp Negation
   * 44 Weak Mutation 56: com.sleepycat.util.FastInputStream.skip(J)J:53 - ReplaceArithmeticOperator - -> *
   * 45 Weak Mutation 63: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp IINC -1
   * 46 Weak Mutation 62: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp IINC 1
   * 47 Weak Mutation 61: com.sleepycat.util.FastInputStream.skip(J)J:55 - InsertUnaryOp Negation
   * 48 Weak Mutation 60: com.sleepycat.util.FastInputStream.skip(J)J:55 - DeleteField: offI
   * 49 Weak Mutation 68: com.sleepycat.util.FastInputStream.skip(J)J:56 - InsertUnaryOp Negation
   * 50 Weak Mutation 69: com.sleepycat.util.FastInputStream.skip(J)J:56 - InsertUnaryOp IINC 1
   * 51 Weak Mutation 70: com.sleepycat.util.FastInputStream.skip(J)J:56 - InsertUnaryOp IINC -1
   * 52 Weak Mutation 64: com.sleepycat.util.FastInputStream.skip(J)J:55 - ReplaceArithmeticOperator + -> -
   * 53 Weak Mutation 65: com.sleepycat.util.FastInputStream.skip(J)J:55 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 66: com.sleepycat.util.FastInputStream.skip(J)J:55 - ReplaceArithmeticOperator + -> /
   * 55 Weak Mutation 67: com.sleepycat.util.FastInputStream.skip(J)J:55 - ReplaceArithmeticOperator + -> *
   * 56 com.sleepycat.util.FastInputStream.<init>([BII)V: root-Branch
   * 57 com.sleepycat.util.FastInputStream.skip(J)J: I13 Branch 1 IF_ICMPLE L52 - false
   */
  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FastInputStream fastInputStream0 = new FastInputStream(byteArray0, (-472), (-752));
      long long0 = fastInputStream0.skip((long) (byte)0);
      assertEquals(0, fastInputStream0.available());
      assertEquals((-280L), long0);
  }
}
