/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.UtfOps;

@RunWith(EvoSuiteRunner.class)
public class TestUtfOps_5 {


  //Test case number: 5
  /*
   * 98 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 110: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 3 Weak Mutation 111: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 4 Weak Mutation 108: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 5 Weak Mutation 109: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 117: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 7 Weak Mutation 116: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 115: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 9 Weak Mutation 114: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 113: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 112: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 123: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 122: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> %
   * 14 Weak Mutation 127: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 126: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 125: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 17 Weak Mutation 137: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 136: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 138: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> ==
   * 20 Weak Mutation 129: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 21 Weak Mutation 128: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 131: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 130: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 135: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 25 Weak Mutation 364: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC -1
   * 26 Weak Mutation 366: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - ReplaceComparisonOperator != -> >
   * 27 Weak Mutation 362: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp Negation
   * 28 Weak Mutation 363: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 373: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 30 Weak Mutation 372: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 31 Weak Mutation 375: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - DeleteStatement: getCharLength([BII)I
   * 32 Weak Mutation 374: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 33 Weak Mutation 369: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 34 Weak Mutation 371: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 370: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 377: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC 1
   * 37 Weak Mutation 376: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp Negation
   * 38 Weak Mutation 378: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 381: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC -1
   * 40 Weak Mutation 380: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC 1
   * 41 Weak Mutation 383: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 42 Weak Mutation 382: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 379: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 44 Weak Mutation 385: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - DeleteStatement: bytesToChars([BI[CIIZ)I
   * 45 Weak Mutation 384: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 1 -> 0
   * 46 Weak Mutation 387: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - InsertUnaryOp Negation
   * 47 Weak Mutation 386: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - ReplaceConstant - 0 -> 1
   * 48 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I4 Branch 23 IFEQ L127 - false
   * 49 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I15 Branch 24 IFEQ L128 - false
   * 50 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I22 Branch 25 IF_ICMPGE L128 - true
   * 51 com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;: I3 Branch 49 IFNE L201 - true
   * 52 Weak Mutation 85: com.sleepycat.util.UtfOps.getCharLength([BII)I:84 - ReplaceComparisonOperator >= -> ==
   * 53 Weak Mutation 110: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 111: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 55 Weak Mutation 108: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 56 Weak Mutation 109: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 57 Weak Mutation 117: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 58 Weak Mutation 116: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 59 Weak Mutation 115: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp Negation
   * 60 Weak Mutation 114: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceComparisonOperator == -> !=
   * 61 Weak Mutation 113: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC -1
   * 62 Weak Mutation 112: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - InsertUnaryOp IINC 1
   * 63 Weak Mutation 127: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 64 Weak Mutation 126: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 125: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 66 Weak Mutation 123: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> /
   * 67 Weak Mutation 122: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:127 - ReplaceArithmeticOperator + -> %
   * 68 Weak Mutation 137: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 69 Weak Mutation 136: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 70 Weak Mutation 138: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> ==
   * 71 Weak Mutation 129: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 72 Weak Mutation 128: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator == -> !=
   * 73 Weak Mutation 131: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC -1
   * 74 Weak Mutation 130: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp IINC 1
   * 75 Weak Mutation 135: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - InsertUnaryOp Negation
   * 76 Weak Mutation 373: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 77 Weak Mutation 372: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 78 Weak Mutation 375: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - DeleteStatement: getCharLength([BII)I
   * 79 Weak Mutation 374: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 80 Weak Mutation 369: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp Negation
   * 81 Weak Mutation 371: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC -1
   * 82 Weak Mutation 370: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:202 - InsertUnaryOp IINC 1
   * 83 Weak Mutation 381: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC -1
   * 84 Weak Mutation 380: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp IINC 1
   * 85 Weak Mutation 383: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 86 Weak Mutation 382: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 0 -> 1
   * 87 Weak Mutation 377: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC 1
   * 88 Weak Mutation 376: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp Negation
   * 89 Weak Mutation 379: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - InsertUnaryOp Negation
   * 90 Weak Mutation 378: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:203 - InsertUnaryOp IINC -1
   * 91 Weak Mutation 364: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC -1
   * 92 Weak Mutation 366: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - ReplaceComparisonOperator != -> >
   * 93 Weak Mutation 362: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp Negation
   * 94 Weak Mutation 363: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:201 - InsertUnaryOp IINC 1
   * 95 Weak Mutation 387: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - InsertUnaryOp Negation
   * 96 Weak Mutation 386: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:205 - ReplaceConstant - 0 -> 1
   * 97 Weak Mutation 385: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - DeleteStatement: bytesToChars([BI[CIIZ)I
   * 98 Weak Mutation 384: com.sleepycat.util.UtfOps.bytesToString([BII)Ljava/lang/String;:204 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      String string0 = UtfOps.bytesToString(byteArray0, (int) (byte)0, (-351));
      assertEquals("", string0);
      assertNotNull(string0);
  }
}
