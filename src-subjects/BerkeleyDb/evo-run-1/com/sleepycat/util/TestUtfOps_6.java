/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.UtfOps;

@RunWith(EvoSuiteRunner.class)
public class TestUtfOps_6 {


  //Test case number: 6
  /*
   * 187 covered goals:
   * 1 Weak Mutation 167: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator >> -> <<
   * 2 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 26 TABLESWITCH L130 Case 0 - false
   * 3 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 28 TABLESWITCH L130 Case 2 - true
   * 4 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 31 TABLESWITCH L130 Case 5 - true
   * 5 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 33 TABLESWITCH L130 Case 7 - true
   * 6 Weak Mutation 10: com.sleepycat.util.UtfOps.getByteLength([C)I:32 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 11: com.sleepycat.util.UtfOps.getByteLength([C)I:32 - DeleteStatement: getByteLength([CII)I
   * 8 Weak Mutation 12: com.sleepycat.util.UtfOps.getByteLength([CII)I:43 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 13: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp Negation
   * 10 Weak Mutation 14: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 15: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp IINC -1
   * 12 Weak Mutation 17: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 16: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp Negation
   * 14 Weak Mutation 18: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 21: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 20: com.sleepycat.util.UtfOps.getByteLength([CII)I:44 - ReplaceArithmeticOperator + -> %
   * 17 Weak Mutation 23: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp Negation
   * 18 Weak Mutation 25: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 24: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 27: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 26: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp Negation
   * 22 Weak Mutation 29: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp Negation
   * 23 Weak Mutation 28: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 31: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 30: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - InsertUnaryOp IINC 1
   * 26 Weak Mutation 34: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - ReplaceComparisonOperator >= -> -1
   * 27 Weak Mutation 35: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp Negation
   * 28 Weak Mutation 33: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - ReplaceComparisonOperator >= -> >
   * 29 Weak Mutation 38: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp Negation
   * 30 Weak Mutation 39: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC 1
   * 31 Weak Mutation 36: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp IINC 1
   * 32 Weak Mutation 37: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp IINC -1
   * 33 Weak Mutation 42: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator < -> >=
   * 34 Weak Mutation 43: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp Negation
   * 35 Weak Mutation 40: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 41: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 46: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 0
   * 38 Weak Mutation 47: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 1
   * 39 Weak Mutation 44: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 45: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC -1
   * 41 Weak Mutation 51: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator > -> >=
   * 42 Weak Mutation 50: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 128
   * 43 Weak Mutation 49: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 126
   * 44 Weak Mutation 48: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> -1
   * 45 Weak Mutation 52: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator > -> !=
   * 46 Weak Mutation 65: com.sleepycat.util.UtfOps.getByteLength([CII)I:57 - InsertUnaryOp Negation
   * 47 Weak Mutation 66: com.sleepycat.util.UtfOps.getByteLength([CII)I:57 - InsertUnaryOp IINC 1
   * 48 Weak Mutation 67: com.sleepycat.util.UtfOps.getByteLength([CII)I:57 - InsertUnaryOp IINC -1
   * 49 Weak Mutation 247: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - ReplaceComparisonOperator >= -> >
   * 50 Weak Mutation 273: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC -1
   * 51 Weak Mutation 272: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 258: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC 1
   * 53 Weak Mutation 259: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 257: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp Negation
   * 55 Weak Mutation 262: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> -1
   * 56 Weak Mutation 263: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 126
   * 57 Weak Mutation 260: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 0
   * 58 Weak Mutation 261: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 1
   * 59 Weak Mutation 266: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceComparisonOperator > -> !=
   * 60 Weak Mutation 264: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 128
   * 61 Weak Mutation 265: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceComparisonOperator > -> >=
   * 62 Weak Mutation 270: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC -1
   * 63 Weak Mutation 271: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp Negation
   * 64 Weak Mutation 268: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp Negation
   * 65 Weak Mutation 269: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC 1
   * 66 Weak Mutation 395: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - ReplaceConstant - 0 -> 1
   * 67 Weak Mutation 394: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:215 - DeleteStatement: getByteLength([C)I
   * 68 Weak Mutation 393: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:214 - DeleteStatement: toCharArray()[C
   * 69 Weak Mutation 397: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - DeleteStatement: charsToBytes([CI[BII)V
   * 70 Weak Mutation 396: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - ReplaceConstant - 0 -> 1
   * 71 Weak Mutation 389: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:213 - ReplaceComparisonOperator != -> <
   * 72 Weak Mutation 43: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp Negation
   * 73 Weak Mutation 46: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 0
   * 74 Weak Mutation 47: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 1
   * 75 Weak Mutation 44: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC 1
   * 76 Weak Mutation 45: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC -1
   * 77 Weak Mutation 51: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator > -> >=
   * 78 Weak Mutation 50: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 128
   * 79 Weak Mutation 49: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> 126
   * 80 Weak Mutation 48: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 127 -> -1
   * 81 Weak Mutation 52: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator > -> !=
   * 82 Weak Mutation 141: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp Negation
   * 83 Weak Mutation 140: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:128 - ReplaceComparisonOperator >= -> -1
   * 84 Weak Mutation 143: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp IINC -1
   * 85 Weak Mutation 142: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - InsertUnaryOp IINC 1
   * 86 Weak Mutation 152: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp IINC 1
   * 87 Weak Mutation 153: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp IINC -1
   * 88 Weak Mutation 154: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 0
   * 89 Weak Mutation 155: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 1
   * 90 Weak Mutation 156: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> -1
   * 91 Weak Mutation 157: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 254
   * 92 Weak Mutation 158: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 255 -> 256
   * 93 Weak Mutation 159: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator & -> |
   * 94 Weak Mutation 144: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 0
   * 95 Weak Mutation 145: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 1
   * 96 Weak Mutation 146: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> -1
   * 97 Weak Mutation 147: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 254
   * 98 Weak Mutation 148: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceConstant - 255 -> 256
   * 99 Weak Mutation 149: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceBitwiseOperator & -> |
   * 100 Weak Mutation 150: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:129 - ReplaceBitwiseOperator & -> ^
   * 101 Weak Mutation 151: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - InsertUnaryOp Negation
   * 102 Weak Mutation 171: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp Negation
   * 103 Weak Mutation 170: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC -1
   * 104 Weak Mutation 169: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC 1
   * 105 Weak Mutation 168: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp Negation
   * 106 Weak Mutation 173: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC -1
   * 107 Weak Mutation 172: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:139 - InsertUnaryOp IINC 1
   * 108 Weak Mutation 163: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> -1
   * 109 Weak Mutation 162: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 1
   * 110 Weak Mutation 161: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 0
   * 111 Weak Mutation 160: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator & -> ^
   * 112 Weak Mutation 167: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceBitwiseOperator >> -> <<
   * 113 Weak Mutation 165: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 5
   * 114 Weak Mutation 164: com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I:130 - ReplaceConstant - 4 -> 3
   * 115 Weak Mutation 239: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC -1
   * 116 Weak Mutation 238: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC 1
   * 117 Weak Mutation 237: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp Negation
   * 118 Weak Mutation 235: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - ReplaceArithmeticOperator + -> /
   * 119 Weak Mutation 234: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - ReplaceArithmeticOperator + -> %
   * 120 Weak Mutation 232: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp IINC -1
   * 121 Weak Mutation 231: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp IINC 1
   * 122 Weak Mutation 230: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp Negation
   * 123 Weak Mutation 229: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp IINC -1
   * 124 Weak Mutation 228: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp IINC 1
   * 125 Weak Mutation 227: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:171 - InsertUnaryOp Negation
   * 126 Weak Mutation 254: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC -1
   * 127 Weak Mutation 255: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 1 -> 0
   * 128 Weak Mutation 252: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp Negation
   * 129 Weak Mutation 253: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC 1
   * 130 Weak Mutation 250: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:173 - InsertUnaryOp IINC 1
   * 131 Weak Mutation 251: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:173 - InsertUnaryOp IINC -1
   * 132 Weak Mutation 248: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - ReplaceComparisonOperator >= -> -1
   * 133 Weak Mutation 249: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:173 - InsertUnaryOp Negation
   * 134 Weak Mutation 247: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - ReplaceComparisonOperator >= -> >
   * 135 Weak Mutation 244: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC 1
   * 136 Weak Mutation 245: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC -1
   * 137 Weak Mutation 242: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC -1
   * 138 Weak Mutation 243: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp Negation
   * 139 Weak Mutation 240: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp Negation
   * 140 Weak Mutation 241: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:172 - InsertUnaryOp IINC 1
   * 141 Weak Mutation 273: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC -1
   * 142 Weak Mutation 272: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC 1
   * 143 Weak Mutation 258: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC 1
   * 144 Weak Mutation 259: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp IINC -1
   * 145 Weak Mutation 256: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceComparisonOperator < -> >=
   * 146 Weak Mutation 257: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - InsertUnaryOp Negation
   * 147 Weak Mutation 262: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> -1
   * 148 Weak Mutation 263: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 126
   * 149 Weak Mutation 260: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 0
   * 150 Weak Mutation 261: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 1
   * 151 Weak Mutation 266: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceComparisonOperator > -> !=
   * 152 Weak Mutation 264: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceConstant - 127 -> 128
   * 153 Weak Mutation 265: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:174 - ReplaceComparisonOperator > -> >=
   * 154 Weak Mutation 270: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC -1
   * 155 Weak Mutation 271: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp Negation
   * 156 Weak Mutation 268: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp Negation
   * 157 Weak Mutation 269: com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V:175 - InsertUnaryOp IINC 1
   * 158 Weak Mutation 395: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - ReplaceConstant - 0 -> 1
   * 159 Weak Mutation 394: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:215 - DeleteStatement: getByteLength([C)I
   * 160 Weak Mutation 393: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:214 - DeleteStatement: toCharArray()[C
   * 161 Weak Mutation 397: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - DeleteStatement: charsToBytes([CI[BII)V
   * 162 Weak Mutation 396: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:216 - ReplaceConstant - 0 -> 1
   * 163 Weak Mutation 389: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:213 - ReplaceComparisonOperator != -> <
   * 164 Weak Mutation 388: com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B:213 - DeleteStatement: length()I
   * 165 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I22 Branch 25 IF_ICMPGE L128 - false
   * 166 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 27 TABLESWITCH L130 Case 1 - false
   * 167 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 28 TABLESWITCH L130 Case 2 - false
   * 168 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 29 TABLESWITCH L130 Case 3 - false
   * 169 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 30 TABLESWITCH L130 Case 4 - false
   * 170 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 31 TABLESWITCH L130 Case 5 - false
   * 171 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 32 TABLESWITCH L130 Case 6 - false
   * 172 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 33 TABLESWITCH L130 Case 7 - false
   * 173 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 34 TABLESWITCH L130 Case 8 - false
   * 174 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 35 TABLESWITCH L130 Case 9 - false
   * 175 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 36 TABLESWITCH L130 Case 10 - false
   * 176 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 37 TABLESWITCH L130 Case 11 - false
   * 177 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 38 TABLESWITCH L130 Case 12 - false
   * 178 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 39 TABLESWITCH L130 Case 13 - false
   * 179 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 40 TABLESWITCH L130 Case 14 - false
   * 180 com.sleepycat.util.UtfOps.bytesToChars([BI[CIIZ)I: I39 Branch 41 TABLESWITCH L130 Default-Case - false
   * 181 com.sleepycat.util.UtfOps.getByteLength([CII)I: I28 Branch 3 IF_ICMPLT L47 - false
   * 182 com.sleepycat.util.UtfOps.getByteLength([CII)I: I31 Branch 4 IF_ICMPGT L47 - false
   * 183 com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V: I13 Branch 45 IF_ICMPGE L172 - true
   * 184 com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V: I13 Branch 45 IF_ICMPGE L172 - false
   * 185 com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V: I24 Branch 46 IF_ICMPLT L174 - false
   * 186 com.sleepycat.util.UtfOps.charsToBytes([CI[BII)V: I27 Branch 47 IF_ICMPGT L174 - false
   * 187 com.sleepycat.util.UtfOps.stringToBytes(Ljava/lang/String;)[B: I4 Branch 50 IFNE L213 - true
   */
  @Test
  public void test6()  throws Throwable  {
      byte[] byteArray0 = UtfOps.stringToBytes("w#Qx.l");
      char[] charArray0 = new char[4];
      try {
        UtfOps.bytesToChars(byteArray0, 0, charArray0, 0, 1485, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 4
         */
      }
  }
}
