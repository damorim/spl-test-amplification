/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.FastOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

@RunWith(EvoSuiteRunner.class)
public class TestFastOutputStream_7 {


  //Test case number: 7
  /*
   * 32 covered goals:
   * 1 Weak Mutation 65: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - DeleteField: lenI
   * 2 Weak Mutation 66: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - ReplaceComparisonOperator != -> <
   * 3 Weak Mutation 70: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp Negation
   * 4 Weak Mutation 71: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp +1
   * 5 Weak Mutation 72: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp -1
   * 6 Weak Mutation 73: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - DeleteField: lenI
   * 7 Weak Mutation 76: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 77: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp Negation
   * 9 Weak Mutation 78: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp +1
   * 10 Weak Mutation 79: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp -1
   * 11 Weak Mutation 74: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteField: buf[B
   * 12 Weak Mutation 75: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 81: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 14 Weak Mutation 80: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteField: lenI
   * 15 com.sleepycat.util.FastOutputStream.toByteArray()[B: I4 Branch 1 IFNE L102 - true
   * 16 Weak Mutation 63: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - InsertUnaryOp +1
   * 17 Weak Mutation 62: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - InsertUnaryOp Negation
   * 18 Weak Mutation 64: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - InsertUnaryOp -1
   * 19 Weak Mutation 70: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp Negation
   * 20 Weak Mutation 71: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp +1
   * 21 Weak Mutation 65: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - DeleteField: lenI
   * 22 Weak Mutation 66: com.sleepycat.util.FastOutputStream.toByteArray()[B:102 - ReplaceComparisonOperator != -> <
   * 23 Weak Mutation 76: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 77: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp Negation
   * 25 Weak Mutation 78: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp +1
   * 26 Weak Mutation 79: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - InsertUnaryOp -1
   * 27 Weak Mutation 72: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - InsertUnaryOp -1
   * 28 Weak Mutation 73: com.sleepycat.util.FastOutputStream.toByteArray()[B:106 - DeleteField: lenI
   * 29 Weak Mutation 74: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteField: buf[B
   * 30 Weak Mutation 75: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 81: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 32 Weak Mutation 80: com.sleepycat.util.FastOutputStream.toByteArray()[B:107 - DeleteField: lenI
   */
  @Test
  public void test7()  throws Throwable  {
      FastOutputStream fastOutputStream0 = new FastOutputStream(1138, 1138);
      assertNotNull(fastOutputStream0);
      
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) fastOutputStream0);
      fastOutputStream0.toByteArray();
      assertEquals(4, fastOutputStream0.size());
      assertEquals(4, fastOutputStream0.getBufferLength());
  }
}
