/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.util.UtfOps;

@RunWith(EvoSuiteRunner.class)
public class TestUtfOps_3 {


  //Test case number: 3
  /*
   * 34 covered goals:
   * 1 Weak Mutation 55: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp IINC 1
   * 2 Weak Mutation 54: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp Negation
   * 3 Weak Mutation 59: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> -1
   * 4 Weak Mutation 58: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 1
   * 5 Weak Mutation 57: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 0
   * 6 Weak Mutation 56: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp IINC -1
   * 7 Weak Mutation 62: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceComparisonOperator <= -> ==
   * 8 Weak Mutation 61: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 2048
   * 9 Weak Mutation 60: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 2046
   * 10 com.sleepycat.util.UtfOps.getByteLength([CII)I: I28 Branch 3 IF_ICMPLT L47 - true
   * 11 com.sleepycat.util.UtfOps.getByteLength([CII)I: I40 Branch 5 IF_ICMPLE L50 - true
   * 12 Weak Mutation 10: com.sleepycat.util.UtfOps.getByteLength([C)I:32 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 11: com.sleepycat.util.UtfOps.getByteLength([C)I:32 - DeleteStatement: getByteLength([CII)I
   * 14 Weak Mutation 34: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - ReplaceComparisonOperator >= -> -1
   * 15 Weak Mutation 35: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp Negation
   * 16 Weak Mutation 33: com.sleepycat.util.UtfOps.getByteLength([CII)I:45 - ReplaceComparisonOperator >= -> >
   * 17 Weak Mutation 38: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp Negation
   * 18 Weak Mutation 39: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 36: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 37: com.sleepycat.util.UtfOps.getByteLength([CII)I:46 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 42: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceComparisonOperator < -> >=
   * 22 Weak Mutation 40: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 41: com.sleepycat.util.UtfOps.getByteLength([CII)I:47 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 55: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp IINC 1
   * 25 Weak Mutation 54: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp Negation
   * 26 Weak Mutation 59: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> -1
   * 27 Weak Mutation 58: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 1
   * 28 Weak Mutation 57: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 0
   * 29 Weak Mutation 56: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 62: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceComparisonOperator <= -> ==
   * 31 Weak Mutation 61: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 2048
   * 32 Weak Mutation 60: com.sleepycat.util.UtfOps.getByteLength([CII)I:50 - ReplaceConstant - 2047 -> 2046
   * 33 com.sleepycat.util.UtfOps.getByteLength([C)I: root-Branch
   * 34 com.sleepycat.util.UtfOps.getByteLength([CII)I: I17 Branch 2 IF_ICMPGE L45 - false
   */
  @Test
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[3];
      int int0 = UtfOps.getByteLength(charArray0);
      assertEquals(6, int0);
  }
}
