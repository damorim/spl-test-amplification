/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.compat;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.compat.DbCompat;
import com.sleepycat.je.CursorConfig;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.SecondaryConfig;
import java.util.Comparator;

@RunWith(EvoSuiteRunner.class)
public class TestDbCompat_17 {


  //Test case number: 17
  /*
   * 6 covered goals:
   * 1 Weak Mutation 37: com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V:176 - ReplaceComparisonOperator == -> -2
   * 2 com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V: I3 Branch 6 IFEQ L176 - true
   * 3 Weak Mutation 34: com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V:176 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 32: com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V:176 - InsertUnaryOp Negation
   * 5 Weak Mutation 33: com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V:176 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 37: com.sleepycat.compat.DbCompat.setRecordLength(Lcom/sleepycat/je/DatabaseConfig;I)V:176 - ReplaceComparisonOperator == -> -2
   */
  @Test
  public void test17()  throws Throwable  {
      SecondaryConfig secondaryConfig0 = new SecondaryConfig();
      DbCompat.setRecordLength((DatabaseConfig) secondaryConfig0, 0);
      assertEquals(false, secondaryConfig0.getReadOnly());
  }
}
