/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.bind.tuple;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.bind.tuple.TupleBase;
import com.sleepycat.bind.tuple.TupleInput;
import com.sleepycat.bind.tuple.TupleOutput;
import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoSuiteRunner.class)
public class TestTupleBase {


  //Test case number: 0
  /*
   * 22 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: getBufferOffset()I
   * 2 Weak Mutation 18: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: getBufferBytes()[B
   * 3 Weak Mutation 21: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: setData([BII)V
   * 4 Weak Mutation 20: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:108 - DeleteStatement: getBufferLength()I
   * 5 com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V: root-Branch
   * 6 Weak Mutation 14: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> -2
   * 7 Weak Mutation 0: com.sleepycat.bind.tuple.TupleBase.<init>()V:39 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 4: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp Negation
   * 9 Weak Mutation 5: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp +1
   * 10 Weak Mutation 6: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp -1
   * 11 Weak Mutation 8: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:89 - DeleteStatement: getTupleBufferSize()I
   * 12 Weak Mutation 9: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp Negation of byteSize
   * 13 Weak Mutation 10: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp IINC 1 byteSize
   * 14 Weak Mutation 11: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp IINC -1 byteSize
   * 15 Weak Mutation 14: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> -2
   * 16 Weak Mutation 19: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: getBufferOffset()I
   * 17 Weak Mutation 18: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: getBufferBytes()[B
   * 18 Weak Mutation 21: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:107 - DeleteStatement: setData([BII)V
   * 19 Weak Mutation 20: com.sleepycat.bind.tuple.TupleBase.outputToEntry(Lcom/sleepycat/bind/tuple/TupleOutput;Lcom/sleepycat/je/DatabaseEntry;)V:108 - DeleteStatement: getBufferLength()I
   * 20 com.sleepycat.bind.tuple.TupleBase.<init>()V: root-Branch
   * 21 com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I: root-Branch
   * 22 com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;: I8 Branch 1 IFEQ L90 - true
   */
  @Test
  public void test0()  throws Throwable  {
      TupleBase tupleBase0 = new TupleBase();
      TupleOutput tupleOutput0 = tupleBase0.getTupleOutput((Object) "ingl\u00EAs");
      assertNotNull(tupleOutput0);
      
      // Undeclared exception!
      try {
        TupleBase.outputToEntry(tupleOutput0, (DatabaseEntry) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 15 covered goals:
   * 1 Weak Mutation 7: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - DeleteField: outputBufferSizeI
   * 2 Weak Mutation 13: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> <=
   * 3 Weak Mutation 15: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp Negation of byteSize
   * 4 Weak Mutation 17: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC -1 byteSize
   * 5 Weak Mutation 16: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC 1 byteSize
   * 6 com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;: I8 Branch 1 IFEQ L90 - false
   * 7 Weak Mutation 1: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp Negation of byteSize
   * 8 Weak Mutation 2: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp IINC 1 byteSize
   * 9 Weak Mutation 3: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp IINC -1 byteSize
   * 10 Weak Mutation 7: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - DeleteField: outputBufferSizeI
   * 11 Weak Mutation 13: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> <=
   * 12 Weak Mutation 15: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp Negation of byteSize
   * 13 Weak Mutation 17: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC -1 byteSize
   * 14 Weak Mutation 16: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC 1 byteSize
   * 15 com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      TupleBase tupleBase0 = new TupleBase();
      tupleBase0.setTupleBufferSize((-1031));
      // Undeclared exception!
      try {
        tupleBase0.getTupleOutput((Object) "ja");
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
      }
  }

  //Test case number: 2
  /*
   * 17 covered goals:
   * 1 Weak Mutation 12: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 0: com.sleepycat.bind.tuple.TupleBase.<init>()V:39 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 1: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp Negation of byteSize
   * 4 Weak Mutation 2: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp IINC 1 byteSize
   * 5 Weak Mutation 3: com.sleepycat.bind.tuple.TupleBase.setTupleBufferSize(I)V:53 - InsertUnaryOp IINC -1 byteSize
   * 6 Weak Mutation 4: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp Negation
   * 7 Weak Mutation 5: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp +1
   * 8 Weak Mutation 6: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - InsertUnaryOp -1
   * 9 Weak Mutation 7: com.sleepycat.bind.tuple.TupleBase.getTupleBufferSize()I:64 - DeleteField: outputBufferSizeI
   * 10 Weak Mutation 8: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:89 - DeleteStatement: getTupleBufferSize()I
   * 11 Weak Mutation 9: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp Negation of byteSize
   * 12 Weak Mutation 10: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp IINC 1 byteSize
   * 13 Weak Mutation 11: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - InsertUnaryOp IINC -1 byteSize
   * 14 Weak Mutation 15: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp Negation of byteSize
   * 15 Weak Mutation 17: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC -1 byteSize
   * 16 Weak Mutation 16: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:91 - InsertUnaryOp IINC 1 byteSize
   * 17 Weak Mutation 12: com.sleepycat.bind.tuple.TupleBase.getTupleOutput(Ljava/lang/Object;)Lcom/sleepycat/bind/tuple/TupleOutput;:90 - ReplaceComparisonOperator == -> >=
   */
  @Test
  public void test2()  throws Throwable  {
      TupleBase tupleBase0 = new TupleBase();
      tupleBase0.setTupleBufferSize((int) (byte)114);
      tupleBase0.getTupleOutput((Object) " offset=");
      assertEquals(114, tupleBase0.getTupleBufferSize());
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Weak Mutation 23: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: getBufferOffset()I
   * 2 Weak Mutation 22: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: getBufferBytes()[B
   * 3 Weak Mutation 25: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: setData([BII)V
   * 4 Weak Mutation 24: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:122 - DeleteStatement: getBufferLength()I
   * 5 com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V: root-Branch
   * 6 Weak Mutation 23: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: getBufferOffset()I
   * 7 Weak Mutation 22: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: getBufferBytes()[B
   * 8 Weak Mutation 25: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:121 - DeleteStatement: setData([BII)V
   * 9 Weak Mutation 24: com.sleepycat.bind.tuple.TupleBase.inputToEntry(Lcom/sleepycat/bind/tuple/TupleInput;Lcom/sleepycat/je/DatabaseEntry;)V:122 - DeleteStatement: getBufferLength()I
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TupleInput tupleInput0 = new TupleInput(byteArray0, 0, 1207);
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      TupleBase.inputToEntry(tupleInput0, databaseEntry0);
      assertEquals(15, databaseEntry0.getOffset());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=15 size=1207>", databaseEntry0.toString());
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:136 - DeleteStatement: getOffset()I
   * 2 Weak Mutation 26: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:136 - DeleteStatement: getData()[B
   * 3 Weak Mutation 28: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:137 - DeleteStatement: getSize()I
   * 4 com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;: root-Branch
   * 5 Weak Mutation 27: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:136 - DeleteStatement: getOffset()I
   * 6 Weak Mutation 26: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:136 - DeleteStatement: getData()[B
   * 7 Weak Mutation 28: com.sleepycat.bind.tuple.TupleBase.entryToInput(Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/bind/tuple/TupleInput;:137 - DeleteStatement: getSize()I
   */
  @Test
  public void test4()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      TupleInput tupleInput0 = TupleBase.entryToInput(databaseEntry0);
      assertEquals(-1, tupleInput0.read());
  }
}
