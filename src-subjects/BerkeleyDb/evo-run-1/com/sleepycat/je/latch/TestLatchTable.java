/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.latch;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchTable;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestLatchTable {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 Weak Mutation 15: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:51 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 2 Weak Mutation 17: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 3 Weak Mutation 16: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteField: latchesByThreadLjava/util/Map;
   * 4 Weak Mutation 18: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:53 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 20: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:57 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.latch.LatchTable.countLatchesHeld()I: I15 Branch 3 IFNULL L53 - true
   * 7 Weak Mutation 0: com.sleepycat.je.latch.LatchTable.<init>(Ljava/lang/String;)V:18 - DeleteStatement: synchronizedMap(Ljava/util/Map;)Ljava/util/Map;
   * 8 Weak Mutation 15: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:51 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 9 Weak Mutation 17: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 10 Weak Mutation 16: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteField: latchesByThreadLjava/util/Map;
   * 11 Weak Mutation 18: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:53 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 20: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:57 - ReplaceConstant - 0 -> 1
   * 13 com.sleepycat.je.latch.LatchTable.<init>(Ljava/lang/String;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(" ");
      int int0 = latchTable0.countLatchesHeld();
      assertEquals(0, int0);
  }

  //Test case number: 1
  /*
   * 16 covered goals:
   * 1 Weak Mutation 14: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:44 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 2 com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z: I15 Branch 2 IFNONNULL L40 - true
   * 3 Weak Mutation 1: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:24 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 4 Weak Mutation 2: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:25 - DeleteField: latchesByThreadLjava/util/Map;
   * 5 Weak Mutation 3: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:25 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 6 Weak Mutation 4: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:26 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 5: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:28 - DeleteField: latchesByThreadLjava/util/Map;
   * 8 Weak Mutation 6: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:28 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 9 Weak Mutation 7: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:30 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 10 Weak Mutation 8: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:31 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 9: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:38 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 12 Weak Mutation 10: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:39 - DeleteField: latchesByThreadLjava/util/Map;
   * 13 Weak Mutation 11: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:39 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 14 Weak Mutation 12: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:40 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 14: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:44 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 16 com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z: I15 Branch 1 IFNONNULL L26 - false
   */
  @Test
  public void test1()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      boolean boolean0 = latchTable0.noteLatch((Object) "");
      boolean boolean1 = latchTable0.unNoteLatch((Object) false, "$p9q9");
      assertEquals(1, latchTable0.countLatchesHeld());
      assertFalse(boolean1 == boolean0);
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 9: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:38 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 2 Weak Mutation 10: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:39 - DeleteField: latchesByThreadLjava/util/Map;
   * 3 Weak Mutation 11: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:39 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 4 Weak Mutation 12: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:40 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 13: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:41 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z: I15 Branch 2 IFNONNULL L40 - false
   * 7 Weak Mutation 13: com.sleepycat.je.latch.LatchTable.unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z:41 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test2()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      boolean boolean0 = latchTable0.unNoteLatch((Object) "$p9q9", "$p9q9");
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:54 - DeleteStatement: size()I
   * 2 com.sleepycat.je.latch.LatchTable.countLatchesHeld()I: I15 Branch 3 IFNULL L53 - false
   * 3 Weak Mutation 15: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:51 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 4 Weak Mutation 17: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 5 Weak Mutation 16: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:52 - DeleteField: latchesByThreadLjava/util/Map;
   * 6 Weak Mutation 18: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:53 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 19: com.sleepycat.je.latch.LatchTable.countLatchesHeld()I:54 - DeleteStatement: size()I
   */
  @Test
  public void test3()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      latchTable0.noteLatch((Object) "");
      int int0 = latchTable0.countLatchesHeld();
      assertEquals("\n", latchTable0.latchesHeldToString());
      assertEquals(1, int0);
  }

  //Test case number: 4
  /*
   * 35 covered goals:
   * 1 Weak Mutation 25: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:65 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 2 Weak Mutation 34: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:66 - DeleteStatement: hasNext()Z
   * 3 Weak Mutation 35: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:66 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 27: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 5 Weak Mutation 26: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: next()Ljava/lang/Object;
   * 6 Weak Mutation 29: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 1
   * 7 Weak Mutation 28: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 0
   * 8 Weak Mutation 31: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 9
   * 9 Weak Mutation 30: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> -1
   * 10 Weak Mutation 32: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 11
   * 11 Weak Mutation 33: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 12 com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;: I21 Branch 4 IFNULL L64 - false
   * 13 com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;: I43 Branch 5 IFNE L66 - true
   * 14 com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;: I43 Branch 5 IFNE L66 - false
   * 15 Weak Mutation 21: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:61 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 16 Weak Mutation 23: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:62 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 17 Weak Mutation 22: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:62 - DeleteField: latchesByThreadLjava/util/Map;
   * 18 Weak Mutation 24: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:64 - ReplaceComparisonOperator = null -> != null
   * 19 Weak Mutation 36: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:70 - DeleteStatement: toString()Ljava/lang/String;
   * 20 Weak Mutation 21: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:61 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 21 Weak Mutation 23: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:62 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 22 Weak Mutation 22: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:62 - DeleteField: latchesByThreadLjava/util/Map;
   * 23 Weak Mutation 25: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:65 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 24 Weak Mutation 24: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:64 - ReplaceComparisonOperator = null -> != null
   * 25 Weak Mutation 27: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 26: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: next()Ljava/lang/Object;
   * 27 Weak Mutation 29: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 1
   * 28 Weak Mutation 28: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 0
   * 29 Weak Mutation 31: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 9
   * 30 Weak Mutation 30: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> -1
   * 31 Weak Mutation 34: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:66 - DeleteStatement: hasNext()Z
   * 32 Weak Mutation 35: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:66 - ReplaceComparisonOperator != -> ==
   * 33 Weak Mutation 32: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - ReplaceConstant - 10 -> 11
   * 34 Weak Mutation 33: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:67 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 35 Weak Mutation 36: com.sleepycat.je.latch.LatchTable.latchesHeldToString()Ljava/lang/String;:70 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test4()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      latchTable0.noteLatch((Object) "");
      String string0 = latchTable0.latchesHeldToString();
      assertEquals(1, latchTable0.countLatchesHeld());
      assertEquals("\n", string0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.latch.LatchTable.clearNotes()V:73 - DeleteStatement: clear()V
   * 2 Weak Mutation 37: com.sleepycat.je.latch.LatchTable.clearNotes()V:73 - DeleteField: latchesByThreadLjava/util/Map;
   * 3 com.sleepycat.je.latch.LatchTable.clearNotes()V: root-Branch
   * 4 Weak Mutation 38: com.sleepycat.je.latch.LatchTable.clearNotes()V:73 - DeleteStatement: clear()V
   * 5 Weak Mutation 37: com.sleepycat.je.latch.LatchTable.clearNotes()V:73 - DeleteField: latchesByThreadLjava/util/Map;
   */
  @Test
  public void test5()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(" ");
      latchTable0.clearNotes();
      assertEquals(0, latchTable0.countLatchesHeld());
  }

  //Test case number: 6
  /*
   * 17 covered goals:
   * 1 Weak Mutation 39: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:79 - DeleteField: tableNameLjava/lang/String;
   * 2 Weak Mutation 40: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:80 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 42: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 43: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 5 Weak Mutation 41: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - ReplaceConstant - ( -> 
   * 6 Weak Mutation 44: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - ReplaceConstant - ) -> 
   * 7 Weak Mutation 45: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 8 Weak Mutation 46: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:83 - DeleteStatement: toString()Ljava/lang/String;
   * 9 com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;: I11 Branch 6 IFNULL L80 - false
   * 10 Weak Mutation 39: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:79 - DeleteField: tableNameLjava/lang/String;
   * 11 Weak Mutation 42: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 43: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 40: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:80 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 41: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - ReplaceConstant - ( -> 
   * 15 Weak Mutation 46: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:83 - DeleteStatement: toString()Ljava/lang/String;
   * 16 Weak Mutation 44: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - ReplaceConstant - ) -> 
   * 17 Weak Mutation 45: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test6()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(" ");
      String string0 = latchTable0.getNameString(" ");
      assertNotNull(string0);
      assertEquals(" ( )", string0);
  }

  //Test case number: 7
  /*
   * 25 covered goals:
   * 1 Weak Mutation 65: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 47: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:90 - ReplaceConstant - <LATCH  -> 
   * 3 Weak Mutation 51: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 50: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - ReplaceConstant - [name:  -> 
   * 5 Weak Mutation 49: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:91 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 48: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:90 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 55: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - ReplaceConstant - [owner:  -> 
   * 8 Weak Mutation 54: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 53: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - ReplaceConstant - ]  -> 
   * 10 Weak Mutation 52: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 59: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 58: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - ReplaceConstant - ] -> 
   * 13 Weak Mutation 57: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 56: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 63: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp IINC 1 startIndex
   * 16 Weak Mutation 62: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp Negation of startIndex
   * 17 Weak Mutation 61: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - DeleteStatement: size()I
   * 18 Weak Mutation 60: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator = null -> != null
   * 19 Weak Mutation 64: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp IINC -1 startIndex
   * 20 Weak Mutation 65: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> ==
   * 21 Weak Mutation 93: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:102 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 22 Weak Mutation 92: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:102 - ReplaceConstant - > -> 
   * 23 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I15 Branch 7 IFNULL L91 - false
   * 24 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I39 Branch 8 IFNULL L95 - false
   * 25 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I43 Branch 9 IF_ICMPLE L95 - true
   */
  @Test
  public void test7()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(" ");
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = latchTable0.toString(" ", (Object) " ( )", (List) linkedList0, 679);
      assertEquals("<LATCH [name:  ] [owner:  ( )]>", string0);
      assertNotNull(string0);
  }

  //Test case number: 8
  /*
   * 51 covered goals:
   * 1 Weak Mutation 73: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - ReplaceVariable i -> startIndex
   * 2 Weak Mutation 68: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:96 - ReplaceConstant -  [waiters:  -> 
   * 3 Weak Mutation 69: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:96 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 70: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp Negation of startIndex
   * 5 Weak Mutation 71: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC 1 startIndex
   * 6 Weak Mutation 67: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> -1
   * 7 Weak Mutation 76: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp IINC -1 i
   * 8 Weak Mutation 77: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: get(I)Ljava/lang/Object;
   * 9 Weak Mutation 78: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 10 Weak Mutation 79: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - ReplaceConstant -   -> 
   * 11 Weak Mutation 72: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC -1 startIndex
   * 12 Weak Mutation 74: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp Negation of i
   * 13 Weak Mutation 75: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 85: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 84: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC 1 i
   * 16 Weak Mutation 86: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - DeleteStatement: size()I
   * 17 Weak Mutation 81: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceVariable i -> startIndex
   * 18 Weak Mutation 80: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 83: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 82: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceVariable i -> startIndex
   * 21 Weak Mutation 89: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceComparisonOperator < -> <=
   * 22 Weak Mutation 88: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceComparisonOperator < -> -2
   * 23 Weak Mutation 91: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 90: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:100 - ReplaceConstant - ] -> 
   * 25 Weak Mutation 68: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:96 - ReplaceConstant -  [waiters:  -> 
   * 26 Weak Mutation 69: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:96 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 27 Weak Mutation 70: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp Negation of startIndex
   * 28 Weak Mutation 71: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC 1 startIndex
   * 29 Weak Mutation 67: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> -1
   * 30 Weak Mutation 76: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 77: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: get(I)Ljava/lang/Object;
   * 32 Weak Mutation 78: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 33 Weak Mutation 79: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - ReplaceConstant -   -> 
   * 34 Weak Mutation 72: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC -1 startIndex
   * 35 Weak Mutation 73: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - ReplaceVariable i -> startIndex
   * 36 Weak Mutation 74: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 75: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 85: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 84: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp IINC 1 i
   * 40 Weak Mutation 86: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - DeleteStatement: size()I
   * 41 Weak Mutation 81: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceVariable i -> startIndex
   * 42 Weak Mutation 80: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:98 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 43 Weak Mutation 83: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - InsertUnaryOp Negation of i
   * 44 Weak Mutation 82: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceVariable i -> startIndex
   * 45 Weak Mutation 89: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceComparisonOperator < -> <=
   * 46 Weak Mutation 88: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:97 - ReplaceComparisonOperator < -> -2
   * 47 Weak Mutation 91: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 48 Weak Mutation 90: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:100 - ReplaceConstant - ] -> 
   * 49 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I43 Branch 9 IF_ICMPLE L95 - false
   * 50 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I73 Branch 10 IF_ICMPLT L97 - true
   * 51 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I73 Branch 10 IF_ICMPLT L97 - false
   */
  @Test
  public void test8()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable(" ");
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      LinkedList<Set<Object>> linkedList0 = new LinkedList<Set<Object>>();
      linkedList0.add((Set<Object>) linkedHashSet0);
      linkedList0.offerFirst((Set<Object>) linkedHashSet0);
      String string0 = latchTable0.toString(" ", (Object) "[]", (List) linkedList0, 0);
      assertEquals("<LATCH [name:  ] [owner: []] [waiters: [] [] ]>", string0);
      assertNotNull(string0);
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * 1 com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z: I15 Branch 1 IFNONNULL L26 - true
   * 2 Weak Mutation 1: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:24 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 3 Weak Mutation 2: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:25 - DeleteField: latchesByThreadLjava/util/Map;
   * 4 Weak Mutation 3: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:25 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 5 Weak Mutation 4: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:26 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 5: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:28 - DeleteField: latchesByThreadLjava/util/Map;
   * 7 Weak Mutation 6: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:28 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 8 Weak Mutation 7: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:30 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 9 Weak Mutation 8: com.sleepycat.je.latch.LatchTable.noteLatch(Ljava/lang/Object;)Z:31 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test9()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      latchTable0.noteLatch((Object) "");
      Object object0 = new Object();
      boolean boolean0 = latchTable0.noteLatch(object0);
      assertEquals(2, latchTable0.countLatchesHeld());
      assertEquals(true, boolean0);
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * 1 com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;: I11 Branch 6 IFNULL L80 - true
   * 2 Weak Mutation 39: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:79 - DeleteField: tableNameLjava/lang/String;
   * 3 Weak Mutation 40: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:80 - ReplaceComparisonOperator = null -> != null
   * 4 Weak Mutation 46: com.sleepycat.je.latch.LatchTable.getNameString(Ljava/lang/String;)Ljava/lang/String;:83 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test10()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("<LATCH ");
      String string0 = latchTable0.getNameString((String) null);
      assertEquals("<LATCH ", string0);
      assertNotNull(string0);
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I15 Branch 7 IFNULL L91 - true
   * 2 Weak Mutation 63: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp IINC 1 startIndex
   * 3 Weak Mutation 62: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp Negation of startIndex
   * 4 Weak Mutation 61: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - DeleteStatement: size()I
   * 5 Weak Mutation 64: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - InsertUnaryOp IINC -1 startIndex
   * 6 Weak Mutation 66: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> <
   * 7 Weak Mutation 66: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator <= -> <
   */
  @Test
  public void test11()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("<LATCH ");
      HashSet<Set<Set<Integer>>> hashSet0 = new HashSet<Set<Set<Integer>>>();
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>((Collection<?>) hashSet0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      String string0 = latchTable0.toString((String) null, (Object) linkedHashSet0, (List) linkedList0, 0);
      assertNotNull(string0);
      assertEquals("<LATCH [owner: []]>", string0);
  }

  //Test case number: 12
  /*
   * 18 covered goals:
   * 1 com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;: I39 Branch 8 IFNULL L95 - true
   * 2 Weak Mutation 0: com.sleepycat.je.latch.LatchTable.<init>(Ljava/lang/String;)V:18 - DeleteStatement: synchronizedMap(Ljava/util/Map;)Ljava/util/Map;
   * 3 Weak Mutation 47: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:90 - ReplaceConstant - <LATCH  -> 
   * 4 Weak Mutation 51: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 5 Weak Mutation 50: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - ReplaceConstant - [name:  -> 
   * 6 Weak Mutation 49: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:91 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 48: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:90 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 8 Weak Mutation 55: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - ReplaceConstant - [owner:  -> 
   * 9 Weak Mutation 54: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 10 Weak Mutation 53: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - ReplaceConstant - ]  -> 
   * 11 Weak Mutation 52: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:92 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 59: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 58: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - ReplaceConstant - ] -> 
   * 14 Weak Mutation 57: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 56: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:94 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 60: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:95 - ReplaceComparisonOperator = null -> != null
   * 17 Weak Mutation 93: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:102 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 92: com.sleepycat.je.latch.LatchTable.toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;:102 - ReplaceConstant - > -> 
   */
  @Test
  public void test12()  throws Throwable  {
      LatchTable latchTable0 = new LatchTable("$p9q9");
      Object object0 = new Object();
      String string0 = latchTable0.toString("$p9q9", object0, (List) null, (-498));
      assertNotNull(string0);
  }
}
