/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.latch;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.latch.SharedLatchImpl;

@RunWith(EvoSuiteRunner.class)
public class TestSharedLatchImpl {


  //Test case number: 0
  /*
   * 153 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - ReplaceComparisonOperator >= -> >
   * 2 Weak Mutation 17: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - ReplaceConstant -  reentrancy/upgrade not allowed -> 
   * 3 Weak Mutation 16: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 4 Weak Mutation 19: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 18: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 6 Weak Mutation 99: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 7 Weak Mutation 102: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 100: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 101: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 105: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - ReplaceComparisonOperator >= -> -1
   * 11 Weak Mutation 106: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:137 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 108: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 13 Weak Mutation 107: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteField: waitersLjava/util/List;
   * 14 Weak Mutation 116: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:143 - ReplaceComparisonOperator > -> !=
   * 15 Weak Mutation 119: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp +1
   * 16 Weak Mutation 118: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp Negation
   * 17 Weak Mutation 126: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> *
   * 18 Weak Mutation 125: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> /
   * 19 Weak Mutation 124: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> %
   * 20 Weak Mutation 123: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> -
   * 21 Weak Mutation 122: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 120: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp -1
   * 23 Weak Mutation 127: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 24 Weak Mutation 136: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 129: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp +1
   * 26 Weak Mutation 128: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp Negation
   * 27 Weak Mutation 130: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp -1
   * 28 Weak Mutation 133: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> -
   * 29 Weak Mutation 132: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 135: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> /
   * 31 Weak Mutation 134: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> %
   * 32 Weak Mutation 137: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 33 Weak Mutation 139: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 140: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 35 Weak Mutation 142: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 209: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:192 - DeleteStatement: next()Ljava/lang/Object;
   * 37 Weak Mutation 210: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - DeleteField: threadLjava/lang/Thread;
   * 38 Weak Mutation 211: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 212: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp Negation of index
   * 40 Weak Mutation 213: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC 1 index
   * 41 Weak Mutation 214: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC -1 index
   * 42 Weak Mutation 220: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteField: waitersLjava/util/List;
   * 43 Weak Mutation 221: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 44 Weak Mutation 222: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 234: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceComparisonOperator != -> ==
   * 46 Weak Mutation 233: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - DeleteStatement: hasNext()Z
   * 47 Weak Mutation 223: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:206 - DeleteStatement: next()Ljava/lang/Object;
   * 48 Weak Mutation 229: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceComparisonOperator != -> ==
   * 49 Weak Mutation 228: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 226: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp -1
   * 51 Weak Mutation 225: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp +1
   * 52 Weak Mutation 224: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp Negation
   * 53 Weak Mutation 239: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -2147483648
   * 54 Weak Mutation 238: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 2147483646
   * 55 Weak Mutation 237: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -1
   * 56 Weak Mutation 236: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 1
   * 57 Weak Mutation 235: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 0
   * 58 Weak Mutation 242: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 59 Weak Mutation 240: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 60 Weak Mutation 241: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: nameLjava/lang/String;
   * 61 com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;: root-Branch
   * 62 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I13 Branch 2 IFGE L68 - true
   * 63 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I130 Branch 8 IFNE L95 - false
   * 64 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I132 Branch 9 IFNE L95 - true
   * 65 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I13 Branch 23 IFGE L136 - false
   * 66 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I54 Branch 24 IF_ICMPGT L143 - false
   * 67 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I75 Branch 25 IFNE L150 - false
   * 68 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I78 Branch 26 IFEQ L150 - true
   * 69 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I118 Branch 30 IFNE L156 - false
   * 70 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I120 Branch 31 IFNE L156 - true
   * 71 com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I: I34 Branch 45 IFNE L191 - true
   * 72 com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I: I23 Branch 44 IF_ACMPNE L193 - false
   * 73 com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I: I34 Branch 47 IFNE L205 - true
   * 74 com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I: I34 Branch 47 IFNE L205 - false
   * 75 com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I: I23 Branch 46 IF_ICMPNE L207 - true
   * 76 Weak Mutation 0: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp Negation of type
   * 77 Weak Mutation 1: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp IINC 1 type
   * 78 Weak Mutation 2: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp IINC -1 type
   * 79 Weak Mutation 6: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:65 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 80 Weak Mutation 7: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp Negation of index
   * 81 Weak Mutation 8: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp IINC 1 index
   * 82 Weak Mutation 9: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp IINC -1 index
   * 83 Weak Mutation 11: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - ReplaceComparisonOperator >= -> >
   * 84 Weak Mutation 17: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - ReplaceConstant -  reentrancy/upgrade not allowed -> 
   * 85 Weak Mutation 16: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 86 Weak Mutation 19: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: toString()Ljava/lang/String;
   * 87 Weak Mutation 18: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:73 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 88 Weak Mutation 102: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC -1 index
   * 89 Weak Mutation 100: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp Negation of index
   * 90 Weak Mutation 101: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC 1 index
   * 91 Weak Mutation 99: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 92 Weak Mutation 108: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 93 Weak Mutation 106: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:137 - ReplaceConstant - 0 -> 1
   * 94 Weak Mutation 107: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteField: waitersLjava/util/List;
   * 95 Weak Mutation 105: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - ReplaceComparisonOperator >= -> -1
   * 96 Weak Mutation 119: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp +1
   * 97 Weak Mutation 118: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp Negation
   * 98 Weak Mutation 116: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:143 - ReplaceComparisonOperator > -> !=
   * 99 Weak Mutation 127: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 100 Weak Mutation 126: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> *
   * 101 Weak Mutation 125: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> /
   * 102 Weak Mutation 124: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> %
   * 103 Weak Mutation 123: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> -
   * 104 Weak Mutation 122: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceConstant - 1 -> 0
   * 105 Weak Mutation 120: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp -1
   * 106 Weak Mutation 137: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 107 Weak Mutation 136: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> *
   * 108 Weak Mutation 139: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator != -> ==
   * 109 Weak Mutation 140: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 110 Weak Mutation 142: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator == -> !=
   * 111 Weak Mutation 129: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp +1
   * 112 Weak Mutation 128: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp Negation
   * 113 Weak Mutation 130: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp -1
   * 114 Weak Mutation 133: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> -
   * 115 Weak Mutation 132: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceConstant - 1 -> 0
   * 116 Weak Mutation 135: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> /
   * 117 Weak Mutation 134: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> %
   * 118 Weak Mutation 207: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:190 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 119 Weak Mutation 206: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:190 - DeleteField: waitersLjava/util/List;
   * 120 Weak Mutation 220: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteField: waitersLjava/util/List;
   * 121 Weak Mutation 221: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 122 Weak Mutation 222: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceConstant - 0 -> 1
   * 123 Weak Mutation 223: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:206 - DeleteStatement: next()Ljava/lang/Object;
   * 124 Weak Mutation 216: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - ReplaceComparisonOperator != -> ==
   * 125 Weak Mutation 217: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> 0
   * 126 Weak Mutation 218: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> 1
   * 127 Weak Mutation 219: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> -2
   * 128 Weak Mutation 212: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp Negation of index
   * 129 Weak Mutation 213: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC 1 index
   * 130 Weak Mutation 214: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC -1 index
   * 131 Weak Mutation 215: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - DeleteStatement: hasNext()Z
   * 132 Weak Mutation 208: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - ReplaceConstant - 0 -> 1
   * 133 Weak Mutation 209: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:192 - DeleteStatement: next()Ljava/lang/Object;
   * 134 Weak Mutation 210: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - DeleteField: threadLjava/lang/Thread;
   * 135 Weak Mutation 211: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - ReplaceComparisonOperator != -> ==
   * 136 Weak Mutation 239: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -2147483648
   * 137 Weak Mutation 238: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 2147483646
   * 138 Weak Mutation 237: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -1
   * 139 Weak Mutation 236: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 1
   * 140 Weak Mutation 235: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 0
   * 141 Weak Mutation 234: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceComparisonOperator != -> ==
   * 142 Weak Mutation 233: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - DeleteStatement: hasNext()Z
   * 143 Weak Mutation 229: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceComparisonOperator != -> ==
   * 144 Weak Mutation 228: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceConstant - 1 -> 0
   * 145 Weak Mutation 226: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp -1
   * 146 Weak Mutation 225: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp +1
   * 147 Weak Mutation 224: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp Negation
   * 148 Weak Mutation 242: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 149 Weak Mutation 240: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 150 Weak Mutation 241: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: nameLjava/lang/String;
   * 151 com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V: root-Branch
   * 152 com.sleepycat.je.latch.SharedLatchImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   * 153 com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I: I34 Branch 45 IFNE L191 - false
   */
  @Test
  public void test0()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("@", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireShared();
      try {
        sharedLatchImpl0.acquireExclusive();
        fail("Expecting exception: LatchException");
      } catch(LatchException e) {
        /*
         * LatchImpl(@) reentrancy/upgrade not allowed
         */
      }
  }

  //Test case number: 1
  /*
   * 211 covered goals:
   * 1 Weak Mutation 28: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - DeleteField: nAcquiresNoWaitersI
   * 2 Weak Mutation 47: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:100 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 3 Weak Mutation 50: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 49: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 48: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp Negation of index
   * 6 Weak Mutation 53: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - ReplaceComparisonOperator >= -> -1
   * 7 Weak Mutation 55: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteStatement: size()I
   * 8 Weak Mutation 54: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteField: waitersLjava/util/List;
   * 9 Weak Mutation 58: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 59: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:104 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 61: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 12 Weak Mutation 60: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteField: waitersLjava/util/List;
   * 13 Weak Mutation 63: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp +1
   * 14 Weak Mutation 62: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp Negation
   * 15 Weak Mutation 68: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 69: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> /
   * 17 Weak Mutation 70: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> *
   * 18 Weak Mutation 64: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp -1
   * 19 Weak Mutation 66: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 67: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> -
   * 21 Weak Mutation 71: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 22 Weak Mutation 76: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 77: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> -
   * 24 Weak Mutation 78: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 79: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> /
   * 26 Weak Mutation 72: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp Negation
   * 27 Weak Mutation 73: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp +1
   * 28 Weak Mutation 74: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp -1
   * 29 Weak Mutation 80: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> *
   * 30 Weak Mutation 84: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 31 Weak Mutation 86: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator == -> !=
   * 32 Weak Mutation 81: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 33 Weak Mutation 83: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 93: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:111 - ReplaceConstant - 1 -> 0
   * 35 Weak Mutation 92: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 88: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - InsertUnaryOp Negation
   * 37 Weak Mutation 91: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - DeleteStatement: maybeForceYield()Z
   * 38 Weak Mutation 90: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 144: com.sleepycat.je.latch.SharedLatchImpl.release()V:165 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 40 Weak Mutation 152: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 41 Weak Mutation 153: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 42 Weak Mutation 155: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> <
   * 43 Weak Mutation 145: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 44 Weak Mutation 146: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 45 Weak Mutation 147: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 46 Weak Mutation 149: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator < -> <=
   * 47 Weak Mutation 151: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 48 Weak Mutation 163: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp Negation of index
   * 49 Weak Mutation 162: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteField: waitersLjava/util/List;
   * 50 Weak Mutation 166: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteStatement: get(I)Ljava/lang/Object;
   * 51 Weak Mutation 165: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC -1 index
   * 52 Weak Mutation 164: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC 1 index
   * 53 Weak Mutation 171: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceConstant - 1 -> 0
   * 54 Weak Mutation 170: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - DeleteField: nAcquiresI
   * 55 Weak Mutation 169: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp -1
   * 56 Weak Mutation 168: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp +1
   * 57 Weak Mutation 175: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> *
   * 58 Weak Mutation 174: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> /
   * 59 Weak Mutation 172: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> +
   * 60 Weak Mutation 167: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp Negation
   * 61 Weak Mutation 178: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp -1
   * 62 Weak Mutation 176: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp Negation
   * 63 Weak Mutation 177: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp +1
   * 64 Weak Mutation 182: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - ReplaceComparisonOperator != -> -1
   * 65 Weak Mutation 186: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC -1 index
   * 66 Weak Mutation 187: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteStatement: remove(I)Ljava/lang/Object;
   * 67 Weak Mutation 184: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 185: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC 1 index
   * 69 Weak Mutation 183: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteField: waitersLjava/util/List;
   * 70 Weak Mutation 190: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator != -> ==
   * 71 Weak Mutation 191: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 72 Weak Mutation 188: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 73 Weak Mutation 193: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator == -> !=
   * 74 Weak Mutation 195: com.sleepycat.je.latch.SharedLatchImpl.release()V:175 - DeleteStatement: notifyAll()V
   * 75 Weak Mutation 205: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> *
   * 76 Weak Mutation 204: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> /
   * 77 Weak Mutation 201: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceConstant - 1 -> 0
   * 78 Weak Mutation 203: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> %
   * 79 Weak Mutation 202: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> -
   * 80 Weak Mutation 197: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp Negation
   * 81 Weak Mutation 196: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 82 Weak Mutation 199: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp -1
   * 83 Weak Mutation 198: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp +1
   * 84 Weak Mutation 227: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - DeleteField: typeI
   * 85 Weak Mutation 232: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC -1 index
   * 86 Weak Mutation 231: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC 1 index
   * 87 Weak Mutation 230: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp Negation of index
   * 88 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I13 Branch 12 IFGE L102 - false
   * 89 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I19 Branch 13 IFNE L103 - false
   * 90 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I55 Branch 14 IFNE L110 - false
   * 91 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I58 Branch 15 IFEQ L110 - true
   * 92 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I69 Branch 17 IFNE L122 - false
   * 93 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I71 Branch 18 IFNE L122 - true
   * 94 com.sleepycat.je.latch.SharedLatchImpl.release()V: I13 Branch 32 IFLT L167 - false
   * 95 com.sleepycat.je.latch.SharedLatchImpl.release()V: I17 Branch 33 IF_ICMPLE L167 - true
   * 96 com.sleepycat.je.latch.SharedLatchImpl.release()V: I51 Branch 36 IFNE L172 - false
   * 97 com.sleepycat.je.latch.SharedLatchImpl.release()V: I62 Branch 37 IFNE L174 - false
   * 98 com.sleepycat.je.latch.SharedLatchImpl.release()V: I65 Branch 38 IFEQ L174 - true
   * 99 com.sleepycat.je.latch.SharedLatchImpl.release()V: I109 Branch 42 IFNE L182 - false
   * 100 com.sleepycat.je.latch.SharedLatchImpl.release()V: I111 Branch 43 IFNE L182 - true
   * 101 com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I: I23 Branch 46 IF_ICMPNE L207 - false
   * 102 Weak Mutation 12: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - ReplaceComparisonOperator >= -> -1
   * 103 Weak Mutation 13: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:69 - ReplaceConstant - 1 -> 0
   * 104 Weak Mutation 14: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:70 - DeleteField: waitersLjava/util/List;
   * 105 Weak Mutation 15: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:70 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 106 Weak Mutation 21: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - DeleteStatement: size()I
   * 107 Weak Mutation 20: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - DeleteField: waitersLjava/util/List;
   * 108 Weak Mutation 23: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - ReplaceComparisonOperator != -> ==
   * 109 Weak Mutation 22: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - ReplaceConstant - 1 -> 0
   * 110 Weak Mutation 25: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp Negation
   * 111 Weak Mutation 24: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 112 Weak Mutation 27: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp -1
   * 113 Weak Mutation 26: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp +1
   * 114 Weak Mutation 29: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceConstant - 1 -> 0
   * 115 Weak Mutation 28: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - DeleteField: nAcquiresNoWaitersI
   * 116 Weak Mutation 31: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> %
   * 117 Weak Mutation 30: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> -
   * 118 Weak Mutation 32: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> /
   * 119 Weak Mutation 33: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> *
   * 120 Weak Mutation 47: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:100 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 121 Weak Mutation 50: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC -1 index
   * 122 Weak Mutation 49: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC 1 index
   * 123 Weak Mutation 48: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp Negation of index
   * 124 Weak Mutation 55: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteStatement: size()I
   * 125 Weak Mutation 54: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteField: waitersLjava/util/List;
   * 126 Weak Mutation 53: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - ReplaceComparisonOperator >= -> -1
   * 127 Weak Mutation 59: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:104 - ReplaceConstant - 1 -> 0
   * 128 Weak Mutation 58: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - ReplaceComparisonOperator != -> -1
   * 129 Weak Mutation 63: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp +1
   * 130 Weak Mutation 62: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp Negation
   * 131 Weak Mutation 61: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 132 Weak Mutation 60: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteField: waitersLjava/util/List;
   * 133 Weak Mutation 68: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> %
   * 134 Weak Mutation 69: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> /
   * 135 Weak Mutation 70: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> *
   * 136 Weak Mutation 71: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 137 Weak Mutation 64: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp -1
   * 138 Weak Mutation 66: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceConstant - 1 -> 0
   * 139 Weak Mutation 67: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> -
   * 140 Weak Mutation 76: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceConstant - 1 -> 0
   * 141 Weak Mutation 77: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> -
   * 142 Weak Mutation 78: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> %
   * 143 Weak Mutation 79: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> /
   * 144 Weak Mutation 72: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp Negation
   * 145 Weak Mutation 73: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp +1
   * 146 Weak Mutation 74: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp -1
   * 147 Weak Mutation 84: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 148 Weak Mutation 86: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator == -> !=
   * 149 Weak Mutation 81: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 150 Weak Mutation 80: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> *
   * 151 Weak Mutation 83: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator != -> ==
   * 152 Weak Mutation 93: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:111 - ReplaceConstant - 1 -> 0
   * 153 Weak Mutation 92: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 154 Weak Mutation 88: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - InsertUnaryOp Negation
   * 155 Weak Mutation 91: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - DeleteStatement: maybeForceYield()Z
   * 156 Weak Mutation 90: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 157 Weak Mutation 152: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 158 Weak Mutation 153: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 159 Weak Mutation 155: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> <
   * 160 Weak Mutation 144: com.sleepycat.je.latch.SharedLatchImpl.release()V:165 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 161 Weak Mutation 145: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 162 Weak Mutation 146: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 163 Weak Mutation 147: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 164 Weak Mutation 149: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator < -> <=
   * 165 Weak Mutation 151: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 166 Weak Mutation 171: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceConstant - 1 -> 0
   * 167 Weak Mutation 170: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - DeleteField: nAcquiresI
   * 168 Weak Mutation 169: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp -1
   * 169 Weak Mutation 168: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp +1
   * 170 Weak Mutation 175: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> *
   * 171 Weak Mutation 174: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> /
   * 172 Weak Mutation 172: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> +
   * 173 Weak Mutation 163: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp Negation of index
   * 174 Weak Mutation 162: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteField: waitersLjava/util/List;
   * 175 Weak Mutation 167: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp Negation
   * 176 Weak Mutation 166: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteStatement: get(I)Ljava/lang/Object;
   * 177 Weak Mutation 165: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC -1 index
   * 178 Weak Mutation 164: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC 1 index
   * 179 Weak Mutation 186: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC -1 index
   * 180 Weak Mutation 187: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteStatement: remove(I)Ljava/lang/Object;
   * 181 Weak Mutation 184: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp Negation of index
   * 182 Weak Mutation 185: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC 1 index
   * 183 Weak Mutation 190: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator != -> ==
   * 184 Weak Mutation 191: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 185 Weak Mutation 188: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 186 Weak Mutation 178: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp -1
   * 187 Weak Mutation 176: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp Negation
   * 188 Weak Mutation 177: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp +1
   * 189 Weak Mutation 182: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - ReplaceComparisonOperator != -> -1
   * 190 Weak Mutation 183: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteField: waitersLjava/util/List;
   * 191 Weak Mutation 205: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> *
   * 192 Weak Mutation 204: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> /
   * 193 Weak Mutation 201: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceConstant - 1 -> 0
   * 194 Weak Mutation 203: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> %
   * 195 Weak Mutation 202: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> -
   * 196 Weak Mutation 197: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp Negation
   * 197 Weak Mutation 196: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 198 Weak Mutation 199: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp -1
   * 199 Weak Mutation 198: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp +1
   * 200 Weak Mutation 193: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator == -> !=
   * 201 Weak Mutation 195: com.sleepycat.je.latch.SharedLatchImpl.release()V:175 - DeleteStatement: notifyAll()V
   * 202 Weak Mutation 232: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC -1 index
   * 203 Weak Mutation 231: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC 1 index
   * 204 Weak Mutation 230: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp Negation of index
   * 205 Weak Mutation 227: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - DeleteField: typeI
   * 206 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I13 Branch 2 IFGE L68 - false
   * 207 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I53 Branch 3 IF_ICMPNE L75 - false
   * 208 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I101 Branch 5 IFNE L89 - false
   * 209 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I104 Branch 6 IFEQ L89 - true
   * 210 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I144 Branch 10 IFNE L95 - false
   * 211 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V: I146 Branch 11 IFNE L95 - true
   */
  @Test
  public void test1()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireExclusiveNoWait();
      sharedLatchImpl0.release();
      sharedLatchImpl0.acquireExclusive();
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * 1 Weak Mutation 52: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - ReplaceComparisonOperator >= -> >
   * 2 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I13 Branch 12 IFGE L102 - true
   * 3 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I115 Branch 21 IFNE L122 - false
   * 4 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I117 Branch 22 IFNE L122 - true
   * 5 Weak Mutation 242: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 6 Weak Mutation 240: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 7 Weak Mutation 241: com.sleepycat.je.latch.SharedLatchImpl.getNameString()Ljava/lang/String;:228 - DeleteField: nameLjava/lang/String;
   * 8 Weak Mutation 52: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - ReplaceComparisonOperator >= -> >
   */
  @Test
  public void test2()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("Fi$eS~mmaryLN", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireExclusive();
      try {
        sharedLatchImpl0.acquireExclusiveNoWait();
        fail("Expecting exception: LatchException");
      } catch(LatchException e) {
        /*
         * LatchImpl(Fi$eS~mmaryLN) reentrancy/upgrade not allowed
         */
      }
  }

  //Test case number: 3
  /*
   * 24 covered goals:
   * 1 Weak Mutation 75: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - DeleteField: nAcquiresNoWaitersI
   * 2 Weak Mutation 6: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:65 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 3 Weak Mutation 7: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp Negation of index
   * 4 Weak Mutation 8: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 9: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - InsertUnaryOp IINC -1 index
   * 6 Weak Mutation 12: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:68 - ReplaceComparisonOperator >= -> -1
   * 7 Weak Mutation 13: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:69 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 14: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:70 - DeleteField: waitersLjava/util/List;
   * 9 Weak Mutation 15: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:70 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 10 Weak Mutation 21: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - DeleteStatement: size()I
   * 11 Weak Mutation 20: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - DeleteField: waitersLjava/util/List;
   * 12 Weak Mutation 23: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 22: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:75 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 25: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp Negation
   * 15 Weak Mutation 24: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 16 Weak Mutation 27: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp -1
   * 17 Weak Mutation 26: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - InsertUnaryOp +1
   * 18 Weak Mutation 29: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 31: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> %
   * 20 Weak Mutation 30: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> -
   * 21 Weak Mutation 32: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 33: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusive()V:77 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 155: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> <
   * 24 Weak Mutation 75: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - DeleteField: nAcquiresNoWaitersI
   */
  @Test
  public void test3()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("cannot be foeunZ.", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireExclusive();
      sharedLatchImpl0.release();
      sharedLatchImpl0.acquireExclusiveNoWait();
  }

  //Test case number: 4
  /*
   * 15 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - DeleteField: noteLatchZ
   * 2 Weak Mutation 87: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 244: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteStatement: noteLatch(Ljava/lang/Object;)Z
   * 4 Weak Mutation 243: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 5 com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z: root-Branch
   * 6 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I58 Branch 15 IFEQ L110 - false
   * 7 com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z: I61 Branch 16 IFNE L110 - true
   * 8 Weak Mutation 3: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp Negation of noteLatch
   * 9 Weak Mutation 4: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp IINC 1 noteLatch
   * 10 Weak Mutation 5: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp IINC -1 noteLatch
   * 11 Weak Mutation 85: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - DeleteField: noteLatchZ
   * 12 Weak Mutation 87: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 244: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteStatement: noteLatch(Ljava/lang/Object;)Z
   * 14 Weak Mutation 243: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 15 com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.setNoteLatch(true);
      sharedLatchImpl0.acquireExclusiveNoWait();
  }

  //Test case number: 5
  /*
   * 20 covered goals:
   * 1 Weak Mutation 200: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - DeleteField: nReleasesI
   * 2 Weak Mutation 131: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - DeleteField: nAcquireSharedSuccessfulI
   * 3 Weak Mutation 173: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> %
   * 4 Weak Mutation 179: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - DeleteField: nAcquiresI
   * 5 Weak Mutation 180: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - ReplaceComparisonOperator != -> <
   * 6 Weak Mutation 110: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp Negation of index
   * 7 Weak Mutation 111: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 109: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - DeleteField: waitersLjava/util/List;
   * 9 Weak Mutation 104: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - ReplaceComparisonOperator >= -> >
   * 10 Weak Mutation 113: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - DeleteStatement: get(I)Ljava/lang/Object;
   * 11 Weak Mutation 112: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp IINC -1 index
   * 12 Weak Mutation 121: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - DeleteField: nAcquiresI
   * 13 Weak Mutation 131: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - DeleteField: nAcquireSharedSuccessfulI
   * 14 Weak Mutation 154: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> ==
   * 15 Weak Mutation 173: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> %
   * 16 Weak Mutation 179: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - DeleteField: nAcquiresI
   * 17 Weak Mutation 180: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - ReplaceComparisonOperator != -> <
   * 18 Weak Mutation 200: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - DeleteField: nReleasesI
   * 19 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I13 Branch 23 IFGE L136 - true
   * 20 com.sleepycat.je.latch.SharedLatchImpl.release()V: I51 Branch 36 IFNE L172 - true
   */
  @Test
  public void test5()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireShared();
      sharedLatchImpl0.acquireShared();
      sharedLatchImpl0.release();
      sharedLatchImpl0.release();
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 Weak Mutation 115: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:143 - ReplaceComparisonOperator > -> >=
   * 2 Weak Mutation 110: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 111: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 109: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - DeleteField: waitersLjava/util/List;
   * 5 Weak Mutation 104: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - ReplaceComparisonOperator >= -> >
   * 6 Weak Mutation 113: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - DeleteStatement: get(I)Ljava/lang/Object;
   * 7 Weak Mutation 112: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:141 - InsertUnaryOp IINC -1 index
   * 8 Weak Mutation 121: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - DeleteField: nAcquiresI
   * 9 Weak Mutation 232: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC -1 index
   * 10 Weak Mutation 231: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp IINC 1 index
   * 11 Weak Mutation 230: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:208 - InsertUnaryOp Negation of index
   * 12 Weak Mutation 227: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - DeleteField: typeI
   * 13 Weak Mutation 115: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:143 - ReplaceComparisonOperator > -> >=
   */
  @Test
  public void test6()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("cannot be foeunZ.", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireExclusiveNoWait();
      sharedLatchImpl0.acquireShared();
  }

  //Test case number: 7
  /*
   * 16 covered goals:
   * 1 com.sleepycat.je.latch.SharedLatchImpl.release()V: I68 Branch 39 IFNE L174 - true
   * 2 Weak Mutation 141: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - DeleteField: noteLatchZ
   * 3 Weak Mutation 143: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 244: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteStatement: noteLatch(Ljava/lang/Object;)Z
   * 5 Weak Mutation 243: com.sleepycat.je.latch.SharedLatchImpl.noteLatch()Z:234 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 6 Weak Mutation 141: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - DeleteField: noteLatchZ
   * 7 Weak Mutation 143: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 192: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - DeleteField: noteLatchZ
   * 9 Weak Mutation 194: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 246: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteField: nameLjava/lang/String;
   * 11 Weak Mutation 247: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 12 Weak Mutation 245: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 13 com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z: root-Branch
   * 14 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I78 Branch 26 IFEQ L150 - false
   * 15 com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V: I81 Branch 27 IFNE L150 - true
   * 16 com.sleepycat.je.latch.SharedLatchImpl.release()V: I65 Branch 38 IFEQ L174 - false
   */
  @Test
  public void test7()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.setNoteLatch(true);
      sharedLatchImpl0.acquireShared();
      sharedLatchImpl0.release();
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
  }

  //Test case number: 8
  /*
   * 11 covered goals:
   * 1 Weak Mutation 154: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 205: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 204: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> /
   * 4 Weak Mutation 201: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 203: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> %
   * 6 Weak Mutation 202: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - ReplaceArithmeticOperator + -> -
   * 7 Weak Mutation 197: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp Negation
   * 8 Weak Mutation 196: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 9 Weak Mutation 199: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp -1
   * 10 Weak Mutation 198: com.sleepycat.je.latch.SharedLatchImpl.release()V:178 - InsertUnaryOp +1
   * 11 Weak Mutation 195: com.sleepycat.je.latch.SharedLatchImpl.release()V:175 - DeleteStatement: notifyAll()V
   */
  @Test
  public void test8()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireShared();
      sharedLatchImpl0.release();
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
  }

  //Test case number: 9
  /*
   * 13 covered goals:
   * 1 Weak Mutation 150: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator < -> -2
   * 2 Weak Mutation 157: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - InsertUnaryOp Negation
   * 3 Weak Mutation 159: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 161: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 160: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - DeleteStatement: maybeForceYield()Z
   * 6 com.sleepycat.je.latch.SharedLatchImpl.release()V: I13 Branch 32 IFLT L167 - true
   * 7 com.sleepycat.je.latch.SharedLatchImpl.release()V: I21 Branch 34 IFNE L182 - false
   * 8 com.sleepycat.je.latch.SharedLatchImpl.release()V: I23 Branch 35 IFNE L182 - true
   * 9 Weak Mutation 157: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - InsertUnaryOp Negation
   * 10 Weak Mutation 159: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - ReplaceComparisonOperator != -> ==
   * 11 Weak Mutation 150: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator < -> -2
   * 12 Weak Mutation 161: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 160: com.sleepycat.je.latch.SharedLatchImpl.release()V:182 - DeleteStatement: maybeForceYield()Z
   */
  @Test
  public void test9()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("", (EnvironmentImpl) null);
      sharedLatchImpl0.release();
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
  }

  //Test case number: 10
  /*
   * 48 covered goals:
   * 1 Weak Mutation 192: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - DeleteField: noteLatchZ
   * 2 Weak Mutation 194: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 246: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteField: nameLjava/lang/String;
   * 4 Weak Mutation 247: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 5 Weak Mutation 245: com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z:240 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 6 com.sleepycat.je.latch.SharedLatchImpl.unNoteLatch()Z: root-Branch
   * 7 com.sleepycat.je.latch.SharedLatchImpl.release()V: I65 Branch 38 IFEQ L174 - false
   * 8 com.sleepycat.je.latch.SharedLatchImpl.release()V: I68 Branch 39 IFNE L174 - false
   * 9 com.sleepycat.je.latch.SharedLatchImpl.release()V: I95 Branch 40 IFNE L182 - false
   * 10 com.sleepycat.je.latch.SharedLatchImpl.release()V: I97 Branch 41 IFNE L182 - true
   * 11 Weak Mutation 3: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp Negation of noteLatch
   * 12 Weak Mutation 4: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp IINC 1 noteLatch
   * 13 Weak Mutation 5: com.sleepycat.je.latch.SharedLatchImpl.setNoteLatch(Z)V:48 - InsertUnaryOp IINC -1 noteLatch
   * 14 Weak Mutation 152: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 15 Weak Mutation 153: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 16 Weak Mutation 154: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator <= -> ==
   * 17 Weak Mutation 144: com.sleepycat.je.latch.SharedLatchImpl.release()V:165 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 18 Weak Mutation 145: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 19 Weak Mutation 146: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC 1 index
   * 20 Weak Mutation 147: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp IINC -1 index
   * 21 Weak Mutation 149: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - ReplaceComparisonOperator < -> <=
   * 22 Weak Mutation 151: com.sleepycat.je.latch.SharedLatchImpl.release()V:167 - InsertUnaryOp Negation of index
   * 23 Weak Mutation 171: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 170: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - DeleteField: nAcquiresI
   * 25 Weak Mutation 169: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp -1
   * 26 Weak Mutation 168: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp +1
   * 27 Weak Mutation 175: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> *
   * 28 Weak Mutation 174: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> /
   * 29 Weak Mutation 172: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - ReplaceArithmeticOperator - -> +
   * 30 Weak Mutation 163: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp Negation of index
   * 31 Weak Mutation 162: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteField: waitersLjava/util/List;
   * 32 Weak Mutation 167: com.sleepycat.je.latch.SharedLatchImpl.release()V:171 - InsertUnaryOp Negation
   * 33 Weak Mutation 166: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - DeleteStatement: get(I)Ljava/lang/Object;
   * 34 Weak Mutation 165: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC -1 index
   * 35 Weak Mutation 164: com.sleepycat.je.latch.SharedLatchImpl.release()V:170 - InsertUnaryOp IINC 1 index
   * 36 Weak Mutation 186: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC -1 index
   * 37 Weak Mutation 187: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteStatement: remove(I)Ljava/lang/Object;
   * 38 Weak Mutation 184: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp Negation of index
   * 39 Weak Mutation 185: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - InsertUnaryOp IINC 1 index
   * 40 Weak Mutation 190: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 191: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 42 Weak Mutation 188: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - InsertUnaryOp Negation
   * 43 Weak Mutation 178: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp -1
   * 44 Weak Mutation 176: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp Negation
   * 45 Weak Mutation 177: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - InsertUnaryOp +1
   * 46 Weak Mutation 182: com.sleepycat.je.latch.SharedLatchImpl.release()V:172 - ReplaceComparisonOperator != -> -1
   * 47 Weak Mutation 183: com.sleepycat.je.latch.SharedLatchImpl.release()V:173 - DeleteField: waitersLjava/util/List;
   * 48 Weak Mutation 193: com.sleepycat.je.latch.SharedLatchImpl.release()V:174 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test10()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireShared();
      sharedLatchImpl0.setNoteLatch(true);
      // Undeclared exception!
      try {
        sharedLatchImpl0.release();
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
  }

  //Test case number: 11
  /*
   * 85 covered goals:
   * 1 Weak Mutation 252: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 248: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteField: waitersLjava/util/List;
   * 3 Weak Mutation 249: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteStatement: size()I
   * 4 Weak Mutation 254: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 255: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteStatement: get(I)Ljava/lang/Object;
   * 6 Weak Mutation 253: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteField: waitersLjava/util/List;
   * 7 Weak Mutation 258: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 259: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp Negation
   * 9 Weak Mutation 256: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteField: threadLjava/lang/Thread;
   * 10 Weak Mutation 257: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 11 Weak Mutation 263: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 260: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp +1
   * 13 Weak Mutation 261: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp -1
   * 14 Weak Mutation 266: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 264: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   * 16 com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z: I5 Branch 48 IFLE L243 - false
   * 17 com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z: I19 Branch 49 IF_ACMPNE L245 - false
   * 18 com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z: I23 Branch 50 IF_ICMPNE L245 - true
   * 19 Weak Mutation 102: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 100: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp Negation of index
   * 21 Weak Mutation 101: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - InsertUnaryOp IINC 1 index
   * 22 Weak Mutation 99: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 23 Weak Mutation 108: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 24 Weak Mutation 106: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:137 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 107: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:138 - DeleteField: waitersLjava/util/List;
   * 26 Weak Mutation 105: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:136 - ReplaceComparisonOperator >= -> -1
   * 27 Weak Mutation 119: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp +1
   * 28 Weak Mutation 118: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp Negation
   * 29 Weak Mutation 116: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:143 - ReplaceComparisonOperator > -> !=
   * 30 Weak Mutation 127: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 31 Weak Mutation 126: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> *
   * 32 Weak Mutation 125: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> /
   * 33 Weak Mutation 124: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> %
   * 34 Weak Mutation 123: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceArithmeticOperator + -> -
   * 35 Weak Mutation 122: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - ReplaceConstant - 1 -> 0
   * 36 Weak Mutation 120: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:146 - InsertUnaryOp -1
   * 37 Weak Mutation 137: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 38 Weak Mutation 136: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> *
   * 39 Weak Mutation 139: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator != -> ==
   * 40 Weak Mutation 140: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - InsertUnaryOp Negation
   * 41 Weak Mutation 142: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:150 - ReplaceComparisonOperator == -> !=
   * 42 Weak Mutation 129: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp +1
   * 43 Weak Mutation 128: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp Negation
   * 44 Weak Mutation 130: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - InsertUnaryOp -1
   * 45 Weak Mutation 133: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> -
   * 46 Weak Mutation 132: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceConstant - 1 -> 0
   * 47 Weak Mutation 135: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> /
   * 48 Weak Mutation 134: com.sleepycat.je.latch.SharedLatchImpl.acquireShared()V:148 - ReplaceArithmeticOperator + -> %
   * 49 Weak Mutation 220: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteField: waitersLjava/util/List;
   * 50 Weak Mutation 221: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:204 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 51 Weak Mutation 222: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 223: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:206 - DeleteStatement: next()Ljava/lang/Object;
   * 53 Weak Mutation 212: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp Negation of index
   * 54 Weak Mutation 213: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC 1 index
   * 55 Weak Mutation 214: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:194 - InsertUnaryOp IINC -1 index
   * 56 Weak Mutation 209: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:192 - DeleteStatement: next()Ljava/lang/Object;
   * 57 Weak Mutation 210: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - DeleteField: threadLjava/lang/Thread;
   * 58 Weak Mutation 211: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:193 - ReplaceComparisonOperator != -> ==
   * 59 Weak Mutation 239: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -2147483648
   * 60 Weak Mutation 238: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 2147483646
   * 61 Weak Mutation 237: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> -1
   * 62 Weak Mutation 236: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 1
   * 63 Weak Mutation 235: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:211 - ReplaceConstant - 2147483647 -> 0
   * 64 Weak Mutation 234: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - ReplaceComparisonOperator != -> ==
   * 65 Weak Mutation 233: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:205 - DeleteStatement: hasNext()Z
   * 66 Weak Mutation 229: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceComparisonOperator != -> ==
   * 67 Weak Mutation 228: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - ReplaceConstant - 1 -> 0
   * 68 Weak Mutation 226: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp -1
   * 69 Weak Mutation 225: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp +1
   * 70 Weak Mutation 224: com.sleepycat.je.latch.SharedLatchImpl.firstWriter()I:207 - InsertUnaryOp Negation
   * 71 Weak Mutation 254: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - ReplaceConstant - 0 -> 1
   * 72 Weak Mutation 255: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteStatement: get(I)Ljava/lang/Object;
   * 73 Weak Mutation 252: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - ReplaceComparisonOperator <= -> -1
   * 74 Weak Mutation 253: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteField: waitersLjava/util/List;
   * 75 Weak Mutation 248: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteField: waitersLjava/util/List;
   * 76 Weak Mutation 249: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteStatement: size()I
   * 77 Weak Mutation 258: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   * 78 Weak Mutation 259: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp Negation
   * 79 Weak Mutation 256: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteField: threadLjava/lang/Thread;
   * 80 Weak Mutation 257: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 81 Weak Mutation 263: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 260: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp +1
   * 83 Weak Mutation 261: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp -1
   * 84 Weak Mutation 266: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 0 -> 1
   * 85 Weak Mutation 264: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   */
  @Test
  public void test11()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("@", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireShared();
      boolean boolean0 = sharedLatchImpl0.isWriteLockedByCurrentThread();
      assertEquals(true, sharedLatchImpl0.isWriteLockedByCurrentThread());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 251: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 267: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:248 - ReplaceConstant - 0 -> 1
   * 3 com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z: I5 Branch 48 IFLE L243 - true
   * 4 Weak Mutation 251: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - ReplaceComparisonOperator <= -> <
   * 5 Weak Mutation 267: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:248 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test12()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl(" 1", (EnvironmentImpl) null);
      boolean boolean0 = sharedLatchImpl0.isWriteLockedByCurrentThread();
      assertEquals(true, boolean0);
  }

  //Test case number: 13
  /*
   * 67 covered goals:
   * 1 Weak Mutation 262: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteField: typeI
   * 2 Weak Mutation 265: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 1 -> 0
   * 3 com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z: I23 Branch 50 IF_ICMPNE L245 - false
   * 4 Weak Mutation 0: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp Negation of type
   * 5 Weak Mutation 1: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp IINC 1 type
   * 6 Weak Mutation 2: com.sleepycat.je.latch.SharedLatchImpl$Owner.<init>(Ljava/lang/Thread;I)V:224 - InsertUnaryOp IINC -1 type
   * 7 Weak Mutation 47: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:100 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 8 Weak Mutation 50: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 49: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp IINC 1 index
   * 10 Weak Mutation 48: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 55: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteStatement: size()I
   * 12 Weak Mutation 54: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - DeleteField: waitersLjava/util/List;
   * 13 Weak Mutation 53: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:102 - ReplaceComparisonOperator >= -> -1
   * 14 Weak Mutation 59: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:104 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 58: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:103 - ReplaceComparisonOperator != -> -1
   * 16 Weak Mutation 63: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp +1
   * 17 Weak Mutation 62: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp Negation
   * 18 Weak Mutation 61: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 19 Weak Mutation 60: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:105 - DeleteField: waitersLjava/util/List;
   * 20 Weak Mutation 68: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 69: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 70: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 71: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 24 Weak Mutation 64: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - InsertUnaryOp -1
   * 25 Weak Mutation 66: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 67: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:106 - ReplaceArithmeticOperator + -> -
   * 27 Weak Mutation 76: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 77: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> -
   * 29 Weak Mutation 78: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> %
   * 30 Weak Mutation 79: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> /
   * 31 Weak Mutation 72: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp Negation
   * 32 Weak Mutation 73: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp +1
   * 33 Weak Mutation 74: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - InsertUnaryOp -1
   * 34 Weak Mutation 84: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 35 Weak Mutation 86: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 81: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - InsertUnaryOp Negation
   * 37 Weak Mutation 80: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:108 - ReplaceArithmeticOperator + -> *
   * 38 Weak Mutation 83: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:110 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 93: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:111 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 92: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 88: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - InsertUnaryOp Negation
   * 42 Weak Mutation 91: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - DeleteStatement: maybeForceYield()Z
   * 43 Weak Mutation 90: com.sleepycat.je.latch.SharedLatchImpl.acquireExclusiveNoWait()Z:122 - ReplaceComparisonOperator != -> ==
   * 44 Weak Mutation 207: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:190 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 45 Weak Mutation 206: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:190 - DeleteField: waitersLjava/util/List;
   * 46 Weak Mutation 216: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - ReplaceComparisonOperator != -> ==
   * 47 Weak Mutation 217: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> 0
   * 48 Weak Mutation 218: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> 1
   * 49 Weak Mutation 219: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:197 - ReplaceConstant - -1 -> -2
   * 50 Weak Mutation 215: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - DeleteStatement: hasNext()Z
   * 51 Weak Mutation 208: com.sleepycat.je.latch.SharedLatchImpl.indexOf(Ljava/lang/Thread;)I:191 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 254: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - ReplaceConstant - 0 -> 1
   * 53 Weak Mutation 255: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteStatement: get(I)Ljava/lang/Object;
   * 54 Weak Mutation 252: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - ReplaceComparisonOperator <= -> -1
   * 55 Weak Mutation 253: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:244 - DeleteField: waitersLjava/util/List;
   * 56 Weak Mutation 248: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteField: waitersLjava/util/List;
   * 57 Weak Mutation 249: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:243 - DeleteStatement: size()I
   * 58 Weak Mutation 258: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   * 59 Weak Mutation 259: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp Negation
   * 60 Weak Mutation 256: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteField: threadLjava/lang/Thread;
   * 61 Weak Mutation 257: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 62 Weak Mutation 263: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 1 -> 0
   * 63 Weak Mutation 260: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp +1
   * 64 Weak Mutation 261: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - InsertUnaryOp -1
   * 65 Weak Mutation 264: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceComparisonOperator != -> ==
   * 66 Weak Mutation 262: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - DeleteField: typeI
   * 67 Weak Mutation 265: com.sleepycat.je.latch.SharedLatchImpl.isWriteLockedByCurrentThread()Z:245 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test13()  throws Throwable  {
      SharedLatchImpl sharedLatchImpl0 = new SharedLatchImpl("cannot be foeunZ.", (EnvironmentImpl) null);
      sharedLatchImpl0.acquireExclusiveNoWait();
      sharedLatchImpl0.isWriteLockedByCurrentThread();
  }
}
