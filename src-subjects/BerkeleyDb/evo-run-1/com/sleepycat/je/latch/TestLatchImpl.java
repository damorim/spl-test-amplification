/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.latch;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.latch.LatchException;
import com.sleepycat.je.latch.LatchImpl;
import com.sleepycat.je.latch.LatchNotHeldException;
import com.sleepycat.je.latch.LatchStats;

@RunWith(EvoSuiteRunner.class)
public class TestLatchImpl {


  //Test case number: 0
  /*
   * 95 covered goals:
   * 1 Weak Mutation 62: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - DeleteField: nAcquireNoWaitSuccessfulI
   * 2 Weak Mutation 89: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 90: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 119: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - DeleteField: nReleasesI
   * 5 Weak Mutation 158: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 6 Weak Mutation 159: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteField: nameLjava/lang/String;
   * 7 Weak Mutation 160: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 8 com.sleepycat.je.latch.LatchImpl.release()V: I5 Branch 25 IFEQ L173 - true
   * 9 com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z: I3 Branch 40 IFEQ L270 - false
   * 10 Weak Mutation 7: com.sleepycat.je.latch.LatchImpl.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:44 - ReplaceConstant - LatchImpl -> 
   * 11 Weak Mutation 7: com.sleepycat.je.latch.LatchImpl.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:44 - ReplaceConstant - LatchImpl -> 
   * 12 Weak Mutation 8: com.sleepycat.je.latch.LatchImpl.acquire()V:66 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 13 Weak Mutation 10: com.sleepycat.je.latch.LatchImpl.acquire()V:69 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 27: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 15 Weak Mutation 26: com.sleepycat.je.latch.LatchImpl.acquire()V:75 - ReplaceComparisonOperator != null -> = null
   * 16 Weak Mutation 29: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp +1
   * 17 Weak Mutation 28: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp Negation
   * 18 Weak Mutation 30: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp -1
   * 19 Weak Mutation 34: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> %
   * 20 Weak Mutation 35: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> /
   * 21 Weak Mutation 32: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 33: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> -
   * 23 Weak Mutation 39: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 24 Weak Mutation 36: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 41: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:134 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 59: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp Negation
   * 27 Weak Mutation 58: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 28 Weak Mutation 57: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:140 - ReplaceComparisonOperator != null -> = null
   * 29 Weak Mutation 63: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceConstant - 1 -> 0
   * 30 Weak Mutation 62: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - DeleteField: nAcquireNoWaitSuccessfulI
   * 31 Weak Mutation 61: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp -1
   * 32 Weak Mutation 60: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp +1
   * 33 Weak Mutation 68: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - InsertUnaryOp Negation
   * 34 Weak Mutation 70: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 71: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 64: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> -
   * 37 Weak Mutation 65: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> %
   * 38 Weak Mutation 66: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> /
   * 39 Weak Mutation 67: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> *
   * 40 Weak Mutation 76: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 77: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:146 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 72: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - InsertUnaryOp Negation
   * 43 Weak Mutation 74: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - ReplaceComparisonOperator != -> ==
   * 44 Weak Mutation 75: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - DeleteStatement: maybeForceYield()Z
   * 45 Weak Mutation 95: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:185 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 46 Weak Mutation 89: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceConstant - 1 -> 0
   * 47 Weak Mutation 90: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceComparisonOperator == -> !=
   * 48 Weak Mutation 96: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:186 - DeleteField: ownerLjava/lang/Thread;
   * 49 Weak Mutation 97: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:186 - ReplaceComparisonOperator == -> !=
   * 50 Weak Mutation 105: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:189 - ReplaceComparisonOperator = null -> != null
   * 51 Weak Mutation 119: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - DeleteField: nReleasesI
   * 52 Weak Mutation 118: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp -1
   * 53 Weak Mutation 117: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp +1
   * 54 Weak Mutation 116: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp Negation
   * 55 Weak Mutation 115: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 56 Weak Mutation 127: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - ReplaceComparisonOperator != -> ==
   * 57 Weak Mutation 125: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp Negation
   * 58 Weak Mutation 124: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> *
   * 59 Weak Mutation 123: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> /
   * 60 Weak Mutation 122: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> %
   * 61 Weak Mutation 121: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> -
   * 62 Weak Mutation 120: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceConstant - 1 -> 0
   * 63 Weak Mutation 129: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp IINC 1 checkHeld
   * 64 Weak Mutation 128: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp Negation of checkHeld
   * 65 Weak Mutation 131: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - ReplaceComparisonOperator != -> ==
   * 66 Weak Mutation 130: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp IINC -1 checkHeld
   * 67 Weak Mutation 154: com.sleepycat.je.latch.LatchImpl.noteLatch()Z:264 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 68 Weak Mutation 155: com.sleepycat.je.latch.LatchImpl.noteLatch()Z:264 - DeleteStatement: noteLatch(Ljava/lang/Object;)Z
   * 69 Weak Mutation 156: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:270 - InsertUnaryOp Negation of checkHeld
   * 70 Weak Mutation 157: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:270 - ReplaceComparisonOperator == -> !=
   * 71 Weak Mutation 158: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 72 Weak Mutation 159: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteField: nameLjava/lang/String;
   * 73 Weak Mutation 160: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:271 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 74 com.sleepycat.je.latch.LatchImpl.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   * 75 com.sleepycat.je.latch.LatchImpl.noteLatch()Z: root-Branch
   * 76 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I19 Branch 26 IF_ACMPEQ L186 - true
   * 77 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I41 Branch 29 IFNULL L189 - true
   * 78 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I80 Branch 31 IFNE L199 - false
   * 79 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I84 Branch 32 IFNE L199 - true
   * 80 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I120 Branch 35 IFNE L203 - false
   * 81 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I122 Branch 36 IFNE L203 - true
   * 82 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I130 Branch 37 IFNULL L205 - true
   * 83 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I9 Branch 15 IF_ACMPNE L134 - true
   * 84 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I38 Branch 16 IFNONNULL L140 - false
   * 85 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I56 Branch 17 IFNE L145 - false
   * 86 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I59 Branch 18 IFNE L145 - true
   * 87 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I67 Branch 19 IFNE L156 - false
   * 88 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I69 Branch 20 IFNE L156 - true
   * 89 com.sleepycat.je.latch.LatchImpl.acquire()V: I19 Branch 2 IF_ACMPNE L69 - true
   * 90 com.sleepycat.je.latch.LatchImpl.acquire()V: I48 Branch 3 IFNONNULL L75 - false
   * 91 com.sleepycat.je.latch.LatchImpl.acquire()V: I115 Branch 5 IFNULL L92 - true
   * 92 com.sleepycat.je.latch.LatchImpl.acquire()V: I167 Branch 9 IFNE L115 - false
   * 93 com.sleepycat.je.latch.LatchImpl.acquire()V: I170 Branch 10 IFNE L115 - true
   * 94 com.sleepycat.je.latch.LatchImpl.acquire()V: I207 Branch 13 IFNE L121 - false
   * 95 com.sleepycat.je.latch.LatchImpl.acquire()V: I209 Branch 14 IFNE L121 - true
   */
  @Test
  public void test0()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl((EnvironmentImpl) null);
      latchImpl0.acquire();
      latchImpl0.release();
      latchImpl0.acquireNoWait();
      latchImpl0.release();
      latchImpl0.acquireNoWait();
  }

  //Test case number: 1
  /*
   * 39 covered goals:
   * 1 Weak Mutation 9: com.sleepycat.je.latch.LatchImpl.acquire()V:69 - DeleteField: ownerLjava/lang/Thread;
   * 2 Weak Mutation 11: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 3 Weak Mutation 12: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp Negation
   * 4 Weak Mutation 13: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp +1
   * 5 Weak Mutation 14: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp -1
   * 6 Weak Mutation 17: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> -
   * 7 Weak Mutation 16: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 19: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> /
   * 9 Weak Mutation 18: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 20: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> *
   * 11 Weak Mutation 21: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 12 Weak Mutation 23: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 13 Weak Mutation 22: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - ReplaceConstant -  already held -> 
   * 14 Weak Mutation 24: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: toString()Ljava/lang/String;
   * 15 Weak Mutation 152: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: nameLjava/lang/String;
   * 16 Weak Mutation 153: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 17 Weak Mutation 151: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 18 com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;: root-Branch
   * 19 com.sleepycat.je.latch.LatchImpl.acquire()V: I19 Branch 2 IF_ACMPNE L69 - false
   * 20 com.sleepycat.je.latch.LatchImpl.acquire()V: I193 Branch 11 IFNE L121 - false
   * 21 com.sleepycat.je.latch.LatchImpl.acquire()V: I195 Branch 12 IFNE L121 - true
   * 22 Weak Mutation 9: com.sleepycat.je.latch.LatchImpl.acquire()V:69 - DeleteField: ownerLjava/lang/Thread;
   * 23 Weak Mutation 11: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 24 Weak Mutation 12: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp Negation
   * 25 Weak Mutation 13: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp +1
   * 26 Weak Mutation 14: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - InsertUnaryOp -1
   * 27 Weak Mutation 17: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 16: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 19: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> /
   * 30 Weak Mutation 18: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> %
   * 31 Weak Mutation 21: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 32 Weak Mutation 20: com.sleepycat.je.latch.LatchImpl.acquire()V:71 - ReplaceArithmeticOperator + -> *
   * 33 Weak Mutation 23: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 34 Weak Mutation 22: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - ReplaceConstant -  already held -> 
   * 35 Weak Mutation 24: com.sleepycat.je.latch.LatchImpl.acquire()V:73 - DeleteStatement: toString()Ljava/lang/String;
   * 36 Weak Mutation 152: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: nameLjava/lang/String;
   * 37 Weak Mutation 153: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 38 Weak Mutation 151: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 39 com.sleepycat.je.latch.LatchImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i/-*n.i}Y^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      try {
        latchImpl0.acquire();
        fail("Expecting exception: LatchException");
      } catch(LatchException e) {
        /*
         * LatchImpl(-i/-*n.i}Y^) already held
         */
      }
  }

  //Test case number: 2
  /*
   * 42 covered goals:
   * 1 Weak Mutation 31: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - DeleteField: nAcquiresNoWaitersI
   * 2 Weak Mutation 88: com.sleepycat.je.latch.LatchImpl.releaseIfOwner()V:165 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 95: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:185 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 4 Weak Mutation 96: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:186 - DeleteField: ownerLjava/lang/Thread;
   * 5 Weak Mutation 97: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:186 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 105: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:189 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 118: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp -1
   * 8 Weak Mutation 117: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp +1
   * 9 Weak Mutation 116: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - InsertUnaryOp Negation
   * 10 Weak Mutation 115: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 11 Weak Mutation 124: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 123: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> /
   * 13 Weak Mutation 122: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> %
   * 14 Weak Mutation 121: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceArithmeticOperator + -> -
   * 15 Weak Mutation 120: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:197 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 127: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 125: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp Negation
   * 18 Weak Mutation 129: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp IINC 1 checkHeld
   * 19 Weak Mutation 128: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp Negation of checkHeld
   * 20 Weak Mutation 131: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 130: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:199 - InsertUnaryOp IINC -1 checkHeld
   * 22 Weak Mutation 156: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:270 - InsertUnaryOp Negation of checkHeld
   * 23 Weak Mutation 157: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:270 - ReplaceComparisonOperator == -> !=
   * 24 Weak Mutation 163: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 25 Weak Mutation 162: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteField: nameLjava/lang/String;
   * 26 Weak Mutation 161: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 27 Weak Mutation 164: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:275 - ReplaceConstant - 1 -> 0
   * 28 com.sleepycat.je.latch.LatchImpl.releaseIfOwner()V: root-Branch
   * 29 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I19 Branch 26 IF_ACMPEQ L186 - true
   * 30 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I41 Branch 29 IFNULL L189 - true
   * 31 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I80 Branch 31 IFNE L199 - false
   * 32 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I84 Branch 32 IFNE L199 - true
   * 33 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I120 Branch 35 IFNE L203 - false
   * 34 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I122 Branch 36 IFNE L203 - true
   * 35 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I130 Branch 37 IFNULL L205 - true
   * 36 com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z: I3 Branch 40 IFEQ L270 - true
   * 37 Weak Mutation 31: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - DeleteField: nAcquiresNoWaitersI
   * 38 Weak Mutation 88: com.sleepycat.je.latch.LatchImpl.releaseIfOwner()V:165 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 163: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteStatement: unNoteLatch(Ljava/lang/Object;Ljava/lang/String;)Z
   * 40 Weak Mutation 162: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteField: nameLjava/lang/String;
   * 41 Weak Mutation 161: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:274 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 42 Weak Mutation 164: com.sleepycat.je.latch.LatchImpl.unNoteLatch(Z)Z:275 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test2()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      latchImpl0.releaseIfOwner();
      latchImpl0.acquire();
  }

  //Test case number: 3
  /*
   * 26 covered goals:
   * 1 Weak Mutation 39: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 2 Weak Mutation 41: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:134 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 57: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:140 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 59: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp Negation
   * 5 Weak Mutation 58: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 6 Weak Mutation 63: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 61: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp -1
   * 8 Weak Mutation 60: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - InsertUnaryOp +1
   * 9 Weak Mutation 64: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> -
   * 10 Weak Mutation 65: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> %
   * 11 Weak Mutation 66: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 67: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:143 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 68: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - InsertUnaryOp Negation
   * 14 Weak Mutation 70: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - ReplaceComparisonOperator != -> ==
   * 15 Weak Mutation 71: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:145 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 77: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:146 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 76: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - ReplaceComparisonOperator != -> ==
   * 18 Weak Mutation 72: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - InsertUnaryOp Negation
   * 19 Weak Mutation 74: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - ReplaceComparisonOperator != -> ==
   * 20 Weak Mutation 75: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:156 - DeleteStatement: maybeForceYield()Z
   * 21 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I9 Branch 15 IF_ACMPNE L134 - true
   * 22 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I38 Branch 16 IFNONNULL L140 - false
   * 23 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I56 Branch 17 IFNE L145 - false
   * 24 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I59 Branch 18 IFNE L145 - true
   * 25 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I67 Branch 19 IFNE L156 - false
   * 26 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I69 Branch 20 IFNE L156 - true
   */
  @Test
  public void test3()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      latchImpl0.acquireNoWait();
  }

  //Test case number: 4
  /*
   * 33 covered goals:
   * 1 Weak Mutation 40: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:134 - DeleteField: ownerLjava/lang/Thread;
   * 2 Weak Mutation 42: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 3 Weak Mutation 43: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp Negation
   * 4 Weak Mutation 47: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 44: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp +1
   * 6 Weak Mutation 45: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp -1
   * 7 Weak Mutation 51: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> *
   * 8 Weak Mutation 50: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> /
   * 9 Weak Mutation 49: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 48: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> -
   * 11 Weak Mutation 55: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: toString()Ljava/lang/String;
   * 12 Weak Mutation 54: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 13 Weak Mutation 53: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - ReplaceConstant -  already held -> 
   * 14 Weak Mutation 52: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 15 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I9 Branch 15 IF_ACMPNE L134 - false
   * 16 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I107 Branch 23 IFNE L156 - false
   * 17 com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z: I109 Branch 24 IFNE L156 - true
   * 18 Weak Mutation 39: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:133 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 19 Weak Mutation 41: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:134 - ReplaceComparisonOperator != -> ==
   * 20 Weak Mutation 42: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 21 Weak Mutation 43: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp Negation
   * 22 Weak Mutation 40: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:134 - DeleteField: ownerLjava/lang/Thread;
   * 23 Weak Mutation 47: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 44: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp +1
   * 25 Weak Mutation 45: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - InsertUnaryOp -1
   * 26 Weak Mutation 51: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> *
   * 27 Weak Mutation 50: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> /
   * 28 Weak Mutation 49: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> %
   * 29 Weak Mutation 48: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:136 - ReplaceArithmeticOperator + -> -
   * 30 Weak Mutation 55: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: toString()Ljava/lang/String;
   * 31 Weak Mutation 54: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 32 Weak Mutation 53: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - ReplaceConstant -  already held -> 
   * 33 Weak Mutation 52: com.sleepycat.je.latch.LatchImpl.acquireNoWait()Z:138 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   */
  @Test
  public void test4()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      try {
        latchImpl0.acquireNoWait();
        fail("Expecting exception: LatchException");
      } catch(LatchException e) {
        /*
         * LatchImpl(-i75/-*n.i}^) already held
         */
      }
  }

  //Test case number: 5
  /*
   * 29 covered goals:
   * 1 Weak Mutation 93: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 2 Weak Mutation 92: com.sleepycat.je.latch.LatchImpl.release()V:174 - ReplaceConstant -  not held -> 
   * 3 Weak Mutation 94: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: toString()Ljava/lang/String;
   * 4 Weak Mutation 91: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 5 Weak Mutation 102: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 103: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 100: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 101: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - DeleteStatement: maybeForceYield()Z
   * 9 Weak Mutation 98: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - InsertUnaryOp Negation
   * 10 com.sleepycat.je.latch.LatchImpl.release()V: I5 Branch 25 IFEQ L173 - false
   * 11 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I19 Branch 26 IF_ACMPEQ L186 - false
   * 12 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I27 Branch 27 IFNE L203 - false
   * 13 com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z: I29 Branch 28 IFNE L203 - true
   * 14 Weak Mutation 95: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:185 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 15 Weak Mutation 89: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 90: com.sleepycat.je.latch.LatchImpl.release()V:173 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 97: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:186 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 152: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: nameLjava/lang/String;
   * 19 Weak Mutation 153: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteStatement: getNameString(Ljava/lang/String;)Ljava/lang/String;
   * 20 Weak Mutation 151: com.sleepycat.je.latch.LatchImpl.getNameString()Ljava/lang/String;:258 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 21 Weak Mutation 93: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 22 Weak Mutation 92: com.sleepycat.je.latch.LatchImpl.release()V:174 - ReplaceConstant -  not held -> 
   * 23 Weak Mutation 94: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: toString()Ljava/lang/String;
   * 24 Weak Mutation 91: com.sleepycat.je.latch.LatchImpl.release()V:174 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 25 Weak Mutation 102: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 103: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceConstant - 1 -> 0
   * 27 Weak Mutation 100: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - ReplaceComparisonOperator != -> ==
   * 28 Weak Mutation 101: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - DeleteStatement: maybeForceYield()Z
   * 29 Weak Mutation 98: com.sleepycat.je.latch.LatchImpl.doRelease(Z)Z:203 - InsertUnaryOp Negation
   */
  @Test
  public void test5()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("6pClb", (EnvironmentImpl) null);
      try {
        latchImpl0.release();
        fail("Expecting exception: LatchNotHeldException");
      } catch(LatchNotHeldException e) {
        /*
         * LatchImpl(6pClb) not held
         */
      }
      assertEquals("<LATCH [name: 6pClb] [owner: null]>", latchImpl0.toString());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 Weak Mutation 136: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 132: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 3 Weak Mutation 134: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceComparisonOperator != -> ==
   * 4 com.sleepycat.je.latch.LatchImpl.isOwner()Z: I5 Branch 38 IF_ACMPNE L218 - true
   * 5 Weak Mutation 136: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 132: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 7 Weak Mutation 134: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceComparisonOperator != -> ==
   */
  @Test
  public void test6()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("J", (EnvironmentImpl) null);
      boolean boolean0 = latchImpl0.isOwner();
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 133: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - DeleteField: ownerLjava/lang/Thread;
   * 2 Weak Mutation 135: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceConstant - 1 -> 0
   * 3 com.sleepycat.je.latch.LatchImpl.isOwner()Z: I5 Branch 38 IF_ACMPNE L218 - false
   * 4 Weak Mutation 132: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 5 Weak Mutation 134: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 133: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - DeleteField: ownerLjava/lang/Thread;
   * 7 Weak Mutation 135: com.sleepycat.je.latch.LatchImpl.isOwner()Z:218 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test7()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i/-*n.i}Y^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      latchImpl0.isOwner();
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 137: com.sleepycat.je.latch.LatchImpl.owner()Ljava/lang/Thread;:225 - DeleteField: ownerLjava/lang/Thread;
   * 2 com.sleepycat.je.latch.LatchImpl.owner()Ljava/lang/Thread;: root-Branch
   * 3 Weak Mutation 137: com.sleepycat.je.latch.LatchImpl.owner()Ljava/lang/Thread;:225 - DeleteField: ownerLjava/lang/Thread;
   */
  @Test
  public void test8()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i753*n.i}^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      latchImpl0.owner();
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 139: com.sleepycat.je.latch.LatchImpl.nWaiters()I:232 - ReplaceComparisonOperator = null -> != null
   * 2 Weak Mutation 142: com.sleepycat.je.latch.LatchImpl.nWaiters()I:232 - ReplaceConstant - 0 -> 1
   * 3 com.sleepycat.je.latch.LatchImpl.nWaiters()I: I4 Branch 39 IFNULL L232 - true
   * 4 Weak Mutation 139: com.sleepycat.je.latch.LatchImpl.nWaiters()I:232 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 142: com.sleepycat.je.latch.LatchImpl.nWaiters()I:232 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test9()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      int int0 = latchImpl0.nWaiters();
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 143: com.sleepycat.je.latch.LatchImpl.getLatchStats()Lcom/sleepycat/je/latch/LatchStats;:241 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 2 Weak Mutation 144: com.sleepycat.je.latch.LatchImpl.getLatchStats()Lcom/sleepycat/je/latch/LatchStats;:241 - DeleteStatement: clone()Ljava/lang/Object;
   * 3 com.sleepycat.je.latch.LatchImpl.getLatchStats()Lcom/sleepycat/je/latch/LatchStats;: root-Branch
   * 4 Weak Mutation 143: com.sleepycat.je.latch.LatchImpl.getLatchStats()Lcom/sleepycat/je/latch/LatchStats;:241 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 5 Weak Mutation 144: com.sleepycat.je.latch.LatchImpl.getLatchStats()Lcom/sleepycat/je/latch/LatchStats;:241 - DeleteStatement: clone()Ljava/lang/Object;
   */
  @Test
  public void test10()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      LatchStats latchStats0 = latchImpl0.getLatchStats();
      assertEquals(0, latchStats0.nReleases);
  }

  //Test case number: 11
  /*
   * 25 covered goals:
   * 1 Weak Mutation 147: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: ownerLjava/lang/Thread;
   * 2 Weak Mutation 8: com.sleepycat.je.latch.LatchImpl.acquire()V:66 - DeleteStatement: currentThread()Ljava/lang/Thread;
   * 3 Weak Mutation 10: com.sleepycat.je.latch.LatchImpl.acquire()V:69 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 27: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - DeleteField: statsLcom/sleepycat/je/latch/LatchStats;
   * 5 Weak Mutation 26: com.sleepycat.je.latch.LatchImpl.acquire()V:75 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 29: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp +1
   * 7 Weak Mutation 28: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp Negation
   * 8 Weak Mutation 30: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - InsertUnaryOp -1
   * 9 Weak Mutation 34: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 35: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> /
   * 11 Weak Mutation 32: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 33: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> -
   * 13 Weak Mutation 36: com.sleepycat.je.latch.LatchImpl.acquire()V:77 - ReplaceArithmeticOperator + -> *
   * 14 Weak Mutation 154: com.sleepycat.je.latch.LatchImpl.noteLatch()Z:264 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 15 Weak Mutation 155: com.sleepycat.je.latch.LatchImpl.noteLatch()Z:264 - DeleteStatement: noteLatch(Ljava/lang/Object;)Z
   * 16 Weak Mutation 145: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 17 Weak Mutation 146: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: nameLjava/lang/String;
   * 18 Weak Mutation 149: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 150: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteStatement: toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;
   * 20 Weak Mutation 145: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: latchTableLcom/sleepycat/je/latch/LatchTable;
   * 21 Weak Mutation 146: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: nameLjava/lang/String;
   * 22 Weak Mutation 147: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteField: ownerLjava/lang/Thread;
   * 23 Weak Mutation 149: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 150: com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;:252 - DeleteStatement: toString(Ljava/lang/String;Ljava/lang/Object;Ljava/util/List;I)Ljava/lang/String;
   * 25 com.sleepycat.je.latch.LatchImpl.toString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test11()  throws Throwable  {
      LatchImpl latchImpl0 = new LatchImpl("-i75/-*n.i}^", (EnvironmentImpl) null);
      latchImpl0.acquire();
      latchImpl0.toString();
  }
}
