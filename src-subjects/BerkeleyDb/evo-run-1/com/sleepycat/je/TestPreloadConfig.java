/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.PreloadConfig;

@RunWith(EvoSuiteRunner.class)
public class TestPreloadConfig {


  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.PreloadConfig.setMaxBytes(J)V:22 - InsertUnaryOp Negation of maxBytes
   * 2 com.sleepycat.je.PreloadConfig.setMaxBytes(J)V: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.PreloadConfig.setMaxBytes(J)V:22 - InsertUnaryOp Negation of maxBytes
   */
  @Test
  public void test0()  throws Throwable  {
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      preloadConfig0.setMaxBytes((-1192L));
      assertEquals((-1192L), preloadConfig0.getMaxBytes());
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 1: com.sleepycat.je.PreloadConfig.getMaxBytes()J:29 - InsertUnaryOp Negation
   * 2 Weak Mutation 2: com.sleepycat.je.PreloadConfig.getMaxBytes()J:29 - DeleteField: maxBytesJ
   * 3 com.sleepycat.je.PreloadConfig.getMaxBytes()J: root-Branch
   * 4 Weak Mutation 1: com.sleepycat.je.PreloadConfig.getMaxBytes()J:29 - InsertUnaryOp Negation
   * 5 Weak Mutation 2: com.sleepycat.je.PreloadConfig.getMaxBytes()J:29 - DeleteField: maxBytesJ
   */
  @Test
  public void test1()  throws Throwable  {
      PreloadConfig preloadConfig0 = PreloadConfig.DEFAULT;
      long long0 = preloadConfig0.getMaxBytes();
      assertEquals(1192L, long0);
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * 1 Weak Mutation 5: com.sleepycat.je.PreloadConfig.getMaxMillisecs()J:43 - DeleteField: maxMillisecsJ
   * 2 com.sleepycat.je.PreloadConfig.<init>()V: root-Branch
   * 3 Weak Mutation 3: com.sleepycat.je.PreloadConfig.setMaxMillisecs(J)V:36 - InsertUnaryOp Negation of maxMillisecs
   * 4 Weak Mutation 4: com.sleepycat.je.PreloadConfig.getMaxMillisecs()J:43 - InsertUnaryOp Negation
   * 5 Weak Mutation 3: com.sleepycat.je.PreloadConfig.setMaxMillisecs(J)V:36 - InsertUnaryOp Negation of maxMillisecs
   * 6 Weak Mutation 4: com.sleepycat.je.PreloadConfig.getMaxMillisecs()J:43 - InsertUnaryOp Negation
   * 7 Weak Mutation 5: com.sleepycat.je.PreloadConfig.getMaxMillisecs()J:43 - DeleteField: maxMillisecsJ
   * 8 com.sleepycat.je.PreloadConfig.setMaxMillisecs(J)V: root-Branch
   * 9 com.sleepycat.je.PreloadConfig.getMaxMillisecs()J: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      PreloadConfig preloadConfig0 = new PreloadConfig();
      preloadConfig0.setMaxMillisecs((-704L));
      long long0 = preloadConfig0.getMaxMillisecs();
      assertEquals((-704L), long0);
  }

  //Test case number: 3
  /*
   * 12 covered goals:
   * 1 Weak Mutation 10: com.sleepycat.je.PreloadConfig.getLoadLNs()Z:57 - DeleteField: loadLNsZ
   * 2 Weak Mutation 6: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp Negation of loadLNs
   * 3 Weak Mutation 7: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp IINC 1 loadLNs
   * 4 Weak Mutation 8: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp IINC -1 loadLNs
   * 5 Weak Mutation 9: com.sleepycat.je.PreloadConfig.getLoadLNs()Z:57 - InsertUnaryOp Negation
   * 6 Weak Mutation 6: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp Negation of loadLNs
   * 7 Weak Mutation 7: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp IINC 1 loadLNs
   * 8 Weak Mutation 8: com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V:50 - InsertUnaryOp IINC -1 loadLNs
   * 9 Weak Mutation 9: com.sleepycat.je.PreloadConfig.getLoadLNs()Z:57 - InsertUnaryOp Negation
   * 10 Weak Mutation 10: com.sleepycat.je.PreloadConfig.getLoadLNs()Z:57 - DeleteField: loadLNsZ
   * 11 com.sleepycat.je.PreloadConfig.getLoadLNs()Z: root-Branch
   * 12 com.sleepycat.je.PreloadConfig.setLoadLNs(Z)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      PreloadConfig preloadConfig0 = new PreloadConfig();
      preloadConfig0.setLoadLNs(true);
      boolean boolean0 = preloadConfig0.getLoadLNs();
      assertEquals(true, boolean0);
  }
}
