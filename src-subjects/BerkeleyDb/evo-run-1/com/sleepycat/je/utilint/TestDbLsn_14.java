/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.DbLsn;

@RunWith(EvoSuiteRunner.class)
public class TestDbLsn_14 {


  //Test case number: 14
  /*
   * 25 covered goals:
   * 1 Weak Mutation 172: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:92 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 186: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:95 - ReplaceComparisonOperator <= -> ==
   * 3 Weak Mutation 205: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 4 Weak Mutation 207: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 5 Weak Mutation 206: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 6 Weak Mutation 201: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - ReplaceArithmeticOperator - -> %
   * 7 Weak Mutation 200: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 8 Weak Mutation 203: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - ReplaceArithmeticOperator - -> /
   * 9 Weak Mutation 199: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 10 Weak Mutation 208: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - DeleteStatement: calcDiff(JJJJ)J
   * 11 Weak Mutation 279: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:133 - ReplaceArithmeticOperator * -> -
   * 12 Weak Mutation 281: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:133 - ReplaceArithmeticOperator * -> +
   * 13 com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J: I57 Branch 11 IFLE L95 - true
   * 14 Weak Mutation 172: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:92 - ReplaceComparisonOperator != -> >
   * 15 Weak Mutation 186: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:95 - ReplaceComparisonOperator <= -> ==
   * 16 Weak Mutation 205: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 17 Weak Mutation 207: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 18 Weak Mutation 206: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 19 Weak Mutation 201: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - ReplaceArithmeticOperator - -> %
   * 20 Weak Mutation 200: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 21 Weak Mutation 203: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - ReplaceArithmeticOperator - -> /
   * 22 Weak Mutation 199: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - InsertUnaryOp Negation
   * 23 Weak Mutation 208: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:99 - DeleteStatement: calcDiff(JJJJ)J
   * 24 Weak Mutation 279: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:133 - ReplaceArithmeticOperator * -> -
   * 25 Weak Mutation 281: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:133 - ReplaceArithmeticOperator * -> +
   */
  @Test
  public void test14()  throws Throwable  {
      long long0 = DbLsn.getNoCleaningDistance((long) 15, (-73L), (-73L));
      assertEquals((-309237645327L), long0);
  }
}
