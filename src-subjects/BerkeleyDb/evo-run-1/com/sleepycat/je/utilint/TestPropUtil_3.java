/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.utilint.PropUtil;
import java.util.HashSet;
import java.util.Properties;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestPropUtil_3 {


  //Test case number: 3
  /*
   * 39 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 0
   * 2 Weak Mutation 28: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - InsertUnaryOp Negation
   * 3 Weak Mutation 31: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> -1
   * 4 Weak Mutation 30: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 1
   * 5 Weak Mutation 34: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> -
   * 6 Weak Mutation 35: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> %
   * 7 Weak Mutation 32: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 998
   * 8 Weak Mutation 33: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 1000
   * 9 Weak Mutation 38: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 0
   * 10 Weak Mutation 39: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 1
   * 11 Weak Mutation 36: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 37: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 42: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 1001
   * 14 Weak Mutation 43: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> -
   * 15 Weak Mutation 40: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> -1
   * 16 Weak Mutation 41: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 999
   * 17 Weak Mutation 46: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> *
   * 18 Weak Mutation 44: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> %
   * 19 Weak Mutation 45: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> +
   * 20 com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J: root-Branch
   * 21 Weak Mutation 29: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 0
   * 22 Weak Mutation 28: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - InsertUnaryOp Negation
   * 23 Weak Mutation 31: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> -1
   * 24 Weak Mutation 30: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 1
   * 25 Weak Mutation 34: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> -
   * 26 Weak Mutation 35: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> %
   * 27 Weak Mutation 32: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 998
   * 28 Weak Mutation 33: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 999 -> 1000
   * 29 Weak Mutation 38: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 0
   * 30 Weak Mutation 39: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 1
   * 31 Weak Mutation 36: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 37: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator + -> *
   * 33 Weak Mutation 42: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 1001
   * 34 Weak Mutation 43: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> -
   * 35 Weak Mutation 40: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> -1
   * 36 Weak Mutation 41: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceConstant - 1000 -> 999
   * 37 Weak Mutation 46: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> *
   * 38 Weak Mutation 44: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> %
   * 39 Weak Mutation 45: com.sleepycat.je.utilint.PropUtil.microsToMillis(J)J:57 - ReplaceArithmeticOperator / -> +
   */
  @Test
  public void test3()  throws Throwable  {
      long long0 = PropUtil.microsToMillis(1120L);
      assertEquals(2L, long0);
  }
}
