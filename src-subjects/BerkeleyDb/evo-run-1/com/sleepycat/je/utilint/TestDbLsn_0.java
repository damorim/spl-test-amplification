/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.DbLsn;

@RunWith(EvoSuiteRunner.class)
public class TestDbLsn_0 {


  //Test case number: 0
  /*
   * 49 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - InsertUnaryOp Negation
   * 2 Weak Mutation 1: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 0
   * 3 Weak Mutation 2: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 1
   * 4 Weak Mutation 3: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> -1
   * 5 Weak Mutation 4: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967294
   * 6 Weak Mutation 5: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967296
   * 7 Weak Mutation 6: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> |
   * 8 Weak Mutation 7: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> ^
   * 9 Weak Mutation 8: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - InsertUnaryOp Negation
   * 10 Weak Mutation 9: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 0
   * 11 Weak Mutation 10: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 1
   * 12 Weak Mutation 11: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> -1
   * 13 Weak Mutation 12: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967294
   * 14 Weak Mutation 13: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967296
   * 15 Weak Mutation 14: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> |
   * 16 Weak Mutation 15: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> ^
   * 17 Weak Mutation 17: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 1
   * 18 Weak Mutation 16: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 0
   * 19 Weak Mutation 19: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 31
   * 20 Weak Mutation 18: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> -1
   * 21 Weak Mutation 21: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator << -> >>>
   * 22 Weak Mutation 20: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 33
   * 23 Weak Mutation 23: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator | -> &
   * 24 Weak Mutation 22: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator << -> >>
   * 25 com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J: root-Branch
   * 26 Weak Mutation 0: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - InsertUnaryOp Negation
   * 27 Weak Mutation 1: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 0
   * 28 Weak Mutation 2: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 1
   * 29 Weak Mutation 3: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> -1
   * 30 Weak Mutation 4: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967294
   * 31 Weak Mutation 5: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967296
   * 32 Weak Mutation 6: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> |
   * 33 Weak Mutation 7: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> ^
   * 34 Weak Mutation 8: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - InsertUnaryOp Negation
   * 35 Weak Mutation 9: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 0
   * 36 Weak Mutation 10: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 1
   * 37 Weak Mutation 11: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> -1
   * 38 Weak Mutation 12: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967294
   * 39 Weak Mutation 13: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 4294967295 -> 4294967296
   * 40 Weak Mutation 14: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> |
   * 41 Weak Mutation 15: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator & -> ^
   * 42 Weak Mutation 17: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 1
   * 43 Weak Mutation 16: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 0
   * 44 Weak Mutation 19: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 31
   * 45 Weak Mutation 18: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> -1
   * 46 Weak Mutation 21: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator << -> >>>
   * 47 Weak Mutation 20: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceConstant - 32 -> 33
   * 48 Weak Mutation 23: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator | -> &
   * 49 Weak Mutation 22: com.sleepycat.je.utilint.DbLsn.makeLsn(JJ)J:21 - ReplaceBitwiseOperator << -> >>
   */
  @Test
  public void test0()  throws Throwable  {
      long long0 = DbLsn.makeLsn(1L, 1L);
      assertEquals(4294967297L, long0);
  }
}
