/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.zip.Adler32;

@RunWith(EvoSuiteRunner.class)
public class TestAdler32 {


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 3: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - InsertUnaryOp Negation
   * 2 Weak Mutation 4: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - DeleteField: JAVA5_AVAILABLEZ
   * 3 Weak Mutation 5: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - ReplaceComparisonOperator == -> !=
   * 4 com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;: I3 Branch 1 IFEQ L42 - false
   * 5 Weak Mutation 3: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - InsertUnaryOp Negation
   * 6 Weak Mutation 4: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - DeleteField: JAVA5_AVAILABLEZ
   * 7 Weak Mutation 5: com.sleepycat.je.utilint.Adler32.makeChecksum()Ljava/util/zip/Checksum;:42 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test0()  throws Throwable  {
      Adler32 adler32_0 = (Adler32)com.sleepycat.je.utilint.Adler32.makeChecksum();
      assertEquals(1L, adler32_0.getValue());
  }

  //Test case number: 1
  /*
   * 87 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> *
   * 2 Weak Mutation 60: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 73: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceVariable s2 -> s1
   * 4 Weak Mutation 82: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceVariable s1 -> s2
   * 5 Weak Mutation 0: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 1: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> -1
   * 7 Weak Mutation 2: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> 2
   * 8 Weak Mutation 6: com.sleepycat.je.utilint.Adler32.update(I)V:57 - InsertUnaryOp Negation
   * 9 Weak Mutation 7: com.sleepycat.je.utilint.Adler32.update(I)V:57 - DeleteField: adlerJ
   * 10 Weak Mutation 8: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 0
   * 11 Weak Mutation 9: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 1
   * 12 Weak Mutation 10: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> -1
   * 13 Weak Mutation 11: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 65534
   * 14 Weak Mutation 12: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 65536
   * 15 Weak Mutation 13: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceBitwiseOperator & -> |
   * 16 Weak Mutation 14: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceBitwiseOperator & -> ^
   * 17 Weak Mutation 15: com.sleepycat.je.utilint.Adler32.update(I)V:58 - InsertUnaryOp Negation
   * 18 Weak Mutation 17: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 0
   * 19 Weak Mutation 16: com.sleepycat.je.utilint.Adler32.update(I)V:58 - DeleteField: adlerJ
   * 20 Weak Mutation 19: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> -1
   * 21 Weak Mutation 18: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 1
   * 22 Weak Mutation 21: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 17
   * 23 Weak Mutation 20: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 15
   * 24 Weak Mutation 23: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator >> -> <<
   * 25 Weak Mutation 25: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 1
   * 26 Weak Mutation 24: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 0
   * 27 Weak Mutation 27: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 65534
   * 28 Weak Mutation 26: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> -1
   * 29 Weak Mutation 29: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator & -> |
   * 30 Weak Mutation 28: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 65536
   * 31 Weak Mutation 31: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceVariable s1 -> s2
   * 32 Weak Mutation 30: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator & -> ^
   * 33 Weak Mutation 34: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp IINC 1 b
   * 34 Weak Mutation 35: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp IINC -1 b
   * 35 Weak Mutation 32: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp Negation of s1
   * 36 Weak Mutation 33: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp Negation of b
   * 37 Weak Mutation 38: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> -1
   * 38 Weak Mutation 39: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 254
   * 39 Weak Mutation 36: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 0
   * 40 Weak Mutation 37: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 1
   * 41 Weak Mutation 42: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceBitwiseOperator & -> ^
   * 42 Weak Mutation 43: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> -
   * 43 Weak Mutation 40: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 256
   * 44 Weak Mutation 41: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceBitwiseOperator & -> |
   * 45 Weak Mutation 46: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> *
   * 46 Weak Mutation 47: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 0
   * 47 Weak Mutation 44: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> %
   * 48 Weak Mutation 45: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> /
   * 49 Weak Mutation 51: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 65522
   * 50 Weak Mutation 50: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 65520
   * 51 Weak Mutation 49: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> -1
   * 52 Weak Mutation 48: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 1
   * 53 Weak Mutation 55: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> *
   * 54 Weak Mutation 54: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> /
   * 55 Weak Mutation 53: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> +
   * 56 Weak Mutation 52: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> -
   * 57 Weak Mutation 59: com.sleepycat.je.utilint.Adler32.update(I)V:60 - InsertUnaryOp Negation of s2
   * 58 Weak Mutation 58: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceVariable s2 -> s1
   * 59 Weak Mutation 57: com.sleepycat.je.utilint.Adler32.update(I)V:60 - InsertUnaryOp Negation of s1
   * 60 Weak Mutation 56: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceVariable s1 -> s2
   * 61 Weak Mutation 63: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> *
   * 62 Weak Mutation 62: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> /
   * 63 Weak Mutation 61: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> %
   * 64 Weak Mutation 60: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> -
   * 65 Weak Mutation 68: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 65522
   * 66 Weak Mutation 69: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> -
   * 67 Weak Mutation 70: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> +
   * 68 Weak Mutation 71: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> /
   * 69 Weak Mutation 64: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 0
   * 70 Weak Mutation 65: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 1
   * 71 Weak Mutation 66: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> -1
   * 72 Weak Mutation 67: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 65520
   * 73 Weak Mutation 76: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 1
   * 74 Weak Mutation 77: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> -1
   * 75 Weak Mutation 78: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 15
   * 76 Weak Mutation 79: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 17
   * 77 Weak Mutation 72: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> *
   * 78 Weak Mutation 73: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceVariable s2 -> s1
   * 79 Weak Mutation 74: com.sleepycat.je.utilint.Adler32.update(I)V:61 - InsertUnaryOp Negation of s2
   * 80 Weak Mutation 75: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 0
   * 81 Weak Mutation 84: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator | -> &
   * 82 Weak Mutation 81: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator << -> >>
   * 83 Weak Mutation 80: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator << -> >>>
   * 84 Weak Mutation 83: com.sleepycat.je.utilint.Adler32.update(I)V:61 - InsertUnaryOp Negation of s1
   * 85 Weak Mutation 82: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceVariable s1 -> s2
   * 86 com.sleepycat.je.utilint.Adler32.update(I)V: root-Branch
   * 87 com.sleepycat.je.utilint.Adler32.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      adler32_0.update(65517);
      adler32_0.update(65517);
      assertEquals(46727643L, adler32_0.getValue());
  }

  //Test case number: 2
  /*
   * 137 covered goals:
   * 1 Weak Mutation 87: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - DeleteField: adlerJ
   * 2 Weak Mutation 86: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp Negation
   * 3 Weak Mutation 93: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> |
   * 4 Weak Mutation 92: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65536
   * 5 Weak Mutation 94: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> ^
   * 6 Weak Mutation 89: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 1
   * 7 Weak Mutation 88: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 0
   * 8 Weak Mutation 91: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65534
   * 9 Weak Mutation 90: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> -1
   * 10 Weak Mutation 95: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 11 Weak Mutation 103: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator >> -> <<
   * 12 Weak Mutation 100: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 15
   * 13 Weak Mutation 101: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 17
   * 14 Weak Mutation 98: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 1
   * 15 Weak Mutation 99: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> -1
   * 16 Weak Mutation 96: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - DeleteField: adlerJ
   * 17 Weak Mutation 97: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 0
   * 18 Weak Mutation 110: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> ^
   * 19 Weak Mutation 108: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65536
   * 20 Weak Mutation 109: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> |
   * 21 Weak Mutation 106: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> -1
   * 22 Weak Mutation 107: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65534
   * 23 Weak Mutation 104: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 0
   * 24 Weak Mutation 105: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 1
   * 25 Weak Mutation 207: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation of len
   * 26 Weak Mutation 212: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> -2
   * 27 Weak Mutation 208: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC 1 len
   * 28 Weak Mutation 209: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC -1 len
   * 29 Weak Mutation 119: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 30 Weak Mutation 118: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 31 Weak Mutation 117: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 32 Weak Mutation 116: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 33 Weak Mutation 115: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 34 Weak Mutation 114: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC -1 len
   * 35 Weak Mutation 113: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC 1 len
   * 36 Weak Mutation 112: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp Negation of len
   * 37 Weak Mutation 127: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 38 Weak Mutation 121: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> >
   * 39 Weak Mutation 129: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 40 Weak Mutation 128: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 41 Weak Mutation 131: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 42 Weak Mutation 130: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 43 Weak Mutation 136: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 len
   * 44 Weak Mutation 139: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of k
   * 45 Weak Mutation 141: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 k
   * 46 Weak Mutation 140: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 k
   * 47 Weak Mutation 142: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> +
   * 48 Weak Mutation 135: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 len
   * 49 Weak Mutation 134: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of len
   * 50 Weak Mutation 144: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> /
   * 51 Weak Mutation 145: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> *
   * 52 Weak Mutation 175: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 53 Weak Mutation 178: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC -1 k
   * 54 Weak Mutation 179: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> off
   * 55 Weak Mutation 176: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp Negation of k
   * 56 Weak Mutation 177: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC 1 k
   * 57 Weak Mutation 183: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceComparisonOperator > -> -2
   * 58 Weak Mutation 180: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 59 Weak Mutation 152: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC -1 off
   * 60 Weak Mutation 153: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 61 Weak Mutation 154: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 62 Weak Mutation 146: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable s1 -> s2
   * 63 Weak Mutation 147: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of s1
   * 64 Weak Mutation 148: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 65 Weak Mutation 149: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 66 Weak Mutation 150: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of off
   * 67 Weak Mutation 151: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC 1 off
   * 68 com.sleepycat.je.utilint.Adler32.update([BII)V: I77 Branch 4 IFGT L70 - true
   * 69 com.sleepycat.je.utilint.Adler32.update([BII)V: I23 Branch 2 IF_ICMPGE L71 - true
   * 70 com.sleepycat.je.utilint.Adler32.update([BII)V: I61 Branch 3 IFGT L73 - true
   * 71 Weak Mutation 87: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - DeleteField: adlerJ
   * 72 Weak Mutation 86: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp Negation
   * 73 Weak Mutation 93: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> |
   * 74 Weak Mutation 92: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65536
   * 75 Weak Mutation 95: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 76 Weak Mutation 94: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> ^
   * 77 Weak Mutation 89: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 1
   * 78 Weak Mutation 88: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 0
   * 79 Weak Mutation 91: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65534
   * 80 Weak Mutation 90: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> -1
   * 81 Weak Mutation 103: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator >> -> <<
   * 82 Weak Mutation 100: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 15
   * 83 Weak Mutation 101: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 17
   * 84 Weak Mutation 98: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 1
   * 85 Weak Mutation 99: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> -1
   * 86 Weak Mutation 96: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - DeleteField: adlerJ
   * 87 Weak Mutation 97: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 0
   * 88 Weak Mutation 110: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> ^
   * 89 Weak Mutation 108: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65536
   * 90 Weak Mutation 109: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> |
   * 91 Weak Mutation 106: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> -1
   * 92 Weak Mutation 107: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65534
   * 93 Weak Mutation 104: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 0
   * 94 Weak Mutation 105: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 1
   * 95 Weak Mutation 119: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 96 Weak Mutation 118: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 97 Weak Mutation 117: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 98 Weak Mutation 116: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 99 Weak Mutation 115: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 100 Weak Mutation 114: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC -1 len
   * 101 Weak Mutation 113: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC 1 len
   * 102 Weak Mutation 112: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp Negation of len
   * 103 Weak Mutation 127: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 104 Weak Mutation 121: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> >
   * 105 Weak Mutation 136: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 len
   * 106 Weak Mutation 139: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of k
   * 107 Weak Mutation 141: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 k
   * 108 Weak Mutation 140: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 k
   * 109 Weak Mutation 142: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> +
   * 110 Weak Mutation 129: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 111 Weak Mutation 128: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 112 Weak Mutation 131: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 113 Weak Mutation 130: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 114 Weak Mutation 135: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 len
   * 115 Weak Mutation 134: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of len
   * 116 Weak Mutation 152: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC -1 off
   * 117 Weak Mutation 153: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 118 Weak Mutation 154: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 119 Weak Mutation 144: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> /
   * 120 Weak Mutation 145: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> *
   * 121 Weak Mutation 146: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable s1 -> s2
   * 122 Weak Mutation 147: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of s1
   * 123 Weak Mutation 148: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 124 Weak Mutation 149: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 125 Weak Mutation 150: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of off
   * 126 Weak Mutation 151: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC 1 off
   * 127 Weak Mutation 175: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 128 Weak Mutation 178: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC -1 k
   * 129 Weak Mutation 179: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> off
   * 130 Weak Mutation 176: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp Negation of k
   * 131 Weak Mutation 177: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC 1 k
   * 132 Weak Mutation 183: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceComparisonOperator > -> -2
   * 133 Weak Mutation 180: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 134 Weak Mutation 207: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation of len
   * 135 Weak Mutation 212: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> -2
   * 136 Weak Mutation 208: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC 1 len
   * 137 Weak Mutation 209: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC -1 len
   */
  @Test
  public void test2()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[25];
      // Undeclared exception!
      try {
        adler32_0.update(byteArray0, 5552, 5552);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  //Test case number: 3
  /*
   * 15 covered goals:
   * 1 Weak Mutation 210: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> !=
   * 2 Weak Mutation 222: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s1 -> s2
   * 3 Weak Mutation 213: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s2 -> s1
   * 4 Weak Mutation 222: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s1 -> s2
   * 5 Weak Mutation 223: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - InsertUnaryOp Negation of s1
   * 6 Weak Mutation 216: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 1
   * 7 Weak Mutation 217: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> -1
   * 8 Weak Mutation 218: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 15
   * 9 Weak Mutation 219: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 17
   * 10 Weak Mutation 213: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s2 -> s1
   * 11 Weak Mutation 214: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - InsertUnaryOp Negation of s2
   * 12 Weak Mutation 215: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 0
   * 13 Weak Mutation 210: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> !=
   * 14 Weak Mutation 224: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator | -> &
   * 15 com.sleepycat.je.utilint.Adler32.update([BII)V: I77 Branch 4 IFGT L70 - false
   */
  @Test
  public void test3()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[28];
      adler32_0.update(byteArray0, (int) (byte) (-4), (int) (byte) (-4));
      assertEquals(1L, adler32_0.getValue());
  }

  //Test case number: 4
  /*
   * 17 covered goals:
   * 1 Weak Mutation 120: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 138: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable k -> len
   * 3 Weak Mutation 143: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> %
   * 4 Weak Mutation 133: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable len -> k
   * 5 Weak Mutation 127: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 6 Weak Mutation 129: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 7 Weak Mutation 128: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 8 Weak Mutation 131: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 9 Weak Mutation 130: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 10 Weak Mutation 148: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 11 Weak Mutation 149: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 12 Weak Mutation 120: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> ==
   * 13 Weak Mutation 137: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable k -> off
   * 14 Weak Mutation 138: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable k -> len
   * 15 Weak Mutation 143: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> %
   * 16 Weak Mutation 133: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable len -> k
   * 17 Weak Mutation 174: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> off
   */
  @Test
  public void test4()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try {
        adler32_0.update(byteArray0, 65500, 65500);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  //Test case number: 5
  /*
   * 58 covered goals:
   * 1 Weak Mutation 162: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 165: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 146: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable s1 -> s2
   * 4 Weak Mutation 168: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceVariable s1 -> s2
   * 5 Weak Mutation 166: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceVariable s2 -> s1
   * 6 Weak Mutation 111: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceVariable len -> off
   * 7 Weak Mutation 126: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC -1 len
   * 8 Weak Mutation 125: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC 1 len
   * 9 Weak Mutation 124: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp Negation of len
   * 10 Weak Mutation 123: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceVariable len -> off
   * 11 Weak Mutation 122: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> -1
   * 12 Weak Mutation 132: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable len -> off
   * 13 Weak Mutation 155: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 0
   * 14 Weak Mutation 156: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 1
   * 15 Weak Mutation 157: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> -1
   * 16 Weak Mutation 158: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 254
   * 17 Weak Mutation 159: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 256
   * 18 Weak Mutation 171: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> %
   * 19 Weak Mutation 170: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> -
   * 20 Weak Mutation 169: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - InsertUnaryOp Negation of s1
   * 21 Weak Mutation 168: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceVariable s1 -> s2
   * 22 Weak Mutation 173: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 172: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 163: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 162: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> -
   * 26 Weak Mutation 161: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceBitwiseOperator & -> ^
   * 27 Weak Mutation 160: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceBitwiseOperator & -> |
   * 28 Weak Mutation 167: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - InsertUnaryOp Negation of s2
   * 29 Weak Mutation 166: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceVariable s2 -> s1
   * 30 Weak Mutation 165: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> *
   * 31 Weak Mutation 164: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 186: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 0
   * 33 Weak Mutation 187: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 1
   * 34 Weak Mutation 185: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - InsertUnaryOp Negation of s1
   * 35 Weak Mutation 190: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 65522
   * 36 Weak Mutation 191: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> -
   * 37 Weak Mutation 188: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> -1
   * 38 Weak Mutation 189: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 65520
   * 39 Weak Mutation 182: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceComparisonOperator > -> >=
   * 40 Weak Mutation 205: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> *
   * 41 Weak Mutation 204: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> /
   * 42 Weak Mutation 206: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceVariable len -> off
   * 43 Weak Mutation 201: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 65522
   * 44 Weak Mutation 200: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 65520
   * 45 Weak Mutation 203: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> +
   * 46 Weak Mutation 202: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> -
   * 47 Weak Mutation 197: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 0
   * 48 Weak Mutation 196: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - InsertUnaryOp Negation of s2
   * 49 Weak Mutation 199: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> -1
   * 50 Weak Mutation 198: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 1
   * 51 Weak Mutation 193: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> /
   * 52 Weak Mutation 192: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> +
   * 53 Weak Mutation 194: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> *
   * 54 Weak Mutation 220: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator << -> >>>
   * 55 Weak Mutation 221: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator << -> >>
   * 56 Weak Mutation 211: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> >=
   * 57 com.sleepycat.je.utilint.Adler32.update([BII)V: I23 Branch 2 IF_ICMPGE L71 - false
   * 58 com.sleepycat.je.utilint.Adler32.update([BII)V: I61 Branch 3 IFGT L73 - false
   */
  @Test
  public void test5()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-19);
      adler32_0.update(byteArray0, (int) (byte)0, 1);
      assertEquals(15597806L, adler32_0.getValue());
  }

  //Test case number: 6
  /*
   * 195 covered goals:
   * 1 Weak Mutation 184: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceVariable s1 -> s2
   * 2 Weak Mutation 195: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceVariable s2 -> s1
   * 3 Weak Mutation 6: com.sleepycat.je.utilint.Adler32.update(I)V:57 - InsertUnaryOp Negation
   * 4 Weak Mutation 7: com.sleepycat.je.utilint.Adler32.update(I)V:57 - DeleteField: adlerJ
   * 5 Weak Mutation 8: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 0
   * 6 Weak Mutation 9: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 1
   * 7 Weak Mutation 10: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> -1
   * 8 Weak Mutation 11: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 65534
   * 9 Weak Mutation 12: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceConstant - 65535 -> 65536
   * 10 Weak Mutation 13: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceBitwiseOperator & -> |
   * 11 Weak Mutation 14: com.sleepycat.je.utilint.Adler32.update(I)V:57 - ReplaceBitwiseOperator & -> ^
   * 12 Weak Mutation 15: com.sleepycat.je.utilint.Adler32.update(I)V:58 - InsertUnaryOp Negation
   * 13 Weak Mutation 17: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 0
   * 14 Weak Mutation 16: com.sleepycat.je.utilint.Adler32.update(I)V:58 - DeleteField: adlerJ
   * 15 Weak Mutation 19: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> -1
   * 16 Weak Mutation 18: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 1
   * 17 Weak Mutation 21: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 17
   * 18 Weak Mutation 20: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 16 -> 15
   * 19 Weak Mutation 23: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator >> -> <<
   * 20 Weak Mutation 25: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 1
   * 21 Weak Mutation 24: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 0
   * 22 Weak Mutation 27: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 65534
   * 23 Weak Mutation 26: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> -1
   * 24 Weak Mutation 29: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator & -> |
   * 25 Weak Mutation 28: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceConstant - 65535 -> 65536
   * 26 Weak Mutation 31: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceVariable s1 -> s2
   * 27 Weak Mutation 30: com.sleepycat.je.utilint.Adler32.update(I)V:58 - ReplaceBitwiseOperator & -> ^
   * 28 Weak Mutation 34: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp IINC 1 b
   * 29 Weak Mutation 35: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp IINC -1 b
   * 30 Weak Mutation 32: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp Negation of s1
   * 31 Weak Mutation 33: com.sleepycat.je.utilint.Adler32.update(I)V:59 - InsertUnaryOp Negation of b
   * 32 Weak Mutation 38: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> -1
   * 33 Weak Mutation 39: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 254
   * 34 Weak Mutation 36: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 0
   * 35 Weak Mutation 37: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 1
   * 36 Weak Mutation 42: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceBitwiseOperator & -> ^
   * 37 Weak Mutation 43: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> -
   * 38 Weak Mutation 40: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 255 -> 256
   * 39 Weak Mutation 41: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceBitwiseOperator & -> |
   * 40 Weak Mutation 46: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> *
   * 41 Weak Mutation 47: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 0
   * 42 Weak Mutation 44: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> %
   * 43 Weak Mutation 45: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator + -> /
   * 44 Weak Mutation 51: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 65522
   * 45 Weak Mutation 50: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 65520
   * 46 Weak Mutation 49: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> -1
   * 47 Weak Mutation 48: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceConstant - 65521 -> 1
   * 48 Weak Mutation 55: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> *
   * 49 Weak Mutation 54: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> /
   * 50 Weak Mutation 53: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> +
   * 51 Weak Mutation 52: com.sleepycat.je.utilint.Adler32.update(I)V:59 - ReplaceArithmeticOperator % -> -
   * 52 Weak Mutation 59: com.sleepycat.je.utilint.Adler32.update(I)V:60 - InsertUnaryOp Negation of s2
   * 53 Weak Mutation 58: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceVariable s2 -> s1
   * 54 Weak Mutation 57: com.sleepycat.je.utilint.Adler32.update(I)V:60 - InsertUnaryOp Negation of s1
   * 55 Weak Mutation 56: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceVariable s1 -> s2
   * 56 Weak Mutation 62: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> /
   * 57 Weak Mutation 61: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator + -> %
   * 58 Weak Mutation 68: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 65522
   * 59 Weak Mutation 69: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> -
   * 60 Weak Mutation 70: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> +
   * 61 Weak Mutation 71: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> /
   * 62 Weak Mutation 64: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 0
   * 63 Weak Mutation 65: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 1
   * 64 Weak Mutation 66: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> -1
   * 65 Weak Mutation 67: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceConstant - 65521 -> 65520
   * 66 Weak Mutation 76: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 1
   * 67 Weak Mutation 77: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> -1
   * 68 Weak Mutation 78: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 15
   * 69 Weak Mutation 79: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 17
   * 70 Weak Mutation 72: com.sleepycat.je.utilint.Adler32.update(I)V:60 - ReplaceArithmeticOperator % -> *
   * 71 Weak Mutation 74: com.sleepycat.je.utilint.Adler32.update(I)V:61 - InsertUnaryOp Negation of s2
   * 72 Weak Mutation 75: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceConstant - 16 -> 0
   * 73 Weak Mutation 84: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator | -> &
   * 74 Weak Mutation 87: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - DeleteField: adlerJ
   * 75 Weak Mutation 86: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp Negation
   * 76 Weak Mutation 81: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator << -> >>
   * 77 Weak Mutation 80: com.sleepycat.je.utilint.Adler32.update(I)V:61 - ReplaceBitwiseOperator << -> >>>
   * 78 Weak Mutation 83: com.sleepycat.je.utilint.Adler32.update(I)V:61 - InsertUnaryOp Negation of s1
   * 79 Weak Mutation 93: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> |
   * 80 Weak Mutation 92: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65536
   * 81 Weak Mutation 95: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 82 Weak Mutation 94: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceBitwiseOperator & -> ^
   * 83 Weak Mutation 89: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 1
   * 84 Weak Mutation 88: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 0
   * 85 Weak Mutation 91: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> 65534
   * 86 Weak Mutation 90: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceConstant - 65535 -> -1
   * 87 Weak Mutation 103: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator >> -> <<
   * 88 Weak Mutation 100: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 15
   * 89 Weak Mutation 101: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 17
   * 90 Weak Mutation 98: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 1
   * 91 Weak Mutation 99: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> -1
   * 92 Weak Mutation 96: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - DeleteField: adlerJ
   * 93 Weak Mutation 97: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 16 -> 0
   * 94 Weak Mutation 110: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> ^
   * 95 Weak Mutation 111: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceVariable len -> off
   * 96 Weak Mutation 108: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65536
   * 97 Weak Mutation 109: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> |
   * 98 Weak Mutation 106: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> -1
   * 99 Weak Mutation 107: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 65534
   * 100 Weak Mutation 104: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 0
   * 101 Weak Mutation 105: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 65535 -> 1
   * 102 Weak Mutation 119: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5553
   * 103 Weak Mutation 118: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 5551
   * 104 Weak Mutation 117: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> -1
   * 105 Weak Mutation 116: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 1
   * 106 Weak Mutation 115: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceConstant - 5552 -> 0
   * 107 Weak Mutation 114: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC -1 len
   * 108 Weak Mutation 113: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC 1 len
   * 109 Weak Mutation 112: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp Negation of len
   * 110 Weak Mutation 126: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC -1 len
   * 111 Weak Mutation 125: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp IINC 1 len
   * 112 Weak Mutation 124: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - InsertUnaryOp Negation of len
   * 113 Weak Mutation 123: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceVariable len -> off
   * 114 Weak Mutation 122: com.sleepycat.je.utilint.Adler32.update([BII)V:71 - ReplaceComparisonOperator >= -> -1
   * 115 Weak Mutation 137: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable k -> off
   * 116 Weak Mutation 136: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 len
   * 117 Weak Mutation 139: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of k
   * 118 Weak Mutation 141: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC -1 k
   * 119 Weak Mutation 140: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 k
   * 120 Weak Mutation 142: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> +
   * 121 Weak Mutation 132: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceVariable len -> off
   * 122 Weak Mutation 135: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp IINC 1 len
   * 123 Weak Mutation 134: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - InsertUnaryOp Negation of len
   * 124 Weak Mutation 152: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC -1 off
   * 125 Weak Mutation 153: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> len
   * 126 Weak Mutation 154: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceVariable off -> k
   * 127 Weak Mutation 155: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 0
   * 128 Weak Mutation 156: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 1
   * 129 Weak Mutation 157: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> -1
   * 130 Weak Mutation 158: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 254
   * 131 Weak Mutation 159: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceConstant - 255 -> 256
   * 132 Weak Mutation 144: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> /
   * 133 Weak Mutation 145: com.sleepycat.je.utilint.Adler32.update([BII)V:72 - ReplaceArithmeticOperator - -> *
   * 134 Weak Mutation 147: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of s1
   * 135 Weak Mutation 150: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp Negation of off
   * 136 Weak Mutation 151: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - InsertUnaryOp IINC 1 off
   * 137 Weak Mutation 171: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> %
   * 138 Weak Mutation 170: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> -
   * 139 Weak Mutation 169: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - InsertUnaryOp Negation of s1
   * 140 Weak Mutation 175: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 141 Weak Mutation 174: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> off
   * 142 Weak Mutation 173: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> *
   * 143 Weak Mutation 172: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - ReplaceArithmeticOperator + -> /
   * 144 Weak Mutation 163: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> %
   * 145 Weak Mutation 161: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceBitwiseOperator & -> ^
   * 146 Weak Mutation 160: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceBitwiseOperator & -> |
   * 147 Weak Mutation 167: com.sleepycat.je.utilint.Adler32.update([BII)V:75 - InsertUnaryOp Negation of s2
   * 148 Weak Mutation 164: com.sleepycat.je.utilint.Adler32.update([BII)V:74 - ReplaceArithmeticOperator + -> /
   * 149 Weak Mutation 186: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 0
   * 150 Weak Mutation 187: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 1
   * 151 Weak Mutation 185: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - InsertUnaryOp Negation of s1
   * 152 Weak Mutation 190: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 65522
   * 153 Weak Mutation 191: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> -
   * 154 Weak Mutation 188: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> -1
   * 155 Weak Mutation 189: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceConstant - 65521 -> 65520
   * 156 Weak Mutation 178: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC -1 k
   * 157 Weak Mutation 179: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> off
   * 158 Weak Mutation 176: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp Negation of k
   * 159 Weak Mutation 177: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - InsertUnaryOp IINC 1 k
   * 160 Weak Mutation 182: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceComparisonOperator > -> >=
   * 161 Weak Mutation 183: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceComparisonOperator > -> -2
   * 162 Weak Mutation 180: com.sleepycat.je.utilint.Adler32.update([BII)V:73 - ReplaceVariable k -> len
   * 163 Weak Mutation 205: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> *
   * 164 Weak Mutation 204: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> /
   * 165 Weak Mutation 207: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation of len
   * 166 Weak Mutation 206: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceVariable len -> off
   * 167 Weak Mutation 201: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 65522
   * 168 Weak Mutation 200: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 65520
   * 169 Weak Mutation 203: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> +
   * 170 Weak Mutation 202: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceArithmeticOperator % -> -
   * 171 Weak Mutation 197: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 0
   * 172 Weak Mutation 196: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - InsertUnaryOp Negation of s2
   * 173 Weak Mutation 199: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> -1
   * 174 Weak Mutation 198: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceConstant - 65521 -> 1
   * 175 Weak Mutation 193: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> /
   * 176 Weak Mutation 192: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> +
   * 177 Weak Mutation 194: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceArithmeticOperator % -> *
   * 178 Weak Mutation 220: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator << -> >>>
   * 179 Weak Mutation 221: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator << -> >>
   * 180 Weak Mutation 222: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s1 -> s2
   * 181 Weak Mutation 223: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - InsertUnaryOp Negation of s1
   * 182 Weak Mutation 216: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 1
   * 183 Weak Mutation 217: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> -1
   * 184 Weak Mutation 218: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 15
   * 185 Weak Mutation 219: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 17
   * 186 Weak Mutation 212: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> -2
   * 187 Weak Mutation 213: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceVariable s2 -> s1
   * 188 Weak Mutation 214: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - InsertUnaryOp Negation of s2
   * 189 Weak Mutation 215: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceConstant - 16 -> 0
   * 190 Weak Mutation 208: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC 1 len
   * 191 Weak Mutation 209: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp IINC -1 len
   * 192 Weak Mutation 211: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceComparisonOperator > -> >=
   * 193 Weak Mutation 224: com.sleepycat.je.utilint.Adler32.update([BII)V:80 - ReplaceBitwiseOperator | -> &
   * 194 Weak Mutation 184: com.sleepycat.je.utilint.Adler32.update([BII)V:77 - ReplaceVariable s1 -> s2
   * 195 Weak Mutation 195: com.sleepycat.je.utilint.Adler32.update([BII)V:78 - ReplaceVariable s2 -> s1
   */
  @Test
  public void test6()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[9];
      adler32_0.update(65517);
      adler32_0.update(byteArray0, (int) (byte)0, 1);
      assertEquals(31195374L, adler32_0.getValue());
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 228: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> 2
   * 2 Weak Mutation 227: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> -1
   * 3 Weak Mutation 226: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> 0
   * 4 com.sleepycat.je.utilint.Adler32.reset()V: root-Branch
   * 5 Weak Mutation 228: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> 2
   * 6 Weak Mutation 227: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> -1
   * 7 Weak Mutation 226: com.sleepycat.je.utilint.Adler32.reset()V:87 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test7()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      adler32_0.reset();
      assertEquals(1L, adler32_0.getValue());
  }

  //Test case number: 8
  /*
   * 8 covered goals:
   * 1 Weak Mutation 230: com.sleepycat.je.utilint.Adler32.getValue()J:94 - DeleteField: adlerJ
   * 2 Weak Mutation 229: com.sleepycat.je.utilint.Adler32.getValue()J:94 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.utilint.Adler32.getValue()J: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 1: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> -1
   * 6 Weak Mutation 2: com.sleepycat.je.utilint.Adler32.<init>()V:49 - ReplaceConstant - 1 -> 2
   * 7 Weak Mutation 230: com.sleepycat.je.utilint.Adler32.getValue()J:94 - DeleteField: adlerJ
   * 8 Weak Mutation 229: com.sleepycat.je.utilint.Adler32.getValue()J:94 - InsertUnaryOp Negation
   */
  @Test
  public void test8()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      long long0 = adler32_0.getValue();
      assertEquals(1L, long0);
  }
}
