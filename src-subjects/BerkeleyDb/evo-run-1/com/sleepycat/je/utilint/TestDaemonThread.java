/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.evictor.Evictor;

@RunWith(EvoSuiteRunner.class)
public class TestDaemonThread {


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:31 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 1: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:32 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 2: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:33 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 3: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:36 - InsertUnaryOp Negation of waitTime
   * 5 com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   * 6 Weak Mutation 0: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:31 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 1: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:32 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 2: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:33 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 3: com.sleepycat.je.utilint.DaemonThread.<init>(JLjava/lang/String;Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:36 - InsertUnaryOp Negation of waitTime
   */
  @Test
  public void test0()  throws Throwable  {
      Evictor evictor0 = null;
      try {
        evictor0 = new Evictor((EnvironmentImpl) null, "D");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
