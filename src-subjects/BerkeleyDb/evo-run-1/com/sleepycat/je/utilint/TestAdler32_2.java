/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.zip.Adler32;

@RunWith(EvoSuiteRunner.class)
public class TestAdler32_2 {


  //Test case number: 2
  /*
   * 151 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> -1
   * 2 Weak Mutation 84: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 1
   * 3 Weak Mutation 87: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 65536
   * 4 Weak Mutation 86: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 65534
   * 5 Weak Mutation 81: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - InsertUnaryOp Negation
   * 6 Weak Mutation 83: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 0
   * 7 Weak Mutation 82: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - DeleteField: adlerJ
   * 8 Weak Mutation 89: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceBitwiseOperator & -> ^
   * 9 Weak Mutation 88: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceBitwiseOperator & -> |
   * 10 Weak Mutation 93: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 1
   * 11 Weak Mutation 92: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 0
   * 12 Weak Mutation 95: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 15
   * 13 Weak Mutation 94: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> -1
   * 14 Weak Mutation 91: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - DeleteField: adlerJ
   * 15 Weak Mutation 90: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - InsertUnaryOp Negation
   * 16 Weak Mutation 102: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 65534
   * 17 Weak Mutation 103: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 65536
   * 18 Weak Mutation 100: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 1
   * 19 Weak Mutation 101: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> -1
   * 20 Weak Mutation 98: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator >> -> <<
   * 21 Weak Mutation 99: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 0
   * 22 Weak Mutation 96: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 17
   * 23 Weak Mutation 104: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator & -> |
   * 24 Weak Mutation 105: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator & -> ^
   * 25 Weak Mutation 111: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 108: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 106: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp Negation
   * 28 Weak Mutation 107: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 119: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5553
   * 30 Weak Mutation 118: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5551
   * 31 Weak Mutation 117: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> -1
   * 32 Weak Mutation 116: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 1
   * 33 Weak Mutation 115: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 0
   * 34 Weak Mutation 114: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 113: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 112: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp Negation
   * 37 Weak Mutation 127: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 1
   * 38 Weak Mutation 126: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 0
   * 39 Weak Mutation 121: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceComparisonOperator >= -> >
   * 40 Weak Mutation 129: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5551
   * 41 Weak Mutation 128: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> -1
   * 42 Weak Mutation 130: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5553
   * 43 Weak Mutation 137: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> +
   * 44 Weak Mutation 136: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC -1
   * 45 Weak Mutation 139: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> /
   * 46 Weak Mutation 140: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> *
   * 47 Weak Mutation 131: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp Negation
   * 48 Weak Mutation 133: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC -1
   * 49 Weak Mutation 132: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC 1
   * 50 Weak Mutation 135: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC 1
   * 51 Weak Mutation 134: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp Negation
   * 52 Weak Mutation 141: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp Negation
   * 53 Weak Mutation 143: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 142: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp IINC 1
   * 55 Weak Mutation 146: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceComparisonOperator <= -> -1
   * 56 Weak Mutation 152: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 1
   * 57 Weak Mutation 153: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> -1
   * 58 Weak Mutation 154: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 254
   * 59 Weak Mutation 155: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 256
   * 60 Weak Mutation 156: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> |
   * 61 Weak Mutation 157: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> ^
   * 62 Weak Mutation 159: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceArithmeticOperator + -> %
   * 63 Weak Mutation 147: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 64 Weak Mutation 148: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 65 Weak Mutation 149: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp IINC 1
   * 66 Weak Mutation 150: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp IINC -1
   * 67 Weak Mutation 151: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 0
   * 68 Weak Mutation 160: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceArithmeticOperator + -> /
   * 69 Weak Mutation 163: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation
   * 70 Weak Mutation 162: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation
   * 71 Weak Mutation 167: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> *
   * 72 Weak Mutation 166: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> /
   * 73 Weak Mutation 165: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> %
   * 74 Weak Mutation 164: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> -
   * 75 com.sleepycat.je.utilint.Adler32.update([BII)V: I19 Branch 2 IFLE L65 - false
   * 76 com.sleepycat.je.utilint.Adler32.update([BII)V: I24 Branch 3 IF_ICMPGE L66 - true
   * 77 com.sleepycat.je.utilint.Adler32.update([BII)V: I41 Branch 4 IFLE L68 - false
   * 78 Weak Mutation 85: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> -1
   * 79 Weak Mutation 84: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 1
   * 80 Weak Mutation 87: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 65536
   * 81 Weak Mutation 86: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 65534
   * 82 Weak Mutation 81: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - InsertUnaryOp Negation
   * 83 Weak Mutation 83: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceConstant - 65535 -> 0
   * 84 Weak Mutation 82: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - DeleteField: adlerJ
   * 85 Weak Mutation 93: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 1
   * 86 Weak Mutation 92: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 0
   * 87 Weak Mutation 95: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 15
   * 88 Weak Mutation 94: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> -1
   * 89 Weak Mutation 89: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceBitwiseOperator & -> ^
   * 90 Weak Mutation 88: com.sleepycat.je.utilint.Adler32.update([BII)V:63 - ReplaceBitwiseOperator & -> |
   * 91 Weak Mutation 91: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - DeleteField: adlerJ
   * 92 Weak Mutation 90: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - InsertUnaryOp Negation
   * 93 Weak Mutation 102: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 65534
   * 94 Weak Mutation 103: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 65536
   * 95 Weak Mutation 100: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 1
   * 96 Weak Mutation 101: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> -1
   * 97 Weak Mutation 98: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator >> -> <<
   * 98 Weak Mutation 99: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 65535 -> 0
   * 99 Weak Mutation 96: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceConstant - 16 -> 17
   * 100 Weak Mutation 111: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - ReplaceComparisonOperator <= -> -1
   * 101 Weak Mutation 108: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp IINC -1
   * 102 Weak Mutation 106: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp Negation
   * 103 Weak Mutation 107: com.sleepycat.je.utilint.Adler32.update([BII)V:65 - InsertUnaryOp IINC 1
   * 104 Weak Mutation 104: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator & -> |
   * 105 Weak Mutation 105: com.sleepycat.je.utilint.Adler32.update([BII)V:64 - ReplaceBitwiseOperator & -> ^
   * 106 Weak Mutation 119: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5553
   * 107 Weak Mutation 118: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5551
   * 108 Weak Mutation 117: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> -1
   * 109 Weak Mutation 116: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 1
   * 110 Weak Mutation 115: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 0
   * 111 Weak Mutation 114: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp IINC -1
   * 112 Weak Mutation 113: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp IINC 1
   * 113 Weak Mutation 112: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - InsertUnaryOp Negation
   * 114 Weak Mutation 127: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 1
   * 115 Weak Mutation 126: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 0
   * 116 Weak Mutation 121: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceComparisonOperator >= -> >
   * 117 Weak Mutation 137: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> +
   * 118 Weak Mutation 136: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC -1
   * 119 Weak Mutation 139: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> /
   * 120 Weak Mutation 141: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp Negation
   * 121 Weak Mutation 140: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - ReplaceArithmeticOperator - -> *
   * 122 Weak Mutation 143: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp IINC -1
   * 123 Weak Mutation 142: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - InsertUnaryOp IINC 1
   * 124 Weak Mutation 129: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5551
   * 125 Weak Mutation 128: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> -1
   * 126 Weak Mutation 131: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp Negation
   * 127 Weak Mutation 130: com.sleepycat.je.utilint.Adler32.update([BII)V:66 - ReplaceConstant - 5552 -> 5553
   * 128 Weak Mutation 133: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC -1
   * 129 Weak Mutation 132: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC 1
   * 130 Weak Mutation 135: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp IINC 1
   * 131 Weak Mutation 134: com.sleepycat.je.utilint.Adler32.update([BII)V:67 - InsertUnaryOp Negation
   * 132 Weak Mutation 152: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 1
   * 133 Weak Mutation 153: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> -1
   * 134 Weak Mutation 154: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 254
   * 135 Weak Mutation 155: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 256
   * 136 Weak Mutation 156: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> |
   * 137 Weak Mutation 157: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceBitwiseOperator & -> ^
   * 138 Weak Mutation 159: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceArithmeticOperator + -> %
   * 139 Weak Mutation 146: com.sleepycat.je.utilint.Adler32.update([BII)V:68 - ReplaceComparisonOperator <= -> -1
   * 140 Weak Mutation 147: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 141 Weak Mutation 148: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp Negation
   * 142 Weak Mutation 149: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp IINC 1
   * 143 Weak Mutation 150: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - InsertUnaryOp IINC -1
   * 144 Weak Mutation 151: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceConstant - 255 -> 0
   * 145 Weak Mutation 163: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation
   * 146 Weak Mutation 162: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - InsertUnaryOp Negation
   * 147 Weak Mutation 160: com.sleepycat.je.utilint.Adler32.update([BII)V:69 - ReplaceArithmeticOperator + -> /
   * 148 Weak Mutation 167: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> *
   * 149 Weak Mutation 166: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> /
   * 150 Weak Mutation 165: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> %
   * 151 Weak Mutation 164: com.sleepycat.je.utilint.Adler32.update([BII)V:70 - ReplaceArithmeticOperator + -> -
   */
  @Test
  public void test2()  throws Throwable  {
      com.sleepycat.je.utilint.Adler32 adler32_0 = new com.sleepycat.je.utilint.Adler32();
      byte[] byteArray0 = new byte[34];
      // Undeclared exception!
      try {
        adler32_0.update(byteArray0, (int) (byte)0, 5552);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 34
         */
      }
  }
}
