/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.DbLsn;

@RunWith(EvoSuiteRunner.class)
public class TestDbLsn_15 {


  //Test case number: 15
  /*
   * 13 covered goals:
   * 1 Weak Mutation 179: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - ReplaceArithmeticOperator - -> +
   * 2 Weak Mutation 181: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - ReplaceArithmeticOperator - -> *
   * 3 Weak Mutation 151: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:86 - ReplaceComparisonOperator != -> <
   * 4 Weak Mutation 175: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - DeleteStatement: getFileOffset(J)J
   * 5 Weak Mutation 174: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - InsertUnaryOp Negation
   * 6 Weak Mutation 173: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:92 - ReplaceComparisonOperator != -> -1
   * 7 Weak Mutation 161: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:88 - ReplaceComparisonOperator != -> <
   * 8 Weak Mutation 176: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - InsertUnaryOp Negation
   * 9 Weak Mutation 177: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - DeleteStatement: getFileOffset(J)J
   * 10 Weak Mutation 182: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - DeleteStatement: abs(J)J
   * 11 Weak Mutation 180: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - ReplaceArithmeticOperator - -> /
   * 12 Weak Mutation 179: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - ReplaceArithmeticOperator - -> +
   * 13 Weak Mutation 181: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:93 - ReplaceArithmeticOperator - -> *
   */
  @Test
  public void test15()  throws Throwable  {
      long long0 = DbLsn.getNoCleaningDistance((long) 15, (long) 15, (long) 15);
      assertEquals(0L, long0);
  }
}
