/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.BitMap;

@RunWith(EvoSuiteRunner.class)
public class TestBitMap_1 {


  //Test case number: 1
  /*
   * 23 covered goals:
   * 1 Weak Mutation 41: com.sleepycat.je.utilint.BitMap.get(J)Z:42 - InsertUnaryOp Negation
   * 2 Weak Mutation 42: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp Negation
   * 3 Weak Mutation 43: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp IINC 1
   * 4 Weak Mutation 44: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 45: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - DeleteStatement: get(I)Z
   * 6 com.sleepycat.je.utilint.BitMap.get(J)Z: I30 Branch 4 IFNONNULL L39 - true
   * 7 Weak Mutation 4: com.sleepycat.je.utilint.BitMap.set(J)V:24 - ReplaceComparisonOperator >= -> ==
   * 8 Weak Mutation 25: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - InsertUnaryOp Negation
   * 9 Weak Mutation 27: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceConstant - 0 -> -1
   * 10 Weak Mutation 26: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 29: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceComparisonOperator >= -> ==
   * 12 Weak Mutation 28: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - DeleteStatement: longSub(JJ)I
   * 13 Weak Mutation 38: com.sleepycat.je.utilint.BitMap.get(J)Z:38 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 39: com.sleepycat.je.utilint.BitMap.get(J)Z:39 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 37: com.sleepycat.je.utilint.BitMap.get(J)Z:38 - InsertUnaryOp Negation
   * 16 Weak Mutation 42: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp Negation
   * 17 Weak Mutation 43: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 41: com.sleepycat.je.utilint.BitMap.get(J)Z:42 - InsertUnaryOp Negation
   * 19 Weak Mutation 44: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 45: com.sleepycat.je.utilint.BitMap.get(J)Z:43 - DeleteStatement: get(I)Z
   * 21 Weak Mutation 53: com.sleepycat.je.utilint.BitMap.getBitSet(JZ)Ljava/util/BitSet;:46 - ReplaceBitwiseOperator >> -> <<
   * 22 com.sleepycat.je.utilint.BitMap.get(J)Z: I5 Branch 3 IFGE L35 - true
   * 23 com.sleepycat.je.utilint.BitMap.getBitSet(JZ)Ljava/util/BitSet;: I20 Branch 5 IFEQ L48 - true
   */
  @Test
  public void test1()  throws Throwable  {
      BitMap bitMap0 = new BitMap();
      bitMap0.set(42L);
      boolean boolean0 = bitMap0.get(42L);
      assertEquals(1, bitMap0.getNumSegments());
      assertEquals(true, boolean0);
  }
}
