/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.DbLsn;

@RunWith(EvoSuiteRunner.class)
public class TestDbLsn_4 {


  //Test case number: 4
  /*
   * 23 covered goals:
   * 1 Weak Mutation 36: com.sleepycat.je.utilint.DbLsn.getFileNumber(J)J:34 - ReplaceBitwiseOperator >> -> >>>
   * 2 Weak Mutation 58: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:44 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 59: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> 0
   * 4 Weak Mutation 61: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 60: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 84: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:55 - ReplaceComparisonOperator != -> >
   * 7 Weak Mutation 94: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:60 - ReplaceComparisonOperator != -> >
   * 8 Weak Mutation 102: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - InsertUnaryOp Negation
   * 9 Weak Mutation 103: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - DeleteStatement: compareLong(JJ)I
   * 10 Weak Mutation 101: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - InsertUnaryOp Negation
   * 11 com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I: I5 Branch 2 IFGE L44 - false
   * 12 com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I: I31 Branch 6 IFNE L60 - true
   * 13 Weak Mutation 75: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:55 - ReplaceComparisonOperator == -> >=
   * 14 Weak Mutation 36: com.sleepycat.je.utilint.DbLsn.getFileNumber(J)J:34 - ReplaceBitwiseOperator >> -> >>>
   * 15 Weak Mutation 59: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> 0
   * 16 Weak Mutation 58: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:44 - ReplaceComparisonOperator >= -> -1
   * 17 Weak Mutation 61: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> -2
   * 18 Weak Mutation 60: com.sleepycat.je.utilint.DbLsn.compareLong(JJ)I:45 - ReplaceConstant - -1 -> 1
   * 19 Weak Mutation 84: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:55 - ReplaceComparisonOperator != -> >
   * 20 Weak Mutation 94: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:60 - ReplaceComparisonOperator != -> >
   * 21 Weak Mutation 102: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - InsertUnaryOp Negation
   * 22 Weak Mutation 103: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - DeleteStatement: compareLong(JJ)I
   * 23 Weak Mutation 101: com.sleepycat.je.utilint.DbLsn.compareTo(JJ)I:64 - InsertUnaryOp Negation
   */
  @Test
  public void test4()  throws Throwable  {
      int int0 = DbLsn.compareTo((long) 0, (-871L));
      assertEquals((-1), int0);
  }
}
