/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.TinyHashSet;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestTinyHashSet_15 {


  //Test case number: 15
  /*
   * 7 covered goals:
   * 1 com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V: I4 Branch 4 IFNULL L104 - true
   * 2 Weak Mutation 0: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V:87 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 1: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V:91 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 2: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V:91 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 15: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 2: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V:91 - ReplaceConstant - 1 -> 0
   * 7 com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V: I23 Branch 1 IFNONNULL L91 - false
   */
  @Test
  public void test15()  throws Throwable  {
      TinyHashSet.SingleElementIterator tinyHashSet_SingleElementIterator0 = new TinyHashSet.SingleElementIterator((Object) null, (TinyHashSet) null);
      // Undeclared exception!
      try {
        tinyHashSet_SingleElementIterator0.remove();
        fail("Expecting exception: IllegalStateException");
      } catch(IllegalStateException e) {
      }
  }
}
