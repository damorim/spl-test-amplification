/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.BitMap;

@RunWith(EvoSuiteRunner.class)
public class TestBitMap_3 {


  //Test case number: 3
  /*
   * 17 covered goals:
   * 1 Weak Mutation 25: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - InsertUnaryOp Negation
   * 2 Weak Mutation 27: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceConstant - 0 -> -1
   * 3 Weak Mutation 26: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 28: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - DeleteStatement: longSub(JJ)I
   * 5 Weak Mutation 31: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceComparisonOperator >= -> -1
   * 6 Weak Mutation 34: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - ReplaceConstant -  is negative. -> 
   * 7 Weak Mutation 35: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 32: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - InsertUnaryOp Negation
   * 9 Weak Mutation 33: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 36: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: toString()Ljava/lang/String;
   * 11 com.sleepycat.je.utilint.BitMap.get(J)Z: I5 Branch 3 IFGE L35 - false
   * 12 Weak Mutation 31: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceComparisonOperator >= -> -1
   * 13 Weak Mutation 34: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - ReplaceConstant -  is negative. -> 
   * 14 Weak Mutation 35: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 15 Weak Mutation 32: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - InsertUnaryOp Negation
   * 16 Weak Mutation 33: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 17 Weak Mutation 36: com.sleepycat.je.utilint.BitMap.get(J)Z:36 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test3()  throws Throwable  {
      BitMap bitMap0 = new BitMap();
      try {
        bitMap0.get((-708L));
        fail("Expecting exception: IndexOutOfBoundsException");
      } catch(IndexOutOfBoundsException e) {
        /*
         * -708 is negative.
         */
      }
  }
}
