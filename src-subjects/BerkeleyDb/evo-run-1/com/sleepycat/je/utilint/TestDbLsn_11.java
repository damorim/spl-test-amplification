/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.DbLsn;

@RunWith(EvoSuiteRunner.class)
public class TestDbLsn_11 {


  //Test case number: 11
  /*
   * 21 covered goals:
   * 1 Weak Mutation 152: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:86 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 162: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:88 - ReplaceComparisonOperator != -> >
   * 3 Weak Mutation 192: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - ReplaceArithmeticOperator - -> +
   * 4 Weak Mutation 194: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - ReplaceArithmeticOperator - -> *
   * 5 Weak Mutation 294: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:135 - ReplaceArithmeticOperator - -> +
   * 6 Weak Mutation 296: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:135 - ReplaceArithmeticOperator - -> *
   * 7 Weak Mutation 171: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:92 - ReplaceComparisonOperator != -> <
   * 8 Weak Mutation 190: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - InsertUnaryOp Negation
   * 9 Weak Mutation 188: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:95 - ReplaceComparisonOperator <= -> -1
   * 10 Weak Mutation 189: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - InsertUnaryOp Negation
   * 11 Weak Mutation 197: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - InsertUnaryOp Negation
   * 12 Weak Mutation 196: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - InsertUnaryOp Negation
   * 13 Weak Mutation 198: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - DeleteStatement: calcDiff(JJJJ)J
   * 14 Weak Mutation 193: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - ReplaceArithmeticOperator - -> /
   * 15 Weak Mutation 195: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - InsertUnaryOp Negation
   * 16 Weak Mutation 152: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:86 - ReplaceComparisonOperator != -> >
   * 17 Weak Mutation 162: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:88 - ReplaceComparisonOperator != -> >
   * 18 Weak Mutation 192: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - ReplaceArithmeticOperator - -> +
   * 19 Weak Mutation 194: com.sleepycat.je.utilint.DbLsn.getNoCleaningDistance(JJJ)J:96 - ReplaceArithmeticOperator - -> *
   * 20 Weak Mutation 294: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:135 - ReplaceArithmeticOperator - -> +
   * 21 Weak Mutation 296: com.sleepycat.je.utilint.DbLsn.calcDiff(JJJJ)J:135 - ReplaceArithmeticOperator - -> *
   */
  @Test
  public void test11()  throws Throwable  {
      long long0 = DbLsn.getNoCleaningDistance((-73L), (-309237645327L), 0L);
      assertEquals((-58L), long0);
  }
}
