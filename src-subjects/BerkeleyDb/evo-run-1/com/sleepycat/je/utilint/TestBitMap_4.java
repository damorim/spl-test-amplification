/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.BitMap;

@RunWith(EvoSuiteRunner.class)
public class TestBitMap_4 {


  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.utilint.BitMap.get(J)Z:35 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 38: com.sleepycat.je.utilint.BitMap.get(J)Z:38 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 37: com.sleepycat.je.utilint.BitMap.get(J)Z:38 - InsertUnaryOp Negation
   * 4 Weak Mutation 39: com.sleepycat.je.utilint.BitMap.get(J)Z:39 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 40: com.sleepycat.je.utilint.BitMap.get(J)Z:40 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.utilint.BitMap.get(J)Z: I5 Branch 3 IFGE L35 - true
   * 7 com.sleepycat.je.utilint.BitMap.get(J)Z: I30 Branch 4 IFNONNULL L39 - false
   * 8 com.sleepycat.je.utilint.BitMap.getBitSet(JZ)Ljava/util/BitSet;: I20 Branch 5 IFEQ L48 - true
   * 9 Weak Mutation 40: com.sleepycat.je.utilint.BitMap.get(J)Z:40 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test4()  throws Throwable  {
      BitMap bitMap0 = new BitMap();
      boolean boolean0 = bitMap0.get(42L);
      assertEquals(false, boolean0);
      assertEquals(0, bitMap0.getNumSegments());
  }
}
