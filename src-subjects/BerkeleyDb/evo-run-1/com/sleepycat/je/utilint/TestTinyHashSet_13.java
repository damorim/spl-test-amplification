/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.utilint;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.utilint.TinyHashSet;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestTinyHashSet_13 {


  //Test case number: 13
  /*
   * 26 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - DeleteField: returnedTheObjectZ
   * 2 Weak Mutation 19: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteField: theSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 3 Weak Mutation 21: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 4 Weak Mutation 20: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteField: theObjectLjava/lang/Object;
   * 5 com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V: I7 Branch 5 IFNE L104 - true
   * 6 Weak Mutation 3: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.<init>(Ljava/lang/Object;Lcom/sleepycat/je/utilint/TinyHashSet;)V:91 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 9: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.next()Ljava/lang/Object;:97 - InsertUnaryOp Negation
   * 8 Weak Mutation 11: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.next()Ljava/lang/Object;:97 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 12: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.next()Ljava/lang/Object;:100 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 13: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.next()Ljava/lang/Object;:101 - DeleteField: theObjectLjava/lang/Object;
   * 11 Weak Mutation 14: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - DeleteField: theObjectLjava/lang/Object;
   * 12 Weak Mutation 16: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - InsertUnaryOp Negation
   * 13 Weak Mutation 18: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 47: com.sleepycat.je.utilint.TinyHashSet.remove(Ljava/lang/Object;)Z:39 - ReplaceComparisonOperator = null -> != null
   * 15 Weak Mutation 50: com.sleepycat.je.utilint.TinyHashSet.remove(Ljava/lang/Object;)Z:43 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 14: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - DeleteField: theObjectLjava/lang/Object;
   * 17 Weak Mutation 15: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - ReplaceComparisonOperator = null -> != null
   * 18 Weak Mutation 17: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - DeleteField: returnedTheObjectZ
   * 19 Weak Mutation 16: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - InsertUnaryOp Negation
   * 20 Weak Mutation 19: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteField: theSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 21 Weak Mutation 18: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:104 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 21: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 23 Weak Mutation 20: com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V:107 - DeleteField: theObjectLjava/lang/Object;
   * 24 Weak Mutation 50: com.sleepycat.je.utilint.TinyHashSet.remove(Ljava/lang/Object;)Z:43 - ReplaceConstant - 0 -> 1
   * 25 com.sleepycat.je.utilint.TinyHashSet.remove(Ljava/lang/Object;)Z: I47 Branch 14 IFNULL L39 - true
   * 26 com.sleepycat.je.utilint.TinyHashSet$SingleElementIterator.remove()V: I4 Branch 4 IFNULL L104 - false
   */
  @Test
  public void test13()  throws Throwable  {
      TinyHashSet tinyHashSet0 = new TinyHashSet();
      TinyHashSet.SingleElementIterator tinyHashSet_SingleElementIterator0 = new TinyHashSet.SingleElementIterator((Object) "", tinyHashSet0);
      String string0 = (String)tinyHashSet_SingleElementIterator0.next();
      assertNotNull(string0);
      
      tinyHashSet_SingleElementIterator0.remove();
      assertEquals(true, tinyHashSet_SingleElementIterator0.returnedTheObject);
      assertEquals(false, tinyHashSet_SingleElementIterator0.hasNext());
  }
}
