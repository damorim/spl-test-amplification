/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Cursor;
import com.sleepycat.je.CursorConfig;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Environment;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.txn.Locker;

@RunWith(EvoSuiteRunner.class)
public class TestCursor_6 {


  //Test case number: 6
  /*
   * 6 covered goals:
   * 1 com.sleepycat.je.Cursor.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/CursorConfig;)V: I7 Branch 3 IFNONNULL L100 - true
   * 2 Weak Mutation 16: com.sleepycat.je.Cursor.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/CursorConfig;)V:100 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 19: com.sleepycat.je.Cursor.init(Lcom/sleepycat/je/Database;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/CursorConfig;)V:106 - InsertUnaryOp Negation
   * 4 Weak Mutation 18: com.sleepycat.je.Cursor.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/CursorConfig;)V:103 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 21: com.sleepycat.je.Cursor.init(Lcom/sleepycat/je/Database;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/CursorConfig;)V:106 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 22: com.sleepycat.je.Cursor.init(Lcom/sleepycat/je/Database;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/CursorConfig;)V:106 - ReplaceComparisonOperator != null -> = null
   */
  @Test
  public void test6()  throws Throwable  {
      CursorConfig cursorConfig0 = CursorConfig.DEFAULT;
      Cursor cursor0 = null;
      try {
        cursor0 = new Cursor((DatabaseImpl) null, (Locker) null, cursorConfig0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }
}
