/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.SequenceConfig;

@RunWith(EvoSuiteRunner.class)
public class TestSequenceConfig {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - DeleteField: allowCreateZ
   * 2 Weak Mutation 16: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.SequenceConfig.getAllowCreate()Z: root-Branch
   * 4 Weak Mutation 17: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - DeleteField: allowCreateZ
   * 5 Weak Mutation 16: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - InsertUnaryOp Negation
   */
  @Test
  public void test0()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      boolean boolean0 = sequenceConfig0.getAllowCreate();
      assertEquals(true, boolean0);
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Weak Mutation 21: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp Negation
   * 2 Weak Mutation 23: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp -1
   * 3 Weak Mutation 22: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp +1
   * 4 Weak Mutation 24: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - DeleteField: cacheSizeI
   * 5 com.sleepycat.je.SequenceConfig.getCacheSize()I: root-Branch
   * 6 Weak Mutation 21: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp Negation
   * 7 Weak Mutation 23: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp -1
   * 8 Weak Mutation 22: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp +1
   * 9 Weak Mutation 24: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - DeleteField: cacheSizeI
   */
  @Test
  public void test1()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      int int0 = sequenceConfig0.getCacheSize();
      assertEquals((-1189), int0);
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 25: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp Negation of decrement
   * 2 Weak Mutation 27: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp IINC -1 decrement
   * 3 Weak Mutation 26: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp IINC 1 decrement
   * 4 com.sleepycat.je.SequenceConfig.setDecrement(Z)V: root-Branch
   * 5 Weak Mutation 25: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp Negation of decrement
   * 6 Weak Mutation 27: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp IINC -1 decrement
   * 7 Weak Mutation 26: com.sleepycat.je.SequenceConfig.setDecrement(Z)V:58 - InsertUnaryOp IINC 1 decrement
   */
  @Test
  public void test2()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setDecrement(true);
      assertEquals(true, sequenceConfig0.getDecrement());
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - DeleteField: decrementZ
   * 2 Weak Mutation 28: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.SequenceConfig.getDecrement()Z: root-Branch
   * 4 Weak Mutation 29: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - DeleteField: decrementZ
   * 5 Weak Mutation 28: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - InsertUnaryOp Negation
   */
  @Test
  public void test3()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      boolean boolean0 = sequenceConfig0.getDecrement();
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - DeleteField: exclusiveCreateZ
   * 2 Weak Mutation 33: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z: root-Branch
   * 4 Weak Mutation 34: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - DeleteField: exclusiveCreateZ
   * 5 Weak Mutation 33: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - InsertUnaryOp Negation
   */
  @Test
  public void test4()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      boolean boolean0 = sequenceConfig0.getExclusiveCreate();
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 36: com.sleepycat.je.SequenceConfig.getInitialValue()J:93 - InsertUnaryOp Negation
   * 2 Weak Mutation 37: com.sleepycat.je.SequenceConfig.getInitialValue()J:93 - DeleteField: initialValueJ
   * 3 com.sleepycat.je.SequenceConfig.getInitialValue()J: root-Branch
   * 4 Weak Mutation 36: com.sleepycat.je.SequenceConfig.getInitialValue()J:93 - InsertUnaryOp Negation
   * 5 Weak Mutation 37: com.sleepycat.je.SequenceConfig.getInitialValue()J:93 - DeleteField: initialValueJ
   */
  @Test
  public void test5()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getInitialValue();
      assertEquals((-933L), long0);
  }

  //Test case number: 6
  /*
   * 70 covered goals:
   * 1 Weak Mutation 55: com.sleepycat.je.SequenceConfig.getWrap()Z:149 - DeleteField: wrapZ
   * 2 Weak Mutation 54: com.sleepycat.je.SequenceConfig.getWrap()Z:149 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.SequenceConfig.getWrap()Z: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.SequenceConfig.<init>()V:8 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 0
   * 6 Weak Mutation 2: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 1
   * 7 Weak Mutation 3: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -1
   * 8 Weak Mutation 4: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 9223372036854775807
   * 9 Weak Mutation 5: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -9223372036854775807
   * 10 Weak Mutation 6: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 0
   * 11 Weak Mutation 7: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 1
   * 12 Weak Mutation 8: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -1
   * 13 Weak Mutation 9: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 9223372036854775806
   * 14 Weak Mutation 10: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -9223372036854775808
   * 15 Weak Mutation 11: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 12: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> -1
   * 17 Weak Mutation 13: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp Negation of allowCreate
   * 18 Weak Mutation 14: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp IINC 1 allowCreate
   * 19 Weak Mutation 15: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp IINC -1 allowCreate
   * 20 Weak Mutation 19: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp IINC 1 cacheSize
   * 21 Weak Mutation 18: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp Negation of cacheSize
   * 22 Weak Mutation 20: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp IINC -1 cacheSize
   * 23 Weak Mutation 31: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC 1 exclusiveCreate
   * 24 Weak Mutation 30: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp Negation of exclusiveCreate
   * 25 Weak Mutation 35: com.sleepycat.je.SequenceConfig.setInitialValue(J)V:86 - InsertUnaryOp Negation of initialValue
   * 26 Weak Mutation 32: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC -1 exclusiveCreate
   * 27 Weak Mutation 38: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp Negation of autoCommitNoSync
   * 28 Weak Mutation 39: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp IINC 1 autoCommitNoSync
   * 29 Weak Mutation 42: com.sleepycat.je.SequenceConfig.getAutoCommitNoSync()Z:112 - DeleteField: autoCommitNoSyncZ
   * 30 Weak Mutation 40: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp IINC -1 autoCommitNoSync
   * 31 Weak Mutation 41: com.sleepycat.je.SequenceConfig.getAutoCommitNoSync()Z:112 - InsertUnaryOp Negation
   * 32 Weak Mutation 0: com.sleepycat.je.SequenceConfig.<init>()V:8 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 1: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 0
   * 34 Weak Mutation 2: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 1
   * 35 Weak Mutation 3: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -1
   * 36 Weak Mutation 4: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 9223372036854775807
   * 37 Weak Mutation 5: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -9223372036854775807
   * 38 Weak Mutation 6: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 0
   * 39 Weak Mutation 7: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 1
   * 40 Weak Mutation 8: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -1
   * 41 Weak Mutation 9: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 9223372036854775806
   * 42 Weak Mutation 10: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -9223372036854775808
   * 43 Weak Mutation 11: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 12: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> -1
   * 45 Weak Mutation 13: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp Negation of allowCreate
   * 46 Weak Mutation 14: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp IINC 1 allowCreate
   * 47 Weak Mutation 15: com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V:30 - InsertUnaryOp IINC -1 allowCreate
   * 48 Weak Mutation 19: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp IINC 1 cacheSize
   * 49 Weak Mutation 18: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp Negation of cacheSize
   * 50 Weak Mutation 20: com.sleepycat.je.SequenceConfig.setCacheSize(I)V:44 - InsertUnaryOp IINC -1 cacheSize
   * 51 Weak Mutation 31: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC 1 exclusiveCreate
   * 52 Weak Mutation 30: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp Negation of exclusiveCreate
   * 53 Weak Mutation 35: com.sleepycat.je.SequenceConfig.setInitialValue(J)V:86 - InsertUnaryOp Negation of initialValue
   * 54 Weak Mutation 32: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC -1 exclusiveCreate
   * 55 Weak Mutation 38: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp Negation of autoCommitNoSync
   * 56 Weak Mutation 39: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp IINC 1 autoCommitNoSync
   * 57 Weak Mutation 42: com.sleepycat.je.SequenceConfig.getAutoCommitNoSync()Z:112 - DeleteField: autoCommitNoSyncZ
   * 58 Weak Mutation 40: com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V:102 - InsertUnaryOp IINC -1 autoCommitNoSync
   * 59 Weak Mutation 41: com.sleepycat.je.SequenceConfig.getAutoCommitNoSync()Z:112 - InsertUnaryOp Negation
   * 60 Weak Mutation 47: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - InsertUnaryOp Negation
   * 61 Weak Mutation 48: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - DeleteField: rangeMinJ
   * 62 Weak Mutation 54: com.sleepycat.je.SequenceConfig.getWrap()Z:149 - InsertUnaryOp Negation
   * 63 com.sleepycat.je.SequenceConfig.setCacheSize(I)V: root-Branch
   * 64 com.sleepycat.je.SequenceConfig.getAutoCommitNoSync()Z: root-Branch
   * 65 com.sleepycat.je.SequenceConfig.<init>()V: root-Branch
   * 66 com.sleepycat.je.SequenceConfig.setAllowCreate(Z)V: root-Branch
   * 67 com.sleepycat.je.SequenceConfig.getRangeMin()J: root-Branch
   * 68 com.sleepycat.je.SequenceConfig.setInitialValue(J)V: root-Branch
   * 69 com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V: root-Branch
   * 70 com.sleepycat.je.SequenceConfig.setAutoCommitNoSync(Z)V: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.getAutoCommitNoSync();
      sequenceConfig0.setAllowCreate(true);
      sequenceConfig0.setAutoCommitNoSync(true);
      sequenceConfig0.getWrap();
      sequenceConfig0.setExclusiveCreate(true);
      sequenceConfig0.getRangeMin();
      sequenceConfig0.setCacheSize((-1189));
      SequenceConfig sequenceConfig1 = new SequenceConfig();
      sequenceConfig1.setExclusiveCreate(true);
      SequenceConfig sequenceConfig2 = new SequenceConfig();
      sequenceConfig2.getAutoCommitNoSync();
      SequenceConfig sequenceConfig3 = new SequenceConfig();
      sequenceConfig1.setInitialValue((-933L));
      assertEquals(true, sequenceConfig1.getExclusiveCreate());
      
      long long0 = sequenceConfig2.getRangeMin();
      assertEquals((-9223372036854775808L), long0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 43: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - ReplaceVariable min -> max
   * 2 Weak Mutation 44: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - InsertUnaryOp Negation of min
   * 3 Weak Mutation 46: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - InsertUnaryOp Negation of max
   * 4 Weak Mutation 45: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - ReplaceVariable max -> min
   * 5 com.sleepycat.je.SequenceConfig.setRange(JJ)V: root-Branch
   * 6 Weak Mutation 43: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - ReplaceVariable min -> max
   * 7 Weak Mutation 46: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - InsertUnaryOp Negation of max
   * 8 Weak Mutation 44: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - InsertUnaryOp Negation of min
   * 9 Weak Mutation 45: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - ReplaceVariable max -> min
   */
  @Test
  public void test7()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setRange(1L, 223L);
      assertEquals(1L, sequenceConfig0.getRangeMin());
      assertEquals(223L, sequenceConfig0.getRangeMax());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - InsertUnaryOp Negation
   * 2 Weak Mutation 48: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - DeleteField: rangeMinJ
   * 3 com.sleepycat.je.SequenceConfig.getRangeMin()J: root-Branch
   */
  @Test
  public void test8()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getRangeMin();
      assertEquals(1L, long0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 50: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - DeleteField: rangeMaxJ
   * 2 Weak Mutation 49: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.SequenceConfig.getRangeMax()J: root-Branch
   * 4 Weak Mutation 50: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - DeleteField: rangeMaxJ
   * 5 Weak Mutation 49: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - InsertUnaryOp Negation
   */
  @Test
  public void test9()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      long long0 = sequenceConfig0.getRangeMax();
      assertEquals((-223L), long0);
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp Negation of wrap
   * 2 Weak Mutation 53: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC -1 wrap
   * 3 Weak Mutation 52: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC 1 wrap
   * 4 com.sleepycat.je.SequenceConfig.setWrap(Z)V: root-Branch
   * 5 Weak Mutation 51: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp Negation of wrap
   * 6 Weak Mutation 53: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC -1 wrap
   * 7 Weak Mutation 52: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC 1 wrap
   */
  @Test
  public void test10()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.setWrap(false);
      assertEquals(false, sequenceConfig0.getWrap());
  }
}
