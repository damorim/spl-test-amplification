/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.log;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.log.LogUtils;
import java.nio.ByteBuffer;
import java.sql.Timestamp;
import javax.transaction.xa.Xid;

@RunWith(EvoSuiteRunner.class)
public class TestLogUtils {


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 186: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 2 Weak Mutation 182: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - InsertUnaryOp Negation of value
   * 3 Weak Mutation 183: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V: root-Branch
   * 5 Weak Mutation 186: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 6 Weak Mutation 182: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - InsertUnaryOp Negation of value
   * 7 Weak Mutation 183: com.sleepycat.je.log.LogUtils.writeUnsignedInt(Ljava/nio/ByteBuffer;J)V:21 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeUnsignedInt((ByteBuffer) null, (-17L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Weak Mutation 214: com.sleepycat.je.log.LogUtils.getUnsignedInt(Ljava/nio/ByteBuffer;)J:30 - DeleteStatement: get()B
   * 2 com.sleepycat.je.log.LogUtils.getUnsignedInt(Ljava/nio/ByteBuffer;)J: root-Branch
   * 3 Weak Mutation 214: com.sleepycat.je.log.LogUtils.getUnsignedInt(Ljava/nio/ByteBuffer;)J:30 - DeleteStatement: get()B
   */
  @Test
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.getUnsignedInt((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 31 covered goals:
   * 1 Weak Mutation 287: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp IINC 1 i
   * 2 Weak Mutation 286: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp Negation of i
   * 3 Weak Mutation 288: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp IINC -1 i
   * 4 Weak Mutation 289: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 292: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 0
   * 6 Weak Mutation 293: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 1
   * 7 Weak Mutation 294: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> -1
   * 8 Weak Mutation 295: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 254
   * 9 Weak Mutation 296: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 256
   * 10 Weak Mutation 297: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceBitwiseOperator & -> |
   * 11 Weak Mutation 298: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceBitwiseOperator & -> ^
   * 12 Weak Mutation 299: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp Negation of b
   * 13 Weak Mutation 300: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp IINC 1 b
   * 14 Weak Mutation 301: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp IINC -1 b
   * 15 Weak Mutation 302: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 16 com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V: root-Branch
   * 17 Weak Mutation 287: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 286: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp Negation of i
   * 19 Weak Mutation 288: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - InsertUnaryOp IINC -1 i
   * 20 Weak Mutation 289: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 292: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 0
   * 22 Weak Mutation 293: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 1
   * 23 Weak Mutation 294: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> -1
   * 24 Weak Mutation 295: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 254
   * 25 Weak Mutation 296: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceConstant - 255 -> 256
   * 26 Weak Mutation 297: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceBitwiseOperator & -> |
   * 27 Weak Mutation 298: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:40 - ReplaceBitwiseOperator & -> ^
   * 28 Weak Mutation 299: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp Negation of b
   * 29 Weak Mutation 300: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp IINC 1 b
   * 30 Weak Mutation 301: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - InsertUnaryOp IINC -1 b
   * 31 Weak Mutation 302: com.sleepycat.je.log.LogUtils.writeShort(Ljava/nio/ByteBuffer;S)V:41 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   */
  @Test
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeShort((ByteBuffer) null, (short) (byte)18);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 324: com.sleepycat.je.log.LogUtils.readShort(Ljava/nio/ByteBuffer;)S:49 - DeleteStatement: get()B
   * 2 com.sleepycat.je.log.LogUtils.readShort(Ljava/nio/ByteBuffer;)S: root-Branch
   * 3 Weak Mutation 324: com.sleepycat.je.log.LogUtils.readShort(Ljava/nio/ByteBuffer;)S:49 - DeleteStatement: get()B
   */
  @Test
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.readShort((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 49 covered goals:
   * 1 Weak Mutation 369: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> |
   * 2 Weak Mutation 368: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 256
   * 3 Weak Mutation 370: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> ^
   * 4 Weak Mutation 356: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> SHORT_BYTES
   * 5 Weak Mutation 357: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> UNSIGNED_INT_BYTES
   * 6 Weak Mutation 358: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp Negation of i
   * 7 Weak Mutation 359: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 354: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> LONG_BYTES
   * 9 Weak Mutation 355: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> INT_BYTES
   * 10 Weak Mutation 364: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 0
   * 11 Weak Mutation 365: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 1
   * 12 Weak Mutation 366: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> -1
   * 13 Weak Mutation 367: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 254
   * 14 Weak Mutation 360: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC -1 i
   * 15 Weak Mutation 361: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 373: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC -1 b
   * 17 Weak Mutation 372: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC 1 b
   * 18 Weak Mutation 374: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 19 Weak Mutation 371: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp Negation of b
   * 20 Weak Mutation 956: com.sleepycat.je.log.LogUtils.writeByteArray(Ljava/nio/ByteBuffer;[B)V:148 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 21 Weak Mutation 955: com.sleepycat.je.log.LogUtils.writeByteArray(Ljava/nio/ByteBuffer;[B)V:148 - ReplaceVariable b -> ZERO_LENGTH_BYTE_ARRAY
   * 22 Weak Mutation 992: com.sleepycat.je.log.LogUtils.writeString(Ljava/nio/ByteBuffer;Ljava/lang/String;)V:176 - DeleteStatement: writeByteArray(Ljava/nio/ByteBuffer;[B)V
   * 23 Weak Mutation 991: com.sleepycat.je.log.LogUtils.writeString(Ljava/nio/ByteBuffer;Ljava/lang/String;)V:176 - DeleteStatement: getBytes()[B
   * 24 com.sleepycat.je.log.LogUtils.writeByteArray(Ljava/nio/ByteBuffer;[B)V: root-Branch
   * 25 com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V: root-Branch
   * 26 com.sleepycat.je.log.LogUtils.writeString(Ljava/nio/ByteBuffer;Ljava/lang/String;)V: root-Branch
   * 27 Weak Mutation 373: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC -1 b
   * 28 Weak Mutation 372: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC 1 b
   * 29 Weak Mutation 374: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 30 Weak Mutation 369: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> |
   * 31 Weak Mutation 368: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 256
   * 32 Weak Mutation 371: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp Negation of b
   * 33 Weak Mutation 370: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> ^
   * 34 Weak Mutation 356: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> SHORT_BYTES
   * 35 Weak Mutation 357: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> UNSIGNED_INT_BYTES
   * 36 Weak Mutation 358: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp Negation of i
   * 37 Weak Mutation 359: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 354: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> LONG_BYTES
   * 39 Weak Mutation 355: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> INT_BYTES
   * 40 Weak Mutation 364: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 0
   * 41 Weak Mutation 365: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 1
   * 42 Weak Mutation 366: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> -1
   * 43 Weak Mutation 367: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 254
   * 44 Weak Mutation 360: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC -1 i
   * 45 Weak Mutation 361: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 956: com.sleepycat.je.log.LogUtils.writeByteArray(Ljava/nio/ByteBuffer;[B)V:148 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 47 Weak Mutation 955: com.sleepycat.je.log.LogUtils.writeByteArray(Ljava/nio/ByteBuffer;[B)V:148 - ReplaceVariable b -> ZERO_LENGTH_BYTE_ARRAY
   * 48 Weak Mutation 992: com.sleepycat.je.log.LogUtils.writeString(Ljava/nio/ByteBuffer;Ljava/lang/String;)V:176 - DeleteStatement: writeByteArray(Ljava/nio/ByteBuffer;[B)V
   * 49 Weak Mutation 991: com.sleepycat.je.log.LogUtils.writeString(Ljava/nio/ByteBuffer;Ljava/lang/String;)V:176 - DeleteStatement: getBytes()[B
   */
  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeString((ByteBuffer) null, "");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * 1 Weak Mutation 450: com.sleepycat.je.log.LogUtils.readInt(Ljava/nio/ByteBuffer;)I:68 - DeleteStatement: get()B
   * 2 Weak Mutation 959: com.sleepycat.je.log.LogUtils.readByteArray(Ljava/nio/ByteBuffer;)[B:155 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   * 3 Weak Mutation 993: com.sleepycat.je.log.LogUtils.readString(Ljava/nio/ByteBuffer;)Ljava/lang/String;:182 - DeleteStatement: readByteArray(Ljava/nio/ByteBuffer;)[B
   * 4 com.sleepycat.je.log.LogUtils.readString(Ljava/nio/ByteBuffer;)Ljava/lang/String;: root-Branch
   * 5 com.sleepycat.je.log.LogUtils.readInt(Ljava/nio/ByteBuffer;)I: root-Branch
   * 6 Weak Mutation 450: com.sleepycat.je.log.LogUtils.readInt(Ljava/nio/ByteBuffer;)I:68 - DeleteStatement: get()B
   * 7 Weak Mutation 959: com.sleepycat.je.log.LogUtils.readByteArray(Ljava/nio/ByteBuffer;)[B:155 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   * 8 Weak Mutation 993: com.sleepycat.je.log.LogUtils.readString(Ljava/nio/ByteBuffer;)Ljava/lang/String;:182 - DeleteStatement: readByteArray(Ljava/nio/ByteBuffer;)[B
   */
  @Test
  public void test5()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.readString((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 6
  /*
   * 11 covered goals:
   * 1 Weak Mutation 550: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 5
   * 2 Weak Mutation 548: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> -1
   * 3 Weak Mutation 549: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 3
   * 4 Weak Mutation 546: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 0
   * 5 Weak Mutation 547: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 1
   * 6 com.sleepycat.je.log.LogUtils.getIntLogSize()I: root-Branch
   * 7 Weak Mutation 550: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 5
   * 8 Weak Mutation 548: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> -1
   * 9 Weak Mutation 549: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 3
   * 10 Weak Mutation 546: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 0
   * 11 Weak Mutation 547: com.sleepycat.je.log.LogUtils.getIntLogSize()I:78 - ReplaceConstant - 4 -> 1
   */
  @Test
  public void test6()  throws Throwable  {
      int int0 = LogUtils.getIntLogSize();
      assertEquals(4, int0);
  }

  //Test case number: 7
  /*
   * 51 covered goals:
   * 1 Weak Mutation 551: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> LONG_BYTES
   * 2 Weak Mutation 558: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 0
   * 3 Weak Mutation 559: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 1
   * 4 Weak Mutation 556: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp IINC 1 i
   * 5 Weak Mutation 557: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 554: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> UNSIGNED_INT_BYTES
   * 7 Weak Mutation 555: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 552: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> INT_BYTES
   * 9 Weak Mutation 553: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> SHORT_BYTES
   * 10 Weak Mutation 567: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> -1
   * 11 Weak Mutation 566: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 1
   * 12 Weak Mutation 565: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 0
   * 13 Weak Mutation 564: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator >> -> <<
   * 14 Weak Mutation 563: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator >> -> >>>
   * 15 Weak Mutation 562: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 25
   * 16 Weak Mutation 561: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 23
   * 17 Weak Mutation 560: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> -1
   * 18 Weak Mutation 571: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator & -> ^
   * 19 Weak Mutation 570: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator & -> |
   * 20 Weak Mutation 569: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 256
   * 21 Weak Mutation 568: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 254
   * 22 Weak Mutation 575: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 23 Weak Mutation 574: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp IINC -1 b
   * 24 Weak Mutation 573: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp IINC 1 b
   * 25 Weak Mutation 572: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp Negation of b
   * 26 com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V: root-Branch
   * 27 Weak Mutation 551: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> LONG_BYTES
   * 28 Weak Mutation 558: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 0
   * 29 Weak Mutation 559: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 1
   * 30 Weak Mutation 556: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 557: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp IINC -1 i
   * 32 Weak Mutation 554: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> UNSIGNED_INT_BYTES
   * 33 Weak Mutation 555: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 552: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> INT_BYTES
   * 35 Weak Mutation 553: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceVariable i -> SHORT_BYTES
   * 36 Weak Mutation 567: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> -1
   * 37 Weak Mutation 566: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 1
   * 38 Weak Mutation 565: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 0
   * 39 Weak Mutation 564: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator >> -> <<
   * 40 Weak Mutation 563: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator >> -> >>>
   * 41 Weak Mutation 562: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 25
   * 42 Weak Mutation 561: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> 23
   * 43 Weak Mutation 560: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 24 -> -1
   * 44 Weak Mutation 575: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 45 Weak Mutation 574: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp IINC -1 b
   * 46 Weak Mutation 573: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp IINC 1 b
   * 47 Weak Mutation 572: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:85 - InsertUnaryOp Negation of b
   * 48 Weak Mutation 571: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator & -> ^
   * 49 Weak Mutation 570: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceBitwiseOperator & -> |
   * 50 Weak Mutation 569: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 256
   * 51 Weak Mutation 568: com.sleepycat.je.log.LogUtils.writeIntMSB(Ljava/nio/ByteBuffer;I)V:84 - ReplaceConstant - 255 -> 254
   */
  @Test
  public void test7()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeIntMSB((ByteBuffer) null, (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 647: com.sleepycat.je.log.LogUtils.readIntMSB(Ljava/nio/ByteBuffer;)I:97 - DeleteStatement: get()B
   * 2 com.sleepycat.je.log.LogUtils.readIntMSB(Ljava/nio/ByteBuffer;)I: root-Branch
   * 3 Weak Mutation 647: com.sleepycat.je.log.LogUtils.readIntMSB(Ljava/nio/ByteBuffer;)I:97 - DeleteStatement: get()B
   */
  @Test
  public void test8()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.readIntMSB((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 9
  /*
   * 18 covered goals:
   * 1 Weak Mutation 744: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:107 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 743: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:107 - InsertUnaryOp Negation of l
   * 3 Weak Mutation 747: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp Negation of b
   * 4 Weak Mutation 750: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 5 Weak Mutation 749: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp IINC -1 b
   * 6 Weak Mutation 748: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp IINC 1 b
   * 7 Weak Mutation 1005: com.sleepycat.je.log.LogUtils.writeTimestamp(Ljava/nio/ByteBuffer;Ljava/sql/Timestamp;)V:194 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 8 Weak Mutation 1004: com.sleepycat.je.log.LogUtils.writeTimestamp(Ljava/nio/ByteBuffer;Ljava/sql/Timestamp;)V:194 - DeleteStatement: getTime()J
   * 9 com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V: root-Branch
   * 10 com.sleepycat.je.log.LogUtils.writeTimestamp(Ljava/nio/ByteBuffer;Ljava/sql/Timestamp;)V: root-Branch
   * 11 Weak Mutation 747: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp Negation of b
   * 12 Weak Mutation 744: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:107 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 750: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 14 Weak Mutation 749: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp IINC -1 b
   * 15 Weak Mutation 748: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:108 - InsertUnaryOp IINC 1 b
   * 16 Weak Mutation 743: com.sleepycat.je.log.LogUtils.writeLong(Ljava/nio/ByteBuffer;J)V:107 - InsertUnaryOp Negation of l
   * 17 Weak Mutation 1005: com.sleepycat.je.log.LogUtils.writeTimestamp(Ljava/nio/ByteBuffer;Ljava/sql/Timestamp;)V:194 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 18 Weak Mutation 1004: com.sleepycat.je.log.LogUtils.writeTimestamp(Ljava/nio/ByteBuffer;Ljava/sql/Timestamp;)V:194 - DeleteStatement: getTime()J
   */
  @Test
  public void test9()  throws Throwable  {
      Timestamp timestamp0 = new Timestamp((long) (byte) (-19));
      // Undeclared exception!
      try {
        LogUtils.writeTimestamp((ByteBuffer) null, timestamp0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * 1 Weak Mutation 817: com.sleepycat.je.log.LogUtils.readLong(Ljava/nio/ByteBuffer;)J:128 - DeleteStatement: get()B
   * 2 Weak Mutation 1006: com.sleepycat.je.log.LogUtils.readTimestamp(Ljava/nio/ByteBuffer;)Ljava/sql/Timestamp;:200 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   * 3 com.sleepycat.je.log.LogUtils.readTimestamp(Ljava/nio/ByteBuffer;)Ljava/sql/Timestamp;: root-Branch
   * 4 com.sleepycat.je.log.LogUtils.readLong(Ljava/nio/ByteBuffer;)J: root-Branch
   * 5 Weak Mutation 817: com.sleepycat.je.log.LogUtils.readLong(Ljava/nio/ByteBuffer;)J:128 - DeleteStatement: get()B
   * 6 Weak Mutation 1006: com.sleepycat.je.log.LogUtils.readTimestamp(Ljava/nio/ByteBuffer;)Ljava/sql/Timestamp;:200 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   */
  @Test
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.readTimestamp((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * 1 Weak Mutation 952: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> -1
   * 2 Weak Mutation 953: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 7
   * 3 Weak Mutation 954: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 9
   * 4 Weak Mutation 950: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 0
   * 5 Weak Mutation 951: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 1
   * 6 com.sleepycat.je.log.LogUtils.getLongLogSize()I: root-Branch
   * 7 Weak Mutation 952: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> -1
   * 8 Weak Mutation 953: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 7
   * 9 Weak Mutation 954: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 9
   * 10 Weak Mutation 950: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 0
   * 11 Weak Mutation 951: com.sleepycat.je.log.LogUtils.getLongLogSize()I:142 - ReplaceConstant - 8 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      int int0 = LogUtils.getLongLogSize();
      assertEquals(8, int0);
  }

  //Test case number: 12
  /*
   * 21 covered goals:
   * 1 Weak Mutation 986: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceVariable b -> ZERO_LENGTH_BYTE_ARRAY
   * 2 Weak Mutation 987: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 984: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 3
   * 4 Weak Mutation 985: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 5
   * 5 Weak Mutation 990: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> *
   * 6 Weak Mutation 988: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> %
   * 7 Weak Mutation 989: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> /
   * 8 Weak Mutation 982: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 1
   * 9 Weak Mutation 983: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> -1
   * 10 Weak Mutation 981: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 0
   * 11 com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I: root-Branch
   * 12 Weak Mutation 986: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceVariable b -> ZERO_LENGTH_BYTE_ARRAY
   * 13 Weak Mutation 987: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 984: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 3
   * 15 Weak Mutation 985: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 5
   * 16 Weak Mutation 990: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 988: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> %
   * 18 Weak Mutation 989: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceArithmeticOperator + -> /
   * 19 Weak Mutation 982: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 1
   * 20 Weak Mutation 983: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> -1
   * 21 Weak Mutation 981: com.sleepycat.je.log.LogUtils.getByteArrayLogSize([B)I:170 - ReplaceConstant - 4 -> 0
   */
  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      int int0 = LogUtils.getByteArrayLogSize(byteArray0);
      assertEquals(12, int0);
  }

  //Test case number: 13
  /*
   * 21 covered goals:
   * 1 Weak Mutation 1001: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> %
   * 2 Weak Mutation 1000: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 1003: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 1002: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> /
   * 5 Weak Mutation 995: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 1
   * 6 Weak Mutation 994: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 0
   * 7 Weak Mutation 997: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 3
   * 8 Weak Mutation 996: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> -1
   * 9 Weak Mutation 999: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - DeleteStatement: length()I
   * 10 Weak Mutation 998: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 5
   * 11 com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I: root-Branch
   * 12 Weak Mutation 1001: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> %
   * 13 Weak Mutation 1000: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 1003: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> *
   * 15 Weak Mutation 1002: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 995: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 1
   * 17 Weak Mutation 994: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 0
   * 18 Weak Mutation 997: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 3
   * 19 Weak Mutation 996: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> -1
   * 20 Weak Mutation 999: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - DeleteStatement: length()I
   * 21 Weak Mutation 998: com.sleepycat.je.log.LogUtils.getStringLogSize(Ljava/lang/String;)I:188 - ReplaceConstant - 4 -> 5
   */
  @Test
  public void test13()  throws Throwable  {
      int int0 = LogUtils.getStringLogSize("12nlI7uej/X72ZV");
      assertEquals(21, int0);
  }

  //Test case number: 14
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1008: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 0
   * 2 Weak Mutation 1009: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 1
   * 3 Weak Mutation 1010: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> -1
   * 4 Weak Mutation 1011: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 7
   * 5 Weak Mutation 1012: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 9
   * 6 com.sleepycat.je.log.LogUtils.getTimestampLogSize()I: root-Branch
   * 7 Weak Mutation 1008: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 0
   * 8 Weak Mutation 1009: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 1
   * 9 Weak Mutation 1010: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> -1
   * 10 Weak Mutation 1011: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 7
   * 11 Weak Mutation 1012: com.sleepycat.je.log.LogUtils.getTimestampLogSize()I:207 - ReplaceConstant - 8 -> 9
   */
  @Test
  public void test14()  throws Throwable  {
      int int0 = LogUtils.getTimestampLogSize();
      assertEquals(8, int0);
  }

  //Test case number: 15
  /*
   * 19 covered goals:
   * 1 Weak Mutation 1016: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 1018: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 1013: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp Negation of bool
   * 4 Weak Mutation 1014: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC 1 bool
   * 5 Weak Mutation 1015: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC -1 bool
   * 6 Weak Mutation 1019: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp Negation of val
   * 7 Weak Mutation 1020: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC 1 val
   * 8 Weak Mutation 1021: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC -1 val
   * 9 Weak Mutation 1022: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 10 com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V: I3 Branch 18 IFEQ L213 - true
   * 11 Weak Mutation 1016: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 1018: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 1019: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp Negation of val
   * 14 Weak Mutation 1020: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC 1 val
   * 15 Weak Mutation 1021: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC -1 val
   * 16 Weak Mutation 1022: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 17 Weak Mutation 1013: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp Negation of bool
   * 18 Weak Mutation 1014: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC 1 bool
   * 19 Weak Mutation 1015: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC -1 bool
   */
  @Test
  public void test15()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeBoolean((ByteBuffer) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 16
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1017: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V: I3 Branch 18 IFEQ L213 - false
   * 3 Weak Mutation 1016: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 1019: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp Negation of val
   * 5 Weak Mutation 1020: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC 1 val
   * 6 Weak Mutation 1021: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - InsertUnaryOp IINC -1 val
   * 7 Weak Mutation 1022: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:214 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 8 Weak Mutation 1013: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp Negation of bool
   * 9 Weak Mutation 1014: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC 1 bool
   * 10 Weak Mutation 1015: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - InsertUnaryOp IINC -1 bool
   * 11 Weak Mutation 1017: com.sleepycat.je.log.LogUtils.writeBoolean(Ljava/nio/ByteBuffer;Z)V:213 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.writeBoolean((ByteBuffer) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 17
  /*
   * 14 covered goals:
   * 1 Weak Mutation 1023: com.sleepycat.je.log.LogUtils.readBoolean(Ljava/nio/ByteBuffer;)Z:220 - DeleteStatement: get()B
   * 2 Weak Mutation 1032: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:230 - ReplaceConstant - < -> 
   * 3 Weak Mutation 1033: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:230 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 1034: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 5 Weak Mutation 1035: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:232 - ReplaceConstant -  exists = " -> 
   * 6 Weak Mutation 1036: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:232 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 1037: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:233 - DeleteStatement: readBoolean(Ljava/nio/ByteBuffer;)Z
   * 8 Weak Mutation 1023: com.sleepycat.je.log.LogUtils.readBoolean(Ljava/nio/ByteBuffer;)Z:220 - DeleteStatement: get()B
   * 9 Weak Mutation 1032: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:230 - ReplaceConstant - < -> 
   * 10 Weak Mutation 1033: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:230 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 1034: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 1035: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:232 - ReplaceConstant -  exists = " -> 
   * 13 Weak Mutation 1036: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:232 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 1037: com.sleepycat.je.log.LogUtils.dumpBoolean(Ljava/nio/ByteBuffer;Ljava/lang/StringBuffer;Ljava/lang/String;)Z:233 - DeleteStatement: readBoolean(Ljava/nio/ByteBuffer;)Z
   */
  @Test
  public void test17()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "3'4/#l>5j<w:jSQO");
      // Undeclared exception!
      try {
        LogUtils.dumpBoolean((ByteBuffer) null, stringBuffer0, "3'4/#l>5j<w:jSQO");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Weak Mutation 1031: com.sleepycat.je.log.LogUtils.getBooleanLogSize()I:227 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.log.LogUtils.getBooleanLogSize()I: root-Branch
   * 3 Weak Mutation 1031: com.sleepycat.je.log.LogUtils.getBooleanLogSize()I:227 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test18()  throws Throwable  {
      int int0 = LogUtils.getBooleanLogSize();
      assertEquals(1, int0);
  }

  //Test case number: 19
  /*
   * 66 covered goals:
   * 1 Weak Mutation 1067: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> gid
   * 2 Weak Mutation 1071: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> gid
   * 3 Weak Mutation 1057: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> bqual
   * 4 Weak Mutation 1061: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> bqual
   * 5 Weak Mutation 5: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:294 - ReplaceVariable gid -> bqual
   * 6 Weak Mutation 6: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:295 - ReplaceVariable bqual -> gid
   * 7 Weak Mutation 1049: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:249 - DeleteStatement: getGlobalTransactionId()[B
   * 8 Weak Mutation 1051: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 0
   * 9 Weak Mutation 1050: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:250 - DeleteStatement: getBranchQualifier()[B
   * 10 Weak Mutation 1053: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> -1
   * 11 Weak Mutation 1052: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 1
   * 12 Weak Mutation 1055: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 7
   * 13 Weak Mutation 1054: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 5
   * 14 Weak Mutation 1066: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> ZERO_LENGTH_BYTE_ARRAY
   * 15 Weak Mutation 1064: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 1065: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 1070: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> ZERO_LENGTH_BYTE_ARRAY
   * 18 Weak Mutation 1068: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceComparisonOperator != null -> = null
   * 19 Weak Mutation 1058: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 1056: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> ZERO_LENGTH_BYTE_ARRAY
   * 21 Weak Mutation 1062: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 1063: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 1060: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> ZERO_LENGTH_BYTE_ARRAY
   * 24 Weak Mutation 1075: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 1074: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> /
   * 26 Weak Mutation 1073: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> %
   * 27 Weak Mutation 1072: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 0: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 29 Weak Mutation 1: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 30 Weak Mutation 2: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp Negation of formatId
   * 31 Weak Mutation 3: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp IINC 1 formatId
   * 32 Weak Mutation 4: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp IINC -1 formatId
   * 33 Weak Mutation 5: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:294 - ReplaceVariable gid -> bqual
   * 34 Weak Mutation 6: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:295 - ReplaceVariable bqual -> gid
   * 35 Weak Mutation 13: com.sleepycat.je.log.LogUtils$XidImpl.getGlobalTransactionId()[B:301 - DeleteField: gid[B
   * 36 Weak Mutation 14: com.sleepycat.je.log.LogUtils$XidImpl.getBranchQualifier()[B:304 - DeleteField: bqual[B
   * 37 Weak Mutation 1049: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:249 - DeleteStatement: getGlobalTransactionId()[B
   * 38 Weak Mutation 1051: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 0
   * 39 Weak Mutation 1050: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:250 - DeleteStatement: getBranchQualifier()[B
   * 40 Weak Mutation 1053: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> -1
   * 41 Weak Mutation 1052: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 1
   * 42 Weak Mutation 1055: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 7
   * 43 Weak Mutation 1054: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceConstant - 6 -> 5
   * 44 Weak Mutation 1066: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> ZERO_LENGTH_BYTE_ARRAY
   * 45 Weak Mutation 1067: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> gid
   * 46 Weak Mutation 1064: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> /
   * 47 Weak Mutation 1065: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> *
   * 48 Weak Mutation 1070: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> ZERO_LENGTH_BYTE_ARRAY
   * 49 Weak Mutation 1071: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable bqual -> gid
   * 50 Weak Mutation 1068: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceComparisonOperator != null -> = null
   * 51 Weak Mutation 1058: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceComparisonOperator != null -> = null
   * 52 Weak Mutation 1056: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> ZERO_LENGTH_BYTE_ARRAY
   * 53 Weak Mutation 1057: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> bqual
   * 54 Weak Mutation 1062: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 1063: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> %
   * 56 Weak Mutation 1060: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> ZERO_LENGTH_BYTE_ARRAY
   * 57 Weak Mutation 1061: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceVariable gid -> bqual
   * 58 Weak Mutation 1075: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> *
   * 59 Weak Mutation 1074: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> /
   * 60 Weak Mutation 1073: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> %
   * 61 Weak Mutation 1072: com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I:251 - ReplaceArithmeticOperator + -> -
   * 62 com.sleepycat.je.log.LogUtils$XidImpl.getBranchQualifier()[B: root-Branch
   * 63 com.sleepycat.je.log.LogUtils$XidImpl.getGlobalTransactionId()[B: root-Branch
   * 64 com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V: root-Branch
   * 65 com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I: I14 Branch 21 IFNONNULL L251 - true
   * 66 com.sleepycat.je.log.LogUtils.getXidSize(Ljavax/transaction/xa/Xid;)I: I23 Branch 22 IFNONNULL L251 - true
   */
  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte[] byteArray1 = new byte[9];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(1, byteArray0, byteArray1);
      int int0 = LogUtils.getXidSize((Xid) logUtils_XidImpl0);
      assertEquals(25, int0);
      assertEquals(1, logUtils_XidImpl0.getFormatId());
  }

  //Test case number: 20
  /*
   * 40 covered goals:
   * 1 Weak Mutation 1076: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:254 - DeleteStatement: getGlobalTransactionId()[B
   * 2 Weak Mutation 1077: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:255 - DeleteStatement: getBranchQualifier()[B
   * 3 Weak Mutation 1079: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:256 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 4 Weak Mutation 1078: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:256 - DeleteStatement: getFormatId()I
   * 5 Weak Mutation 7: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 6 Weak Mutation 8: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 7 Weak Mutation 9: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp Negation
   * 8 Weak Mutation 10: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp +1
   * 9 Weak Mutation 11: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp -1
   * 10 Weak Mutation 12: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - DeleteField: formatIdI
   * 11 com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I: root-Branch
   * 12 Weak Mutation 373: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC -1 b
   * 13 Weak Mutation 372: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp IINC 1 b
   * 14 Weak Mutation 374: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - DeleteStatement: put(B)Ljava/nio/ByteBuffer;
   * 15 Weak Mutation 369: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> |
   * 16 Weak Mutation 368: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 256
   * 17 Weak Mutation 371: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:56 - InsertUnaryOp Negation of b
   * 18 Weak Mutation 370: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceBitwiseOperator & -> ^
   * 19 Weak Mutation 356: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> SHORT_BYTES
   * 20 Weak Mutation 357: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> UNSIGNED_INT_BYTES
   * 21 Weak Mutation 358: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 359: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 354: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> LONG_BYTES
   * 24 Weak Mutation 355: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceVariable i -> INT_BYTES
   * 25 Weak Mutation 364: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 0
   * 26 Weak Mutation 365: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 1
   * 27 Weak Mutation 366: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> -1
   * 28 Weak Mutation 367: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 255 -> 254
   * 29 Weak Mutation 360: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 361: com.sleepycat.je.log.LogUtils.writeInt(Ljava/nio/ByteBuffer;I)V:55 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 7: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 32 Weak Mutation 8: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 33 Weak Mutation 9: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp Negation
   * 34 Weak Mutation 10: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp +1
   * 35 Weak Mutation 11: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp -1
   * 36 Weak Mutation 12: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - DeleteField: formatIdI
   * 37 Weak Mutation 1079: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:256 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 38 Weak Mutation 1078: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:256 - DeleteStatement: getFormatId()I
   * 39 Weak Mutation 1077: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:255 - DeleteStatement: getBranchQualifier()[B
   * 40 Weak Mutation 1076: com.sleepycat.je.log.LogUtils.writeXid(Ljava/nio/ByteBuffer;Ljavax/transaction/xa/Xid;)V:254 - DeleteStatement: getGlobalTransactionId()[B
   */
  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(18, byteArray0, byteArray0);
      // Undeclared exception!
      try {
        LogUtils.writeXid((ByteBuffer) null, (Xid) logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Weak Mutation 1106: com.sleepycat.je.log.LogUtils.readXid(Ljava/nio/ByteBuffer;)Ljavax/transaction/xa/Xid;:273 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   * 2 Weak Mutation 450: com.sleepycat.je.log.LogUtils.readInt(Ljava/nio/ByteBuffer;)I:68 - DeleteStatement: get()B
   * 3 Weak Mutation 1106: com.sleepycat.je.log.LogUtils.readXid(Ljava/nio/ByteBuffer;)Ljavax/transaction/xa/Xid;:273 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   */
  @Test
  public void test21()  throws Throwable  {
      // Undeclared exception!
      try {
        LogUtils.readXid((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 22
  /*
   * 96 covered goals:
   * 1 Weak Mutation 15: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:307 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 19: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 3 Weak Mutation 18: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - DeleteStatement: getFormatId()I
   * 4 Weak Mutation 21: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp Negation
   * 5 Weak Mutation 20: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 6 Weak Mutation 23: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp -1
   * 7 Weak Mutation 22: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp +1
   * 8 Weak Mutation 24: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - DeleteField: formatIdI
   * 9 Weak Mutation 26: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceComparisonOperator == -> -2
   * 10 Weak Mutation 31: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteField: gid[B
   * 11 Weak Mutation 30: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteStatement: getGlobalTransactionId()[B
   * 12 Weak Mutation 34: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteStatement: getBranchQualifier()[B
   * 13 Weak Mutation 35: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteField: bqual[B
   * 14 Weak Mutation 32: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 36: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - ReplaceComparisonOperator == -> !=
   * 16 Weak Mutation 37: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:315 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 115: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:334 - ReplaceComparisonOperator != null -> = null
   * 18 Weak Mutation 113: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:334 - ReplaceComparisonOperator = null -> != null
   * 19 Weak Mutation 124: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:337 - ReplaceComparisonOperator == -> -2
   * 20 Weak Mutation 127: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 152: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceComparisonOperator < -> <=
   * 22 Weak Mutation 144: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceVariable i -> MAXBQUALSIZE
   * 23 Weak Mutation 145: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceVariable i -> MAXGTRIDSIZE
   * 24 Weak Mutation 146: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp Negation of i
   * 25 Weak Mutation 147: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp IINC 1 i
   * 26 Weak Mutation 148: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp IINC -1 i
   * 27 Weak Mutation 151: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceComparisonOperator < -> -2
   * 28 Weak Mutation 137: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 136: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXGTRIDSIZE
   * 30 Weak Mutation 139: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 138: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 141: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceComparisonOperator == -> -2
   * 33 Weak Mutation 129: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXBQUALSIZE
   * 34 Weak Mutation 131: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 130: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXGTRIDSIZE
   * 36 Weak Mutation 133: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 132: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 135: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXBQUALSIZE
   * 39 Weak Mutation 153: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:345 - ReplaceConstant - 1 -> 0
   * 40 com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z: I4 Branch 1 IFNE L307 - true
   * 41 com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z: I20 Branch 2 IF_ICMPEQ L311 - true
   * 42 com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z: I33 Branch 3 IFEQ L314 - false
   * 43 com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z: I40 Branch 4 IFEQ L314 - false
   * 44 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I3 Branch 9 IFNULL L334 - false
   * 45 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I5 Branch 10 IFNONNULL L334 - true
   * 46 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I22 Branch 12 IF_ICMPEQ L337 - true
   * 47 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I53 Branch 14 IF_ICMPLT L340 - true
   * 48 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I53 Branch 14 IF_ICMPLT L340 - false
   * 49 com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z: I41 Branch 13 IF_ICMPEQ L341 - true
   * 50 Weak Mutation 7: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 51 Weak Mutation 8: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 52 Weak Mutation 9: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp Negation
   * 53 Weak Mutation 10: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp +1
   * 54 Weak Mutation 11: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - InsertUnaryOp -1
   * 55 Weak Mutation 12: com.sleepycat.je.log.LogUtils$XidImpl.getFormatId()I:298 - DeleteField: formatIdI
   * 56 Weak Mutation 13: com.sleepycat.je.log.LogUtils$XidImpl.getGlobalTransactionId()[B:301 - DeleteField: gid[B
   * 57 Weak Mutation 14: com.sleepycat.je.log.LogUtils$XidImpl.getBranchQualifier()[B:304 - DeleteField: bqual[B
   * 58 Weak Mutation 15: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:307 - ReplaceComparisonOperator != -> ==
   * 59 Weak Mutation 19: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 60 Weak Mutation 18: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - DeleteStatement: getFormatId()I
   * 61 Weak Mutation 21: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp Negation
   * 62 Weak Mutation 20: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 63 Weak Mutation 23: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp -1
   * 64 Weak Mutation 22: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - InsertUnaryOp +1
   * 65 Weak Mutation 24: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - DeleteField: formatIdI
   * 66 Weak Mutation 26: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:311 - ReplaceComparisonOperator == -> -2
   * 67 Weak Mutation 31: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteField: gid[B
   * 68 Weak Mutation 30: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteStatement: getGlobalTransactionId()[B
   * 69 Weak Mutation 34: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteStatement: getBranchQualifier()[B
   * 70 Weak Mutation 35: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - DeleteField: bqual[B
   * 71 Weak Mutation 32: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - ReplaceComparisonOperator == -> !=
   * 72 Weak Mutation 36: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:314 - ReplaceComparisonOperator == -> !=
   * 73 Weak Mutation 37: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:315 - ReplaceConstant - 1 -> 0
   * 74 Weak Mutation 115: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:334 - ReplaceComparisonOperator != null -> = null
   * 75 Weak Mutation 113: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:334 - ReplaceComparisonOperator = null -> != null
   * 76 Weak Mutation 127: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 124: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:337 - ReplaceComparisonOperator == -> -2
   * 78 Weak Mutation 137: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp Negation of i
   * 79 Weak Mutation 136: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXGTRIDSIZE
   * 80 Weak Mutation 139: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC -1 i
   * 81 Weak Mutation 138: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC 1 i
   * 82 Weak Mutation 141: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceComparisonOperator == -> -2
   * 83 Weak Mutation 129: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXBQUALSIZE
   * 84 Weak Mutation 131: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp Negation of i
   * 85 Weak Mutation 130: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXGTRIDSIZE
   * 86 Weak Mutation 133: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC -1 i
   * 87 Weak Mutation 132: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - InsertUnaryOp IINC 1 i
   * 88 Weak Mutation 135: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:341 - ReplaceVariable i -> MAXBQUALSIZE
   * 89 Weak Mutation 152: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceComparisonOperator < -> <=
   * 90 Weak Mutation 153: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:345 - ReplaceConstant - 1 -> 0
   * 91 Weak Mutation 144: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceVariable i -> MAXBQUALSIZE
   * 92 Weak Mutation 145: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceVariable i -> MAXGTRIDSIZE
   * 93 Weak Mutation 146: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp Negation of i
   * 94 Weak Mutation 147: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp IINC 1 i
   * 95 Weak Mutation 148: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - InsertUnaryOp IINC -1 i
   * 96 Weak Mutation 151: com.sleepycat.je.log.LogUtils$XidImpl.compareByteArrays([B[B)Z:340 - ReplaceComparisonOperator < -> -2
   */
  @Test
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(8, byteArray0, byteArray0);
      boolean boolean0 = logUtils_XidImpl0.equals((Object) logUtils_XidImpl0);
      assertEquals("<Xid formatId=\"8\" gTxnId=\"\u0000\" bqual=\"\u0000\"/>", logUtils_XidImpl0.toString());
      assertEquals(true, boolean0);
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * 1 Weak Mutation 16: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:308 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z: I4 Branch 1 IFNE L307 - false
   * 3 Weak Mutation 15: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:307 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 16: com.sleepycat.je.log.LogUtils$XidImpl.equals(Ljava/lang/Object;)Z:308 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(8, byteArray0, byteArray0);
      boolean boolean0 = logUtils_XidImpl0.equals((Object) "<Xid formatId=\"8\" gTxnId=\"\u0000\" bqual=\"\u0000\"/>");
      assertEquals(false, boolean0);
      assertEquals(8, logUtils_XidImpl0.getFormatId());
  }

  //Test case number: 24
  /*
   * 140 covered goals:
   * 1 Weak Mutation 39: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 2 Weak Mutation 42: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp +1
   * 3 Weak Mutation 43: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp -1
   * 4 Weak Mutation 40: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 5 Weak Mutation 41: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp Negation
   * 6 Weak Mutation 44: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - DeleteField: formatIdI
   * 7 Weak Mutation 46: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 45: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - DeleteField: gid[B
   * 9 Weak Mutation 47: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 68: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXGTRIDSIZE
   * 11 Weak Mutation 69: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 70: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 71: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 65: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 15 Weak Mutation 66: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXBQUALSIZE
   * 16 Weak Mutation 67: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 17 Weak Mutation 72: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - DeleteField: gid[B
   * 18 Weak Mutation 74: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> -2
   * 19 Weak Mutation 75: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> <=
   * 20 Weak Mutation 51: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of code
   * 21 Weak Mutation 50: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> i
   * 22 Weak Mutation 49: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXGTRIDSIZE
   * 23 Weak Mutation 48: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXBQUALSIZE
   * 24 Weak Mutation 55: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXBQUALSIZE
   * 25 Weak Mutation 54: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - DeleteField: gid[B
   * 26 Weak Mutation 53: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 code
   * 27 Weak Mutation 52: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 code
   * 28 Weak Mutation 59: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 58: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of i
   * 30 Weak Mutation 57: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXGTRIDSIZE
   * 31 Weak Mutation 56: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> code
   * 32 Weak Mutation 63: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> /
   * 33 Weak Mutation 62: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> %
   * 34 Weak Mutation 60: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 i
   * 35 Weak Mutation 76: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - DeleteField: bqual[B
   * 36 Weak Mutation 77: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - ReplaceComparisonOperator = null -> != null
   * 37 Weak Mutation 78: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 102: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 103: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - DeleteField: bqual[B
   * 40 Weak Mutation 100: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 101: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC 1 i
   * 42 Weak Mutation 98: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 43 Weak Mutation 99: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXGTRIDSIZE
   * 44 Weak Mutation 96: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 45 Weak Mutation 97: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXBQUALSIZE
   * 46 Weak Mutation 106: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> <=
   * 47 Weak Mutation 105: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> -2
   * 48 Weak Mutation 79: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXBQUALSIZE
   * 49 Weak Mutation 85: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - DeleteField: bqual[B
   * 50 Weak Mutation 84: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 code
   * 51 Weak Mutation 87: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> code
   * 52 Weak Mutation 86: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXBQUALSIZE
   * 53 Weak Mutation 81: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> i
   * 54 Weak Mutation 80: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXGTRIDSIZE
   * 55 Weak Mutation 83: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 code
   * 56 Weak Mutation 82: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of code
   * 57 Weak Mutation 93: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> %
   * 58 Weak Mutation 94: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> /
   * 59 Weak Mutation 89: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of i
   * 60 Weak Mutation 88: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXGTRIDSIZE
   * 61 Weak Mutation 91: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 i
   * 62 Weak Mutation 90: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 i
   * 63 Weak Mutation 110: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC 1 code
   * 64 Weak Mutation 111: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC -1 code
   * 65 Weak Mutation 108: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXGTRIDSIZE
   * 66 Weak Mutation 109: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp Negation of code
   * 67 Weak Mutation 107: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXBQUALSIZE
   * 68 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I9 Branch 5 IFNULL L321 - false
   * 69 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I33 Branch 6 IF_ICMPLT L322 - true
   * 70 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I33 Branch 6 IF_ICMPLT L322 - false
   * 71 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I38 Branch 7 IFNULL L326 - false
   * 72 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I62 Branch 8 IF_ICMPLT L327 - true
   * 73 com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I: I62 Branch 8 IF_ICMPLT L327 - false
   * 74 Weak Mutation 39: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 75 Weak Mutation 42: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp +1
   * 76 Weak Mutation 43: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp -1
   * 77 Weak Mutation 40: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 78 Weak Mutation 41: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp Negation
   * 79 Weak Mutation 46: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - ReplaceComparisonOperator = null -> != null
   * 80 Weak Mutation 47: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceConstant - 0 -> 1
   * 81 Weak Mutation 44: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - DeleteField: formatIdI
   * 82 Weak Mutation 45: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - DeleteField: gid[B
   * 83 Weak Mutation 51: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of code
   * 84 Weak Mutation 50: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> i
   * 85 Weak Mutation 49: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXGTRIDSIZE
   * 86 Weak Mutation 48: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXBQUALSIZE
   * 87 Weak Mutation 55: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXBQUALSIZE
   * 88 Weak Mutation 54: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - DeleteField: gid[B
   * 89 Weak Mutation 53: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 code
   * 90 Weak Mutation 52: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 code
   * 91 Weak Mutation 59: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 i
   * 92 Weak Mutation 58: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of i
   * 93 Weak Mutation 57: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXGTRIDSIZE
   * 94 Weak Mutation 56: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> code
   * 95 Weak Mutation 63: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> /
   * 96 Weak Mutation 62: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> %
   * 97 Weak Mutation 60: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 i
   * 98 Weak Mutation 68: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXGTRIDSIZE
   * 99 Weak Mutation 69: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp Negation of i
   * 100 Weak Mutation 70: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC 1 i
   * 101 Weak Mutation 71: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC -1 i
   * 102 Weak Mutation 65: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 103 Weak Mutation 66: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXBQUALSIZE
   * 104 Weak Mutation 67: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 105 Weak Mutation 76: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - DeleteField: bqual[B
   * 106 Weak Mutation 77: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - ReplaceComparisonOperator = null -> != null
   * 107 Weak Mutation 78: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceConstant - 0 -> 1
   * 108 Weak Mutation 79: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXBQUALSIZE
   * 109 Weak Mutation 72: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - DeleteField: gid[B
   * 110 Weak Mutation 74: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> -2
   * 111 Weak Mutation 75: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> <=
   * 112 Weak Mutation 85: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - DeleteField: bqual[B
   * 113 Weak Mutation 84: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 code
   * 114 Weak Mutation 87: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> code
   * 115 Weak Mutation 86: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXBQUALSIZE
   * 116 Weak Mutation 81: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> i
   * 117 Weak Mutation 80: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXGTRIDSIZE
   * 118 Weak Mutation 83: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 code
   * 119 Weak Mutation 82: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of code
   * 120 Weak Mutation 93: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> %
   * 121 Weak Mutation 94: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> /
   * 122 Weak Mutation 89: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of i
   * 123 Weak Mutation 88: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXGTRIDSIZE
   * 124 Weak Mutation 91: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 i
   * 125 Weak Mutation 90: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 i
   * 126 Weak Mutation 102: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC -1 i
   * 127 Weak Mutation 103: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - DeleteField: bqual[B
   * 128 Weak Mutation 100: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp Negation of i
   * 129 Weak Mutation 101: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC 1 i
   * 130 Weak Mutation 98: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 131 Weak Mutation 99: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXGTRIDSIZE
   * 132 Weak Mutation 96: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 133 Weak Mutation 97: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXBQUALSIZE
   * 134 Weak Mutation 110: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC 1 code
   * 135 Weak Mutation 111: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC -1 code
   * 136 Weak Mutation 108: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXGTRIDSIZE
   * 137 Weak Mutation 109: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp Negation of code
   * 138 Weak Mutation 106: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> <=
   * 139 Weak Mutation 107: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXBQUALSIZE
   * 140 Weak Mutation 105: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> -2
   */
  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(1, byteArray0, byteArray0);
      int int0 = logUtils_XidImpl0.hashCode();
      assertEquals(1, int0);
  }

  //Test case number: 25
  /*
   * 72 covered goals:
   * 1 Weak Mutation 61: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 64: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 92: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 95: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> *
   * 5 Weak Mutation 39: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 6 Weak Mutation 42: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp +1
   * 7 Weak Mutation 43: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp -1
   * 8 Weak Mutation 40: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 9 Weak Mutation 41: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:320 - InsertUnaryOp Negation
   * 10 Weak Mutation 46: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - ReplaceComparisonOperator = null -> != null
   * 11 Weak Mutation 47: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 45: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:321 - DeleteField: gid[B
   * 13 Weak Mutation 51: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of code
   * 14 Weak Mutation 49: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXGTRIDSIZE
   * 15 Weak Mutation 48: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable code -> MAXBQUALSIZE
   * 16 Weak Mutation 55: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXBQUALSIZE
   * 17 Weak Mutation 54: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - DeleteField: gid[B
   * 18 Weak Mutation 53: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 code
   * 19 Weak Mutation 52: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 code
   * 20 Weak Mutation 59: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 58: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp Negation of i
   * 22 Weak Mutation 57: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceVariable i -> MAXGTRIDSIZE
   * 23 Weak Mutation 63: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 62: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 60: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - InsertUnaryOp IINC -1 i
   * 26 Weak Mutation 68: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXGTRIDSIZE
   * 27 Weak Mutation 69: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 70: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 71: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 65: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 31 Weak Mutation 66: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> MAXBQUALSIZE
   * 32 Weak Mutation 67: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceVariable i -> code
   * 33 Weak Mutation 76: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - DeleteField: bqual[B
   * 34 Weak Mutation 77: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:326 - ReplaceComparisonOperator = null -> != null
   * 35 Weak Mutation 78: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 79: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXBQUALSIZE
   * 37 Weak Mutation 72: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - DeleteField: gid[B
   * 38 Weak Mutation 74: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> -2
   * 39 Weak Mutation 75: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:322 - ReplaceComparisonOperator < -> <=
   * 40 Weak Mutation 85: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - DeleteField: bqual[B
   * 41 Weak Mutation 84: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 code
   * 42 Weak Mutation 87: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> code
   * 43 Weak Mutation 86: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXBQUALSIZE
   * 44 Weak Mutation 81: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> i
   * 45 Weak Mutation 80: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable code -> MAXGTRIDSIZE
   * 46 Weak Mutation 83: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 code
   * 47 Weak Mutation 82: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of code
   * 48 Weak Mutation 93: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> %
   * 49 Weak Mutation 94: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> /
   * 50 Weak Mutation 89: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 88: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceVariable i -> MAXGTRIDSIZE
   * 52 Weak Mutation 91: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 90: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 102: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 103: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - DeleteField: bqual[B
   * 56 Weak Mutation 100: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 101: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 98: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 59 Weak Mutation 99: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXGTRIDSIZE
   * 60 Weak Mutation 96: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> code
   * 61 Weak Mutation 97: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceVariable i -> MAXBQUALSIZE
   * 62 Weak Mutation 110: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC 1 code
   * 63 Weak Mutation 111: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp IINC -1 code
   * 64 Weak Mutation 108: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXGTRIDSIZE
   * 65 Weak Mutation 109: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - InsertUnaryOp Negation of code
   * 66 Weak Mutation 106: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> <=
   * 67 Weak Mutation 107: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:331 - ReplaceVariable code -> MAXBQUALSIZE
   * 68 Weak Mutation 105: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:327 - ReplaceComparisonOperator < -> -2
   * 69 Weak Mutation 61: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> -
   * 70 Weak Mutation 64: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:323 - ReplaceArithmeticOperator + -> *
   * 71 Weak Mutation 92: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> -
   * 72 Weak Mutation 95: com.sleepycat.je.log.LogUtils$XidImpl.hashCode()I:328 - ReplaceArithmeticOperator + -> *
   */
  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-1);
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl((int) (byte)0, byteArray0, byteArray0);
      int int0 = logUtils_XidImpl0.hashCode();
      assertEquals((-2), int0);
  }

  //Test case number: 26
  /*
   * 55 covered goals:
   * 1 Weak Mutation 154: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceConstant - <Xid formatId=" -> 
   * 2 Weak Mutation 155: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 156: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 4 Weak Mutation 157: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 5 Weak Mutation 158: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp Negation
   * 6 Weak Mutation 159: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp +1
   * 7 Weak Mutation 162: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 8 Weak Mutation 161: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteField: formatIdI
   * 9 Weak Mutation 160: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp -1
   * 10 Weak Mutation 163: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:350 - ReplaceConstant - " gTxnId=" -> 
   * 11 Weak Mutation 164: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:350 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 166: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:351 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 165: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:351 - DeleteField: gid[B
   * 14 Weak Mutation 170: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:355 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 169: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:355 - DeleteField: gid[B
   * 16 Weak Mutation 171: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:357 - ReplaceConstant - " bqual=" -> 
   * 17 Weak Mutation 172: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:357 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 174: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:358 - ReplaceComparisonOperator != null -> = null
   * 19 Weak Mutation 173: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:358 - DeleteField: bqual[B
   * 20 Weak Mutation 178: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:362 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 177: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:362 - DeleteField: bqual[B
   * 22 Weak Mutation 179: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:364 - ReplaceConstant - "/> -> 
   * 23 Weak Mutation 180: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:364 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 181: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:365 - DeleteStatement: toString()Ljava/lang/String;
   * 25 com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;: I25 Branch 15 IFNONNULL L351 - true
   * 26 com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;: I55 Branch 16 IFNONNULL L358 - true
   * 27 Weak Mutation 0: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 28 Weak Mutation 1: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 29 Weak Mutation 2: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp Negation of formatId
   * 30 Weak Mutation 3: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp IINC 1 formatId
   * 31 Weak Mutation 4: com.sleepycat.je.log.LogUtils$XidImpl.<init>(I[B[B)V:293 - InsertUnaryOp IINC -1 formatId
   * 32 Weak Mutation 154: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceConstant - <Xid formatId=" -> 
   * 33 Weak Mutation 155: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 34 Weak Mutation 156: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceVariable formatId -> MAXBQUALSIZE
   * 35 Weak Mutation 157: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - ReplaceVariable formatId -> MAXGTRIDSIZE
   * 36 Weak Mutation 158: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp Negation
   * 37 Weak Mutation 159: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp +1
   * 38 Weak Mutation 171: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:357 - ReplaceConstant - " bqual=" -> 
   * 39 Weak Mutation 170: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:355 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 40 Weak Mutation 169: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:355 - DeleteField: gid[B
   * 41 Weak Mutation 174: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:358 - ReplaceComparisonOperator != null -> = null
   * 42 Weak Mutation 173: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:358 - DeleteField: bqual[B
   * 43 Weak Mutation 172: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:357 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 163: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:350 - ReplaceConstant - " gTxnId=" -> 
   * 45 Weak Mutation 162: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 46 Weak Mutation 161: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - DeleteField: formatIdI
   * 47 Weak Mutation 160: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:349 - InsertUnaryOp -1
   * 48 Weak Mutation 166: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:351 - ReplaceComparisonOperator != null -> = null
   * 49 Weak Mutation 165: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:351 - DeleteField: gid[B
   * 50 Weak Mutation 164: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:350 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 51 Weak Mutation 178: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:362 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 52 Weak Mutation 179: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:364 - ReplaceConstant - "/> -> 
   * 53 Weak Mutation 177: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:362 - DeleteField: bqual[B
   * 54 Weak Mutation 180: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:364 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 55 Weak Mutation 181: com.sleepycat.je.log.LogUtils$XidImpl.toString()Ljava/lang/String;:365 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(8, byteArray0, byteArray0);
      String string0 = logUtils_XidImpl0.toString();
      assertEquals("<Xid formatId=\"8\" gTxnId=\"\u0000\" bqual=\"\u0000\"/>", string0);
      assertNotNull(string0);
  }
}
