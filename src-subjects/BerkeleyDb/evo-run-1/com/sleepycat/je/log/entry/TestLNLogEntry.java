/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.log.entry;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.cleaner.FileSummary;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.entry.LNLogEntry;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.txn.Txn;
import java.io.StringWriter;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestLNLogEntry {


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 Weak Mutation 110: com.sleepycat.je.log.entry.LNLogEntry.isTransactional()Z:149 - InsertUnaryOp Negation
   * 2 Weak Mutation 111: com.sleepycat.je.log.entry.LNLogEntry.isTransactional()Z:149 - DeleteField: isTransactionalZ
   * 3 com.sleepycat.je.log.entry.LNLogEntry.isTransactional()Z: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> 0
   * 5 Weak Mutation 1: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 2: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 3: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp Negation of isTransactional
   * 8 Weak Mutation 4: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp IINC 1 isTransactional
   * 9 Weak Mutation 5: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp IINC -1 isTransactional
   * 10 Weak Mutation 110: com.sleepycat.je.log.entry.LNLogEntry.isTransactional()Z:149 - InsertUnaryOp Negation
   * 11 Weak Mutation 111: com.sleepycat.je.log.entry.LNLogEntry.isTransactional()Z:149 - DeleteField: isTransactionalZ
   * 12 com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, true);
      boolean boolean0 = lNLogEntry0.isTransactional();
      assertEquals(true, boolean0);
      assertEquals((-1L), lNLogEntry0.getAbortLsn());
  }

  //Test case number: 1
  /*
   * 99 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 2 Weak Mutation 64: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 3 Weak Mutation 65: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp Negation of verbose
   * 4 Weak Mutation 66: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC 1 verbose
   * 5 Weak Mutation 67: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC -1 verbose
   * 6 Weak Mutation 69: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 7 Weak Mutation 70: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp Negation of verbose
   * 8 Weak Mutation 71: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC 1 verbose
   * 9 Weak Mutation 72: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC -1 verbose
   * 10 Weak Mutation 73: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 11 Weak Mutation 76: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 12 Weak Mutation 77: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 74: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteField: key[B
   * 14 Weak Mutation 75: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 78: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - InsertUnaryOp Negation
   * 16 Weak Mutation 79: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - DeleteField: isTransactionalZ
   * 17 Weak Mutation 80: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 85: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> -2
   * 19 Weak Mutation 84: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 1
   * 20 Weak Mutation 86: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteStatement: longSub(JJ)I
   * 21 Weak Mutation 81: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - InsertUnaryOp Negation
   * 22 Weak Mutation 83: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 0
   * 23 Weak Mutation 82: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteField: abortLsnJ
   * 24 Weak Mutation 88: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceComparisonOperator == -> <=
   * 25 Weak Mutation 93: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 92: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: toString(J)Ljava/lang/String;
   * 27 Weak Mutation 91: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteField: abortLsnJ
   * 28 Weak Mutation 90: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - InsertUnaryOp Negation
   * 29 Weak Mutation 95: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 30 Weak Mutation 94: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - ReplaceConstant - <knownDeleted val=" -> 
   * 31 Weak Mutation 101: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 32 Weak Mutation 98: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 99: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceConstant - true -> 
   * 34 Weak Mutation 96: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - InsertUnaryOp Negation
   * 35 Weak Mutation 97: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - DeleteField: abortKnownDeletedZ
   * 36 Weak Mutation 102: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - ReplaceConstant - "/> -> 
   * 37 Weak Mutation 103: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 108: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 39 Weak Mutation 106: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC 1 verbose
   * 40 Weak Mutation 107: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC -1 verbose
   * 41 Weak Mutation 104: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 42 Weak Mutation 105: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp Negation of verbose
   * 43 com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;: I27 Branch 6 IFEQ L116 - false
   * 44 com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;: I34 Branch 7 IFEQ L117 - false
   * 45 com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;: I54 Branch 8 IFEQ L121 - false
   * 46 Weak Mutation 6: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> 0
   * 47 Weak Mutation 7: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> 1
   * 48 Weak Mutation 8: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> -2
   * 49 Weak Mutation 9: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:58 - InsertUnaryOp Negation of abortLsn
   * 50 Weak Mutation 10: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp Negation of abortKnownDeleted
   * 51 Weak Mutation 11: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp IINC 1 abortKnownDeleted
   * 52 Weak Mutation 12: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp IINC -1 abortKnownDeleted
   * 53 Weak Mutation 13: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceComparisonOperator = null -> != null
   * 54 Weak Mutation 14: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceConstant - 1 -> 0
   * 55 Weak Mutation 17: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:65 - DeleteStatement: getNodeId()J
   * 56 Weak Mutation 16: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:64 - DeleteStatement: getClass()Ljava/lang/Class;
   * 57 Weak Mutation 68: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 58 Weak Mutation 69: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 59 Weak Mutation 70: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp Negation of verbose
   * 60 Weak Mutation 71: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC 1 verbose
   * 61 Weak Mutation 64: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 62 Weak Mutation 65: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp Negation of verbose
   * 63 Weak Mutation 66: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC 1 verbose
   * 64 Weak Mutation 67: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC -1 verbose
   * 65 Weak Mutation 76: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 66 Weak Mutation 77: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 67 Weak Mutation 78: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - InsertUnaryOp Negation
   * 68 Weak Mutation 79: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - DeleteField: isTransactionalZ
   * 69 Weak Mutation 72: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC -1 verbose
   * 70 Weak Mutation 73: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 71 Weak Mutation 74: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteField: key[B
   * 72 Weak Mutation 75: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - ReplaceConstant - 0 -> 1
   * 73 Weak Mutation 85: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> -2
   * 74 Weak Mutation 84: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 1
   * 75 Weak Mutation 86: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteStatement: longSub(JJ)I
   * 76 Weak Mutation 81: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - InsertUnaryOp Negation
   * 77 Weak Mutation 80: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - ReplaceComparisonOperator == -> !=
   * 78 Weak Mutation 83: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 0
   * 79 Weak Mutation 82: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteField: abortLsnJ
   * 80 Weak Mutation 93: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 81 Weak Mutation 92: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: toString(J)Ljava/lang/String;
   * 82 Weak Mutation 95: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 83 Weak Mutation 94: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - ReplaceConstant - <knownDeleted val=" -> 
   * 84 Weak Mutation 88: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceComparisonOperator == -> <=
   * 85 Weak Mutation 91: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteField: abortLsnJ
   * 86 Weak Mutation 90: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - InsertUnaryOp Negation
   * 87 Weak Mutation 102: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - ReplaceConstant - "/> -> 
   * 88 Weak Mutation 103: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 89 Weak Mutation 101: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 90 Weak Mutation 98: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceComparisonOperator == -> !=
   * 91 Weak Mutation 99: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceConstant - true -> 
   * 92 Weak Mutation 96: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - InsertUnaryOp Negation
   * 93 Weak Mutation 97: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - DeleteField: abortKnownDeletedZ
   * 94 Weak Mutation 108: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 95 Weak Mutation 106: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC 1 verbose
   * 96 Weak Mutation 107: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC -1 verbose
   * 97 Weak Mutation 104: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 98 Weak Mutation 105: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp Negation of verbose
   * 99 com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V: I48 Branch 1 IFNULL L62 - false
   */
  @Test
  public void test1()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (-598L), true, txn0);
      StringWriter stringWriter0 = new StringWriter(2);
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      StringBuffer stringBuffer1 = lNLogEntry0.dumpEntry(stringBuffer0, true);
      assertEquals(193, stringBuffer0.length());
      assertEquals("<fileSummaryLN><node>0</node></fileSummaryLN><dbId id=\"2\"/><key v=\"0 \"/><DbLsn val=\"0xffffffff/0xfffffdaa\"/><knownDeleted val=\"true\"/><txn id=\"0__Txn\"><DbLsn val=\"0xffffffff/0xffffffff\"/></txn>", stringBuffer1.toString());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 109: com.sleepycat.je.log.entry.LNLogEntry.getMainItem()Ljava/lang/Object;:133 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 2 com.sleepycat.je.log.entry.LNLogEntry.getMainItem()Ljava/lang/Object;: root-Branch
   * 3 Weak Mutation 15: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 109: com.sleepycat.je.log.entry.LNLogEntry.getMainItem()Ljava/lang/Object;:133 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 5 com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V: I48 Branch 1 IFNULL L62 - true
   */
  @Test
  public void test2()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN_DELTA;
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[19];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, lN0, databaseId0, byteArray0, (-359L), true, (Txn) null);
      lNLogEntry0.getMainItem();
      assertEquals(502065L, lN0.getLastId());
      assertEquals(false, lNLogEntry0.isTransactional());
  }

  //Test case number: 3
  /*
   * 23 covered goals:
   * 1 Weak Mutation 23: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:76 - DeleteStatement: newInstance()Ljava/lang/Object;
   * 2 Weak Mutation 22: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:76 - DeleteField: logClassLjava/lang/Class;
   * 3 Weak Mutation 25: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp Negation of entryTypeVersion
   * 4 Weak Mutation 24: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 5 Weak Mutation 27: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp IINC -1 entryTypeVersion
   * 6 Weak Mutation 26: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp IINC 1 entryTypeVersion
   * 7 Weak Mutation 28: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   * 8 com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V: I3 Branch 2 IFEQ L75 - false
   * 9 Weak Mutation 19: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp IINC 1 readFullItem
   * 10 Weak Mutation 18: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp Negation of readFullItem
   * 11 Weak Mutation 21: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 20: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp IINC -1 readFullItem
   * 13 Weak Mutation 19: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp IINC 1 readFullItem
   * 14 Weak Mutation 18: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp Negation of readFullItem
   * 15 Weak Mutation 21: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - ReplaceComparisonOperator == -> !=
   * 16 Weak Mutation 20: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:75 - InsertUnaryOp IINC -1 readFullItem
   * 17 Weak Mutation 23: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:76 - DeleteStatement: newInstance()Ljava/lang/Object;
   * 18 Weak Mutation 22: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:76 - DeleteField: logClassLjava/lang/Class;
   * 19 Weak Mutation 25: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp Negation of entryTypeVersion
   * 20 Weak Mutation 24: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 21 Weak Mutation 27: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp IINC -1 entryTypeVersion
   * 22 Weak Mutation 26: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - InsertUnaryOp IINC 1 entryTypeVersion
   * 23 Weak Mutation 28: com.sleepycat.je.log.entry.LNLogEntry.readEntry(Ljava/nio/ByteBuffer;IBZ)V:77 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   */
  @Test
  public void test3()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_IN_DELETE_INFO;
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN((FileSummary) null);
      DatabaseId databaseId0 = new DatabaseId(1596);
      byte[] byteArray0 = new byte[5];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) (byte) (-72), true, txn0);
      // Undeclared exception!
      try {
        lNLogEntry0.readEntry((ByteBuffer) null, (int) (byte)57, (byte)127, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 44 covered goals:
   * 1 Weak Mutation 87: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 100: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceConstant - false -> 
   * 3 com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;: I54 Branch 8 IFEQ L121 - true
   * 4 Weak Mutation 68: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 5 Weak Mutation 69: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 6 Weak Mutation 70: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp Negation of verbose
   * 7 Weak Mutation 71: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC 1 verbose
   * 8 Weak Mutation 64: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 9 Weak Mutation 65: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp Negation of verbose
   * 10 Weak Mutation 66: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC 1 verbose
   * 11 Weak Mutation 67: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:112 - InsertUnaryOp IINC -1 verbose
   * 12 Weak Mutation 76: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 13 Weak Mutation 77: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 78: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - InsertUnaryOp Negation
   * 15 Weak Mutation 79: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - DeleteField: isTransactionalZ
   * 16 Weak Mutation 72: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - InsertUnaryOp IINC -1 verbose
   * 17 Weak Mutation 73: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:113 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 18 Weak Mutation 74: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - DeleteField: key[B
   * 19 Weak Mutation 75: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:114 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 85: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> -2
   * 21 Weak Mutation 84: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 1
   * 22 Weak Mutation 86: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteStatement: longSub(JJ)I
   * 23 Weak Mutation 81: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - InsertUnaryOp Negation
   * 24 Weak Mutation 80: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:116 - ReplaceComparisonOperator == -> !=
   * 25 Weak Mutation 83: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceConstant - -1 -> 0
   * 26 Weak Mutation 82: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - DeleteField: abortLsnJ
   * 27 Weak Mutation 93: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 28 Weak Mutation 92: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteStatement: toString(J)Ljava/lang/String;
   * 29 Weak Mutation 95: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 30 Weak Mutation 94: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:120 - ReplaceConstant - <knownDeleted val=" -> 
   * 31 Weak Mutation 91: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - DeleteField: abortLsnJ
   * 32 Weak Mutation 90: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:118 - InsertUnaryOp Negation
   * 33 Weak Mutation 102: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - ReplaceConstant - "/> -> 
   * 34 Weak Mutation 103: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:122 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 35 Weak Mutation 101: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 36 Weak Mutation 98: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceComparisonOperator == -> !=
   * 37 Weak Mutation 96: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - InsertUnaryOp Negation
   * 38 Weak Mutation 108: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 39 Weak Mutation 106: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC 1 verbose
   * 40 Weak Mutation 107: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp IINC -1 verbose
   * 41 Weak Mutation 104: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 42 Weak Mutation 105: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:123 - InsertUnaryOp Negation of verbose
   * 43 Weak Mutation 87: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:117 - ReplaceComparisonOperator == -> >=
   * 44 Weak Mutation 100: com.sleepycat.je.log.entry.LNLogEntry.dumpEntry(Ljava/lang/StringBuffer;Z)Ljava/lang/StringBuffer;:121 - ReplaceConstant - false -> 
   */
  @Test
  public void test4()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) 2, false, txn0);
      StringBuffer stringBuffer0 = new StringBuffer();
      lNLogEntry0.dumpEntry(stringBuffer0, false);
      assertEquals(286, stringBuffer0.capacity());
      assertEquals(2L, lNLogEntry0.getAbortLsn());
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 114: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 112: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - InsertUnaryOp Negation
   * 3 Weak Mutation 118: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:162 - ReplaceConstant - 0 -> -1
   * 4 Weak Mutation 117: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:162 - ReplaceConstant - 0 -> 1
   * 5 com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J: I4 Branch 9 IFEQ L159 - true
   * 6 Weak Mutation 118: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:162 - ReplaceConstant - 0 -> -1
   * 7 Weak Mutation 117: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:162 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 114: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 112: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - InsertUnaryOp Negation
   */
  @Test
  public void test5()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      long long0 = lNLogEntry0.getTransactionId();
      assertEquals(false, lNLogEntry0.isTransactional());
      assertEquals((-1L), lNLogEntry0.getAbortLsn());
      assertEquals(0L, long0);
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 Weak Mutation 113: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - DeleteField: isTransactionalZ
   * 2 Weak Mutation 116: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:160 - DeleteStatement: getId()J
   * 3 Weak Mutation 115: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:160 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 4 com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J: I4 Branch 9 IFEQ L159 - false
   * 5 Weak Mutation 114: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 112: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - InsertUnaryOp Negation
   * 7 Weak Mutation 116: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:160 - DeleteStatement: getId()J
   * 8 Weak Mutation 115: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:160 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 9 Weak Mutation 113: com.sleepycat.je.log.entry.LNLogEntry.getTransactionId()J:159 - DeleteField: isTransactionalZ
   */
  @Test
  public void test6()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) 2, false, txn0);
      lNLogEntry0.getTransactionId();
      assertEquals(502375L, fileSummaryLN0.getLastId());
      assertEquals(502375L, fileSummaryLN0.getNextNodeId());
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 120: com.sleepycat.je.log.entry.LNLogEntry.getNodeId()J:172 - DeleteField: nodeIdJ
   * 2 Weak Mutation 119: com.sleepycat.je.log.entry.LNLogEntry.getNodeId()J:172 - InsertUnaryOp Negation
   * 3 Weak Mutation 119: com.sleepycat.je.log.entry.LNLogEntry.getNodeId()J:172 - InsertUnaryOp Negation
   * 4 Weak Mutation 120: com.sleepycat.je.log.entry.LNLogEntry.getNodeId()J:172 - DeleteField: nodeIdJ
   * 5 com.sleepycat.je.log.entry.LNLogEntry.getNodeId()J: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_DEL_DUPLN_TRANSACTIONAL;
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      MapLN mapLN1 = new MapLN(databaseImpl0);
      NameLN nameLN0 = new NameLN();
      DatabaseId databaseId0 = nameLN0.getId();
      byte[] byteArray0 = new byte[8];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN1, databaseId0, byteArray0, (long) (byte) (-55), true, (Txn) null);
      long long0 = lNLogEntry0.getNodeId();
      assertEquals(502427L, long0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 121: com.sleepycat.je.log.entry.LNLogEntry.getLogType()Lcom/sleepycat/je/log/LogEntryType;:179 - DeleteField: entryTypeLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.log.entry.LNLogEntry.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 121: com.sleepycat.je.log.entry.LNLogEntry.getLogType()Lcom/sleepycat/je/log/LogEntryType;:179 - DeleteField: entryTypeLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test8()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_LN;
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[6];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) fileSummaryLN0, (DatabaseId) null, byteArray0, (long) (byte) (-113), true, (Txn) null);
      lNLogEntry0.getLogType();
      assertEquals(502622L, fileSummaryLN0.getNextNodeId());
      assertEquals(502622L, fileSummaryLN0.getLastId());
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 122: com.sleepycat.je.log.entry.LNLogEntry.marshallOutsideWriteLatch()Z:187 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 2 Weak Mutation 123: com.sleepycat.je.log.entry.LNLogEntry.marshallOutsideWriteLatch()Z:187 - DeleteStatement: marshallOutsideWriteLatch()Z
   * 3 Weak Mutation 123: com.sleepycat.je.log.entry.LNLogEntry.marshallOutsideWriteLatch()Z:187 - DeleteStatement: marshallOutsideWriteLatch()Z
   * 4 Weak Mutation 122: com.sleepycat.je.log.entry.LNLogEntry.marshallOutsideWriteLatch()Z:187 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 5 com.sleepycat.je.log.entry.LNLogEntry.marshallOutsideWriteLatch()Z: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) 2, false, txn0);
      lNLogEntry0.marshallOutsideWriteLatch();
      assertEquals(502661L, fileSummaryLN0.getLastId());
      assertEquals(502661L, fileSummaryLN0.getNextNodeId());
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * 1 Weak Mutation 124: com.sleepycat.je.log.entry.LNLogEntry.countAsObsoleteWhenLogged()Z:196 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 2 Weak Mutation 125: com.sleepycat.je.log.entry.LNLogEntry.countAsObsoleteWhenLogged()Z:196 - DeleteStatement: isDeleted()Z
   * 3 Weak Mutation 125: com.sleepycat.je.log.entry.LNLogEntry.countAsObsoleteWhenLogged()Z:196 - DeleteStatement: isDeleted()Z
   * 4 Weak Mutation 124: com.sleepycat.je.log.entry.LNLogEntry.countAsObsoleteWhenLogged()Z:196 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 5 com.sleepycat.je.log.entry.LNLogEntry.countAsObsoleteWhenLogged()Z: root-Branch
   */
  @Test
  public void test10()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_LN;
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      byte[] byteArray0 = new byte[6];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) fileSummaryLN0, (DatabaseId) null, byteArray0, (long) (byte) (-113), true, (Txn) null);
      boolean boolean0 = lNLogEntry0.countAsObsoleteWhenLogged();
      assertEquals(502703L, fileSummaryLN0.getLastId());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * 1 Weak Mutation 127: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - DeleteField: isTransactionalZ
   * 2 Weak Mutation 126: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - InsertUnaryOp Negation
   * 3 Weak Mutation 128: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 131: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:209 - DeleteStatement: addLogInfo(J)V
   * 5 Weak Mutation 130: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:209 - InsertUnaryOp Negation of justLoggedLsn
   * 6 com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V: I4 Branch 10 IFEQ L208 - false
   * 7 Weak Mutation 127: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - DeleteField: isTransactionalZ
   * 8 Weak Mutation 126: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - InsertUnaryOp Negation
   * 9 Weak Mutation 128: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 131: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:209 - DeleteStatement: addLogInfo(J)V
   * 11 Weak Mutation 130: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:209 - InsertUnaryOp Negation of justLoggedLsn
   */
  @Test
  public void test11()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, true);
      // Undeclared exception!
      try {
        lNLogEntry0.postLogWork((long) 127);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 12
  /*
   * 75 covered goals:
   * 1 Weak Mutation 137: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 2 Weak Mutation 136: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 139: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 138: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 5 Weak Mutation 143: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 6 Weak Mutation 142: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 7 Weak Mutation 133: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 8 Weak Mutation 132: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 9 Weak Mutation 135: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 10 Weak Mutation 134: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 11 Weak Mutation 144: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 145: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 13 Weak Mutation 141: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteStatement: getByteArrayLogSize([B)I
   * 14 Weak Mutation 140: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteField: key[B
   * 15 Weak Mutation 146: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - InsertUnaryOp Negation
   * 16 Weak Mutation 147: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - DeleteField: isTransactionalZ
   * 17 Weak Mutation 148: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 152: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - DeleteStatement: getLongLogSize()I
   * 19 Weak Mutation 153: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> -
   * 20 Weak Mutation 154: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 155: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 156: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 149: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp Negation of size
   * 24 Weak Mutation 150: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp IINC 1 size
   * 25 Weak Mutation 151: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp IINC -1 size
   * 26 Weak Mutation 157: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp Negation of size
   * 27 Weak Mutation 158: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp IINC 1 size
   * 28 Weak Mutation 159: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp IINC -1 size
   * 29 Weak Mutation 163: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> %
   * 30 Weak Mutation 162: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> -
   * 31 Weak Mutation 161: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - DeleteStatement: getLogSize()I
   * 32 Weak Mutation 160: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 33 Weak Mutation 165: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> *
   * 34 Weak Mutation 164: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> /
   * 35 Weak Mutation 168: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC -1 size
   * 36 Weak Mutation 167: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC 1 size
   * 37 Weak Mutation 166: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp Negation of size
   * 38 com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I: I22 Branch 11 IFEQ L221 - false
   * 39 Weak Mutation 137: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 40 Weak Mutation 136: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 41 Weak Mutation 139: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 42 Weak Mutation 138: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 43 Weak Mutation 141: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteStatement: getByteArrayLogSize([B)I
   * 44 Weak Mutation 140: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteField: key[B
   * 45 Weak Mutation 143: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 46 Weak Mutation 142: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 47 Weak Mutation 133: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 48 Weak Mutation 132: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 49 Weak Mutation 135: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 50 Weak Mutation 134: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 51 Weak Mutation 152: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - DeleteStatement: getLongLogSize()I
   * 52 Weak Mutation 153: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> -
   * 53 Weak Mutation 154: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 155: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> /
   * 55 Weak Mutation 156: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - ReplaceArithmeticOperator + -> *
   * 56 Weak Mutation 157: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp Negation of size
   * 57 Weak Mutation 158: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp IINC 1 size
   * 58 Weak Mutation 159: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - InsertUnaryOp IINC -1 size
   * 59 Weak Mutation 144: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 60 Weak Mutation 145: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 61 Weak Mutation 146: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - InsertUnaryOp Negation
   * 62 Weak Mutation 147: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - DeleteField: isTransactionalZ
   * 63 Weak Mutation 148: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - ReplaceComparisonOperator == -> !=
   * 64 Weak Mutation 149: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp Negation of size
   * 65 Weak Mutation 150: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp IINC 1 size
   * 66 Weak Mutation 151: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:222 - InsertUnaryOp IINC -1 size
   * 67 Weak Mutation 168: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC -1 size
   * 68 Weak Mutation 163: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> %
   * 69 Weak Mutation 162: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> -
   * 70 Weak Mutation 161: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - DeleteStatement: getLogSize()I
   * 71 Weak Mutation 160: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 72 Weak Mutation 167: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC 1 size
   * 73 Weak Mutation 166: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp Negation of size
   * 74 Weak Mutation 165: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> *
   * 75 Weak Mutation 164: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:224 - ReplaceArithmeticOperator + -> /
   */
  @Test
  public void test12()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (-598L), true, txn0);
      int int0 = lNLogEntry0.getLogSize();
      assertEquals(502745L, fileSummaryLN0.getLastId());
      assertEquals(43, int0);
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * 1 Weak Mutation 170: com.sleepycat.je.log.entry.LNLogEntry.writeToLog(Ljava/nio/ByteBuffer;)V:234 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 2 Weak Mutation 169: com.sleepycat.je.log.entry.LNLogEntry.writeToLog(Ljava/nio/ByteBuffer;)V:234 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 3 Weak Mutation 170: com.sleepycat.je.log.entry.LNLogEntry.writeToLog(Ljava/nio/ByteBuffer;)V:234 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 4 Weak Mutation 169: com.sleepycat.je.log.entry.LNLogEntry.writeToLog(Ljava/nio/ByteBuffer;)V:234 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   */
  @Test
  public void test13()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) 2, false, txn0);
      // Undeclared exception!
      try {
        lNLogEntry0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Weak Mutation 195: com.sleepycat.je.log.entry.LNLogEntry.getLN()Lcom/sleepycat/je/tree/LN;:251 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 2 com.sleepycat.je.log.entry.LNLogEntry.getLN()Lcom/sleepycat/je/tree/LN;: root-Branch
   * 3 Weak Mutation 195: com.sleepycat.je.log.entry.LNLogEntry.getLN()Lcom/sleepycat/je/tree/LN;:251 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   */
  @Test
  public void test14()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN_DELTA;
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[19];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, lN0, databaseId0, byteArray0, (-359L), true, (Txn) null);
      LN lN1 = lNLogEntry0.getLN();
      assertEquals(502935L, lN0.getLastId());
      assertEquals(502934L, lN1.getLastId());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Weak Mutation 196: com.sleepycat.je.log.entry.LNLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:255 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 2 com.sleepycat.je.log.entry.LNLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;: root-Branch
   * 3 Weak Mutation 196: com.sleepycat.je.log.entry.LNLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:255 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test15()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN;
      DatabaseId databaseId0 = new DatabaseId();
      NameLN nameLN0 = new NameLN(databaseId0);
      byte[] byteArray0 = new byte[7];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) nameLN0, databaseId0, byteArray0, (long) (byte)110, false, (Txn) null);
      lNLogEntry0.getDbId();
      assertEquals(502983L, lNLogEntry0.getNodeId());
      assertEquals(502986L, nameLN0.getLastId());
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Weak Mutation 197: com.sleepycat.je.log.entry.LNLogEntry.getKey()[B:259 - DeleteField: key[B
   * 2 com.sleepycat.je.log.entry.LNLogEntry.getKey()[B: root-Branch
   * 3 Weak Mutation 197: com.sleepycat.je.log.entry.LNLogEntry.getKey()[B:259 - DeleteField: key[B
   */
  @Test
  public void test16()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (long) 2, false, txn0);
      lNLogEntry0.getKey();
      assertEquals(503037L, fileSummaryLN0.getNextNodeId());
      assertEquals(503037L, fileSummaryLN0.getLastId());
  }

  //Test case number: 17
  /*
   * 11 covered goals:
   * 1 Weak Mutation 201: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:266 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 2 Weak Mutation 202: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:266 - DeleteStatement: getData()[B
   * 3 com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B: I5 Branch 14 IFEQ L263 - true
   * 4 Weak Mutation 200: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 199: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - DeleteStatement: isDeleted()Z
   * 6 Weak Mutation 198: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 7 Weak Mutation 201: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:266 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 8 Weak Mutation 200: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 202: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:266 - DeleteStatement: getData()[B
   * 10 Weak Mutation 199: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - DeleteStatement: isDeleted()Z
   * 11 Weak Mutation 198: com.sleepycat.je.log.entry.LNLogEntry.getDupKey()[B:263 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   */
  @Test
  public void test17()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseId databaseId0 = databaseImpl0.getId();
      byte[] byteArray0 = new byte[8];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) mapLN0, databaseId0, byteArray0, 1037L, true, txn0);
      lNLogEntry0.getDupKey();
      assertEquals(503076L, databaseImpl0.getEofNodeId());
      assertEquals(503078L, mapLN0.getNextNodeId());
  }

  //Test case number: 18
  /*
   * 5 covered goals:
   * 1 Weak Mutation 204: com.sleepycat.je.log.entry.LNLogEntry.getAbortLsn()J:271 - DeleteField: abortLsnJ
   * 2 Weak Mutation 203: com.sleepycat.je.log.entry.LNLogEntry.getAbortLsn()J:271 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.log.entry.LNLogEntry.getAbortLsn()J: root-Branch
   * 4 Weak Mutation 204: com.sleepycat.je.log.entry.LNLogEntry.getAbortLsn()J:271 - DeleteField: abortLsnJ
   * 5 Weak Mutation 203: com.sleepycat.je.log.entry.LNLogEntry.getAbortLsn()J:271 - InsertUnaryOp Negation
   */
  @Test
  public void test18()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      long long0 = lNLogEntry0.getAbortLsn();
      assertEquals(false, lNLogEntry0.isTransactional());
      assertEquals((-1L), long0);
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 Weak Mutation 206: com.sleepycat.je.log.entry.LNLogEntry.getAbortKnownDeleted()Z:275 - DeleteField: abortKnownDeletedZ
   * 2 Weak Mutation 205: com.sleepycat.je.log.entry.LNLogEntry.getAbortKnownDeleted()Z:275 - InsertUnaryOp Negation
   * 3 Weak Mutation 205: com.sleepycat.je.log.entry.LNLogEntry.getAbortKnownDeleted()Z:275 - InsertUnaryOp Negation
   * 4 Weak Mutation 206: com.sleepycat.je.log.entry.LNLogEntry.getAbortKnownDeleted()Z:275 - DeleteField: abortKnownDeletedZ
   * 5 com.sleepycat.je.log.entry.LNLogEntry.getAbortKnownDeleted()Z: root-Branch
   */
  @Test
  public void test19()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN_DELTA;
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[19];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, lN0, databaseId0, byteArray0, (-359L), true, (Txn) null);
      boolean boolean0 = lNLogEntry0.getAbortKnownDeleted();
      assertEquals(503161L, lN0.getLastId());
      assertEquals(true, boolean0);
  }

  //Test case number: 20
  /*
   * 12 covered goals:
   * 1 Weak Mutation 207: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - InsertUnaryOp Negation
   * 2 Weak Mutation 208: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - DeleteField: isTransactionalZ
   * 3 Weak Mutation 209: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 210: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:281 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 5 Weak Mutation 211: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:281 - DeleteStatement: getId()J
   * 6 com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;: I4 Branch 15 IFEQ L280 - false
   * 7 Weak Mutation 14: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 207: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - InsertUnaryOp Negation
   * 9 Weak Mutation 208: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - DeleteField: isTransactionalZ
   * 10 Weak Mutation 209: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 210: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:281 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 12 Weak Mutation 211: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:281 - DeleteStatement: getId()J
   */
  @Test
  public void test20()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseId databaseId0 = new DatabaseId(2);
      byte[] byteArray0 = new byte[1];
      Txn txn0 = new Txn();
      LNLogEntry lNLogEntry0 = new LNLogEntry((LogEntryType) null, (LN) fileSummaryLN0, databaseId0, byteArray0, (-598L), true, txn0);
      lNLogEntry0.getTxnId();
      assertEquals(503203L, fileSummaryLN0.getLastId());
      assertEquals(true, lNLogEntry0.getAbortKnownDeleted());
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 Weak Mutation 212: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - InsertUnaryOp Negation
   * 2 Weak Mutation 213: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - DeleteField: isTransactionalZ
   * 3 Weak Mutation 214: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - ReplaceComparisonOperator == -> !=
   * 4 com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;: I4 Branch 16 IFEQ L291 - false
   * 5 Weak Mutation 212: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - InsertUnaryOp Negation
   * 6 Weak Mutation 213: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - DeleteField: isTransactionalZ
   * 7 Weak Mutation 214: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test21()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, true);
      lNLogEntry0.getUserTxn();
      assertEquals(true, lNLogEntry0.isTransactional());
      assertEquals((-1L), lNLogEntry0.getAbortLsn());
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V: I4 Branch 10 IFEQ L208 - true
   * 2 Weak Mutation 126: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - InsertUnaryOp Negation
   * 3 Weak Mutation 128: com.sleepycat.je.log.entry.LNLogEntry.postLogWork(J)V:208 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test22()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      lNLogEntry0.postLogWork(1818L);
      assertEquals((-1L), lNLogEntry0.getAbortLsn());
      assertEquals(false, lNLogEntry0.isTransactional());
  }

  //Test case number: 23
  /*
   * 20 covered goals:
   * 1 com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I: I22 Branch 11 IFEQ L221 - true
   * 2 Weak Mutation 137: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 3 Weak Mutation 136: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 139: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 5 Weak Mutation 138: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 141: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteStatement: getByteArrayLogSize([B)I
   * 7 Weak Mutation 140: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:219 - DeleteField: key[B
   * 8 Weak Mutation 143: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> %
   * 9 Weak Mutation 142: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> -
   * 10 Weak Mutation 133: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 11 Weak Mutation 132: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: lnLcom/sleepycat/je/tree/LN;
   * 12 Weak Mutation 135: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteStatement: getLogSize()I
   * 13 Weak Mutation 134: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 14 Weak Mutation 144: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 145: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:218 - ReplaceArithmeticOperator + -> *
   * 16 Weak Mutation 146: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - InsertUnaryOp Negation
   * 17 Weak Mutation 148: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:221 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 168: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC -1 size
   * 19 Weak Mutation 167: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp IINC 1 size
   * 20 Weak Mutation 166: com.sleepycat.je.log.entry.LNLogEntry.getLogSize()I:227 - InsertUnaryOp Negation of size
   */
  @Test
  public void test23()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_BIN_DELTA;
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[19];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, lN0, databaseId0, byteArray0, (-359L), true, (Txn) null);
      int int0 = lNLogEntry0.getLogSize();
      assertEquals(503254L, lN0.getLastId());
      assertEquals(36, int0);
  }

  //Test case number: 24
  /*
   * 9 covered goals:
   * 1 com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;: I4 Branch 15 IFEQ L280 - true
   * 2 Weak Mutation 0: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> 0
   * 3 Weak Mutation 1: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 2: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:32 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 3: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp Negation of isTransactional
   * 6 Weak Mutation 4: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp IINC 1 isTransactional
   * 7 Weak Mutation 5: com.sleepycat.je.log.entry.LNLogEntry.<init>(Ljava/lang/Class;Z)V:48 - InsertUnaryOp IINC -1 isTransactional
   * 8 Weak Mutation 207: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - InsertUnaryOp Negation
   * 9 Weak Mutation 209: com.sleepycat.je.log.entry.LNLogEntry.getTxnId()Ljava/lang/Long;:280 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test24()  throws Throwable  {
      Class<?> class0 = LNLogEntry.class;
      LNLogEntry lNLogEntry0 = new LNLogEntry((Class) class0, false);
      lNLogEntry0.getTxnId();
      assertEquals(false, lNLogEntry0.isTransactional());
      assertEquals((-1L), lNLogEntry0.getAbortLsn());
  }

  //Test case number: 25
  /*
   * 14 covered goals:
   * 1 com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;: I4 Branch 16 IFEQ L291 - true
   * 2 Weak Mutation 6: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> 0
   * 3 Weak Mutation 7: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 8: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:32 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 9: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:58 - InsertUnaryOp Negation of abortLsn
   * 6 Weak Mutation 10: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp Negation of abortKnownDeleted
   * 7 Weak Mutation 11: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp IINC 1 abortKnownDeleted
   * 8 Weak Mutation 12: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:59 - InsertUnaryOp IINC -1 abortKnownDeleted
   * 9 Weak Mutation 13: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 15: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:62 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 17: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:65 - DeleteStatement: getNodeId()J
   * 12 Weak Mutation 16: com.sleepycat.je.log.entry.LNLogEntry.<init>(Lcom/sleepycat/je/log/LogEntryType;Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[BJZLcom/sleepycat/je/txn/Txn;)V:64 - DeleteStatement: getClass()Ljava/lang/Class;
   * 13 Weak Mutation 212: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - InsertUnaryOp Negation
   * 14 Weak Mutation 214: com.sleepycat.je.log.entry.LNLogEntry.getUserTxn()Lcom/sleepycat/je/txn/Txn;:291 - ReplaceComparisonOperator == -> !=
   */
  @Test
  public void test25()  throws Throwable  {
      LogEntryType logEntryType0 = LogEntryType.LOG_DEL_DUPLN_TRANSACTIONAL;
      MapLN mapLN0 = new MapLN();
      NameLN nameLN0 = new NameLN();
      DatabaseId databaseId0 = nameLN0.getId();
      byte[] byteArray0 = new byte[8];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN0, databaseId0, byteArray0, (long) (byte) (-55), true, (Txn) null);
      lNLogEntry0.getUserTxn();
      assertEquals(503354L, nameLN0.getNextNodeId());
      assertEquals(503355L, mapLN0.getNextNodeId());
  }
}
