/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.log.entry;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.DbConfigManager;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.entry.INLogEntry;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import java.nio.ByteBuffer;
import java.util.Map;

@RunWith(EvoSuiteRunner.class)
public class TestINLogEntry_14 {


  //Test case number: 14
  /*
   * 8 covered goals:
   * 1 Weak Mutation 103: com.sleepycat.je.log.entry.INLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:173 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 2 com.sleepycat.je.log.entry.INLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.log.entry.INLogEntry.<init>(Lcom/sleepycat/je/tree/IN;)V:32 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 4 Weak Mutation 1: com.sleepycat.je.log.entry.INLogEntry.<init>(Lcom/sleepycat/je/tree/IN;)V:32 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 5 Weak Mutation 2: com.sleepycat.je.log.entry.INLogEntry.<init>(Lcom/sleepycat/je/tree/IN;)V:33 - DeleteStatement: getClass()Ljava/lang/Class;
   * 6 Weak Mutation 3: com.sleepycat.je.log.entry.INLogEntry.<init>(Lcom/sleepycat/je/tree/IN;)V:34 - DeleteStatement: getNodeId()J
   * 7 Weak Mutation 4: com.sleepycat.je.log.entry.INLogEntry.<init>(Lcom/sleepycat/je/tree/IN;)V:35 - DeleteStatement: getLastFullVersion()J
   * 8 Weak Mutation 103: com.sleepycat.je.log.entry.INLogEntry.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:173 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[4];
      DIN dIN0 = new DIN();
      ChildReference childReference0 = dIN0.getDupCountLNRef();
      DIN dIN1 = new DIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray0, childReference0, (int) (byte)0);
      INLogEntry iNLogEntry0 = new INLogEntry((IN) dIN1);
      iNLogEntry0.getDbId();
      assertEquals(67112180L, databaseImpl0.getEofNodeId());
      assertEquals(67112189L, dIN0.getLastId());
  }
}
