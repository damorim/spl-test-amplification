/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.log;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.entry.SingleItemLogEntry;
import com.sleepycat.je.tree.BIN;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestLogEntryType_17 {


  //Test case number: 17
  /*
   * 25 covered goals:
   * 1 Weak Mutation 119: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -127
   * 2 Weak Mutation 118: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -129
   * 3 Weak Mutation 117: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -1
   * 4 Weak Mutation 116: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> 1
   * 5 Weak Mutation 115: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> 0
   * 6 Weak Mutation 114: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp IINC -1
   * 7 Weak Mutation 113: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 112: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp Negation
   * 9 Weak Mutation 125: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 123: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceComparisonOperator == -> <=
   * 11 Weak Mutation 121: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceBitwiseOperator & -> ^
   * 12 Weak Mutation 120: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceBitwiseOperator & -> |
   * 13 com.sleepycat.je.log.LogEntryType.isProvisional(B)Z: I5 Branch 6 IFEQ L143 - false
   * 14 Weak Mutation 119: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -127
   * 15 Weak Mutation 118: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -129
   * 16 Weak Mutation 117: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> -1
   * 17 Weak Mutation 116: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> 1
   * 18 Weak Mutation 115: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - -128 -> 0
   * 19 Weak Mutation 114: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 113: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 112: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - InsertUnaryOp Negation
   * 22 Weak Mutation 125: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 123: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceComparisonOperator == -> <=
   * 24 Weak Mutation 121: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceBitwiseOperator & -> ^
   * 25 Weak Mutation 120: com.sleepycat.je.log.LogEntryType.isProvisional(B)Z:143 - ReplaceBitwiseOperator & -> |
   */
  @Test
  public void test17()  throws Throwable  {
      boolean boolean0 = LogEntryType.isProvisional((byte) (-37));
      assertEquals(true, boolean0);
  }
}
