/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.log;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogBuffer;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestLogBuffer_7 {


  //Test case number: 7
  /*
   * 24 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceComparisonOperator > -> !=
   * 2 Weak Mutation 55: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceComparisonOperator < -> -2
   * 3 com.sleepycat.je.log.LogBuffer.containsLsn(J)Z: I20 Branch 4 IFLT L119 - true
   * 4 Weak Mutation 34: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteField: firstLsnJ
   * 5 Weak Mutation 35: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 32: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:118 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 33: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - InsertUnaryOp Negation
   * 8 Weak Mutation 38: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteStatement: longSub(JJ)I
   * 9 Weak Mutation 36: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 37: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceConstant - -1 -> -2
   * 11 Weak Mutation 42: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - InsertUnaryOp Negation
   * 12 Weak Mutation 43: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteField: firstLsnJ
   * 13 Weak Mutation 40: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceComparisonOperator == -> <=
   * 14 Weak Mutation 44: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - InsertUnaryOp Negation
   * 15 Weak Mutation 45: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteStatement: compareTo(JJ)I
   * 16 Weak Mutation 51: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - InsertUnaryOp Negation
   * 17 Weak Mutation 50: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteField: lastLsnJ
   * 18 Weak Mutation 49: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - InsertUnaryOp Negation
   * 19 Weak Mutation 52: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - DeleteStatement: compareTo(JJ)I
   * 20 Weak Mutation 58: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:122 - ReplaceComparisonOperator == -> !=
   * 21 Weak Mutation 57: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:122 - InsertUnaryOp Negation
   * 22 Weak Mutation 60: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:129 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 46: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceComparisonOperator > -> !=
   * 24 Weak Mutation 55: com.sleepycat.je.log.LogBuffer.containsLsn(J)Z:119 - ReplaceComparisonOperator < -> -2
   */
  @Test
  public void test7()  throws Throwable  {
      LogBuffer logBuffer0 = new LogBuffer((ByteBuffer) null, (-1441L));
      boolean boolean0 = logBuffer0.containsLsn((-222L));
      assertEquals(false, boolean0);
      assertEquals((-1441L), logBuffer0.getFirstLsn());
  }
}
