/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoSuiteRunner.class)
public class TestDatabaseEntry {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 Weak Mutation 64: com.sleepycat.je.DatabaseEntry.setData([B)V:62 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 65: com.sleepycat.je.DatabaseEntry.setData([B)V:63 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 66: com.sleepycat.je.DatabaseEntry.setData([B)V:63 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.DatabaseEntry.setData([B)V: I14 Branch 2 IFNONNULL L63 - false
   * 5 Weak Mutation 39: com.sleepycat.je.DatabaseEntry.<init>()V:9 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 42: com.sleepycat.je.DatabaseEntry.<init>()V:12 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 43: com.sleepycat.je.DatabaseEntry.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 40: com.sleepycat.je.DatabaseEntry.<init>()V:10 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 41: com.sleepycat.je.DatabaseEntry.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 64: com.sleepycat.je.DatabaseEntry.setData([B)V:62 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 65: com.sleepycat.je.DatabaseEntry.setData([B)V:63 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 66: com.sleepycat.je.DatabaseEntry.setData([B)V:63 - ReplaceConstant - 0 -> 1
   * 13 com.sleepycat.je.DatabaseEntry.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setData((byte[]) null);
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=0>", databaseEntry0.toString());
      assertEquals(0, databaseEntry0.getOffset());
  }

  //Test case number: 1
  /*
   * 102 covered goals:
   * 1 Weak Mutation 6: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteField: dlenI
   * 2 Weak Mutation 13: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteField: doffI
   * 3 Weak Mutation 20: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteField: doffI
   * 4 Weak Mutation 76: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp Negation of doff
   * 5 Weak Mutation 77: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC 1 doff
   * 6 Weak Mutation 78: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC -1 doff
   * 7 Weak Mutation 79: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - DeleteStatement: setPartialOffset(I)V
   * 8 Weak Mutation 84: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - DeleteStatement: setPartialLength(I)V
   * 9 Weak Mutation 81: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp Negation of dlen
   * 10 Weak Mutation 83: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC -1 dlen
   * 11 Weak Mutation 82: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC 1 dlen
   * 12 Weak Mutation 85: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp Negation of partial
   * 13 Weak Mutation 87: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC -1 partial
   * 14 Weak Mutation 86: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC 1 partial
   * 15 Weak Mutation 88: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - DeleteStatement: setPartial(Z)V
   * 16 Weak Mutation 93: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp Negation of dlen
   * 17 Weak Mutation 95: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC -1 dlen
   * 18 Weak Mutation 94: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC 1 dlen
   * 19 Weak Mutation 102: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC -1 doff
   * 20 Weak Mutation 100: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp Negation of doff
   * 21 Weak Mutation 101: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC 1 doff
   * 22 Weak Mutation 106: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC 1 partial
   * 23 Weak Mutation 107: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC -1 partial
   * 24 Weak Mutation 105: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp Negation of partial
   * 25 com.sleepycat.je.DatabaseEntry.setPartial(Z)V: root-Branch
   * 26 com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V: root-Branch
   * 27 com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V: root-Branch
   * 28 com.sleepycat.je.DatabaseEntry.setPartialLength(I)V: root-Branch
   * 29 Weak Mutation 0: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:15 - ReplaceConstant - <DatabaseEntry -> 
   * 30 Weak Mutation 1: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - ReplaceConstant -  dlen= -> 
   * 31 Weak Mutation 2: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 32 Weak Mutation 3: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp Negation
   * 33 Weak Mutation 4: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp +1
   * 34 Weak Mutation 5: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp -1
   * 35 Weak Mutation 6: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteField: dlenI
   * 36 Weak Mutation 7: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 37 Weak Mutation 8: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - ReplaceConstant -  doff= -> 
   * 38 Weak Mutation 9: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 39 Weak Mutation 10: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp Negation
   * 40 Weak Mutation 11: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp +1
   * 41 Weak Mutation 12: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp -1
   * 42 Weak Mutation 13: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteField: doffI
   * 43 Weak Mutation 14: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 15: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - ReplaceConstant -  doff= -> 
   * 45 Weak Mutation 17: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp Negation
   * 46 Weak Mutation 16: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 47 Weak Mutation 19: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp -1
   * 48 Weak Mutation 18: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp +1
   * 49 Weak Mutation 21: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 50 Weak Mutation 20: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteField: doffI
   * 51 Weak Mutation 23: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 52 Weak Mutation 22: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - ReplaceConstant -  offset= -> 
   * 53 Weak Mutation 25: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp +1
   * 54 Weak Mutation 24: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp Negation
   * 55 Weak Mutation 27: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteField: offsetI
   * 56 Weak Mutation 26: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp -1
   * 57 Weak Mutation 29: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - ReplaceConstant -  size= -> 
   * 58 Weak Mutation 28: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 59 Weak Mutation 31: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp Negation
   * 60 Weak Mutation 30: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 61 Weak Mutation 35: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 62 Weak Mutation 32: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp +1
   * 63 Weak Mutation 33: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp -1
   * 64 Weak Mutation 38: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:22 - DeleteStatement: toString()Ljava/lang/String;
   * 65 Weak Mutation 36: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:21 - ReplaceConstant - > -> 
   * 66 Weak Mutation 37: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:21 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 67 Weak Mutation 51: com.sleepycat.je.DatabaseEntry.<init>([BII)V:10 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 50: com.sleepycat.je.DatabaseEntry.<init>([BII)V:9 - ReplaceConstant - 0 -> 1
   * 69 Weak Mutation 55: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - ReplaceVariable offset -> size
   * 70 Weak Mutation 54: com.sleepycat.je.DatabaseEntry.<init>([BII)V:13 - ReplaceConstant - 0 -> 1
   * 71 Weak Mutation 53: com.sleepycat.je.DatabaseEntry.<init>([BII)V:12 - ReplaceConstant - 0 -> 1
   * 72 Weak Mutation 52: com.sleepycat.je.DatabaseEntry.<init>([BII)V:11 - ReplaceConstant - 0 -> 1
   * 73 Weak Mutation 59: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - ReplaceVariable size -> offset
   * 74 Weak Mutation 58: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC -1 offset
   * 75 Weak Mutation 57: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC 1 offset
   * 76 Weak Mutation 56: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp Negation of offset
   * 77 Weak Mutation 62: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC -1 size
   * 78 Weak Mutation 61: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC 1 size
   * 79 Weak Mutation 60: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp Negation of size
   * 80 Weak Mutation 76: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp Negation of doff
   * 81 Weak Mutation 77: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC 1 doff
   * 82 Weak Mutation 78: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC -1 doff
   * 83 Weak Mutation 79: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - DeleteStatement: setPartialOffset(I)V
   * 84 Weak Mutation 85: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp Negation of partial
   * 85 Weak Mutation 84: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - DeleteStatement: setPartialLength(I)V
   * 86 Weak Mutation 87: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC -1 partial
   * 87 Weak Mutation 86: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC 1 partial
   * 88 Weak Mutation 81: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp Negation of dlen
   * 89 Weak Mutation 83: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC -1 dlen
   * 90 Weak Mutation 82: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC 1 dlen
   * 91 Weak Mutation 93: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp Negation of dlen
   * 92 Weak Mutation 95: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC -1 dlen
   * 93 Weak Mutation 94: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC 1 dlen
   * 94 Weak Mutation 88: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - DeleteStatement: setPartial(Z)V
   * 95 Weak Mutation 102: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC -1 doff
   * 96 Weak Mutation 100: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp Negation of doff
   * 97 Weak Mutation 101: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC 1 doff
   * 98 Weak Mutation 106: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC 1 partial
   * 99 Weak Mutation 107: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC -1 partial
   * 100 Weak Mutation 105: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp Negation of partial
   * 101 com.sleepycat.je.DatabaseEntry.<init>([BII)V: root-Branch
   * 102 com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)70, (int) (byte)0);
      databaseEntry0.setPartial((int) (byte)70, (int) (byte)70, false);
      String string0 = databaseEntry0.toString();
      assertEquals(70, databaseEntry0.getPartialOffset());
      assertEquals("<DatabaseEntry dlen=70 doff=70 doff=70 offset=70 size=0>", string0);
  }

  //Test case number: 2
  /*
   * 44 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteField: sizeI
   * 2 Weak Mutation 119: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 121: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 120: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC 1 size
   * 5 com.sleepycat.je.DatabaseEntry.setSize(I)V: root-Branch
   * 6 Weak Mutation 0: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:15 - ReplaceConstant - <DatabaseEntry -> 
   * 7 Weak Mutation 1: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - ReplaceConstant -  dlen= -> 
   * 8 Weak Mutation 2: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 3: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp Negation
   * 10 Weak Mutation 4: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp +1
   * 11 Weak Mutation 5: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - InsertUnaryOp -1
   * 12 Weak Mutation 7: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:16 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 8: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - ReplaceConstant -  doff= -> 
   * 14 Weak Mutation 9: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 10: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp Negation
   * 16 Weak Mutation 11: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp +1
   * 17 Weak Mutation 12: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - InsertUnaryOp -1
   * 18 Weak Mutation 14: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:17 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 15: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - ReplaceConstant -  doff= -> 
   * 20 Weak Mutation 17: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp Negation
   * 21 Weak Mutation 16: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 22 Weak Mutation 19: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp -1
   * 23 Weak Mutation 18: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - InsertUnaryOp +1
   * 24 Weak Mutation 21: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:18 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 25 Weak Mutation 23: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 22: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - ReplaceConstant -  offset= -> 
   * 27 Weak Mutation 25: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp +1
   * 28 Weak Mutation 24: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp Negation
   * 29 Weak Mutation 27: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteField: offsetI
   * 30 Weak Mutation 26: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - InsertUnaryOp -1
   * 31 Weak Mutation 29: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - ReplaceConstant -  size= -> 
   * 32 Weak Mutation 28: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:19 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 33 Weak Mutation 31: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp Negation
   * 34 Weak Mutation 30: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 35 Weak Mutation 35: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 36 Weak Mutation 32: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp +1
   * 37 Weak Mutation 33: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - InsertUnaryOp -1
   * 38 Weak Mutation 38: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:22 - DeleteStatement: toString()Ljava/lang/String;
   * 39 Weak Mutation 36: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:21 - ReplaceConstant - > -> 
   * 40 Weak Mutation 37: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:21 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 41 Weak Mutation 34: com.sleepycat.je.DatabaseEntry.toString()Ljava/lang/String;:20 - DeleteField: sizeI
   * 42 Weak Mutation 119: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp Negation of size
   * 43 Weak Mutation 121: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC -1 size
   * 44 Weak Mutation 120: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC 1 size
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)70, (int) (byte)0);
      assertEquals(0, databaseEntry0.getSize());
      
      databaseEntry0.setSize((int) (byte)70);
      String string0 = databaseEntry0.toString();
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=70 size=70>", string0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.DatabaseEntry.getData()[B:54 - DeleteField: data[B
   * 2 com.sleepycat.je.DatabaseEntry.getData()[B: root-Branch
   * 3 Weak Mutation 63: com.sleepycat.je.DatabaseEntry.getData()[B:54 - DeleteField: data[B
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)70, (int) (byte)0);
      byte[] byteArray1 = databaseEntry0.getData();
      assertEquals(false, databaseEntry0.getPartial());
      assertNotNull(byteArray1);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=70 size=0>", databaseEntry0.toString());
      assertEquals(70, databaseEntry0.getOffset());
  }

  //Test case number: 4
  /*
   * 24 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp Negation of offset
   * 2 Weak Mutation 69: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 70: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp IINC -1 offset
   * 4 Weak Mutation 67: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - ReplaceVariable offset -> size
   * 5 Weak Mutation 71: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - ReplaceVariable size -> offset
   * 6 Weak Mutation 72: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp Negation of size
   * 7 Weak Mutation 73: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp IINC 1 size
   * 8 Weak Mutation 74: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp IINC -1 size
   * 9 com.sleepycat.je.DatabaseEntry.setData([BII)V: root-Branch
   * 10 com.sleepycat.je.DatabaseEntry.<init>([B)V: I37 Branch 1 IFNULL L36 - false
   * 11 Weak Mutation 46: com.sleepycat.je.DatabaseEntry.<init>([B)V:11 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 47: com.sleepycat.je.DatabaseEntry.<init>([B)V:12 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 44: com.sleepycat.je.DatabaseEntry.<init>([B)V:9 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 45: com.sleepycat.je.DatabaseEntry.<init>([B)V:10 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 49: com.sleepycat.je.DatabaseEntry.<init>([B)V:36 - ReplaceComparisonOperator = null -> != null
   * 16 Weak Mutation 48: com.sleepycat.je.DatabaseEntry.<init>([B)V:13 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 68: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp Negation of offset
   * 18 Weak Mutation 69: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp IINC 1 offset
   * 19 Weak Mutation 70: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - InsertUnaryOp IINC -1 offset
   * 20 Weak Mutation 71: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - ReplaceVariable size -> offset
   * 21 Weak Mutation 67: com.sleepycat.je.DatabaseEntry.setData([BII)V:71 - ReplaceVariable offset -> size
   * 22 Weak Mutation 72: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp Negation of size
   * 23 Weak Mutation 73: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp IINC 1 size
   * 24 Weak Mutation 74: com.sleepycat.je.DatabaseEntry.setData([BII)V:72 - InsertUnaryOp IINC -1 size
   */
  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      databaseEntry0.setData(byteArray0, (-8), 6);
      assertEquals(6, databaseEntry0.getSize());
      assertEquals(-8, databaseEntry0.getOffset());
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 92: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - DeleteField: dlenI
   * 2 Weak Mutation 89: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp Negation
   * 3 Weak Mutation 91: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp -1
   * 4 Weak Mutation 90: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp +1
   * 5 com.sleepycat.je.DatabaseEntry.getPartialLength()I: root-Branch
   * 6 Weak Mutation 92: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - DeleteField: dlenI
   * 7 Weak Mutation 89: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp Negation
   * 8 Weak Mutation 91: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp -1
   * 9 Weak Mutation 90: com.sleepycat.je.DatabaseEntry.getPartialLength()I:88 - InsertUnaryOp +1
   */
  @Test
  public void test5()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartial((-946), (-946), true);
      int int0 = databaseEntry0.getPartialLength();
      assertEquals(-946, databaseEntry0.getPartialLength());
      assertEquals((-946), int0);
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 Weak Mutation 99: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - DeleteField: doffI
   * 2 Weak Mutation 98: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp -1
   * 3 Weak Mutation 96: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp Negation
   * 4 Weak Mutation 97: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp +1
   * 5 Weak Mutation 98: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp -1
   * 6 Weak Mutation 99: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - DeleteField: doffI
   * 7 Weak Mutation 96: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp Negation
   * 8 Weak Mutation 97: com.sleepycat.je.DatabaseEntry.getPartialOffset()I:102 - InsertUnaryOp +1
   * 9 com.sleepycat.je.DatabaseEntry.getPartialOffset()I: root-Branch
   */
  @Test
  public void test6()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartialOffset((-1323));
      int int0 = databaseEntry0.getPartialOffset();
      assertEquals(-1323, databaseEntry0.getPartialOffset());
      assertEquals((-1323), int0);
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 104: com.sleepycat.je.DatabaseEntry.getPartial()Z:116 - DeleteField: partialZ
   * 2 Weak Mutation 103: com.sleepycat.je.DatabaseEntry.getPartial()Z:116 - InsertUnaryOp Negation
   * 3 Weak Mutation 103: com.sleepycat.je.DatabaseEntry.getPartial()Z:116 - InsertUnaryOp Negation
   * 4 Weak Mutation 104: com.sleepycat.je.DatabaseEntry.getPartial()Z:116 - DeleteField: partialZ
   * 5 com.sleepycat.je.DatabaseEntry.getPartial()Z: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      assertEquals(false, databaseEntry0.getPartial());
      
      databaseEntry0.setPartial(true);
      boolean boolean0 = databaseEntry0.getPartial();
      assertEquals(true, databaseEntry0.getPartial());
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 9 covered goals:
   * 1 Weak Mutation 110: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp -1
   * 2 Weak Mutation 111: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - DeleteField: offsetI
   * 3 Weak Mutation 108: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp Negation
   * 4 Weak Mutation 109: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp +1
   * 5 com.sleepycat.je.DatabaseEntry.getOffset()I: root-Branch
   * 6 Weak Mutation 110: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp -1
   * 7 Weak Mutation 111: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - DeleteField: offsetI
   * 8 Weak Mutation 108: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp Negation
   * 9 Weak Mutation 109: com.sleepycat.je.DatabaseEntry.getOffset()I:130 - InsertUnaryOp +1
   */
  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)1, (int) (byte)1);
      int int0 = databaseEntry0.getOffset();
      assertEquals(1, int0);
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=1 size=1>", databaseEntry0.toString());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 114: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp IINC -1 offset
   * 2 Weak Mutation 113: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp IINC 1 offset
   * 3 Weak Mutation 112: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp Negation of offset
   * 4 com.sleepycat.je.DatabaseEntry.setOffset(I)V: root-Branch
   * 5 Weak Mutation 114: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp IINC -1 offset
   * 6 Weak Mutation 113: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp IINC 1 offset
   * 7 Weak Mutation 112: com.sleepycat.je.DatabaseEntry.setOffset(I)V:137 - InsertUnaryOp Negation of offset
   */
  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      databaseEntry0.setOffset((int) (byte) (-8));
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=-8 size=8>", databaseEntry0.toString());
      assertEquals(-8, databaseEntry0.getOffset());
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Weak Mutation 118: com.sleepycat.je.DatabaseEntry.getSize()I:144 - DeleteField: sizeI
   * 2 Weak Mutation 117: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp -1
   * 3 Weak Mutation 116: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp +1
   * 4 Weak Mutation 115: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp Negation
   * 5 com.sleepycat.je.DatabaseEntry.getSize()I: root-Branch
   * 6 Weak Mutation 118: com.sleepycat.je.DatabaseEntry.getSize()I:144 - DeleteField: sizeI
   * 7 Weak Mutation 117: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp -1
   * 8 Weak Mutation 116: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp +1
   * 9 Weak Mutation 115: com.sleepycat.je.DatabaseEntry.getSize()I:144 - InsertUnaryOp Negation
   */
  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      int int0 = databaseEntry0.getSize();
      assertEquals(8, int0);
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=8>", databaseEntry0.toString());
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 123: com.sleepycat.je.DatabaseEntry.dumpData()Ljava/lang/String;:157 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 2 Weak Mutation 122: com.sleepycat.je.DatabaseEntry.dumpData()Ljava/lang/String;:157 - DeleteField: data[B
   * 3 com.sleepycat.je.DatabaseEntry.dumpData()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 123: com.sleepycat.je.DatabaseEntry.dumpData()Ljava/lang/String;:157 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 5 Weak Mutation 122: com.sleepycat.je.DatabaseEntry.dumpData()Ljava/lang/String;:157 - DeleteField: data[B
   */
  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      String string0 = databaseEntry0.dumpData();
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=8>", databaseEntry0.toString());
      assertNotNull(string0);
      assertEquals("0 0 0 0 0 0 0 0 ", string0);
      assertEquals(false, databaseEntry0.getPartial());
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * 1 Weak Mutation 125: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:173 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L172 - false
   * 3 Weak Mutation 125: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:173 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 124: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:172 - ReplaceComparisonOperator != -> ==
   */
  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)0, (int) (byte)0);
      boolean boolean0 = databaseEntry0.equals((Object) "\".2j3N;@n'`oqmWDT");
      assertEquals(false, boolean0);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=0>", databaseEntry0.toString());
      assertEquals(false, databaseEntry0.getPartial());
  }

  //Test case number: 13
  /*
   * 60 covered goals:
   * 1 Weak Mutation 127: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 2 Weak Mutation 137: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 3 Weak Mutation 136: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 4 Weak Mutation 139: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 5 Weak Mutation 138: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 141: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 7 Weak Mutation 140: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 8 Weak Mutation 142: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 9 Weak Mutation 133: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 10 Weak Mutation 134: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 11 Weak Mutation 152: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 12 Weak Mutation 153: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 13 Weak Mutation 154: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: doffI
   * 14 Weak Mutation 156: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 15 Weak Mutation 157: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 16 Weak Mutation 158: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 17 Weak Mutation 159: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: doffI
   * 18 Weak Mutation 144: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 19 Weak Mutation 145: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 20 Weak Mutation 146: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 21 Weak Mutation 147: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 22 Weak Mutation 150: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> -1
   * 23 Weak Mutation 151: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 24 Weak Mutation 161: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator == -> -2
   * 25 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I18 Branch 4 IFNE L176 - true
   * 26 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I28 Branch 6 IF_ICMPNE L177 - false
   * 27 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I33 Branch 7 IF_ICMPNE L177 - false
   * 28 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I38 Branch 8 IF_ICMPEQ L177 - true
   * 29 Weak Mutation 127: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 30 Weak Mutation 126: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 31 Weak Mutation 137: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 32 Weak Mutation 136: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 33 Weak Mutation 139: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 34 Weak Mutation 138: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 141: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 36 Weak Mutation 140: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 37 Weak Mutation 142: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 38 Weak Mutation 128: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 133: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 40 Weak Mutation 134: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 41 Weak Mutation 152: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 42 Weak Mutation 153: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 43 Weak Mutation 154: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: doffI
   * 44 Weak Mutation 156: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 45 Weak Mutation 157: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 46 Weak Mutation 158: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 47 Weak Mutation 159: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: doffI
   * 48 Weak Mutation 144: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 49 Weak Mutation 145: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 50 Weak Mutation 146: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 51 Weak Mutation 147: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 52 Weak Mutation 150: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> -1
   * 53 Weak Mutation 151: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 54 Weak Mutation 169: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:182 - ReplaceConstant - 1 -> 0
   * 55 Weak Mutation 168: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceComparisonOperator != null -> = null
   * 56 Weak Mutation 161: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator == -> -2
   * 57 Weak Mutation 165: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceComparisonOperator != null -> = null
   * 58 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L172 - true
   * 59 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I47 Branch 9 IFNONNULL L181 - false
   * 60 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I50 Branch 10 IFNONNULL L181 - false
   */
  @Test
  public void test13()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartial((-946), (-946), true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry0);
      assertEquals(-946, databaseEntry0.getPartialLength());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 12 covered goals:
   * 1 Weak Mutation 131: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 2 Weak Mutation 135: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 3 Weak Mutation 163: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:178 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I21 Branch 5 IFEQ L176 - false
   * 5 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I28 Branch 6 IF_ICMPNE L177 - true
   * 6 Weak Mutation 129: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceVariable e -> this
   * 7 Weak Mutation 131: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 8 Weak Mutation 130: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 9 Weak Mutation 132: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 135: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 11 Weak Mutation 163: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:178 - ReplaceConstant - 0 -> 1
   * 12 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I18 Branch 4 IFNE L176 - false
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      DatabaseEntry databaseEntry1 = new DatabaseEntry();
      databaseEntry1.setPartial(true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(false, boolean0);
      assertEquals(true, databaseEntry1.getPartial());
  }

  //Test case number: 15
  /*
   * 26 covered goals:
   * 1 Weak Mutation 143: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 2 Weak Mutation 148: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> >
   * 3 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I33 Branch 7 IF_ICMPNE L177 - true
   * 4 Weak Mutation 76: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp Negation of doff
   * 5 Weak Mutation 77: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC 1 doff
   * 6 Weak Mutation 78: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - InsertUnaryOp IINC -1 doff
   * 7 Weak Mutation 79: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - DeleteStatement: setPartialOffset(I)V
   * 8 Weak Mutation 75: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - ReplaceVariable doff -> dlen
   * 9 Weak Mutation 85: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp Negation of partial
   * 10 Weak Mutation 84: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - DeleteStatement: setPartialLength(I)V
   * 11 Weak Mutation 87: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC -1 partial
   * 12 Weak Mutation 86: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - InsertUnaryOp IINC 1 partial
   * 13 Weak Mutation 81: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp Negation of dlen
   * 14 Weak Mutation 80: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - ReplaceVariable dlen -> doff
   * 15 Weak Mutation 83: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC -1 dlen
   * 16 Weak Mutation 82: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - InsertUnaryOp IINC 1 dlen
   * 17 Weak Mutation 93: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp Negation of dlen
   * 18 Weak Mutation 95: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC -1 dlen
   * 19 Weak Mutation 94: com.sleepycat.je.DatabaseEntry.setPartialLength(I)V:95 - InsertUnaryOp IINC 1 dlen
   * 20 Weak Mutation 88: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:81 - DeleteStatement: setPartial(Z)V
   * 21 Weak Mutation 142: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 22 Weak Mutation 147: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: dlenI
   * 23 Weak Mutation 75: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:79 - ReplaceVariable doff -> dlen
   * 24 Weak Mutation 80: com.sleepycat.je.DatabaseEntry.setPartial(IIZ)V:80 - ReplaceVariable dlen -> doff
   * 25 Weak Mutation 143: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 26 Weak Mutation 148: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> >
   */
  @Test
  public void test15()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartial((-946), (-946), true);
      byte[] byteArray0 = new byte[8];
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0, (int) (byte)0, (-929));
      databaseEntry1.setPartial((int) (byte)0, (int) (byte) (-21), true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(-946, databaseEntry0.getPartialOffset());
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 6 covered goals:
   * 1 Weak Mutation 155: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 2 Weak Mutation 169: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:182 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 161: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator == -> -2
   * 4 Weak Mutation 155: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 5 Weak Mutation 166: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceVariable e -> this
   * 6 com.sleepycat.je.DatabaseEntry.<init>([B)V: I37 Branch 1 IFNULL L36 - true
   */
  @Test
  public void test16()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartial(true);
      DatabaseEntry databaseEntry1 = new DatabaseEntry((byte[]) null);
      databaseEntry1.setPartial(true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(true, databaseEntry0.getPartial());
      assertEquals(true, databaseEntry1.getPartial());
      assertEquals(true, boolean0);
  }

  //Test case number: 17
  /*
   * 33 covered goals:
   * 1 Weak Mutation 162: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator == -> <=
   * 2 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I38 Branch 8 IF_ICMPEQ L177 - false
   * 3 Weak Mutation 102: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC -1 doff
   * 4 Weak Mutation 100: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp Negation of doff
   * 5 Weak Mutation 101: com.sleepycat.je.DatabaseEntry.setPartialOffset(I)V:109 - InsertUnaryOp IINC 1 doff
   * 6 Weak Mutation 106: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC 1 partial
   * 7 Weak Mutation 107: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp IINC -1 partial
   * 8 Weak Mutation 105: com.sleepycat.je.DatabaseEntry.setPartial(Z)V:123 - InsertUnaryOp Negation of partial
   * 9 Weak Mutation 127: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 10 Weak Mutation 137: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 11 Weak Mutation 136: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 12 Weak Mutation 139: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 13 Weak Mutation 138: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 141: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 15 Weak Mutation 140: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 16 Weak Mutation 143: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 17 Weak Mutation 133: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 18 Weak Mutation 135: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 19 Weak Mutation 134: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 20 Weak Mutation 152: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 21 Weak Mutation 153: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 22 Weak Mutation 154: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: doffI
   * 23 Weak Mutation 155: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceVariable e -> this
   * 24 Weak Mutation 156: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 25 Weak Mutation 157: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 26 Weak Mutation 158: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 27 Weak Mutation 144: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 28 Weak Mutation 145: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp +1
   * 29 Weak Mutation 146: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp -1
   * 30 Weak Mutation 150: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> -1
   * 31 Weak Mutation 151: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 32 Weak Mutation 163: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:178 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 162: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator == -> <=
   */
  @Test
  public void test17()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      databaseEntry0.setPartialOffset((-1323));
      databaseEntry0.setPartial(true);
      DatabaseEntry databaseEntry1 = new DatabaseEntry((byte[]) null);
      databaseEntry1.setPartial(true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(-1323, databaseEntry0.getPartialOffset());
      assertEquals(false, boolean0);
  }

  //Test case number: 18
  /*
   * 11 covered goals:
   * 1 Weak Mutation 167: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - DeleteField: data[B
   * 2 Weak Mutation 171: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 175: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:185 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I50 Branch 10 IFNONNULL L181 - true
   * 5 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I59 Branch 11 IFNULL L184 - true
   * 6 Weak Mutation 168: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 166: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceVariable e -> this
   * 8 Weak Mutation 171: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 175: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:185 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 167: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - DeleteField: data[B
   * 11 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I21 Branch 5 IFEQ L176 - true
   */
  @Test
  public void test18()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      byte[] byteArray0 = new byte[12];
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0, (int) (byte)0, (int) (byte) (-53));
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(false, databaseEntry1.getPartial());
      assertFalse(databaseEntry1.equals(databaseEntry0));
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals(false, boolean0);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=0>", databaseEntry0.toString());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=-53>", databaseEntry1.toString());
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * 1 Weak Mutation 172: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceVariable e -> this
   * 2 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I62 Branch 12 IFNONNULL L184 - false
   * 3 Weak Mutation 175: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:185 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 170: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - DeleteField: data[B
   * 5 Weak Mutation 174: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 172: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceVariable e -> this
   * 7 Weak Mutation 164: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - DeleteField: data[B
   * 8 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I47 Branch 9 IFNONNULL L181 - true
   * 9 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I59 Branch 11 IFNULL L184 - false
   */
  @Test
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte) (-1), (int) (byte) (-1));
      DatabaseEntry databaseEntry1 = new DatabaseEntry();
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals(false, databaseEntry1.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=0>", databaseEntry1.toString());
      assertEquals(false, boolean0);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=-1 size=-1>", databaseEntry0.toString());
  }

  //Test case number: 20
  /*
   * 17 covered goals:
   * 1 Weak Mutation 187: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> <=
   * 2 Weak Mutation 180: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceVariable e -> this
   * 3 Weak Mutation 188: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:188 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I73 Branch 13 IF_ICMPEQ L187 - false
   * 5 Weak Mutation 173: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - DeleteField: data[B
   * 6 Weak Mutation 187: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> <=
   * 7 Weak Mutation 184: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - DeleteField: sizeI
   * 8 Weak Mutation 188: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:188 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 178: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp -1
   * 10 Weak Mutation 179: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - DeleteField: sizeI
   * 11 Weak Mutation 176: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp Negation
   * 12 Weak Mutation 177: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp +1
   * 13 Weak Mutation 182: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp +1
   * 14 Weak Mutation 183: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp -1
   * 15 Weak Mutation 180: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceVariable e -> this
   * 16 Weak Mutation 181: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp Negation
   * 17 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I62 Branch 12 IFNONNULL L184 - true
   */
  @Test
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[8];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray1);
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0, (int) (byte) (-8), (int) (byte) (-8));
      boolean boolean0 = databaseEntry1.equals((Object) databaseEntry0);
      assertEquals(false, boolean0);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=-8 size=-8>", databaseEntry1.toString());
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals(false, databaseEntry1.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=8>", databaseEntry0.toString());
  }

  //Test case number: 21
  /*
   * 6 covered goals:
   * 1 Weak Mutation 185: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> >=
   * 2 Weak Mutation 119: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp Negation of size
   * 3 Weak Mutation 121: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC -1 size
   * 4 Weak Mutation 120: com.sleepycat.je.DatabaseEntry.setSize(I)V:151 - InsertUnaryOp IINC 1 size
   * 5 Weak Mutation 188: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:188 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 185: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> >=
   */
  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)70, (int) (byte)0);
      assertEquals(0, databaseEntry0.getSize());
      
      databaseEntry0.setSize((int) (byte)70);
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(false, boolean0);
  }

  //Test case number: 22
  /*
   * 16 covered goals:
   * 1 Weak Mutation 190: com.sleepycat.je.DatabaseEntry.hashCode()I:201 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 192: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 229: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC -1 hash
   * 4 Weak Mutation 228: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC 1 hash
   * 5 Weak Mutation 227: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp Negation of hash
   * 6 com.sleepycat.je.DatabaseEntry.hashCode()I: I8 Branch 16 IFNULL L202 - true
   * 7 Weak Mutation 39: com.sleepycat.je.DatabaseEntry.<init>()V:9 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 42: com.sleepycat.je.DatabaseEntry.<init>()V:12 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 43: com.sleepycat.je.DatabaseEntry.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 40: com.sleepycat.je.DatabaseEntry.<init>()V:10 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 41: com.sleepycat.je.DatabaseEntry.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 190: com.sleepycat.je.DatabaseEntry.hashCode()I:201 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 192: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 229: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC -1 hash
   * 15 Weak Mutation 228: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC 1 hash
   * 16 Weak Mutation 227: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp Negation of hash
   */
  @Test
  public void test22()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      int int0 = databaseEntry0.hashCode();
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=0>", databaseEntry0.toString());
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals(0, int0);
  }

  //Test case number: 23
  /*
   * 59 covered goals:
   * 1 Weak Mutation 191: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - DeleteField: data[B
   * 2 Weak Mutation 193: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 220: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation
   * 4 Weak Mutation 221: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp +1
   * 5 Weak Mutation 222: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp -1
   * 6 Weak Mutation 223: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - DeleteField: sizeI
   * 7 Weak Mutation 216: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 8 Weak Mutation 217: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 218: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 219: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 215: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 12 Weak Mutation 226: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> <=
   * 13 Weak Mutation 225: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> -2
   * 14 Weak Mutation 205: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 i
   * 15 Weak Mutation 204: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 206: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 201: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp -1
   * 18 Weak Mutation 200: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp +1
   * 19 Weak Mutation 202: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - DeleteField: offsetI
   * 20 Weak Mutation 197: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 hash
   * 21 Weak Mutation 196: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 hash
   * 22 Weak Mutation 199: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation
   * 23 Weak Mutation 198: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - DeleteField: data[B
   * 24 Weak Mutation 195: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of hash
   * 25 Weak Mutation 212: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 213: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 27 Weak Mutation 208: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 28 Weak Mutation 209: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 29 com.sleepycat.je.DatabaseEntry.hashCode()I: I8 Branch 16 IFNULL L202 - false
   * 30 com.sleepycat.je.DatabaseEntry.hashCode()I: I34 Branch 17 IF_ICMPLT L203 - true
   * 31 com.sleepycat.je.DatabaseEntry.hashCode()I: I34 Branch 17 IF_ICMPLT L203 - false
   * 32 Weak Mutation 191: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - DeleteField: data[B
   * 33 Weak Mutation 205: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 i
   * 34 Weak Mutation 204: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 206: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 i
   * 36 Weak Mutation 201: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp -1
   * 37 Weak Mutation 200: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp +1
   * 38 Weak Mutation 202: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - DeleteField: offsetI
   * 39 Weak Mutation 197: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 hash
   * 40 Weak Mutation 196: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 hash
   * 41 Weak Mutation 199: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation
   * 42 Weak Mutation 198: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - DeleteField: data[B
   * 43 Weak Mutation 193: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 195: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of hash
   * 45 Weak Mutation 220: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation
   * 46 Weak Mutation 221: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp +1
   * 47 Weak Mutation 222: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp -1
   * 48 Weak Mutation 223: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - DeleteField: sizeI
   * 49 Weak Mutation 216: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 50 Weak Mutation 217: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation of i
   * 51 Weak Mutation 218: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC 1 i
   * 52 Weak Mutation 219: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC -1 i
   * 53 Weak Mutation 212: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 213: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 55 Weak Mutation 215: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 56 Weak Mutation 208: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 57 Weak Mutation 209: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 58 Weak Mutation 226: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> <=
   * 59 Weak Mutation 225: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> -2
   */
  @Test
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)1, (int) (byte)1);
      int int0 = databaseEntry0.hashCode();
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=1 size=1>", databaseEntry0.toString());
      assertEquals(0, int0);
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * 1 Weak Mutation 224: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 224: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> !=
   */
  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte) (-8), (int) (byte) (-8));
      int int0 = databaseEntry0.hashCode();
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=-8 size=-8>", databaseEntry0.toString());
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 47 covered goals:
   * 1 Weak Mutation 214: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> *
   * 2 Weak Mutation 211: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 64: com.sleepycat.je.DatabaseEntry.setData([B)V:62 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 65: com.sleepycat.je.DatabaseEntry.setData([B)V:63 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 190: com.sleepycat.je.DatabaseEntry.hashCode()I:201 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 191: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - DeleteField: data[B
   * 7 Weak Mutation 205: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 i
   * 8 Weak Mutation 204: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 207: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> -
   * 10 Weak Mutation 206: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 i
   * 11 Weak Mutation 201: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp -1
   * 12 Weak Mutation 200: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp +1
   * 13 Weak Mutation 203: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceVariable i -> hash
   * 14 Weak Mutation 197: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC -1 hash
   * 15 Weak Mutation 196: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp IINC 1 hash
   * 16 Weak Mutation 199: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation
   * 17 Weak Mutation 198: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - DeleteField: data[B
   * 18 Weak Mutation 193: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 192: com.sleepycat.je.DatabaseEntry.hashCode()I:202 - ReplaceComparisonOperator = null -> != null
   * 20 Weak Mutation 195: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - InsertUnaryOp Negation of hash
   * 21 Weak Mutation 194: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceVariable hash -> i
   * 22 Weak Mutation 220: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation
   * 23 Weak Mutation 221: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp +1
   * 24 Weak Mutation 222: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp -1
   * 25 Weak Mutation 223: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - DeleteField: sizeI
   * 26 Weak Mutation 216: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 27 Weak Mutation 217: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 218: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 219: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 212: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 31 Weak Mutation 213: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 215: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceVariable i -> hash
   * 33 Weak Mutation 208: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> %
   * 34 Weak Mutation 209: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> /
   * 35 Weak Mutation 210: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> *
   * 36 Weak Mutation 229: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC -1 hash
   * 37 Weak Mutation 228: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp IINC 1 hash
   * 38 Weak Mutation 227: com.sleepycat.je.DatabaseEntry.hashCode()I:207 - InsertUnaryOp Negation of hash
   * 39 Weak Mutation 226: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> <=
   * 40 Weak Mutation 225: com.sleepycat.je.DatabaseEntry.hashCode()I:203 - ReplaceComparisonOperator < -> -2
   * 41 Weak Mutation 207: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> -
   * 42 Weak Mutation 203: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceVariable i -> hash
   * 43 Weak Mutation 194: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceVariable hash -> i
   * 44 Weak Mutation 214: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> *
   * 45 Weak Mutation 210: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> *
   * 46 Weak Mutation 211: com.sleepycat.je.DatabaseEntry.hashCode()I:204 - ReplaceArithmeticOperator + -> -
   * 47 com.sleepycat.je.DatabaseEntry.setData([B)V: I14 Branch 2 IFNONNULL L63 - true
   */
  @Test
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)1, (int) (byte)1);
      byteArray0[5] = (byte)1;
      databaseEntry0.setData(byteArray0);
      int int0 = databaseEntry0.hashCode();
      assertEquals(11, databaseEntry0.getSize());
      assertEquals(1, int0);
  }

  //Test case number: 26
  /*
   * 12 covered goals:
   * 1 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I112 Branch 15 IF_ICMPLT L190 - true
   * 2 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I100 Branch 14 IF_ICMPEQ L191 - true
   * 3 Weak Mutation 46: com.sleepycat.je.DatabaseEntry.<init>([B)V:11 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 47: com.sleepycat.je.DatabaseEntry.<init>([B)V:12 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 44: com.sleepycat.je.DatabaseEntry.<init>([B)V:9 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 45: com.sleepycat.je.DatabaseEntry.<init>([B)V:10 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 49: com.sleepycat.je.DatabaseEntry.<init>([B)V:36 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 48: com.sleepycat.je.DatabaseEntry.<init>([B)V:13 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 186: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> -2
   * 10 Weak Mutation 189: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:190 - ReplaceConstant - 0 -> 1
   * 11 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I73 Branch 13 IF_ICMPEQ L187 - true
   * 12 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I112 Branch 15 IF_ICMPLT L190 - false
   */
  @Test
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry0);
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=2>", databaseEntry0.toString());
      assertEquals(true, boolean0);
      assertEquals(false, databaseEntry0.getPartial());
  }

  //Test case number: 27
  /*
   * 38 covered goals:
   * 1 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I100 Branch 14 IF_ICMPEQ L191 - false
   * 2 Weak Mutation 51: com.sleepycat.je.DatabaseEntry.<init>([BII)V:10 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 50: com.sleepycat.je.DatabaseEntry.<init>([BII)V:9 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 55: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - ReplaceVariable offset -> size
   * 5 Weak Mutation 54: com.sleepycat.je.DatabaseEntry.<init>([BII)V:13 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 53: com.sleepycat.je.DatabaseEntry.<init>([BII)V:12 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 52: com.sleepycat.je.DatabaseEntry.<init>([BII)V:11 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 59: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - ReplaceVariable size -> offset
   * 9 Weak Mutation 58: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC -1 offset
   * 10 Weak Mutation 57: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC 1 offset
   * 11 Weak Mutation 56: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp Negation of offset
   * 12 Weak Mutation 62: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC -1 size
   * 13 Weak Mutation 61: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC 1 size
   * 14 Weak Mutation 60: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp Negation of size
   * 15 Weak Mutation 126: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 16 Weak Mutation 124: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:172 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 129: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceVariable e -> this
   * 18 Weak Mutation 128: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 130: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 20 Weak Mutation 132: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator == -> !=
   * 21 Weak Mutation 171: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceComparisonOperator = null -> != null
   * 22 Weak Mutation 170: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - DeleteField: data[B
   * 23 Weak Mutation 174: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceComparisonOperator != null -> = null
   * 24 Weak Mutation 173: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - DeleteField: data[B
   * 25 Weak Mutation 172: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:184 - ReplaceVariable e -> this
   * 26 Weak Mutation 165: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - ReplaceComparisonOperator != null -> = null
   * 27 Weak Mutation 164: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:181 - DeleteField: data[B
   * 28 Weak Mutation 186: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceComparisonOperator == -> -2
   * 29 Weak Mutation 184: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - DeleteField: sizeI
   * 30 Weak Mutation 189: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:190 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 178: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp -1
   * 32 Weak Mutation 179: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - DeleteField: sizeI
   * 33 Weak Mutation 176: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp Negation
   * 34 Weak Mutation 177: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp +1
   * 35 Weak Mutation 182: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp +1
   * 36 Weak Mutation 183: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp -1
   * 37 Weak Mutation 180: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - ReplaceVariable e -> this
   * 38 Weak Mutation 181: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:187 - InsertUnaryOp Negation
   */
  @Test
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)1, (int) (byte)1);
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0, 0, (int) (byte)1);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(false, boolean0);
      assertEquals(1, databaseEntry0.getOffset());
      assertEquals(false, databaseEntry0.getPartial());
      assertEquals("<DatabaseEntry dlen=0 doff=0 doff=0 offset=0 size=1>", databaseEntry1.toString());
  }
}
