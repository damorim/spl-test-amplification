/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.EnvironmentMutableConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogException;
import java.io.File;
import java.util.Properties;

@RunWith(EvoSuiteRunner.class)
public class TestEnvironmentMutableConfig {


  //Test case number: 0
  /*
   * 29 covered goals:
   * 1 Weak Mutation 42: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 2 Weak Mutation 40: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 3 Weak Mutation 41: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - ReplaceVariable paramName -> value
   * 4 Weak Mutation 43: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:115 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 50: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:118 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 49: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:118 - DeleteStatement: isMutable()Z
   * 7 Weak Mutation 51: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - ReplaceVariable paramName -> value
   * 8 Weak Mutation 55: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: toString()Ljava/lang/String;
   * 9 Weak Mutation 54: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 53: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - ReplaceConstant -  is not a mutable BDBJE environment configuration -> 
   * 11 Weak Mutation 52: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 12 com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V: I10 Branch 2 IFNONNULL L115 - true
   * 13 com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V: I29 Branch 3 IFNE L118 - false
   * 14 Weak Mutation 0: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 1: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:14 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 2: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:24 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 3: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:31 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 42: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 19 Weak Mutation 43: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:115 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 40: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 21 Weak Mutation 41: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - ReplaceVariable paramName -> value
   * 22 Weak Mutation 51: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - ReplaceVariable paramName -> value
   * 23 Weak Mutation 50: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:118 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 49: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:118 - DeleteStatement: isMutable()Z
   * 25 Weak Mutation 55: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: toString()Ljava/lang/String;
   * 26 Weak Mutation 54: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 27 Weak Mutation 53: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - ReplaceConstant -  is not a mutable BDBJE environment configuration -> 
   * 28 Weak Mutation 52: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:119 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 29 com.sleepycat.je.EnvironmentMutableConfig.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      try {
        environmentMutableConfig0.setConfigParam("je.env.recovery", "$WK3J.k+`Qdo{");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * je.env.recovery is not a mutable BDBJE environment configuration
         */
      }
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp Negation of noSync
   * 2 Weak Mutation 12: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp IINC 1 noSync
   * 3 Weak Mutation 13: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp IINC -1 noSync
   * 4 com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V: root-Branch
   * 5 Weak Mutation 11: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp Negation of noSync
   * 6 Weak Mutation 12: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp IINC 1 noSync
   * 7 Weak Mutation 13: com.sleepycat.je.EnvironmentMutableConfig.setTxnNoSync(Z)V:52 - InsertUnaryOp IINC -1 noSync
   */
  @Test
  public void test1()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setTxnNoSync(false);
      assertEquals(false, environmentConfig0.getTxnNoSync());
      assertEquals(true, environmentConfig0.getLoadPropertyFile());
      assertEquals(false, environmentConfig0.getTxnWriteNoSync());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.je.EnvironmentMutableConfig.getTxnWriteNoSync()Z:73 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.EnvironmentMutableConfig.getTxnWriteNoSync()Z: root-Branch
   * 3 Weak Mutation 19: com.sleepycat.je.EnvironmentMutableConfig.getTxnWriteNoSync()Z:73 - InsertUnaryOp Negation
   */
  @Test
  public void test2()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      boolean boolean0 = environmentConfig0.getTxnWriteNoSync();
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 22 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteField: MAX_MEMORY_PERCENTLcom/sleepycat/je/config/IntConfigParam;
   * 2 Weak Mutation 29: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp IINC 1 percent
   * 3 Weak Mutation 28: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp Negation of percent
   * 4 Weak Mutation 31: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteStatement: toString(I)Ljava/lang/String;
   * 5 Weak Mutation 30: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp IINC -1 percent
   * 6 Weak Mutation 32: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 7 Weak Mutation 71: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - InsertUnaryOp Negation
   * 8 Weak Mutation 72: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - DeleteField: validateParamsZ
   * 9 Weak Mutation 73: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 74: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:150 - DeleteStatement: validateValue(Ljava/lang/String;)V
   * 11 com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V: root-Branch
   * 12 com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V: I4 Branch 6 IFEQ L149 - false
   * 13 Weak Mutation 27: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteField: MAX_MEMORY_PERCENTLcom/sleepycat/je/config/IntConfigParam;
   * 14 Weak Mutation 29: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp IINC 1 percent
   * 15 Weak Mutation 28: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp Negation of percent
   * 16 Weak Mutation 31: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteStatement: toString(I)Ljava/lang/String;
   * 17 Weak Mutation 30: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - InsertUnaryOp IINC -1 percent
   * 18 Weak Mutation 32: com.sleepycat.je.EnvironmentMutableConfig.setCachePercent(I)V:94 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 19 Weak Mutation 71: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - InsertUnaryOp Negation
   * 20 Weak Mutation 72: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - DeleteField: validateParamsZ
   * 21 Weak Mutation 73: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 74: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:150 - DeleteStatement: validateValue(Ljava/lang/String;)V
   */
  @Test
  public void test3()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      try {
        environmentConfig0.setCachePercent((-5));
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * com.sleepycat.je.config.IntConfigParam: param je.maxMemoryPercent doesn't validate, -5 is less than min of 1
         */
      }
  }

  //Test case number: 4
  /*
   * 18 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:101 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 2 Weak Mutation 33: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:101 - DeleteField: MAX_MEMORY_PERCENTLcom/sleepycat/je/config/IntConfigParam;
   * 3 Weak Mutation 35: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:103 - DeleteStatement: parseInt(Ljava/lang/String;)I
   * 4 Weak Mutation 68: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 5 Weak Mutation 66: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteField: propsLjava/util/Properties;
   * 6 Weak Mutation 67: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getName()Ljava/lang/String;
   * 7 Weak Mutation 69: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:140 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 70: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:141 - DeleteStatement: getDefault()Ljava/lang/String;
   * 9 com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I: root-Branch
   * 10 com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;: I11 Branch 5 IFNONNULL L140 - false
   * 11 Weak Mutation 34: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:101 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 12 Weak Mutation 35: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:103 - DeleteStatement: parseInt(Ljava/lang/String;)I
   * 13 Weak Mutation 33: com.sleepycat.je.EnvironmentMutableConfig.getCachePercent()I:101 - DeleteField: MAX_MEMORY_PERCENTLcom/sleepycat/je/config/IntConfigParam;
   * 14 Weak Mutation 68: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 15 Weak Mutation 69: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:140 - ReplaceComparisonOperator != null -> = null
   * 16 Weak Mutation 70: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:141 - DeleteStatement: getDefault()Ljava/lang/String;
   * 17 Weak Mutation 66: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteField: propsLjava/util/Properties;
   * 18 Weak Mutation 67: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getName()Ljava/lang/String;
   */
  @Test
  public void test4()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      int int0 = environmentConfig0.getCachePercent();
      assertEquals(5, int0);
  }

  //Test case number: 5
  /*
   * 15 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 2 Weak Mutation 47: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 3 Weak Mutation 44: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - ReplaceVariable paramName -> value
   * 4 Weak Mutation 45: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 5 Weak Mutation 48: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: toString()Ljava/lang/String;
   * 6 com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V: I10 Branch 2 IFNONNULL L115 - false
   * 7 Weak Mutation 42: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 8 Weak Mutation 43: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:115 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 40: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 10 Weak Mutation 41: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:114 - ReplaceVariable paramName -> value
   * 11 Weak Mutation 46: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 12 Weak Mutation 47: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 13 Weak Mutation 44: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - ReplaceVariable paramName -> value
   * 14 Weak Mutation 45: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 15 Weak Mutation 48: com.sleepycat.je.EnvironmentMutableConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:116 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test5()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      try {
        environmentMutableConfig0.setConfigParam(" ForeignMultiKeyNullifier\n", "$WK3J.k+`%do{");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         *  ForeignMultiKeyNullifier
         *  is not a valid BDBJE environment configuration
         */
      }
  }

  //Test case number: 6
  /*
   * 14 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:128 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 2 Weak Mutation 58: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:128 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 3 Weak Mutation 60: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:129 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 65: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:132 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 5 com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;: I10 Branch 4 IFNONNULL L129 - true
   * 6 Weak Mutation 68: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 7 Weak Mutation 69: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:140 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 70: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:141 - DeleteStatement: getDefault()Ljava/lang/String;
   * 9 Weak Mutation 66: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteField: propsLjava/util/Properties;
   * 10 Weak Mutation 67: com.sleepycat.je.EnvironmentMutableConfig.getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;:139 - DeleteStatement: getName()Ljava/lang/String;
   * 11 Weak Mutation 59: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:128 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 12 Weak Mutation 58: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:128 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 13 Weak Mutation 60: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:129 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 65: com.sleepycat.je.EnvironmentMutableConfig.getConfigParam(Ljava/lang/String;)Ljava/lang/String;:132 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   */
  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("k^yf^Kp", "k^yf^Kp");
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl(file0, environmentConfig0);
        fail("Expecting exception: LogException");
      } catch(LogException e) {
        /*
         * Environment home k^yf^Kp/k^yf^Kp doesn't exist
         */
      }
  }

  //Test case number: 7
  /*
   * 41 covered goals:
   * 1 Weak Mutation 119: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 2 Weak Mutation 118: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramName
   * 3 Weak Mutation 116: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> paramName
   * 4 Weak Mutation 122: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator > -> -2
   * 5 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I58 Branch 12 IFNULL L186 - false
   * 6 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I62 Branch 13 IFGT L186 - true
   * 7 Weak Mutation 76: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteStatement: getName()Ljava/lang/String;
   * 8 Weak Mutation 77: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteStatement: setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   * 9 Weak Mutation 75: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteField: propsLjava/util/Properties;
   * 10 Weak Mutation 95: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:177 - DeleteField: propsLjava/util/Properties;
   * 11 Weak Mutation 102: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - InsertUnaryOp Negation
   * 12 Weak Mutation 100: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:181 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 13 Weak Mutation 101: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:181 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 14 Weak Mutation 98: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 15 Weak Mutation 99: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:180 - DeleteStatement: next()Ljava/lang/Object;
   * 16 Weak Mutation 96: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 17 Weak Mutation 97: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteStatement: keySet()Ljava/util/Set;
   * 18 Weak Mutation 110: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:185 - ReplaceVariable paramName -> paramVal
   * 19 Weak Mutation 111: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:185 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 20 Weak Mutation 108: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:184 - DeleteField: propsLjava/util/Properties;
   * 21 Weak Mutation 109: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:184 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 22 Weak Mutation 106: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:183 - DeleteStatement: isMutable()Z
   * 23 Weak Mutation 107: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:183 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 104: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - ReplaceComparisonOperator != -> ==
   * 25 Weak Mutation 105: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - ReplaceComparisonOperator != null -> = null
   * 26 Weak Mutation 119: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 27 Weak Mutation 118: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramName
   * 28 Weak Mutation 116: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> paramName
   * 29 Weak Mutation 114: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator = null -> != null
   * 30 Weak Mutation 113: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> paramName
   * 31 Weak Mutation 125: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator = null -> != null
   * 32 Weak Mutation 124: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramName
   * 33 Weak Mutation 122: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator > -> -2
   * 34 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I30 Branch 9 IFNE L182 - false
   * 35 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I32 Branch 10 IFNONNULL L182 - true
   * 36 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I41 Branch 11 IFNE L183 - true
   * 37 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I41 Branch 11 IFNE L183 - false
   * 38 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I58 Branch 12 IFNULL L186 - true
   * 39 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I66 Branch 14 IFNULL L186 - true
   * 40 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I99 Branch 15 IFNE L179 - true
   * 41 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I99 Branch 15 IFNE L179 - false
   */
  @Test
  public void test7()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setLocking(true);
      environmentConfig0.checkImmutablePropsForEquality((EnvironmentMutableConfig) environmentConfig0);
      assertEquals("allowCreate=false\n{je.env.isLocking=true}", environmentConfig0.toString());
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Weak Mutation 78: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp Negation of validateParams
   * 2 Weak Mutation 79: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp IINC 1 validateParams
   * 3 Weak Mutation 80: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp IINC -1 validateParams
   * 4 com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V: root-Branch
   * 5 Weak Mutation 78: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp Negation of validateParams
   * 6 Weak Mutation 79: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp IINC 1 validateParams
   * 7 Weak Mutation 80: com.sleepycat.je.EnvironmentMutableConfig.setValidateParams(Z)V:155 - InsertUnaryOp IINC -1 validateParams
   */
  @Test
  public void test8()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setValidateParams(true);
      assertEquals(500000L, environmentConfig0.getLockTimeout());
  }

  //Test case number: 9
  /*
   * 27 covered goals:
   * 1 Weak Mutation 82: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:163 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 2 Weak Mutation 84: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:164 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 3 Weak Mutation 83: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:164 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 4 Weak Mutation 85: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:165 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 87: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 6 Weak Mutation 86: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 7 Weak Mutation 89: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: toString()Ljava/lang/String;
   * 8 Weak Mutation 88: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 9 com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V: I50 Branch 8 IFNE L162 - true
   * 10 com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V: I24 Branch 7 IFNONNULL L165 - false
   * 11 Weak Mutation 4: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:13 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 5: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:14 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 6: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:24 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 7: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:31 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 8: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:43 - DeleteStatement: validateProperties(Ljava/util/Properties;)V
   * 16 Weak Mutation 85: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:165 - ReplaceComparisonOperator != null -> = null
   * 17 Weak Mutation 84: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:164 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 18 Weak Mutation 87: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 19 Weak Mutation 86: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 20 Weak Mutation 81: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:161 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 21 Weak Mutation 83: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:164 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 22 Weak Mutation 82: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:163 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 23 Weak Mutation 93: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:162 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 92: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:162 - DeleteStatement: hasMoreElements()Z
   * 25 Weak Mutation 89: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: toString()Ljava/lang/String;
   * 26 Weak Mutation 88: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:166 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 27 com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V: root-Branch
   */
  @Test
  public void test9()  throws Throwable  {
      Properties properties0 = new Properties();
      properties0.put((Object) "<com.sleepycat.je.tree.DIN/0", (Object) "<com.sleepycat.je.tree.DIN/0");
      EnvironmentMutableConfig environmentMutableConfig0 = null;
      try {
        environmentMutableConfig0 = new EnvironmentMutableConfig(properties0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * <com.sleepycat.je.tree.DIN/0 is not a valid BDBJE environment configuration
         */
      }
  }

  //Test case number: 10
  /*
   * 45 covered goals:
   * 1 Weak Mutation 117: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramVal
   * 2 Weak Mutation 115: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> useParamVal
   * 3 Weak Mutation 112: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> useParamVal
   * 4 Weak Mutation 120: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator > -> !=
   * 5 Weak Mutation 127: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> paramVal
   * 6 Weak Mutation 126: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> useParamVal
   * 7 Weak Mutation 137: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 136: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  which is incompatible -> 
   * 9 Weak Mutation 139: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 138: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  with the value of  -> 
   * 11 Weak Mutation 141: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> paramName
   * 12 Weak Mutation 140: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> useParamVal
   * 13 Weak Mutation 129: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  is set to  -> 
   * 14 Weak Mutation 128: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 15 Weak Mutation 131: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramVal
   * 16 Weak Mutation 130: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 17 Weak Mutation 133: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 18 Weak Mutation 132: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramName
   * 19 Weak Mutation 135: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 20 Weak Mutation 134: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  in the config parameter -> 
   * 21 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I62 Branch 13 IFGT L186 - false
   * 22 Weak Mutation 119: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 23 Weak Mutation 118: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramName
   * 24 Weak Mutation 116: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> paramName
   * 25 Weak Mutation 94: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:177 - ReplaceVariable passedConfig -> this
   * 26 Weak Mutation 117: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramVal
   * 27 Weak Mutation 115: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> useParamVal
   * 28 Weak Mutation 112: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> useParamVal
   * 29 Weak Mutation 127: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> paramVal
   * 30 Weak Mutation 126: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> useParamVal
   * 31 Weak Mutation 120: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator > -> !=
   * 32 Weak Mutation 137: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 33 Weak Mutation 136: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  which is incompatible -> 
   * 34 Weak Mutation 139: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 35 Weak Mutation 138: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  with the value of  -> 
   * 36 Weak Mutation 141: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> paramName
   * 37 Weak Mutation 140: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> useParamVal
   * 38 Weak Mutation 129: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  is set to  -> 
   * 39 Weak Mutation 128: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 40 Weak Mutation 131: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramVal
   * 41 Weak Mutation 130: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 42 Weak Mutation 133: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 43 Weak Mutation 132: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramName
   * 44 Weak Mutation 135: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 45 Weak Mutation 134: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  in the config parameter -> 
   */
  @Test
  public void test10()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setLocking(true);
      EnvironmentConfig environmentConfig1 = new EnvironmentConfig();
      try {
        environmentConfig0.checkImmutablePropsForEquality((EnvironmentMutableConfig) environmentConfig1);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * je.env.isLocking is set to null in the config parameter which is incompatible with the value of true in the underlying environment
         */
      }
  }

  //Test case number: 11
  /*
   * 97 covered goals:
   * 1 Weak Mutation 123: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramVal
   * 2 Weak Mutation 143: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteField: propsLjava/util/Properties;
   * 3 Weak Mutation 142: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - ReplaceVariable copy -> this
   * 4 Weak Mutation 144: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteStatement: clone()Ljava/lang/Object;
   * 5 Weak Mutation 145: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:199 - ReplaceVariable copy -> this
   * 6 Weak Mutation 146: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:207 - DeleteStatement: clone()Ljava/lang/Object;
   * 7 Weak Mutation 147: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:208 - ReplaceVariable copy -> this
   * 8 Weak Mutation 148: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:209 - ReplaceVariable copy -> this
   * 9 Weak Mutation 178: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 10 Weak Mutation 177: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteField: propsLjava/util/Properties;
   * 11 Weak Mutation 190: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - DeleteStatement: hasMoreElements()Z
   * 12 Weak Mutation 191: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 179: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:252 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 14 Weak Mutation 180: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 15 Weak Mutation 181: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 16 Weak Mutation 184: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 185: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != null -> = null
   * 18 Weak Mutation 182: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - InsertUnaryOp Negation
   * 19 Weak Mutation 186: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - DeleteStatement: isMutable()Z
   * 20 Weak Mutation 187: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 188: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:256 - DeleteField: propsLjava/util/Properties;
   * 22 Weak Mutation 189: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:256 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   * 23 com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;: root-Branch
   * 24 com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;: root-Branch
   * 25 com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I66 Branch 14 IFNULL L186 - false
   * 26 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I48 Branch 23 IFNE L251 - true
   * 27 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I48 Branch 23 IFNE L251 - false
   * 28 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I25 Branch 20 IFNE L254 - false
   * 29 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I27 Branch 21 IFNONNULL L254 - true
   * 30 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I36 Branch 22 IFNE L255 - false
   * 31 Weak Mutation 71: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - InsertUnaryOp Negation
   * 32 Weak Mutation 76: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteStatement: getName()Ljava/lang/String;
   * 33 Weak Mutation 77: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteStatement: setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   * 34 Weak Mutation 72: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - DeleteField: validateParamsZ
   * 35 Weak Mutation 73: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:149 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 74: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:150 - DeleteStatement: validateValue(Ljava/lang/String;)V
   * 37 Weak Mutation 75: com.sleepycat.je.EnvironmentMutableConfig.setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V:152 - DeleteField: propsLjava/util/Properties;
   * 38 Weak Mutation 95: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:177 - DeleteField: propsLjava/util/Properties;
   * 39 Weak Mutation 94: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:177 - ReplaceVariable passedConfig -> this
   * 40 Weak Mutation 102: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - InsertUnaryOp Negation
   * 41 Weak Mutation 100: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:181 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 42 Weak Mutation 101: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:181 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 43 Weak Mutation 98: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 44 Weak Mutation 99: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:180 - DeleteStatement: next()Ljava/lang/Object;
   * 45 Weak Mutation 96: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 46 Weak Mutation 97: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:178 - DeleteStatement: keySet()Ljava/util/Set;
   * 47 Weak Mutation 110: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:185 - ReplaceVariable paramName -> paramVal
   * 48 Weak Mutation 111: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:185 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 49 Weak Mutation 108: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:184 - DeleteField: propsLjava/util/Properties;
   * 50 Weak Mutation 109: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:184 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 51 Weak Mutation 106: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:183 - DeleteStatement: isMutable()Z
   * 52 Weak Mutation 107: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:183 - ReplaceComparisonOperator != -> ==
   * 53 Weak Mutation 104: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - ReplaceComparisonOperator != -> ==
   * 54 Weak Mutation 105: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:182 - ReplaceComparisonOperator != null -> = null
   * 55 Weak Mutation 114: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator = null -> != null
   * 56 Weak Mutation 113: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> paramName
   * 57 Weak Mutation 112: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable paramVal -> useParamVal
   * 58 Weak Mutation 127: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> paramVal
   * 59 Weak Mutation 126: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramName -> useParamVal
   * 60 Weak Mutation 125: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceComparisonOperator = null -> != null
   * 61 Weak Mutation 124: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramName
   * 62 Weak Mutation 137: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 63 Weak Mutation 136: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  which is incompatible -> 
   * 64 Weak Mutation 139: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 65 Weak Mutation 138: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  with the value of  -> 
   * 66 Weak Mutation 141: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> paramName
   * 67 Weak Mutation 140: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable paramVal -> useParamVal
   * 68 Weak Mutation 129: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  is set to  -> 
   * 69 Weak Mutation 128: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 70 Weak Mutation 131: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramVal
   * 71 Weak Mutation 130: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 72 Weak Mutation 133: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 73 Weak Mutation 132: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceVariable useParamVal -> paramName
   * 74 Weak Mutation 135: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 75 Weak Mutation 134: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:187 - ReplaceConstant -  in the config parameter -> 
   * 76 Weak Mutation 123: com.sleepycat.je.EnvironmentMutableConfig.checkImmutablePropsForEquality(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:186 - ReplaceVariable useParamVal -> paramVal
   * 77 Weak Mutation 143: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteField: propsLjava/util/Properties;
   * 78 Weak Mutation 142: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - ReplaceVariable copy -> this
   * 79 Weak Mutation 144: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteStatement: clone()Ljava/lang/Object;
   * 80 Weak Mutation 145: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:199 - ReplaceVariable copy -> this
   * 81 Weak Mutation 146: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:207 - DeleteStatement: clone()Ljava/lang/Object;
   * 82 Weak Mutation 147: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:208 - ReplaceVariable copy -> this
   * 83 Weak Mutation 148: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:209 - ReplaceVariable copy -> this
   * 84 Weak Mutation 186: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - DeleteStatement: isMutable()Z
   * 85 Weak Mutation 187: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - ReplaceComparisonOperator != -> ==
   * 86 Weak Mutation 184: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != -> ==
   * 87 Weak Mutation 185: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != null -> = null
   * 88 Weak Mutation 190: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - DeleteStatement: hasMoreElements()Z
   * 89 Weak Mutation 191: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - ReplaceComparisonOperator != -> ==
   * 90 Weak Mutation 188: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:256 - DeleteField: propsLjava/util/Properties;
   * 91 Weak Mutation 189: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:256 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   * 92 Weak Mutation 178: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 93 Weak Mutation 179: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:252 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 94 Weak Mutation 177: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteField: propsLjava/util/Properties;
   * 95 Weak Mutation 182: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - InsertUnaryOp Negation
   * 96 Weak Mutation 180: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 97 Weak Mutation 181: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   */
  @Test
  public void test11()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setTxnSerializableIsolation(false);
      EnvironmentConfig environmentConfig1 = (EnvironmentConfig)environmentConfig0.cloneMutableConfig();
      try {
        environmentConfig1.checkImmutablePropsForEquality((EnvironmentMutableConfig) environmentConfig0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * je.txn.serializableIsolation is set to false in the config parameter which is incompatible with the value of null in the underlying environment
         */
      }
  }

  //Test case number: 12
  /*
   * 29 covered goals:
   * 1 Weak Mutation 149: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:220 - ReplaceVariable other -> this
   * 2 Weak Mutation 150: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:220 - InsertUnaryOp Negation
   * 3 Weak Mutation 152: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:221 - ReplaceVariable other -> this
   * 4 Weak Mutation 153: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:221 - InsertUnaryOp Negation
   * 5 com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: root-Branch
   * 6 com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V: I36 Branch 22 IFNE L255 - true
   * 7 Weak Mutation 143: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteField: propsLjava/util/Properties;
   * 8 Weak Mutation 142: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - ReplaceVariable copy -> this
   * 9 Weak Mutation 144: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:198 - DeleteStatement: clone()Ljava/lang/Object;
   * 10 Weak Mutation 145: com.sleepycat.je.EnvironmentMutableConfig.clone()Ljava/lang/Object;:199 - ReplaceVariable copy -> this
   * 11 Weak Mutation 146: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:207 - DeleteStatement: clone()Ljava/lang/Object;
   * 12 Weak Mutation 147: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:208 - ReplaceVariable copy -> this
   * 13 Weak Mutation 148: com.sleepycat.je.EnvironmentMutableConfig.cloneMutableConfig()Lcom/sleepycat/je/EnvironmentMutableConfig;:209 - ReplaceVariable copy -> this
   * 14 Weak Mutation 186: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - DeleteStatement: isMutable()Z
   * 15 Weak Mutation 187: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:255 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 184: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 185: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - ReplaceComparisonOperator != null -> = null
   * 18 Weak Mutation 190: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - DeleteStatement: hasMoreElements()Z
   * 19 Weak Mutation 191: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:251 - ReplaceComparisonOperator != -> ==
   * 20 Weak Mutation 178: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 21 Weak Mutation 179: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:252 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 22 Weak Mutation 177: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:250 - DeleteField: propsLjava/util/Properties;
   * 23 Weak Mutation 182: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:254 - InsertUnaryOp Negation
   * 24 Weak Mutation 180: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 25 Weak Mutation 181: com.sleepycat.je.EnvironmentMutableConfig.clearImmutableProps()V:253 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 26 Weak Mutation 152: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:221 - ReplaceVariable other -> this
   * 27 Weak Mutation 153: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:221 - InsertUnaryOp Negation
   * 28 Weak Mutation 149: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:220 - ReplaceVariable other -> this
   * 29 Weak Mutation 150: com.sleepycat.je.EnvironmentMutableConfig.copyHandlePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:220 - InsertUnaryOp Negation
   */
  @Test
  public void test12()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      EnvironmentConfig environmentConfig1 = (EnvironmentConfig)environmentConfig0.cloneMutableConfig();
      assertNotNull(environmentConfig1);
      
      environmentConfig0.copyHandlePropsTo((EnvironmentMutableConfig) environmentConfig1);
      assertNotSame(environmentConfig1, environmentConfig0);
      assertEquals(2, environmentConfig1.getNumExplicitlySetParams());
      assertNotSame(environmentConfig0, environmentConfig1);
  }

  //Test case number: 13
  /*
   * 56 covered goals:
   * 1 Weak Mutation 155: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:227 - ReplaceVariable toConfig -> this
   * 2 Weak Mutation 156: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:227 - DeleteField: propsLjava/util/Properties;
   * 3 Weak Mutation 157: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:228 - DeleteField: propsLjava/util/Properties;
   * 4 Weak Mutation 158: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:228 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 5 Weak Mutation 174: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:229 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 173: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:229 - DeleteStatement: hasMoreElements()Z
   * 7 Weak Mutation 159: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:230 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 8 Weak Mutation 161: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:231 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 9 Weak Mutation 160: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:231 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 10 Weak Mutation 162: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - InsertUnaryOp Negation
   * 11 Weak Mutation 165: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 164: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 167: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:233 - ReplaceComparisonOperator == -> !=
   * 14 Weak Mutation 166: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:233 - DeleteStatement: isMutable()Z
   * 15 Weak Mutation 169: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:234 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 16 Weak Mutation 168: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:234 - DeleteField: propsLjava/util/Properties;
   * 17 Weak Mutation 171: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - ReplaceVariable newVal -> paramName
   * 18 Weak Mutation 170: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - ReplaceVariable paramName -> newVal
   * 19 Weak Mutation 172: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - DeleteStatement: setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   * 20 com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I60 Branch 19 IFNE L229 - true
   * 21 com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I60 Branch 19 IFNE L229 - false
   * 22 com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I30 Branch 16 IFNE L232 - false
   * 23 com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I32 Branch 17 IFNONNULL L232 - true
   * 24 com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V: I41 Branch 18 IFEQ L233 - false
   * 25 Weak Mutation 4: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:13 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 5: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:14 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 6: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:24 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 7: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:31 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 8: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:43 - DeleteStatement: validateProperties(Ljava/util/Properties;)V
   * 30 Weak Mutation 9: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:45 - DeleteField: propsLjava/util/Properties;
   * 31 Weak Mutation 10: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:45 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 32 Weak Mutation 81: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:161 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 33 Weak Mutation 93: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:162 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 92: com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V:162 - DeleteStatement: hasMoreElements()Z
   * 35 Weak Mutation 9: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:45 - DeleteField: propsLjava/util/Properties;
   * 36 Weak Mutation 10: com.sleepycat.je.EnvironmentMutableConfig.<init>(Ljava/util/Properties;)V:45 - DeleteStatement: putAll(Ljava/util/Map;)V
   * 37 Weak Mutation 155: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:227 - ReplaceVariable toConfig -> this
   * 38 Weak Mutation 156: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:227 - DeleteField: propsLjava/util/Properties;
   * 39 Weak Mutation 157: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:228 - DeleteField: propsLjava/util/Properties;
   * 40 Weak Mutation 158: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:228 - DeleteStatement: propertyNames()Ljava/util/Enumeration;
   * 41 Weak Mutation 159: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:230 - DeleteStatement: nextElement()Ljava/lang/Object;
   * 42 Weak Mutation 171: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - ReplaceVariable newVal -> paramName
   * 43 Weak Mutation 170: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - ReplaceVariable paramName -> newVal
   * 44 Weak Mutation 169: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:234 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 45 Weak Mutation 168: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:234 - DeleteField: propsLjava/util/Properties;
   * 46 Weak Mutation 174: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:229 - ReplaceComparisonOperator != -> ==
   * 47 Weak Mutation 173: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:229 - DeleteStatement: hasMoreElements()Z
   * 48 Weak Mutation 172: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:235 - DeleteStatement: setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
   * 49 Weak Mutation 162: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - InsertUnaryOp Negation
   * 50 Weak Mutation 161: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:231 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 51 Weak Mutation 160: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:231 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 52 Weak Mutation 167: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:233 - ReplaceComparisonOperator == -> !=
   * 53 Weak Mutation 166: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:233 - DeleteStatement: isMutable()Z
   * 54 Weak Mutation 165: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - ReplaceComparisonOperator != null -> = null
   * 55 Weak Mutation 164: com.sleepycat.je.EnvironmentMutableConfig.copyMutablePropsTo(Lcom/sleepycat/je/EnvironmentMutableConfig;)V:232 - ReplaceComparisonOperator != -> ==
   * 56 com.sleepycat.je.EnvironmentMutableConfig.validateProperties(Ljava/util/Properties;)V: I50 Branch 8 IFNE L162 - false
   */
  @Test
  public void test13()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig1 = new EnvironmentConfig(properties0);
      assertNotNull(environmentConfig1);
      
      environmentConfig0.copyMutablePropsTo((EnvironmentMutableConfig) environmentConfig1);
      assertEquals(2, environmentConfig1.getNumExplicitlySetParams());
      assertEquals("allowCreate=false\n{je.maxMemory=1147, je.maxMemoryPercent=5}", environmentConfig1.toString());
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Weak Mutation 175: com.sleepycat.je.EnvironmentMutableConfig.fillInEnvironmentGeneratedProps(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:244 - DeleteStatement: getMemoryBudget()Lcom/sleepycat/je/dbi/MemoryBudget;
   * 2 com.sleepycat.je.EnvironmentMutableConfig.fillInEnvironmentGeneratedProps(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   * 3 Weak Mutation 175: com.sleepycat.je.EnvironmentMutableConfig.fillInEnvironmentGeneratedProps(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V:244 - DeleteStatement: getMemoryBudget()Lcom/sleepycat/je/dbi/MemoryBudget;
   */
  @Test
  public void test14()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      // Undeclared exception!
      try {
        environmentConfig0.fillInEnvironmentGeneratedProps((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 196: com.sleepycat.je.EnvironmentMutableConfig.getLoadPropertyFile()Z:270 - DeleteField: loadPropertyFileZ
   * 2 Weak Mutation 195: com.sleepycat.je.EnvironmentMutableConfig.getLoadPropertyFile()Z:270 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.EnvironmentMutableConfig.getLoadPropertyFile()Z: root-Branch
   * 4 Weak Mutation 196: com.sleepycat.je.EnvironmentMutableConfig.getLoadPropertyFile()Z:270 - DeleteField: loadPropertyFileZ
   * 5 Weak Mutation 195: com.sleepycat.je.EnvironmentMutableConfig.getLoadPropertyFile()Z:270 - InsertUnaryOp Negation
   */
  @Test
  public void test15()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      boolean boolean0 = environmentConfig0.getLoadPropertyFile();
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 9 covered goals:
   * 1 Weak Mutation 197: com.sleepycat.je.EnvironmentMutableConfig.getNumExplicitlySetParams()I:276 - DeleteField: propsLjava/util/Properties;
   * 2 Weak Mutation 198: com.sleepycat.je.EnvironmentMutableConfig.getNumExplicitlySetParams()I:276 - DeleteStatement: size()I
   * 3 com.sleepycat.je.EnvironmentMutableConfig.getNumExplicitlySetParams()I: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:14 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 2: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:24 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 3: com.sleepycat.je.EnvironmentMutableConfig.<init>()V:31 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 197: com.sleepycat.je.EnvironmentMutableConfig.getNumExplicitlySetParams()I:276 - DeleteField: propsLjava/util/Properties;
   * 9 Weak Mutation 198: com.sleepycat.je.EnvironmentMutableConfig.getNumExplicitlySetParams()I:276 - DeleteStatement: size()I
   */
  @Test
  public void test16()  throws Throwable  {
      EnvironmentMutableConfig environmentMutableConfig0 = new EnvironmentMutableConfig();
      environmentMutableConfig0.getNumExplicitlySetParams();
      assertEquals(false, environmentMutableConfig0.getTxnNoSync());
      assertEquals(true, environmentMutableConfig0.getLoadPropertyFile());
      assertEquals(false, environmentMutableConfig0.getTxnWriteNoSync());
  }
}
