/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.recovery;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.recovery.CheckpointEnd;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestCheckpointEnd_16 {


  //Test case number: 16
  /*
   * 25 covered goals:
   * 1 com.sleepycat.je.recovery.CheckpointEnd.postLogWork(J)V: root-Branch
   * 2 Weak Mutation 0: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:33 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 1: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:39 - DeleteStatement: getInstance()Ljava/util/Calendar;
   * 4 Weak Mutation 2: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:40 - DeleteStatement: getTime()Ljava/util/Date;
   * 5 Weak Mutation 3: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:40 - DeleteStatement: getTime()J
   * 6 Weak Mutation 4: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:41 - InsertUnaryOp Negation
   * 7 Weak Mutation 5: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:42 - InsertUnaryOp Negation
   * 8 Weak Mutation 6: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - InsertUnaryOp Negation
   * 9 Weak Mutation 7: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - ReplaceConstant - -1 -> 0
   * 10 Weak Mutation 8: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - ReplaceConstant - -1 -> 1
   * 11 Weak Mutation 9: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - ReplaceConstant - -1 -> -2
   * 12 Weak Mutation 10: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - DeleteStatement: longSub(JJ)I
   * 13 Weak Mutation 11: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:43 - ReplaceComparisonOperator != -> <
   * 14 Weak Mutation 15: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:47 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 17: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - ReplaceConstant - -1 -> 0
   * 16 Weak Mutation 16: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - InsertUnaryOp Negation
   * 17 Weak Mutation 19: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - ReplaceConstant - -1 -> -2
   * 18 Weak Mutation 18: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - ReplaceConstant - -1 -> 1
   * 19 Weak Mutation 20: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - DeleteStatement: longSub(JJ)I
   * 20 Weak Mutation 23: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - ReplaceComparisonOperator != -> -1
   * 21 Weak Mutation 24: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:50 - InsertUnaryOp Negation
   * 22 Weak Mutation 27: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:56 - InsertUnaryOp Negation
   * 23 Weak Mutation 26: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:55 - InsertUnaryOp Negation
   * 24 Weak Mutation 29: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:56 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 28: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:56 - InsertUnaryOp IINC 1
   */
  @Test
  public void test16()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("La;#;Lm,", (-1L), 0L, (-1L), 0L, 938, (-1L));
      assertNotNull(checkpointEnd0);
      
      checkpointEnd0.postLogWork((long) 938);
      assertEquals("time=2013-06-01 11:39:00.012 lastNodeId=0 lastDbId=938 id=-1 rootExists=true ckptStartLsn=0xffffffff/0xffffffff root=0x0/0x0 firstActive=0xffffffff/0xffffffff", checkpointEnd0.toString());
      assertEquals((-1L), checkpointEnd0.getCheckpointStartLsn());
  }
}
