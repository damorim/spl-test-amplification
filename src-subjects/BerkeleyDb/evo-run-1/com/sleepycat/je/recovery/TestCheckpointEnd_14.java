/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.recovery;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.recovery.CheckpointEnd;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestCheckpointEnd_14 {


  //Test case number: 14
  /*
   * 11 covered goals:
   * 1 Weak Mutation 244: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - DeleteField: lastDbIdI
   * 2 Weak Mutation 242: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp +1
   * 3 Weak Mutation 243: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp -1
   * 4 Weak Mutation 241: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp Negation
   * 5 com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I: root-Branch
   * 6 Weak Mutation 21: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:49 - ReplaceComparisonOperator != -> <
   * 7 Weak Mutation 25: com.sleepycat.je.recovery.CheckpointEnd.<init>(Ljava/lang/String;JJJJIJ)V:53 - InsertUnaryOp Negation
   * 8 Weak Mutation 244: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - DeleteField: lastDbIdI
   * 9 Weak Mutation 242: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp +1
   * 10 Weak Mutation 243: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp -1
   * 11 Weak Mutation 241: com.sleepycat.je.recovery.CheckpointEnd.getLastDbId()I:207 - InsertUnaryOp Negation
   */
  @Test
  public void test14()  throws Throwable  {
      CheckpointEnd checkpointEnd0 = new CheckpointEnd("DuIpCountLN_T2X", 2035L, 2035L, 2035L, 2035L, 17, 2035L);
      assertNotNull(checkpointEnd0);
      
      int int0 = checkpointEnd0.getLastDbId();
      assertEquals("time=2013-06-01 11:38:59.675 lastNodeId=2035 lastDbId=17 id=2035 rootExists=true ckptStartLsn=0x0/0x7f3 root=0x0/0x7f3 firstActive=0x0/0x7f3", checkpointEnd0.toString());
      assertEquals(17, int0);
  }
}
