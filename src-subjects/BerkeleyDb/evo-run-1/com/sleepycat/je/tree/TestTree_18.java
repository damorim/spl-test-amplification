/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.CursorsExistException;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.NodeNotEmptyException;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeStats;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.tree.WithRootLatched;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestTree_18 {


  //Test case number: 18
  /*
   * 32 covered goals:
   * 1 Weak Mutation 216: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC -1
   * 2 Weak Mutation 217: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 214: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp Negation
   * 4 Weak Mutation 215: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 220: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> -2
   * 6 Weak Mutation 221: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp Negation
   * 7 Weak Mutation 222: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 223: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp IINC -1
   * 9 Weak Mutation 218: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> 0
   * 10 Weak Mutation 219: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> 1
   * 11 Weak Mutation 224: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - DeleteStatement: searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;
   * 12 Weak Mutation 250: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:712 - ReplaceComparisonOperator != null -> = null
   * 13 Weak Mutation 344: com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;:1077 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 345: com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;:1136 - ReplaceComparisonOperator != null -> = null
   * 15 com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z: I7 Branch 32 IFEQ L694 - false
   * 16 com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z: I86 Branch 34 IFNONNULL L712 - false
   * 17 com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;: I7 Branch 51 IFNONNULL L1077 - false
   * 18 com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;: I15 Branch 52 IFNONNULL L1136 - false
   * 19 Weak Mutation 220: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> -2
   * 20 Weak Mutation 221: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp Negation
   * 21 Weak Mutation 222: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 223: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 216: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 217: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - ReplaceComparisonOperator == -> !=
   * 25 Weak Mutation 218: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> 0
   * 26 Weak Mutation 219: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - ReplaceConstant - -1 -> 1
   * 27 Weak Mutation 214: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp Negation
   * 28 Weak Mutation 215: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 224: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:695 - DeleteStatement: searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;
   * 30 Weak Mutation 250: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:712 - ReplaceComparisonOperator != null -> = null
   * 31 Weak Mutation 345: com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;:1136 - ReplaceComparisonOperator != null -> = null
   * 32 Weak Mutation 344: com.sleepycat.je.tree.Tree.searchSplitsAllowed([BJZ)Lcom/sleepycat/je/tree/IN;:1077 - ReplaceComparisonOperator != null -> = null
   */
  @Test
  public void test18()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      Tree tree0 = new Tree();
      TreeLocation treeLocation0 = new TreeLocation();
      tree0.getParentBINForChildLN(treeLocation0, (byte[]) null, (byte[]) null, (LN) mapLN0, true, true, false, false);
      assertEquals(101653L, mapLN0.getLastId());
      assertEquals(101653L, mapLN0.getNextNodeId());
  }
}
