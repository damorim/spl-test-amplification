/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.cleaner.FileSummary;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeLocation;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestNode {


  //Test case number: 0
  /*
   * 11 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - InsertUnaryOp Negation
   * 2 Weak Mutation 1: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - DeleteField: lastAllocatedIdJ
   * 3 Weak Mutation 2: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - InsertUnaryOp Negation of id
   * 4 Weak Mutation 3: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - DeleteStatement: longSub(JJ)I
   * 5 Weak Mutation 4: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - ReplaceComparisonOperator >= -> ==
   * 6 com.sleepycat.je.tree.Node.setLastNodeId(J)V: I5 Branch 1 IFGE L22 - true
   * 7 Weak Mutation 0: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - InsertUnaryOp Negation
   * 8 Weak Mutation 1: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - DeleteField: lastAllocatedIdJ
   * 9 Weak Mutation 2: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - InsertUnaryOp Negation of id
   * 10 Weak Mutation 3: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - DeleteStatement: longSub(JJ)I
   * 11 Weak Mutation 4: com.sleepycat.je.tree.Node.setLastNodeId(J)V:22 - ReplaceComparisonOperator >= -> ==
   */
  @Test
  public void test0()  throws Throwable  {
      Node.setLastNodeId(0L);
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * 1 Weak Mutation 26: com.sleepycat.je.tree.Node.getLevel()I:92 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.Node.getLevel()I: root-Branch
   * 3 Weak Mutation 8: com.sleepycat.je.tree.Node.<init>(Z)V:42 - InsertUnaryOp Negation of init
   * 4 Weak Mutation 9: com.sleepycat.je.tree.Node.<init>(Z)V:42 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 26: com.sleepycat.je.tree.Node.getLevel()I:92 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.tree.Node.<init>(Z)V: I7 Branch 2 IFEQ L42 - true
   */
  @Test
  public void test1()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN();
      int int0 = dupCountLN0.getLevel();
      assertEquals(2L, dupCountLN0.getLastId());
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 19 covered goals:
   * 1 Weak Mutation 78: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - InsertUnaryOp Negation
   * 2 Weak Mutation 79: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - DeleteField: nodeIdJ
   * 3 Weak Mutation 80: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 4 com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V: root-Branch
   * 5 Weak Mutation 10: com.sleepycat.je.tree.Node.<init>(Z)V:43 - DeleteStatement: getNextNodeId()J
   * 6 Weak Mutation 11: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - InsertUnaryOp Negation
   * 7 Weak Mutation 12: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - DeleteField: lastAllocatedIdJ
   * 8 Weak Mutation 13: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 14: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> -1
   * 10 Weak Mutation 15: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> 2
   * 11 Weak Mutation 17: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> %
   * 12 Weak Mutation 16: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> -
   * 13 Weak Mutation 19: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> *
   * 14 Weak Mutation 18: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 78: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - InsertUnaryOp Negation
   * 16 Weak Mutation 79: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - DeleteField: nodeIdJ
   * 17 Weak Mutation 80: com.sleepycat.je.tree.Node.writeToLog(Ljava/nio/ByteBuffer;)V:216 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 18 com.sleepycat.je.tree.Node.getNextNodeId()J: root-Branch
   * 19 com.sleepycat.je.tree.Node.<init>(Z)V: I7 Branch 2 IFEQ L42 - false
   */
  @Test
  public void test2()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN((FileSummary) null);
      // Undeclared exception!
      try {
        fileSummaryLN0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 21: com.sleepycat.je.tree.Node.getLastId()J:58 - DeleteField: lastAllocatedIdJ
   * 2 Weak Mutation 20: com.sleepycat.je.tree.Node.getLastId()J:58 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.tree.Node.getLastId()J: root-Branch
   * 4 Weak Mutation 21: com.sleepycat.je.tree.Node.getLastId()J:58 - DeleteField: lastAllocatedIdJ
   * 5 Weak Mutation 20: com.sleepycat.je.tree.Node.getLastId()J:58 - InsertUnaryOp Negation
   */
  @Test
  public void test3()  throws Throwable  {
      long long0 = Node.getLastId();
      assertEquals((-2L), long0);
  }

  //Test case number: 4
  /*
   * 27 covered goals:
   * 1 Weak Mutation 23: com.sleepycat.je.tree.Node.getNodeId()J:69 - DeleteField: nodeIdJ
   * 2 Weak Mutation 22: com.sleepycat.je.tree.Node.getNodeId()J:69 - InsertUnaryOp Negation
   * 3 Weak Mutation 63: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 62: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: getType()Ljava/lang/String;
   * 5 Weak Mutation 61: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - ReplaceConstant - < -> 
   * 6 Weak Mutation 68: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: toString()Ljava/lang/String;
   * 7 Weak Mutation 64: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - ReplaceConstant - / -> 
   * 8 Weak Mutation 65: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 9 Weak Mutation 66: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: getNodeId()J
   * 10 Weak Mutation 67: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 11 Weak Mutation 69: com.sleepycat.je.tree.Node.getType()Ljava/lang/String;:176 - DeleteStatement: getClass()Ljava/lang/Class;
   * 12 Weak Mutation 70: com.sleepycat.je.tree.Node.getType()Ljava/lang/String;:176 - DeleteStatement: getName()Ljava/lang/String;
   * 13 com.sleepycat.je.tree.Node.getType()Ljava/lang/String;: root-Branch
   * 14 com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;: root-Branch
   * 15 com.sleepycat.je.tree.Node.getNodeId()J: root-Branch
   * 16 Weak Mutation 23: com.sleepycat.je.tree.Node.getNodeId()J:69 - DeleteField: nodeIdJ
   * 17 Weak Mutation 22: com.sleepycat.je.tree.Node.getNodeId()J:69 - InsertUnaryOp Negation
   * 18 Weak Mutation 63: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 19 Weak Mutation 62: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: getType()Ljava/lang/String;
   * 20 Weak Mutation 61: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - ReplaceConstant - < -> 
   * 21 Weak Mutation 68: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: toString()Ljava/lang/String;
   * 22 Weak Mutation 69: com.sleepycat.je.tree.Node.getType()Ljava/lang/String;:176 - DeleteStatement: getClass()Ljava/lang/Class;
   * 23 Weak Mutation 70: com.sleepycat.je.tree.Node.getType()Ljava/lang/String;:176 - DeleteStatement: getName()Ljava/lang/String;
   * 24 Weak Mutation 64: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - ReplaceConstant - / -> 
   * 25 Weak Mutation 65: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 26 Weak Mutation 66: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: getNodeId()J
   * 27 Weak Mutation 67: com.sleepycat.je.tree.Node.shortDescription()Ljava/lang/String;:172 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   */
  @Test
  public void test4()  throws Throwable  {
      NameLN nameLN0 = new NameLN((DatabaseId) null);
      String string0 = nameLN0.shortDescription();
      assertEquals((-1L), nameLN0.getNodeId());
      assertEquals("<com.sleepycat.je.tree.NameLN/-1", string0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 25: com.sleepycat.je.tree.Node.containsDuplicates()Z:84 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.Node.containsDuplicates()Z: root-Branch
   * 3 Weak Mutation 25: com.sleepycat.je.tree.Node.containsDuplicates()Z:84 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test5()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      boolean boolean0 = fileSummaryLN0.containsDuplicates();
      assertEquals(14L, fileSummaryLN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.je.tree.Node.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:97 - ReplaceConstant - matchLNByNodeId called on non DIN/DBIN -> 
   * 2 com.sleepycat.je.tree.Node.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z: root-Branch
   * 3 Weak Mutation 27: com.sleepycat.je.tree.Node.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:97 - ReplaceConstant - matchLNByNodeId called on non DIN/DBIN -> 
   */
  @Test
  public void test6()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      TreeLocation treeLocation0 = new TreeLocation();
      try {
        fileSummaryLN0.matchLNByNodeId(treeLocation0, (long) 0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * matchLNByNodeId called on non DIN/DBIN
         */
      }
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.tree.Node.getMemorySizeIncludedByParent()J:136 - ReplaceConstant - 0 -> -1
   * 2 Weak Mutation 28: com.sleepycat.je.tree.Node.getMemorySizeIncludedByParent()J:136 - ReplaceConstant - 0 -> 1
   * 3 com.sleepycat.je.tree.Node.getMemorySizeIncludedByParent()J: root-Branch
   * 4 Weak Mutation 29: com.sleepycat.je.tree.Node.getMemorySizeIncludedByParent()J:136 - ReplaceConstant - 0 -> -1
   * 5 Weak Mutation 28: com.sleepycat.je.tree.Node.getMemorySizeIncludedByParent()J:136 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test7()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      long long0 = fileSummaryLN0.getMemorySizeIncludedByParent();
      assertEquals(32L, fileSummaryLN0.getLastId());
      assertEquals(0L, long0);
  }

  //Test case number: 8
  /*
   * 53 covered goals:
   * 1 Weak Mutation 31: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 30: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 32: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 4 Weak Mutation 33: com.sleepycat.je.tree.Node.beginTag()Ljava/lang/String;:147 - ReplaceConstant - <node> -> 
   * 5 Weak Mutation 34: com.sleepycat.je.tree.Node.endTag()Ljava/lang/String;:151 - ReplaceConstant - </node> -> 
   * 6 Weak Mutation 42: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp Negation of nSpaces
   * 7 Weak Mutation 43: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 nSpaces
   * 8 Weak Mutation 46: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 44: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 nSpaces
   * 10 Weak Mutation 45: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: indent(I)Ljava/lang/String;
   * 11 Weak Mutation 47: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp Negation of dumpTags
   * 12 Weak Mutation 50: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 49: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC -1 dumpTags
   * 14 Weak Mutation 48: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC 1 dumpTags
   * 15 Weak Mutation 51: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:162 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 54: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 17 Weak Mutation 53: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteField: nodeIdJ
   * 18 Weak Mutation 52: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - InsertUnaryOp Negation
   * 19 Weak Mutation 55: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp Negation of dumpTags
   * 20 Weak Mutation 58: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - ReplaceComparisonOperator == -> !=
   * 21 Weak Mutation 57: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC -1 dumpTags
   * 22 Weak Mutation 56: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC 1 dumpTags
   * 23 Weak Mutation 59: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:166 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 60: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:168 - DeleteStatement: toString()Ljava/lang/String;
   * 25 com.sleepycat.je.tree.Node.endTag()Ljava/lang/String;: root-Branch
   * 26 com.sleepycat.je.tree.Node.toString()Ljava/lang/String;: root-Branch
   * 27 com.sleepycat.je.tree.Node.beginTag()Ljava/lang/String;: root-Branch
   * 28 com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;: I16 Branch 3 IFEQ L161 - false
   * 29 com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;: I34 Branch 4 IFEQ L165 - false
   * 30 Weak Mutation 31: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 30: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 34: com.sleepycat.je.tree.Node.endTag()Ljava/lang/String;:151 - ReplaceConstant - </node> -> 
   * 33 Weak Mutation 32: com.sleepycat.je.tree.Node.toString()Ljava/lang/String;:143 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 34 Weak Mutation 33: com.sleepycat.je.tree.Node.beginTag()Ljava/lang/String;:147 - ReplaceConstant - <node> -> 
   * 35 Weak Mutation 42: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp Negation of nSpaces
   * 36 Weak Mutation 43: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 nSpaces
   * 37 Weak Mutation 46: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 47: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp Negation of dumpTags
   * 39 Weak Mutation 44: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 nSpaces
   * 40 Weak Mutation 45: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: indent(I)Ljava/lang/String;
   * 41 Weak Mutation 51: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:162 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 42 Weak Mutation 50: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - ReplaceComparisonOperator == -> !=
   * 43 Weak Mutation 49: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC -1 dumpTags
   * 44 Weak Mutation 48: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC 1 dumpTags
   * 45 Weak Mutation 55: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp Negation of dumpTags
   * 46 Weak Mutation 54: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 47 Weak Mutation 53: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteField: nodeIdJ
   * 48 Weak Mutation 52: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - InsertUnaryOp Negation
   * 49 Weak Mutation 59: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:166 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 50 Weak Mutation 58: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - ReplaceComparisonOperator == -> !=
   * 51 Weak Mutation 57: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC -1 dumpTags
   * 52 Weak Mutation 56: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC 1 dumpTags
   * 53 Weak Mutation 60: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:168 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      LN lN0 = new LN(byteArray0);
      String string0 = lN0.toString();
      assertEquals(42L, lN0.getNodeId());
      assertEquals("<ln>\n  <node>42</node>\n  <data>0 0 0 0 </data>\n</ln>", string0);
  }

  //Test case number: 9
  /*
   * 36 covered goals:
   * 1 Weak Mutation 35: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteField: outLjava/io/PrintStream;
   * 2 Weak Mutation 38: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp IINC -1 nSpaces
   * 3 Weak Mutation 39: com.sleepycat.je.tree.Node.dump(I)V:155 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 36: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp Negation of nSpaces
   * 5 Weak Mutation 37: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp IINC 1 nSpaces
   * 6 Weak Mutation 40: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 7 Weak Mutation 41: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteStatement: print(Ljava/lang/String;)V
   * 8 com.sleepycat.je.tree.Node.dump(I)V: root-Branch
   * 9 Weak Mutation 34: com.sleepycat.je.tree.Node.endTag()Ljava/lang/String;:151 - ReplaceConstant - </node> -> 
   * 10 Weak Mutation 33: com.sleepycat.je.tree.Node.beginTag()Ljava/lang/String;:147 - ReplaceConstant - <node> -> 
   * 11 Weak Mutation 42: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp Negation of nSpaces
   * 12 Weak Mutation 43: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC 1 nSpaces
   * 13 Weak Mutation 46: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 47: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp Negation of dumpTags
   * 15 Weak Mutation 44: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - InsertUnaryOp IINC -1 nSpaces
   * 16 Weak Mutation 45: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:160 - DeleteStatement: indent(I)Ljava/lang/String;
   * 17 Weak Mutation 51: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:162 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 50: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - ReplaceComparisonOperator == -> !=
   * 19 Weak Mutation 49: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC -1 dumpTags
   * 20 Weak Mutation 48: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:161 - InsertUnaryOp IINC 1 dumpTags
   * 21 Weak Mutation 55: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp Negation of dumpTags
   * 22 Weak Mutation 54: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 23 Weak Mutation 53: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - DeleteField: nodeIdJ
   * 24 Weak Mutation 52: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:164 - InsertUnaryOp Negation
   * 25 Weak Mutation 59: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:166 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 58: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 57: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC -1 dumpTags
   * 28 Weak Mutation 56: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:165 - InsertUnaryOp IINC 1 dumpTags
   * 29 Weak Mutation 60: com.sleepycat.je.tree.Node.dumpString(IZ)Ljava/lang/String;:168 - DeleteStatement: toString()Ljava/lang/String;
   * 30 Weak Mutation 35: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteField: outLjava/io/PrintStream;
   * 31 Weak Mutation 38: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp IINC -1 nSpaces
   * 32 Weak Mutation 39: com.sleepycat.je.tree.Node.dump(I)V:155 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 36: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp Negation of nSpaces
   * 34 Weak Mutation 37: com.sleepycat.je.tree.Node.dump(I)V:155 - InsertUnaryOp IINC 1 nSpaces
   * 35 Weak Mutation 40: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 36 Weak Mutation 41: com.sleepycat.je.tree.Node.dump(I)V:155 - DeleteStatement: print(Ljava/lang/String;)V
   */
  @Test
  public void test9()  throws Throwable  {
      NameLN nameLN0 = new NameLN((DatabaseId) null);
      nameLN0.dump(63);
      assertEquals("<com.sleepycat.je.tree.NameLN/50", nameLN0.shortDescription());
      assertEquals("<nameLN>\n  <node>50</node>\n  <data></data>\n</nameLN>\n<deleted val=\"false\">\n<id val=\"null\">\n", nameLN0.toString());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 71: com.sleepycat.je.tree.Node.marshallOutsideWriteLatch()Z:189 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.Node.marshallOutsideWriteLatch()Z: root-Branch
   * 3 Weak Mutation 71: com.sleepycat.je.tree.Node.marshallOutsideWriteLatch()Z:189 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test10()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN();
      boolean boolean0 = dupCountLN0.marshallOutsideWriteLatch();
      assertEquals(2L, dupCountLN0.getNextNodeId());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Weak Mutation 72: com.sleepycat.je.tree.Node.countAsObsoleteWhenLogged()Z:196 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.Node.countAsObsoleteWhenLogged()Z: root-Branch
   * 3 Weak Mutation 72: com.sleepycat.je.tree.Node.countAsObsoleteWhenLogged()Z:196 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      DIN dIN0 = new DIN();
      boolean boolean0 = dIN0.countAsObsoleteWhenLogged();
      assertEquals(11L, dIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 11 covered goals:
   * 1 Weak Mutation 76: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 7
   * 2 Weak Mutation 77: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 9
   * 3 Weak Mutation 73: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 0
   * 4 Weak Mutation 74: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 1
   * 5 Weak Mutation 75: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> -1
   * 6 com.sleepycat.je.tree.Node.getLogSize()I: root-Branch
   * 7 Weak Mutation 76: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 7
   * 8 Weak Mutation 77: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 9
   * 9 Weak Mutation 73: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 0
   * 10 Weak Mutation 74: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> 1
   * 11 Weak Mutation 75: com.sleepycat.je.tree.Node.getLogSize()I:209 - ReplaceConstant - 8 -> -1
   */
  @Test
  public void test12()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN();
      // Undeclared exception!
      try {
        dupCountLN0.getLogSize();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Weak Mutation 81: com.sleepycat.je.tree.Node.readFromLog(Ljava/nio/ByteBuffer;B)V:224 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   * 2 com.sleepycat.je.tree.Node.readFromLog(Ljava/nio/ByteBuffer;B)V: root-Branch
   * 3 Weak Mutation 81: com.sleepycat.je.tree.Node.readFromLog(Ljava/nio/ByteBuffer;B)V:224 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   */
  @Test
  public void test13()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      assertEquals(37L, mapLN0.getNextNodeId());
      
      // Undeclared exception!
      try {
        mapLN0.readFromLog((ByteBuffer) null, (byte) (-16));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 14
  /*
   * 18 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - DeleteField: nodeIdJ
   * 2 Weak Mutation 24: com.sleepycat.je.tree.Node.setNodeId(J)V:73 - InsertUnaryOp Negation of nid
   * 3 Weak Mutation 84: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - InsertUnaryOp Negation
   * 4 Weak Mutation 87: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:233 - ReplaceConstant - </node> -> 
   * 5 Weak Mutation 86: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 6 Weak Mutation 83: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 82: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:231 - ReplaceConstant - <node> -> 
   * 8 Weak Mutation 88: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:233 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 24: com.sleepycat.je.tree.Node.setNodeId(J)V:73 - InsertUnaryOp Negation of nid
   * 10 Weak Mutation 85: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - DeleteField: nodeIdJ
   * 11 Weak Mutation 84: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - InsertUnaryOp Negation
   * 12 Weak Mutation 87: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:233 - ReplaceConstant - </node> -> 
   * 13 Weak Mutation 86: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:232 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 83: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 82: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:231 - ReplaceConstant - <node> -> 
   * 16 Weak Mutation 88: com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V:233 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 17 com.sleepycat.je.tree.Node.dumpLog(Ljava/lang/StringBuffer;Z)V: root-Branch
   * 18 com.sleepycat.je.tree.Node.setNodeId(J)V: root-Branch
   */
  @Test
  public void test14()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "\u65E5\u6587");
      mapLN0.setNodeId((-1636L));
      mapLN0.dumpLog(stringBuffer0, true);
      assertEquals((-1636L), mapLN0.getNodeId());
      assertEquals(13L, mapLN0.getNextNodeId());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * 1 com.sleepycat.je.tree.Node.postLogWork(J)V: root-Branch
   * 2 Weak Mutation 10: com.sleepycat.je.tree.Node.<init>(Z)V:43 - DeleteStatement: getNextNodeId()J
   */
  @Test
  public void test15()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN((FileSummary) null);
      fileSummaryLN0.postLogWork(0L);
      assertEquals(35L, fileSummaryLN0.getNodeId());
      assertEquals(37L, fileSummaryLN0.getNextNodeId());
  }

  //Test case number: 16
  /*
   * 12 covered goals:
   * 1 com.sleepycat.je.tree.Node.postFetchInit(Lcom/sleepycat/je/dbi/DatabaseImpl;J)V: root-Branch
   * 2 Weak Mutation 8: com.sleepycat.je.tree.Node.<init>(Z)V:42 - InsertUnaryOp Negation of init
   * 3 Weak Mutation 9: com.sleepycat.je.tree.Node.<init>(Z)V:42 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 11: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - InsertUnaryOp Negation
   * 5 Weak Mutation 12: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - DeleteField: lastAllocatedIdJ
   * 6 Weak Mutation 13: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 14: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> -1
   * 8 Weak Mutation 15: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceConstant - 1 -> 2
   * 9 Weak Mutation 17: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 16: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> -
   * 11 Weak Mutation 19: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 18: com.sleepycat.je.tree.Node.getNextNodeId()J:51 - ReplaceArithmeticOperator + -> /
   */
  @Test
  public void test16()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      fileSummaryLN0.postFetchInit(databaseImpl0, (long) (byte) (-86));
      assertEquals(6L, databaseImpl0.getEofNodeId());
      assertEquals(7L, fileSummaryLN0.getLastId());
  }
}
