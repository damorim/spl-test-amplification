/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_14 {


  //Test case number: 14
  /*
   * 21 covered goals:
   * 1 Weak Mutation 121: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - DeleteField: stateB
   * 2 Weak Mutation 77: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - ReplaceConstant - 2 -> 0
   * 3 Weak Mutation 78: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - ReplaceConstant - 2 -> 1
   * 4 Weak Mutation 79: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - ReplaceConstant - 2 -> -1
   * 5 Weak Mutation 74: com.sleepycat.je.tree.ChildReference.setLsn(J)V:149 - InsertUnaryOp Negation
   * 6 Weak Mutation 75: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - InsertUnaryOp Negation
   * 7 Weak Mutation 81: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - ReplaceBitwiseOperator | -> &
   * 8 Weak Mutation 80: com.sleepycat.je.tree.ChildReference.setLsn(J)V:150 - ReplaceConstant - 2 -> 3
   * 9 Weak Mutation 127: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceBitwiseOperator & -> |
   * 10 Weak Mutation 126: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 4 -> 5
   * 11 Weak Mutation 125: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 4 -> 3
   * 12 Weak Mutation 124: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 4 -> -1
   * 13 Weak Mutation 123: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 4 -> 1
   * 14 Weak Mutation 122: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 4 -> 0
   * 15 Weak Mutation 120: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - InsertUnaryOp Negation
   * 16 Weak Mutation 128: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceBitwiseOperator & -> ^
   * 17 Weak Mutation 131: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceComparisonOperator == -> -2
   * 18 Weak Mutation 133: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 131: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceComparisonOperator == -> -2
   * 20 Weak Mutation 133: com.sleepycat.je.tree.ChildReference.getMigrate()Z:175 - ReplaceConstant - 0 -> 1
   * 21 com.sleepycat.je.tree.ChildReference.getMigrate()Z: I6 Branch 9 IFEQ L175 - true
   */
  @Test
  public void test14()  throws Throwable  {
      ChildReference childReference0 = new ChildReference();
      childReference0.setLsn(0L);
      boolean boolean0 = childReference0.getMigrate();
      assertEquals(2, childReference0.getState());
      assertEquals(false, boolean0);
  }
}
