/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_21 {


  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 Weak Mutation 226: com.sleepycat.je.tree.ChildReference.logEntryIsTransactional()Z:228 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.ChildReference.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 226: com.sleepycat.je.tree.ChildReference.logEntryIsTransactional()Z:228 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test21()  throws Throwable  {
      ChildReference childReference0 = new ChildReference();
      boolean boolean0 = childReference0.logEntryIsTransactional();
      assertEquals("<lsn/>\n<key v=\"\"/>\n<target/>\n<knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"false\"/>", childReference0.toString());
      assertEquals(false, boolean0);
  }
}
