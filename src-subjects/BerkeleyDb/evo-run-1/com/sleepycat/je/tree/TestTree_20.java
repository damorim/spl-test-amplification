/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.CursorsExistException;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.NodeNotEmptyException;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeStats;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.tree.WithRootLatched;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestTree_20 {


  //Test case number: 20
  /*
   * 18 covered goals:
   * 1 Weak Mutation 288: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp Negation
   * 2 Weak Mutation 289: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp IINC 1
   * 3 Weak Mutation 290: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 291: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 296: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:890 - DeleteStatement: getNEntries()I
   * 6 Weak Mutation 299: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:890 - ReplaceComparisonOperator != -> -1
   * 7 Weak Mutation 300: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:891 - DeleteStatement: getIdentifierKey()[B
   * 8 Weak Mutation 314: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:987 - ReplaceConstant - TYPE ERROR? -> 
   * 9 com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;: root-Branch
   * 10 com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;: I8 Branch 48 IFNE L890 - false
   * 11 Weak Mutation 314: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:987 - ReplaceConstant - TYPE ERROR? -> 
   * 12 Weak Mutation 288: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp Negation
   * 13 Weak Mutation 289: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp IINC 1
   * 14 Weak Mutation 290: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 291: com.sleepycat.je.tree.Tree.getNextBin(Lcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:871 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 296: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:890 - DeleteStatement: getNEntries()I
   * 17 Weak Mutation 299: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:890 - ReplaceComparisonOperator != -> -1
   * 18 Weak Mutation 300: com.sleepycat.je.tree.Tree.getNextBinInternal(ZLcom/sleepycat/je/tree/BIN;Z)Lcom/sleepycat/je/tree/BIN;:891 - DeleteStatement: getIdentifierKey()[B
   */
  @Test
  public void test20()  throws Throwable  {
      Tree tree0 = new Tree();
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        tree0.getNextBin(bIN0, true);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * TYPE ERROR?
         */
      }
  }
}
