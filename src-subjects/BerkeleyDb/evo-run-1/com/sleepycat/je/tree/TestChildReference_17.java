/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_17 {


  //Test case number: 17
  /*
   * 25 covered goals:
   * 1 Weak Mutation 154: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteField: key[B
   * 2 Weak Mutation 155: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteStatement: getByteArrayLogSize([B)I
   * 3 Weak Mutation 156: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteStatement: getLongLogSize()I
   * 4 Weak Mutation 157: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> -
   * 5 Weak Mutation 158: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> %
   * 6 Weak Mutation 159: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> /
   * 7 Weak Mutation 163: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 162: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 161: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 160: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> *
   * 11 Weak Mutation 165: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 164: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> /
   * 13 com.sleepycat.je.tree.ChildReference.getLogSize()I: root-Branch
   * 14 Weak Mutation 154: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteField: key[B
   * 15 Weak Mutation 155: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteStatement: getByteArrayLogSize([B)I
   * 16 Weak Mutation 156: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - DeleteStatement: getLongLogSize()I
   * 17 Weak Mutation 157: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> -
   * 18 Weak Mutation 158: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> %
   * 19 Weak Mutation 159: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> /
   * 20 Weak Mutation 163: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 162: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 161: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 160: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> *
   * 24 Weak Mutation 165: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 164: com.sleepycat.je.tree.ChildReference.getLogSize()I:192 - ReplaceArithmeticOperator + -> /
   */
  @Test
  public void test17()  throws Throwable  {
      ChildReference childReference0 = new ChildReference();
      int int0 = childReference0.getLogSize();
      assertEquals("<lsn/>\n<key v=\"\"/>\n<target/>\n<knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"false\"/>", childReference0.toString());
      assertEquals(13, int0);
  }
}
