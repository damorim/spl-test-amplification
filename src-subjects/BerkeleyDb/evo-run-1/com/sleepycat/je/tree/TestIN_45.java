/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.InconsistentNodeException;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import java.io.StringWriter;

@RunWith(EvoSuiteRunner.class)
public class TestIN_45 {


  //Test case number: 45
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1299: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 1294: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp +1
   * 3 Weak Mutation 1295: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp -1
   * 4 Weak Mutation 1293: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp Negation
   * 5 Weak Mutation 1300: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1206 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.tree.IN.deleteEntry([BZ)Z: I4 Branch 66 IFNE L1205 - false
   * 7 Weak Mutation 1299: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - ReplaceComparisonOperator != -> -1
   * 8 Weak Mutation 1300: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1206 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 1294: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp +1
   * 10 Weak Mutation 1295: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp -1
   * 11 Weak Mutation 1293: com.sleepycat.je.tree.IN.deleteEntry([BZ)Z:1205 - InsertUnaryOp Negation
   */
  @Test
  public void test45()  throws Throwable  {
      DIN dIN0 = new DIN();
      assertNotNull(dIN0);
      
      byte[] byteArray0 = new byte[6];
      boolean boolean0 = dIN0.deleteEntry(byteArray0, true);
      assertEquals(112948L, dIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }
}
