/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.tree.BINReference;
import com.sleepycat.je.tree.Key;

@RunWith(EvoSuiteRunner.class)
public class TestBINReference_14 {


  //Test case number: 14
  /*
   * 16 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - InsertUnaryOp Negation
   * 2 Weak Mutation 55: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteStatement: longSub(JJ)I
   * 3 Weak Mutation 54: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteField: nodeIdJ
   * 4 Weak Mutation 53: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - InsertUnaryOp Negation
   * 5 Weak Mutation 52: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteField: nodeIdJ
   * 6 Weak Mutation 56: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceComparisonOperator != -> <
   * 7 Weak Mutation 60: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceConstant - 0 -> 1
   * 8 com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z: I13 Branch 12 IFNE L75 - true
   * 9 com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z: I26 Branch 13 IFNE L78 - true
   * 10 Weak Mutation 51: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - InsertUnaryOp Negation
   * 11 Weak Mutation 55: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteStatement: longSub(JJ)I
   * 12 Weak Mutation 54: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteField: nodeIdJ
   * 13 Weak Mutation 53: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - InsertUnaryOp Negation
   * 14 Weak Mutation 52: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteField: nodeIdJ
   * 15 Weak Mutation 56: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceComparisonOperator != -> <
   * 16 Weak Mutation 60: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[3];
      BINReference bINReference0 = new BINReference((long) (byte) (-44), databaseId0, byteArray0);
      BINReference bINReference1 = new BINReference((long) (byte)13, databaseId0, byteArray0);
      boolean boolean0 = bINReference0.equals((Object) bINReference1);
      assertFalse(bINReference1.equals(bINReference0));
      assertEquals((-44L), bINReference0.getNodeId());
      assertEquals(false, boolean0);
  }
}
