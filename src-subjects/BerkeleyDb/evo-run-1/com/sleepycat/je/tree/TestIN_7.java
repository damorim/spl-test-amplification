/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestIN_7 {


  //Test case number: 7
  /*
   * 24 covered goals:
   * 1 Weak Mutation 119: com.sleepycat.je.tree.IN.latch(Z)V:233 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 118: com.sleepycat.je.tree.IN.latch(Z)V:233 - InsertUnaryOp Negation
   * 3 Weak Mutation 1802: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - DeleteStatement: latch(Z)V
   * 4 Weak Mutation 1800: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 1801: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 1799: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp Negation
   * 7 Weak Mutation 1808: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - ReplaceComparisonOperator != -> -1
   * 8 Weak Mutation 1804: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - InsertUnaryOp Negation
   * 9 Weak Mutation 1805: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - DeleteStatement: longSub(JJ)I
   * 10 Weak Mutation 1803: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - DeleteStatement: getNodeId()J
   * 11 Weak Mutation 1809: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1770 - ReplaceConstant - 1 -> 0
   * 12 com.sleepycat.je.tree.IN.latch(Z)V: I3 Branch 7 IFEQ L233 - true
   * 13 com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z: I11 Branch 121 IFNE L1766 - false
   * 14 Weak Mutation 119: com.sleepycat.je.tree.IN.latch(Z)V:233 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 118: com.sleepycat.je.tree.IN.latch(Z)V:233 - InsertUnaryOp Negation
   * 16 Weak Mutation 1809: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1770 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 1808: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - ReplaceComparisonOperator != -> -1
   * 18 Weak Mutation 1804: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - InsertUnaryOp Negation
   * 19 Weak Mutation 1805: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - DeleteStatement: longSub(JJ)I
   * 20 Weak Mutation 1802: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - DeleteStatement: latch(Z)V
   * 21 Weak Mutation 1803: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1766 - DeleteStatement: getNodeId()J
   * 22 Weak Mutation 1800: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp IINC 1
   * 23 Weak Mutation 1801: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp IINC -1
   * 24 Weak Mutation 1799: com.sleepycat.je.tree.IN.isSoughtNode(JZ)Z:1765 - InsertUnaryOp Negation
   */
  @Test
  public void test7()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      assertNotNull(dBIN0);
      
      boolean boolean0 = dBIN0.isSoughtNode(0L, false);
      assertEquals(103175L, dBIN0.getNextNodeId());
      assertEquals(true, boolean0);
  }
}
