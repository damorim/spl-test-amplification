/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_15 {


  //Test case number: 15
  /*
   * 24 covered goals:
   * 1 Weak Mutation 135: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:181 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 134: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:181 - InsertUnaryOp Negation
   * 3 Weak Mutation 137: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - DeleteField: stateB
   * 4 Weak Mutation 136: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - InsertUnaryOp Negation
   * 5 Weak Mutation 139: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 1
   * 6 Weak Mutation 138: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 0
   * 7 Weak Mutation 141: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 3
   * 8 Weak Mutation 140: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> -1
   * 9 Weak Mutation 143: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceBitwiseOperator | -> &
   * 10 Weak Mutation 142: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 5
   * 11 Weak Mutation 144: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceBitwiseOperator | -> ^
   * 12 com.sleepycat.je.tree.ChildReference.setMigrate(Z)V: I3 Branch 10 IFEQ L181 - false
   * 13 Weak Mutation 19: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJB)V:42 - ReplaceBitwiseOperator | -> ^
   * 14 Weak Mutation 137: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - DeleteField: stateB
   * 15 Weak Mutation 136: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - InsertUnaryOp Negation
   * 16 Weak Mutation 139: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 1
   * 17 Weak Mutation 138: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 0
   * 18 Weak Mutation 141: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 3
   * 19 Weak Mutation 140: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> -1
   * 20 Weak Mutation 143: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceBitwiseOperator | -> &
   * 21 Weak Mutation 142: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceConstant - 4 -> 5
   * 22 Weak Mutation 135: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:181 - ReplaceComparisonOperator == -> !=
   * 23 Weak Mutation 134: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:181 - InsertUnaryOp Negation
   * 24 Weak Mutation 144: com.sleepycat.je.tree.ChildReference.setMigrate(Z)V:182 - ReplaceBitwiseOperator | -> ^
   */
  @Test
  public void test15()  throws Throwable  {
      LN lN0 = new LN();
      byte[] byteArray0 = new byte[1];
      ChildReference childReference0 = new ChildReference((Node) lN0, byteArray0, 0L, (byte) (-1));
      childReference0.setMigrate(true);
      assertEquals(4294970865L, lN0.getLastId());
      assertEquals(4294970865L, lN0.getNextNodeId());
  }
}
