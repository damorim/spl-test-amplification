/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.tree.Key;

@RunWith(EvoSuiteRunner.class)
public class TestKey_4 {


  //Test case number: 4
  /*
   * 53 covered goals:
   * 1 Weak Mutation 20: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 80: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> >
   * 3 Weak Mutation 85: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 84: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 87: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 6 Weak Mutation 86: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 7 Weak Mutation 83: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 8 Weak Mutation 93: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 9 Weak Mutation 92: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 10 Weak Mutation 95: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 94: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 89: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 13 Weak Mutation 88: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 14 Weak Mutation 91: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 15 Weak Mutation 90: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 16 Weak Mutation 102: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 17 Weak Mutation 100: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 18 Weak Mutation 101: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 19 Weak Mutation 98: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 20 Weak Mutation 99: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 21 Weak Mutation 96: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 22 Weak Mutation 97: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 23 Weak Mutation 104: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> %
   * 24 Weak Mutation 105: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> /
   * 25 com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I: I40 Branch 9 IF_ICMPNE L96 - true
   * 26 Weak Mutation 15: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 27 Weak Mutation 17: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteStatement: compareUnsignedBytes([B[B)I
   * 28 Weak Mutation 16: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 29 Weak Mutation 19: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - DeleteStatement: compareTo(Ljava/lang/Object;)I
   * 30 Weak Mutation 20: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator != -> <
   * 31 Weak Mutation 85: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 84: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 33 Weak Mutation 87: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 34 Weak Mutation 86: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 35 Weak Mutation 80: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> >
   * 36 Weak Mutation 83: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 37 Weak Mutation 93: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 38 Weak Mutation 92: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 39 Weak Mutation 95: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 40 Weak Mutation 94: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 41 Weak Mutation 89: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 42 Weak Mutation 88: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 43 Weak Mutation 91: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 44 Weak Mutation 90: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 45 Weak Mutation 102: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 46 Weak Mutation 100: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 47 Weak Mutation 101: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 48 Weak Mutation 98: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 49 Weak Mutation 99: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 50 Weak Mutation 96: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 51 Weak Mutation 97: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 52 Weak Mutation 104: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> %
   * 53 Weak Mutation 105: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> /
   */
  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte[] byteArray1 = new byte[2];
      byteArray1[1] = (byte) (-55);
      Key key0 = new Key(byteArray1);
      assertNotNull(key0);
      
      Key key1 = new Key(byteArray0);
      boolean boolean0 = key0.equals((Object) key1);
      assertEquals(false, boolean0);
      assertFalse(key1.equals(key0));
  }
}
