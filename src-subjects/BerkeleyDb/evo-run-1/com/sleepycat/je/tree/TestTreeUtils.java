/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.TreeUtils;

@RunWith(EvoSuiteRunner.class)
public class TestTreeUtils {


  //Test case number: 0
  /*
   * 9 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - ReplaceConstant -                                                                                                                                  -> 
   * 2 Weak Mutation 1: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 2: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - InsertUnaryOp Negation of nSpaces
   * 4 Weak Mutation 3: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - DeleteStatement: substring(II)Ljava/lang/String;
   * 5 com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;: root-Branch
   * 6 Weak Mutation 0: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - ReplaceConstant -                                                                                                                                  -> 
   * 7 Weak Mutation 1: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 2: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - InsertUnaryOp Negation of nSpaces
   * 9 Weak Mutation 3: com.sleepycat.je.tree.TreeUtils.indent(I)Ljava/lang/String;:16 - DeleteStatement: substring(II)Ljava/lang/String;
   */
  @Test
  public void test0()  throws Throwable  {
      String string0 = TreeUtils.indent((int) (byte)0);
      assertEquals("", string0);
  }

  //Test case number: 1
  /*
   * 52 covered goals:
   * 1 Weak Mutation 4: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:21 - ReplaceComparisonOperator = null -> != null
   * 2 Weak Mutation 5: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - InsertUnaryOp Negation
   * 3 Weak Mutation 6: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - DeleteField: DUMP_BINARYZ
   * 4 Weak Mutation 7: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 8: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 23: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 22: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 24: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 27: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceComparisonOperator < -> <=
   * 10 Weak Mutation 26: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceComparisonOperator < -> -2
   * 11 Weak Mutation 9: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp Negation of i
   * 12 Weak Mutation 10: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 11: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 12: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 0
   * 15 Weak Mutation 13: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 1
   * 16 Weak Mutation 14: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> -1
   * 17 Weak Mutation 15: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 254
   * 18 Weak Mutation 17: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceBitwiseOperator & -> |
   * 19 Weak Mutation 16: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 256
   * 20 Weak Mutation 19: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 18: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceBitwiseOperator & -> ^
   * 22 Weak Mutation 21: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:25 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 23 Weak Mutation 20: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:25 - ReplaceConstant -   -> 
   * 24 Weak Mutation 31: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:33 - DeleteStatement: toString()Ljava/lang/String;
   * 25 com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;: I9 Branch 1 IFNULL L21 - false
   * 26 com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;: I13 Branch 2 IFEQ L22 - false
   * 27 com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;: I43 Branch 3 IF_ICMPLT L23 - true
   * 28 com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;: I43 Branch 3 IF_ICMPLT L23 - false
   * 29 Weak Mutation 4: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:21 - ReplaceComparisonOperator = null -> != null
   * 30 Weak Mutation 5: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - InsertUnaryOp Negation
   * 31 Weak Mutation 6: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - DeleteField: DUMP_BINARYZ
   * 32 Weak Mutation 7: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:22 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 8: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 9: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp Negation of i
   * 35 Weak Mutation 10: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp IINC 1 i
   * 36 Weak Mutation 11: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - InsertUnaryOp IINC -1 i
   * 37 Weak Mutation 12: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 0
   * 38 Weak Mutation 13: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 1
   * 39 Weak Mutation 14: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> -1
   * 40 Weak Mutation 15: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 254
   * 41 Weak Mutation 17: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceBitwiseOperator & -> |
   * 42 Weak Mutation 16: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceConstant - 255 -> 256
   * 43 Weak Mutation 19: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 18: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:24 - ReplaceBitwiseOperator & -> ^
   * 45 Weak Mutation 21: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:25 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 46 Weak Mutation 20: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:25 - ReplaceConstant -   -> 
   * 47 Weak Mutation 23: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp IINC 1 i
   * 48 Weak Mutation 22: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp Negation of i
   * 49 Weak Mutation 24: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - InsertUnaryOp IINC -1 i
   * 50 Weak Mutation 27: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceComparisonOperator < -> <=
   * 51 Weak Mutation 26: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:23 - ReplaceComparisonOperator < -> -2
   * 52 Weak Mutation 31: com.sleepycat.je.tree.TreeUtils.dumpByteArray([B)Ljava/lang/String;:33 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      String string0 = TreeUtils.dumpByteArray(byteArray0);
      assertEquals("0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ", string0);
      assertNotNull(string0);
  }
}
