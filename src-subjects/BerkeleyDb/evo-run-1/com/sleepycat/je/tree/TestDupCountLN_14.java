/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DupCountLN;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestDupCountLN_14 {


  //Test case number: 14
  /*
   * 47 covered goals:
   * 1 com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;: I9 Branch 5 IFEQ L80 - true
   * 2 com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;: I64 Branch 6 IFEQ L88 - true
   * 3 Weak Mutation 0: com.sleepycat.je.tree.DupCountLN.<init>(I)V:20 - InsertUnaryOp Negation
   * 4 Weak Mutation 1: com.sleepycat.je.tree.DupCountLN.<init>(I)V:20 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 2: com.sleepycat.je.tree.DupCountLN.<init>(I)V:20 - InsertUnaryOp IINC -1
   * 6 Weak Mutation 64: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp Negation
   * 7 Weak Mutation 65: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 66: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC -1
   * 9 Weak Mutation 67: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 85: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 1
   * 11 Weak Mutation 84: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 0
   * 12 Weak Mutation 87: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 3
   * 13 Weak Mutation 86: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> -1
   * 14 Weak Mutation 81: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp Negation
   * 15 Weak Mutation 83: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 82: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 93: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 92: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: indent(I)Ljava/lang/String;
   * 19 Weak Mutation 95: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 94: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - <count v=" -> 
   * 21 Weak Mutation 89: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> %
   * 22 Weak Mutation 88: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> -
   * 23 Weak Mutation 91: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> *
   * 24 Weak Mutation 90: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> /
   * 25 Weak Mutation 102: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 103: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 0
   * 27 Weak Mutation 100: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 28 Weak Mutation 101: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - "/> -> 
   * 29 Weak Mutation 98: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp -1
   * 30 Weak Mutation 99: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteField: dupCountI
   * 31 Weak Mutation 96: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp Negation
   * 32 Weak Mutation 97: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp +1
   * 33 Weak Mutation 110: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC 1
   * 34 Weak Mutation 111: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 108: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 36 Weak Mutation 109: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp Negation
   * 37 Weak Mutation 106: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 9
   * 38 Weak Mutation 107: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 11
   * 39 Weak Mutation 104: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 1
   * 40 Weak Mutation 105: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> -1
   * 41 Weak Mutation 117: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - ReplaceComparisonOperator == -> !=
   * 42 Weak Mutation 116: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 115: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC 1
   * 44 Weak Mutation 114: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp Negation
   * 45 Weak Mutation 113: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 46 Weak Mutation 112: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - ReplaceConstant - 0 -> 1
   * 47 Weak Mutation 125: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:92 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test14()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN(5);
      String string0 = dupCountLN0.dumpString(5, false);
      assertEquals(10001086L, dupCountLN0.getNextNodeId());
      assertEquals("       <count v=\"5\"/>\n       <node>10001084</node>\n       <data></data>\n", string0);
  }
}
