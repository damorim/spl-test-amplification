/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_23 {


  //Test case number: 23
  /*
   * 83 covered goals:
   * 1 Weak Mutation 262: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp IINC -1
   * 2 Weak Mutation 263: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - DeleteStatement: indent(I)Ljava/lang/String;
   * 3 Weak Mutation 260: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp Negation
   * 4 Weak Mutation 261: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 264: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 6 Weak Mutation 266: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:248 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 265: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:248 - ReplaceConstant - <key/> -> 
   * 8 com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;: I46 Branch 14 IFNONNULL L246 - false
   * 9 Weak Mutation 5: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJ)V:36 - InsertUnaryOp Negation
   * 10 Weak Mutation 6: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJ)V:36 - ReplaceConstant - 2 -> 0
   * 11 Weak Mutation 7: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJ)V:36 - ReplaceConstant - 2 -> 1
   * 12 Weak Mutation 8: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJ)V:36 - ReplaceConstant - 2 -> -1
   * 13 Weak Mutation 9: com.sleepycat.je.tree.ChildReference.<init>(Lcom/sleepycat/je/tree/Node;[BJ)V:36 - ReplaceConstant - 2 -> 3
   * 14 Weak Mutation 85: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 8 -> 0
   * 15 Weak Mutation 84: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - DeleteField: stateB
   * 16 Weak Mutation 87: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 8 -> -1
   * 17 Weak Mutation 86: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 8 -> 1
   * 18 Weak Mutation 83: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - InsertUnaryOp Negation
   * 19 Weak Mutation 94: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceComparisonOperator == -> -2
   * 20 Weak Mutation 89: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 8 -> 9
   * 21 Weak Mutation 88: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 8 -> 7
   * 22 Weak Mutation 91: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceBitwiseOperator & -> ^
   * 23 Weak Mutation 90: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceBitwiseOperator & -> |
   * 24 Weak Mutation 100: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceBitwiseOperator & -> |
   * 25 Weak Mutation 101: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceBitwiseOperator & -> ^
   * 26 Weak Mutation 98: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - DeleteField: stateB
   * 27 Weak Mutation 99: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceConstant - 1 -> 0
   * 28 Weak Mutation 96: com.sleepycat.je.tree.ChildReference.isPendingDeleted()Z:157 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 97: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - InsertUnaryOp Negation
   * 30 Weak Mutation 110: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceConstant - 2 -> 1
   * 31 Weak Mutation 111: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceConstant - 2 -> -1
   * 32 Weak Mutation 108: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - DeleteField: stateB
   * 33 Weak Mutation 109: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceConstant - 2 -> 0
   * 34 Weak Mutation 106: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceConstant - 0 -> 1
   * 35 Weak Mutation 107: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - InsertUnaryOp Negation
   * 36 Weak Mutation 104: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceComparisonOperator == -> -2
   * 37 Weak Mutation 118: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 115: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceComparisonOperator == -> >=
   * 39 Weak Mutation 114: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceBitwiseOperator & -> ^
   * 40 Weak Mutation 112: com.sleepycat.je.tree.ChildReference.isDirty()Z:169 - ReplaceConstant - 2 -> 3
   * 41 Weak Mutation 239: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:239 - InsertUnaryOp IINC 1
   * 42 Weak Mutation 238: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:239 - InsertUnaryOp Negation
   * 43 Weak Mutation 237: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - ReplaceComparisonOperator != -> -1
   * 44 Weak Mutation 234: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - DeleteStatement: longSub(JJ)I
   * 45 Weak Mutation 233: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - ReplaceConstant - -1 -> -2
   * 46 Weak Mutation 232: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - ReplaceConstant - -1 -> 1
   * 47 Weak Mutation 231: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - ReplaceConstant - -1 -> 0
   * 48 Weak Mutation 230: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - DeleteField: lsnJ
   * 49 Weak Mutation 229: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:238 - InsertUnaryOp Negation
   * 50 Weak Mutation 254: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - ReplaceConstant - 10 -> -1
   * 51 Weak Mutation 255: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - ReplaceConstant - 10 -> 9
   * 52 Weak Mutation 252: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - ReplaceConstant - 10 -> 0
   * 53 Weak Mutation 253: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - ReplaceConstant - 10 -> 1
   * 54 Weak Mutation 244: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:240 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 55 Weak Mutation 242: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:239 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 56 Weak Mutation 243: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:240 - ReplaceConstant - <lsn/> -> 
   * 57 Weak Mutation 240: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:239 - InsertUnaryOp IINC -1
   * 58 Weak Mutation 241: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:239 - DeleteStatement: indent(I)Ljava/lang/String;
   * 59 Weak Mutation 275: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - ReplaceConstant - 10 -> -1
   * 60 Weak Mutation 274: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - ReplaceConstant - 10 -> 1
   * 61 Weak Mutation 273: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - ReplaceConstant - 10 -> 0
   * 62 Weak Mutation 278: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 63 Weak Mutation 277: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - ReplaceConstant - 10 -> 11
   * 64 Weak Mutation 276: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:253 - ReplaceConstant - 10 -> 9
   * 65 Weak Mutation 283: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:255 - InsertUnaryOp IINC -1
   * 66 Weak Mutation 282: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:255 - InsertUnaryOp IINC 1
   * 67 Weak Mutation 281: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:255 - InsertUnaryOp Negation
   * 68 Weak Mutation 280: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:254 - ReplaceComparisonOperator != null -> = null
   * 69 Weak Mutation 287: com.sleepycat.je.tree.ChildReference.toString()Ljava/lang/String;:271 - ReplaceConstant - 0 -> 1
   * 70 Weak Mutation 286: com.sleepycat.je.tree.ChildReference.toString()Ljava/lang/String;:271 - ReplaceConstant - 0 -> 1
   * 71 Weak Mutation 285: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:255 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 72 Weak Mutation 284: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:255 - DeleteStatement: indent(I)Ljava/lang/String;
   * 73 Weak Mutation 259: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:246 - ReplaceComparisonOperator != null -> = null
   * 74 Weak Mutation 256: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - ReplaceConstant - 10 -> 11
   * 75 Weak Mutation 257: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:245 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 76 Weak Mutation 288: com.sleepycat.je.tree.ChildReference.toString()Ljava/lang/String;:271 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 77 Weak Mutation 262: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp IINC -1
   * 78 Weak Mutation 263: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - DeleteStatement: indent(I)Ljava/lang/String;
   * 79 Weak Mutation 260: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp Negation
   * 80 Weak Mutation 261: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - InsertUnaryOp IINC 1
   * 81 Weak Mutation 266: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:248 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 82 Weak Mutation 264: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:247 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 83 Weak Mutation 265: com.sleepycat.je.tree.ChildReference.dumpString(IZ)Ljava/lang/String;:248 - ReplaceConstant - <key/> -> 
   */
  @Test
  public void test23()  throws Throwable  {
      ChildReference childReference0 = new ChildReference((Node) null, (byte[]) null, (-1L));
      String string0 = childReference0.toString();
      assertNotNull(string0);
      assertEquals("<lsn/>\n<key/>\n<target/>\n<knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"true\"/>", string0);
  }
}
