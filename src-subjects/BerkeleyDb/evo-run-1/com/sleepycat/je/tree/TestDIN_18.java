/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestDIN_18 {


  //Test case number: 18
  /*
   * 6 covered goals:
   * 1 Weak Mutation 143: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp IINC 1
   * 2 Weak Mutation 142: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp Negation
   * 3 Weak Mutation 144: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 143: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp IINC 1
   * 5 Weak Mutation 142: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp Negation
   * 6 Weak Mutation 144: com.sleepycat.je.tree.DIN.readFromLog(Ljava/nio/ByteBuffer;B)V:270 - InsertUnaryOp IINC -1
   */
  @Test
  public void test18()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      byte[] byteArray0 = new byte[1];
      ChildReference childReference0 = new ChildReference();
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, 1000, byteArray0, childReference0, 56);
      // Undeclared exception!
      try {
        dIN0.readFromLog((ByteBuffer) null, (byte) (-122));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
