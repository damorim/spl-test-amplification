/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.txn.Locker;

@RunWith(EvoSuiteRunner.class)
public class TestLN_8 {


  //Test case number: 8
  /*
   * 44 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:116 - DeleteStatement: makeDeleted()V
   * 2 Weak Mutation 64: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:117 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 3 Weak Mutation 65: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> 0
   * 4 Weak Mutation 66: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> 1
   * 5 Weak Mutation 67: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> -2
   * 6 Weak Mutation 68: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:119 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 69: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:133 - DeleteField: LOG_DEL_DUPLNLcom/sleepycat/je/log/LogEntryType;
   * 8 Weak Mutation 70: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> 0
   * 9 Weak Mutation 71: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 72: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> -2
   * 11 Weak Mutation 73: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:135 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 76: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: longSub(JJ)I
   * 13 Weak Mutation 77: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - ReplaceComparisonOperator != -> <
   * 14 Weak Mutation 74: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - InsertUnaryOp Negation
   * 15 Weak Mutation 75: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - InsertUnaryOp Negation
   * 16 Weak Mutation 85: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp Negation
   * 17 Weak Mutation 84: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp Negation
   * 18 Weak Mutation 87: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 86: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 83: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 21 Weak Mutation 88: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:148 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 22 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I16 Branch 6 IFNULL L119 - false
   * 23 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I34 Branch 7 IFNE L140 - true
   * 24 Weak Mutation 63: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:116 - DeleteStatement: makeDeleted()V
   * 25 Weak Mutation 68: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:119 - ReplaceComparisonOperator = null -> != null
   * 26 Weak Mutation 69: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:133 - DeleteField: LOG_DEL_DUPLNLcom/sleepycat/je/log/LogEntryType;
   * 27 Weak Mutation 70: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> 0
   * 28 Weak Mutation 71: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> 1
   * 29 Weak Mutation 64: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:117 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 30 Weak Mutation 65: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> 0
   * 31 Weak Mutation 66: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> 1
   * 32 Weak Mutation 67: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:118 - ReplaceConstant - -1 -> -2
   * 33 Weak Mutation 76: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: longSub(JJ)I
   * 34 Weak Mutation 77: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - ReplaceComparisonOperator != -> <
   * 35 Weak Mutation 72: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:134 - ReplaceConstant - -1 -> -2
   * 36 Weak Mutation 73: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:135 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 74: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - InsertUnaryOp Negation
   * 38 Weak Mutation 75: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - InsertUnaryOp Negation
   * 39 Weak Mutation 85: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp Negation
   * 40 Weak Mutation 84: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp Negation
   * 41 Weak Mutation 87: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp IINC -1
   * 42 Weak Mutation 86: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - InsertUnaryOp IINC 1
   * 43 Weak Mutation 83: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 44 Weak Mutation 88: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:148 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   */
  @Test
  public void test8()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = new byte[3];
      // Undeclared exception!
      try {
        mapLN0.delete(databaseImpl0, byteArray0, byteArray1, (long) (byte)0, (Locker) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
