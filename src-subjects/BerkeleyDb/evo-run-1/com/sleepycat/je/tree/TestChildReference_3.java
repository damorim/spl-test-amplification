/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestChildReference_3 {


  //Test case number: 3
  /*
   * 50 covered goals:
   * 1 Weak Mutation 50: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteField: stateB
   * 2 Weak Mutation 98: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - DeleteField: stateB
   * 3 Weak Mutation 25: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - InsertUnaryOp Negation
   * 4 Weak Mutation 27: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceConstant - 2 -> 0
   * 5 Weak Mutation 29: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceConstant - 2 -> -1
   * 6 Weak Mutation 28: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceConstant - 2 -> 1
   * 7 Weak Mutation 31: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceBitwiseOperator | -> &
   * 8 Weak Mutation 30: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceConstant - 2 -> 3
   * 9 Weak Mutation 43: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 46: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - ReplaceConstant - NULL_LSN without KnownDeleted -> 
   * 11 Weak Mutation 47: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - InsertUnaryOp Negation
   * 12 Weak Mutation 44: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:82 - DeleteStatement: isKnownDeleted()Z
   * 13 Weak Mutation 45: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:82 - ReplaceComparisonOperator != -> ==
   * 14 Weak Mutation 51: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteStatement: makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;
   * 15 Weak Mutation 49: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - InsertUnaryOp Negation
   * 16 Weak Mutation 48: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteField: lsnJ
   * 17 Weak Mutation 0: com.sleepycat.je.tree.ChildReference.<init>()V:30 - DeleteField: EMPTY_KEY[B
   * 18 Weak Mutation 1: com.sleepycat.je.tree.ChildReference.<init>()V:30 - ReplaceConstant - -1 -> 0
   * 19 Weak Mutation 2: com.sleepycat.je.tree.ChildReference.<init>()V:30 - ReplaceConstant - -1 -> 1
   * 20 Weak Mutation 3: com.sleepycat.je.tree.ChildReference.<init>()V:30 - ReplaceConstant - -1 -> -2
   * 21 Weak Mutation 4: com.sleepycat.je.tree.ChildReference.<init>()V:30 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 31: com.sleepycat.je.tree.ChildReference.setKey([B)V:61 - ReplaceBitwiseOperator | -> &
   * 23 Weak Mutation 34: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:80 - ReplaceComparisonOperator != null -> = null
   * 24 Weak Mutation 35: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - InsertUnaryOp Negation
   * 25 Weak Mutation 38: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - ReplaceConstant - -1 -> 1
   * 26 Weak Mutation 39: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - ReplaceConstant - -1 -> -2
   * 27 Weak Mutation 36: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - DeleteField: lsnJ
   * 28 Weak Mutation 37: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - ReplaceConstant - -1 -> 0
   * 29 Weak Mutation 43: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - ReplaceComparisonOperator != -> -1
   * 30 Weak Mutation 40: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:81 - DeleteStatement: longSub(JJ)I
   * 31 Weak Mutation 46: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - ReplaceConstant - NULL_LSN without KnownDeleted -> 
   * 32 Weak Mutation 47: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - InsertUnaryOp Negation
   * 33 Weak Mutation 44: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:82 - DeleteStatement: isKnownDeleted()Z
   * 34 Weak Mutation 45: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:82 - ReplaceComparisonOperator != -> ==
   * 35 Weak Mutation 51: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteStatement: makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;
   * 36 Weak Mutation 50: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteField: stateB
   * 37 Weak Mutation 49: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - InsertUnaryOp Negation
   * 38 Weak Mutation 48: com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;:83 - DeleteField: lsnJ
   * 39 Weak Mutation 100: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceBitwiseOperator & -> |
   * 40 Weak Mutation 101: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceBitwiseOperator & -> ^
   * 41 Weak Mutation 98: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - DeleteField: stateB
   * 42 Weak Mutation 99: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceConstant - 1 -> 0
   * 43 Weak Mutation 97: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - InsertUnaryOp Negation
   * 44 Weak Mutation 106: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 104: com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z:163 - ReplaceComparisonOperator == -> -2
   * 46 com.sleepycat.je.tree.ChildReference.<init>()V: root-Branch
   * 47 com.sleepycat.je.tree.ChildReference.isKnownDeleted()Z: I6 Branch 7 IFEQ L163 - true
   * 48 com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;: I4 Branch 1 IFNONNULL L80 - false
   * 49 com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;: I11 Branch 2 IFNE L81 - false
   * 50 com.sleepycat.je.tree.ChildReference.fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;: I16 Branch 3 IFNE L82 - false
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DIN dIN0 = new DIN();
      ChildReference childReference0 = dIN0.getDupCountLNRef();
      childReference0.setKey(byteArray0);
      try {
        childReference0.fetchTarget((DatabaseImpl) null, (IN) dIN0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * fetchTarget of null lsn IN=0 state=2 NULL_LSN without KnownDeleted
         */
      }
  }
}
