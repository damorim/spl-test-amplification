/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.tree.BINReference;
import com.sleepycat.je.tree.Key;

@RunWith(EvoSuiteRunner.class)
public class TestBINReference_15 {


  //Test case number: 15
  /*
   * 6 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 58: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceComparisonOperator != -> -1
   * 3 com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z: I26 Branch 13 IFNE L78 - false
   * 4 Weak Mutation 54: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - DeleteField: nodeIdJ
   * 5 Weak Mutation 59: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 58: com.sleepycat.je.tree.BINReference.equals(Ljava/lang/Object;)Z:78 - ReplaceComparisonOperator != -> -1
   */
  @Test
  public void test15()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId(28);
      byte[] byteArray0 = new byte[6];
      BINReference bINReference0 = new BINReference((-19L), databaseId0, byteArray0);
      BINReference bINReference1 = new BINReference((-19L), databaseId0, byteArray0);
      boolean boolean0 = bINReference0.equals((Object) bINReference1);
      assertEquals(true, boolean0);
      assertEquals((-19L), bINReference1.getNodeId());
  }
}
