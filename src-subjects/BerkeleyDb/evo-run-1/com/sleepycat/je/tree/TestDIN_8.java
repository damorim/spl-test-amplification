/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestDIN_8 {


  //Test case number: 8
  /*
   * 15 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - DeleteStatement: setDirty(Z)V
   * 2 Weak Mutation 26: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 29: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   * 4 Weak Mutation 28: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 5 Weak Mutation 31: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - InsertUnaryOp Negation
   * 6 Weak Mutation 30: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 7 Weak Mutation 32: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteStatement: setLsn(J)V
   * 8 com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V: root-Branch
   * 9 Weak Mutation 27: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - DeleteStatement: setDirty(Z)V
   * 10 Weak Mutation 26: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 29: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   * 12 Weak Mutation 28: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 13 Weak Mutation 31: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - InsertUnaryOp Negation
   * 14 Weak Mutation 30: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 15 Weak Mutation 32: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteStatement: setLsn(J)V
   */
  @Test
  public void test8()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRefAndNullTarget((long) 0);
      assertEquals(true, dIN0.getDirty());
      assertEquals("<din>\n  <dupkey></dupkey>\n    <DbLsn val=\"0x0/0x0\"/>\n    <key v=\"\"/>\n    <target/>\n    <knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"true\"/>\n  <node>0</node>\n  <idkey><key v=\"\"/></idkey>\n  <dirty val=\"true\"/>\n  <generation val=\"0\"/>\n  <level val=\"0\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</din>", dIN0.toString());
  }
}
