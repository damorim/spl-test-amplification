/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.CursorsExistException;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.NodeNotEmptyException;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeStats;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.tree.WithRootLatched;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestTree_19 {


  //Test case number: 19
  /*
   * 29 covered goals:
   * 1 Weak Mutation 232: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - DeleteStatement: search([BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;
   * 2 Weak Mutation 231: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp IINC -1
   * 3 Weak Mutation 230: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp IINC 1
   * 4 Weak Mutation 229: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp Negation
   * 5 Weak Mutation 228: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> -2
   * 6 Weak Mutation 227: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> 1
   * 7 Weak Mutation 226: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> 0
   * 8 Weak Mutation 225: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - DeleteField: NORMALLcom/sleepycat/je/tree/Tree$SearchType;
   * 9 Weak Mutation 233: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:704 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 248: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:710 - DeleteStatement: toString()Ljava/lang/String;
   * 11 com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z: I7 Branch 32 IFEQ L694 - true
   * 12 com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z: I48 Branch 33 IFNULL L704 - true
   * 13 Weak Mutation 216: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC -1
   * 14 Weak Mutation 217: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 214: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp Negation
   * 16 Weak Mutation 215: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:694 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 337: com.sleepycat.je.tree.Tree.search([BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1063 - DeleteStatement: getRootIN(Z)Lcom/sleepycat/je/tree/IN;
   * 18 Weak Mutation 336: com.sleepycat.je.tree.Tree.search([BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1063 - ReplaceConstant - 1 -> 0
   * 19 Weak Mutation 472: com.sleepycat.je.tree.Tree.getRootIN(Z)Lcom/sleepycat/je/tree/IN;:1599 - ReplaceConstant - TYPE ERROR? -> 
   * 20 Weak Mutation 233: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:704 - ReplaceComparisonOperator = null -> != null
   * 21 Weak Mutation 232: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - DeleteStatement: search([BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;
   * 22 Weak Mutation 231: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 230: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 229: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - InsertUnaryOp Negation
   * 25 Weak Mutation 228: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> -2
   * 26 Weak Mutation 227: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> 1
   * 27 Weak Mutation 226: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - ReplaceConstant - -1 -> 0
   * 28 Weak Mutation 225: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:698 - DeleteField: NORMALLcom/sleepycat/je/tree/Tree$SearchType;
   * 29 Weak Mutation 248: com.sleepycat.je.tree.Tree.getParentBINForChildLN(Lcom/sleepycat/je/tree/TreeLocation;[B[BLcom/sleepycat/je/tree/LN;ZZZZ)Z:710 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test19()  throws Throwable  {
      Tree tree0 = new Tree();
      byte[] byteArray0 = new byte[7];
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      MapLN mapLN0 = new MapLN(databaseImpl0);
      try {
        tree0.getParentBINForChildLN((TreeLocation) null, byteArray0, byteArray0, (LN) mapLN0, false, false, false, false);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * 
         */
      }
  }
}
