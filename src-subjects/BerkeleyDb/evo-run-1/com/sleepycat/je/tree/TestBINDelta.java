/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.BINDelta;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestBINDelta {


  //Test case number: 0
  /*
   * 22 covered goals:
   * 1 Weak Mutation 103: com.sleepycat.je.tree.BINDelta.getLogType()Lcom/sleepycat/je/log/LogEntryType;:113 - DeleteField: logEntryTypeLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.BINDelta.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:32 - DeleteStatement: getLastFullVersion()J
   * 4 Weak Mutation 1: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:33 - DeleteStatement: getDatabaseId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 5 Weak Mutation 2: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:35 - DeleteStatement: getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;
   * 6 Weak Mutation 3: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 23: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 25: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp IINC -1 i
   * 9 Weak Mutation 24: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp IINC 1 i
   * 10 Weak Mutation 26: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - DeleteStatement: getNEntries()I
   * 11 Weak Mutation 29: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - ReplaceComparisonOperator < -> <=
   * 12 Weak Mutation 0: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:32 - DeleteStatement: getLastFullVersion()J
   * 13 Weak Mutation 1: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:33 - DeleteStatement: getDatabaseId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 14 Weak Mutation 2: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:35 - DeleteStatement: getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;
   * 15 Weak Mutation 3: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 23: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp Negation of i
   * 17 Weak Mutation 25: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 24: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - InsertUnaryOp IINC 1 i
   * 19 Weak Mutation 26: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - DeleteStatement: getNEntries()I
   * 20 Weak Mutation 29: com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V:36 - ReplaceComparisonOperator < -> <=
   * 21 Weak Mutation 103: com.sleepycat.je.tree.BINDelta.getLogType()Lcom/sleepycat/je/log/LogEntryType;:113 - DeleteField: logEntryTypeLcom/sleepycat/je/log/LogEntryType;
   * 22 com.sleepycat.je.tree.BINDelta.<init>(Lcom/sleepycat/je/tree/BIN;)V: I70 Branch 3 IF_ICMPLT L36 - false
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[15];
      BIN bIN0 = new BIN(databaseImpl0, byteArray0, (int) (byte)0, (int) (byte)0);
      BINDelta bINDelta0 = new BINDelta(bIN0);
      bINDelta0.getLogType();
      assertEquals(67114935L, bIN0.getLastId());
      assertEquals(67114931L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.tree.BINDelta.getNumDeltas()I:57 - DeleteStatement: size()I
   * 2 Weak Mutation 33: com.sleepycat.je.tree.BINDelta.getNumDeltas()I:57 - DeleteField: deltasLjava/util/List;
   * 3 com.sleepycat.je.tree.BINDelta.getNumDeltas()I: root-Branch
   * 4 Weak Mutation 31: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> 1
   * 5 Weak Mutation 30: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 34: com.sleepycat.je.tree.BINDelta.getNumDeltas()I:57 - DeleteStatement: size()I
   * 7 Weak Mutation 32: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> -2
   * 8 Weak Mutation 33: com.sleepycat.je.tree.BINDelta.getNumDeltas()I:57 - DeleteField: deltasLjava/util/List;
   * 9 com.sleepycat.je.tree.BINDelta.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      bINDelta0.getNumDeltas();
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Weak Mutation 35: com.sleepycat.je.tree.BINDelta.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:64 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 2 com.sleepycat.je.tree.BINDelta.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;: root-Branch
   * 3 Weak Mutation 35: com.sleepycat.je.tree.BINDelta.getDbId()Lcom/sleepycat/je/dbi/DatabaseId;:64 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test2()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      DatabaseId databaseId0 = bINDelta0.getDbId();
      assertNotNull(databaseId0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * 1 Weak Mutation 36: com.sleepycat.je.tree.BINDelta.getLastFullLsn()J:71 - InsertUnaryOp Negation
   * 2 Weak Mutation 37: com.sleepycat.je.tree.BINDelta.getLastFullLsn()J:71 - DeleteField: lastFullLsnJ
   * 3 com.sleepycat.je.tree.BINDelta.getLastFullLsn()J: root-Branch
   * 4 Weak Mutation 36: com.sleepycat.je.tree.BINDelta.getLastFullLsn()J:71 - InsertUnaryOp Negation
   * 5 Weak Mutation 37: com.sleepycat.je.tree.BINDelta.getLastFullLsn()J:71 - DeleteField: lastFullLsnJ
   */
  @Test
  public void test3()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      long long0 = bINDelta0.getLastFullLsn();
      assertEquals((-1L), long0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.tree.BINDelta.reconstituteBIN(Lcom/sleepycat/je/dbi/EnvironmentImpl;)Lcom/sleepycat/je/tree/BIN;:78 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 2 Weak Mutation 38: com.sleepycat.je.tree.BINDelta.reconstituteBIN(Lcom/sleepycat/je/dbi/EnvironmentImpl;)Lcom/sleepycat/je/tree/BIN;:78 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   */
  @Test
  public void test4()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      // Undeclared exception!
      try {
        bINDelta0.reconstituteBIN((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 104: com.sleepycat.je.tree.BINDelta.marshallOutsideWriteLatch()Z:121 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.BINDelta.marshallOutsideWriteLatch()Z: root-Branch
   * 3 Weak Mutation 104: com.sleepycat.je.tree.BINDelta.marshallOutsideWriteLatch()Z:121 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test5()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      boolean boolean0 = bINDelta0.marshallOutsideWriteLatch();
      assertEquals(true, boolean0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 105: com.sleepycat.je.tree.BINDelta.countAsObsoleteWhenLogged()Z:128 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.BINDelta.countAsObsoleteWhenLogged()Z: root-Branch
   * 3 Weak Mutation 105: com.sleepycat.je.tree.BINDelta.countAsObsoleteWhenLogged()Z:128 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test6()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      boolean boolean0 = bINDelta0.countAsObsoleteWhenLogged();
      assertEquals(false, boolean0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 7
  /*
   * 10 covered goals:
   * 1 Weak Mutation 110: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   * 2 Weak Mutation 108: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp IINC 1 entryTypeVersion
   * 3 Weak Mutation 109: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp IINC -1 entryTypeVersion
   * 4 Weak Mutation 106: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 5 Weak Mutation 107: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp Negation of entryTypeVersion
   * 6 Weak Mutation 110: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   * 7 Weak Mutation 108: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp IINC 1 entryTypeVersion
   * 8 Weak Mutation 109: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp IINC -1 entryTypeVersion
   * 9 Weak Mutation 106: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 10 Weak Mutation 107: com.sleepycat.je.tree.BINDelta.readFromLog(Ljava/nio/ByteBuffer;B)V:136 - InsertUnaryOp Negation of entryTypeVersion
   */
  @Test
  public void test7()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      // Undeclared exception!
      try {
        bINDelta0.readFromLog((ByteBuffer) null, (byte)1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 63 covered goals:
   * 1 Weak Mutation 137: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 7
   * 2 Weak Mutation 136: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> -1
   * 3 Weak Mutation 139: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 138: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 9
   * 5 Weak Mutation 141: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 140: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> %
   * 7 Weak Mutation 143: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 0
   * 8 Weak Mutation 142: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> *
   * 9 Weak Mutation 133: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - DeleteStatement: getLogSize()I
   * 10 Weak Mutation 132: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 11 Weak Mutation 135: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 1
   * 12 Weak Mutation 134: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 0
   * 13 Weak Mutation 144: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 1
   * 14 Weak Mutation 145: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> -1
   * 15 Weak Mutation 146: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 3
   * 16 Weak Mutation 147: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 5
   * 17 Weak Mutation 148: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> -
   * 18 Weak Mutation 149: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> %
   * 19 Weak Mutation 150: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> /
   * 20 Weak Mutation 151: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> *
   * 21 Weak Mutation 152: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 171: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp IINC 1 i
   * 23 Weak Mutation 170: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp Negation of i
   * 24 Weak Mutation 169: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceVariable i -> size
   * 25 Weak Mutation 174: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - DeleteStatement: size()I
   * 26 Weak Mutation 173: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - DeleteField: deltasLjava/util/List;
   * 27 Weak Mutation 172: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp IINC -1 i
   * 28 Weak Mutation 177: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceComparisonOperator < -> <=
   * 29 Weak Mutation 178: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp Negation of size
   * 30 Weak Mutation 179: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp IINC 1 size
   * 31 Weak Mutation 180: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp IINC -1 size
   * 32 com.sleepycat.je.tree.BINDelta.getLogSize()I: I39 Branch 12 IF_ICMPLT L148 - false
   * 33 Weak Mutation 137: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 7
   * 34 Weak Mutation 136: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> -1
   * 35 Weak Mutation 139: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> -
   * 36 Weak Mutation 138: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 9
   * 37 Weak Mutation 141: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> /
   * 38 Weak Mutation 140: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> %
   * 39 Weak Mutation 143: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 0
   * 40 Weak Mutation 142: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> *
   * 41 Weak Mutation 133: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - DeleteStatement: getLogSize()I
   * 42 Weak Mutation 132: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 43 Weak Mutation 135: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 1
   * 44 Weak Mutation 134: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 8 -> 0
   * 45 Weak Mutation 152: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 144: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 1
   * 47 Weak Mutation 145: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> -1
   * 48 Weak Mutation 146: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 3
   * 49 Weak Mutation 147: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceConstant - 4 -> 5
   * 50 Weak Mutation 148: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> -
   * 51 Weak Mutation 149: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> %
   * 52 Weak Mutation 150: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 151: com.sleepycat.je.tree.BINDelta.getLogSize()I:147 - ReplaceArithmeticOperator + -> *
   * 54 Weak Mutation 171: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp IINC 1 i
   * 55 Weak Mutation 170: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp Negation of i
   * 56 Weak Mutation 169: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceVariable i -> size
   * 57 Weak Mutation 174: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - DeleteStatement: size()I
   * 58 Weak Mutation 173: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - DeleteField: deltasLjava/util/List;
   * 59 Weak Mutation 172: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - InsertUnaryOp IINC -1 i
   * 60 Weak Mutation 178: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp Negation of size
   * 61 Weak Mutation 179: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp IINC 1 size
   * 62 Weak Mutation 177: com.sleepycat.je.tree.BINDelta.getLogSize()I:148 - ReplaceComparisonOperator < -> <=
   * 63 Weak Mutation 180: com.sleepycat.je.tree.BINDelta.getLogSize()I:152 - InsertUnaryOp IINC -1 size
   */
  @Test
  public void test8()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      int int0 = bINDelta0.getLogSize();
      assertEquals(16, int0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 Weak Mutation 182: com.sleepycat.je.tree.BINDelta.writeToLog(Ljava/nio/ByteBuffer;)V:156 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 2 Weak Mutation 181: com.sleepycat.je.tree.BINDelta.writeToLog(Ljava/nio/ByteBuffer;)V:156 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 3 Weak Mutation 182: com.sleepycat.je.tree.BINDelta.writeToLog(Ljava/nio/ByteBuffer;)V:156 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 4 Weak Mutation 181: com.sleepycat.je.tree.BINDelta.writeToLog(Ljava/nio/ByteBuffer;)V:156 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test9()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      // Undeclared exception!
      try {
        bINDelta0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 55 covered goals:
   * 1 Weak Mutation 205: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp Negation of verbose
   * 2 Weak Mutation 204: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 3 Weak Mutation 207: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp IINC -1 verbose
   * 4 Weak Mutation 206: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp IINC 1 verbose
   * 5 Weak Mutation 208: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 6 Weak Mutation 209: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:167 - ReplaceConstant - <lastFullLsn> -> 
   * 7 Weak Mutation 210: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:167 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 8 Weak Mutation 212: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteField: lastFullLsnJ
   * 9 Weak Mutation 213: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteStatement: toString(J)Ljava/lang/String;
   * 10 Weak Mutation 214: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 211: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - InsertUnaryOp Negation
   * 12 Weak Mutation 216: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:169 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 215: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:169 - ReplaceConstant - </lastFullLsn> -> 
   * 14 Weak Mutation 220: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: size()I
   * 15 Weak Mutation 221: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 222: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - ReplaceConstant - "/> -> 
   * 17 Weak Mutation 223: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 217: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - ReplaceConstant - <deltas size=" -> 
   * 19 Weak Mutation 218: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 219: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteField: deltasLjava/util/List;
   * 21 Weak Mutation 238: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - DeleteStatement: size()I
   * 22 Weak Mutation 237: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - DeleteField: deltasLjava/util/List;
   * 23 Weak Mutation 236: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp IINC -1 i
   * 24 Weak Mutation 235: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp IINC 1 i
   * 25 Weak Mutation 234: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 224: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 241: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - ReplaceComparisonOperator < -> <=
   * 28 com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V: I67 Branch 14 IF_ICMPLT L171 - false
   * 29 Weak Mutation 205: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp Negation of verbose
   * 30 Weak Mutation 204: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 31 Weak Mutation 207: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp IINC -1 verbose
   * 32 Weak Mutation 206: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - InsertUnaryOp IINC 1 verbose
   * 33 Weak Mutation 220: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: size()I
   * 34 Weak Mutation 221: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 35 Weak Mutation 222: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - ReplaceConstant - "/> -> 
   * 36 Weak Mutation 223: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 37 Weak Mutation 216: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:169 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 217: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - ReplaceConstant - <deltas size=" -> 
   * 39 Weak Mutation 218: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 40 Weak Mutation 219: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:170 - DeleteField: deltasLjava/util/List;
   * 41 Weak Mutation 212: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteField: lastFullLsnJ
   * 42 Weak Mutation 213: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteStatement: toString(J)Ljava/lang/String;
   * 43 Weak Mutation 214: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 215: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:169 - ReplaceConstant - </lastFullLsn> -> 
   * 45 Weak Mutation 208: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:166 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 46 Weak Mutation 209: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:167 - ReplaceConstant - <lastFullLsn> -> 
   * 47 Weak Mutation 210: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:167 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 48 Weak Mutation 211: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:168 - InsertUnaryOp Negation
   * 49 Weak Mutation 238: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - DeleteStatement: size()I
   * 50 Weak Mutation 237: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - DeleteField: deltasLjava/util/List;
   * 51 Weak Mutation 236: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp IINC -1 i
   * 52 Weak Mutation 235: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp IINC 1 i
   * 53 Weak Mutation 234: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - InsertUnaryOp Negation of i
   * 54 Weak Mutation 224: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 241: com.sleepycat.je.tree.BINDelta.dumpLog(Ljava/lang/StringBuffer;Z)V:171 - ReplaceComparisonOperator < -> <=
   */
  @Test
  public void test10()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      StringBuffer stringBuffer0 = new StringBuffer();
      bINDelta0.dumpLog(stringBuffer0, true);
      assertEquals(142, stringBuffer0.capacity());
      assertEquals("<dbId id=\"0\"/><lastFullLsn><DbLsn val=\"0xffffffff/0xffffffff\"/></lastFullLsn><deltas size=\"0\"/>", stringBuffer0.toString());
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Weak Mutation 242: com.sleepycat.je.tree.BINDelta.logEntryIsTransactional()Z:181 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.BINDelta.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 242: com.sleepycat.je.tree.BINDelta.logEntryIsTransactional()Z:181 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      boolean boolean0 = bINDelta0.logEntryIsTransactional();
      assertEquals(false, boolean0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 244: com.sleepycat.je.tree.BINDelta.getTransactionId()J:188 - ReplaceConstant - 0 -> -1
   * 2 Weak Mutation 243: com.sleepycat.je.tree.BINDelta.getTransactionId()J:188 - ReplaceConstant - 0 -> 1
   * 3 com.sleepycat.je.tree.BINDelta.getTransactionId()J: root-Branch
   * 4 Weak Mutation 244: com.sleepycat.je.tree.BINDelta.getTransactionId()J:188 - ReplaceConstant - 0 -> -1
   * 5 Weak Mutation 243: com.sleepycat.je.tree.BINDelta.getTransactionId()J:188 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test12()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      long long0 = bINDelta0.getTransactionId();
      assertEquals(0L, long0);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * 1 com.sleepycat.je.tree.BINDelta.postLogWork(J)V: root-Branch
   * 2 Weak Mutation 31: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> 1
   * 3 Weak Mutation 30: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> 0
   * 4 Weak Mutation 32: com.sleepycat.je.tree.BINDelta.<init>()V:49 - ReplaceConstant - -1 -> -2
   */
  @Test
  public void test13()  throws Throwable  {
      BINDelta bINDelta0 = new BINDelta();
      bINDelta0.postLogWork((long) 16);
      assertEquals((-1L), bINDelta0.getLastFullLsn());
  }
}
