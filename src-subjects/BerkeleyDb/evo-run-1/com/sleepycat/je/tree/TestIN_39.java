/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import java.io.StringWriter;

@RunWith(EvoSuiteRunner.class)
public class TestIN_39 {


  //Test case number: 39
  /*
   * 29 covered goals:
   * 1 Weak Mutation 949: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - ReplaceComparisonOperator != -> -1
   * 2 Weak Mutation 950: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:749 - ReplaceConstant - null lsn -> 
   * 3 Weak Mutation 951: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:749 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;: I17 Branch 38 IFNE L748 - false
   * 5 Weak Mutation 956: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:755 - ReplaceConstant -  IN= -> 
   * 6 Weak Mutation 957: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:755 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 958: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:755 - DeleteStatement: getNodeId()J
   * 8 Weak Mutation 959: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:755 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 955: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:754 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 944: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - ReplaceConstant - -1 -> 1
   * 11 Weak Mutation 945: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - ReplaceConstant - -1 -> -2
   * 12 Weak Mutation 946: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - DeleteStatement: longSub(JJ)I
   * 13 Weak Mutation 941: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:747 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 940: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:747 - ReplaceConstant - fetchTarget of  -> 
   * 15 Weak Mutation 943: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - ReplaceConstant - -1 -> 0
   * 16 Weak Mutation 942: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - InsertUnaryOp Negation
   * 17 Weak Mutation 969: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:759 - DeleteStatement: toString()Ljava/lang/String;
   * 18 Weak Mutation 968: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:758 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 963: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 962: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - InsertUnaryOp Negation
   * 21 Weak Mutation 961: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 22 Weak Mutation 960: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - ReplaceConstant -  state= -> 
   * 23 Weak Mutation 967: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:758 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 966: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:758 - ReplaceConstant -   -> 
   * 25 Weak Mutation 965: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 964: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:757 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 949: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:748 - ReplaceComparisonOperator != -> -1
   * 28 Weak Mutation 950: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:749 - ReplaceConstant - null lsn -> 
   * 29 Weak Mutation 951: com.sleepycat.je.tree.IN.makeFetchErrorMsg(Ljava/lang/String;Lcom/sleepycat/je/tree/IN;JB)Ljava/lang/String;:749 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test39()  throws Throwable  {
      DIN dIN0 = new DIN();
      assertNotNull(dIN0);
      
      try {
        dIN0.getDupCountLN();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * fetchTarget of null lsn IN=0 state=0 NULL_LSN without KnownDeleted
         */
      }
  }
}
