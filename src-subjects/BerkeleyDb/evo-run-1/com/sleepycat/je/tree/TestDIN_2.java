/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;

@RunWith(EvoSuiteRunner.class)
public class TestDIN_2 {


  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:72 - DeleteStatement: getIdentifierKey()[B
   * 2 com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B: root-Branch
   * 3 Weak Mutation 17: com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:72 - DeleteStatement: getIdentifierKey()[B
   */
  @Test
  public void test2()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[9];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray0, (int) (byte)0);
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, (long) (byte)0, (byte) (-121));
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray0, childReference0, (-1434));
      dIN0.getChildKey((IN) dBIN0);
      assertEquals(1006156L, databaseImpl0.getEofNodeId());
      assertEquals("<DbLsn val=\"0x0/0x0\"/>\n<key v=\"0 0 0 0 0 0 0 0 0 \"/>\n<dbin>\n  <dupkey><key v=\"0 0 0 0 0 0 0 0 0 \"/></dupkey>\n  <node>1006157</node>\n  <idkey><key v=\"0 0 0 0 0 0 0 0 0 \"/></idkey>\n  <dirty val=\"false\"/>\n  <generation val=\"0\"/>\n  <level val=\"0\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</dbin>\n<knownDeleted val=\"true\"/><pendingDeleted val=\"false\"/><dirty val=\"true\"/>", childReference0.toString());
  }
}
