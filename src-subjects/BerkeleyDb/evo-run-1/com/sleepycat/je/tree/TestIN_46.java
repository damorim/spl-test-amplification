/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.InconsistentNodeException;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import java.io.StringWriter;

@RunWith(EvoSuiteRunner.class)
public class TestIN_46 {


  //Test case number: 46
  /*
   * 11 covered goals:
   * 1 Weak Mutation 1320: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp -1
   * 2 Weak Mutation 1324: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - ReplaceComparisonOperator != -> -1
   * 3 Weak Mutation 1318: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp Negation
   * 4 Weak Mutation 1319: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp +1
   * 5 Weak Mutation 1325: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1224 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.tree.IN.deleteEntry(IZ)Z: I4 Branch 68 IFNE L1223 - false
   * 7 Weak Mutation 1320: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp -1
   * 8 Weak Mutation 1324: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 1325: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1224 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 1318: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp Negation
   * 11 Weak Mutation 1319: com.sleepycat.je.tree.IN.deleteEntry(IZ)Z:1223 - InsertUnaryOp +1
   */
  @Test
  public void test46()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      assertNotNull(dBIN0);
      
      boolean boolean0 = dBIN0.deleteEntry((int) (byte)0, false);
      assertEquals(113034L, dBIN0.getLastId());
      assertEquals(false, boolean0);
  }
}
