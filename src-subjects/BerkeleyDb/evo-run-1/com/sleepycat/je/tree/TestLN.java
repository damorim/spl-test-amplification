/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.FileSummaryLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;
import java.io.StringWriter;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestLN {


  //Test case number: 0
  /*
   * 35 covered goals:
   * 1 Weak Mutation 76: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 75: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 239: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 238: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> /
   * 5 Weak Mutation 237: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> %
   * 6 Weak Mutation 236: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> -
   * 7 Weak Mutation 235: com.sleepycat.je.tree.LN.getLogSize()I:353 - DeleteStatement: getBooleanLogSize()I
   * 8 Weak Mutation 234: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC -1 size
   * 9 Weak Mutation 233: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC 1 size
   * 10 Weak Mutation 232: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp Negation of size
   * 11 Weak Mutation 240: com.sleepycat.je.tree.LN.getLogSize()I:354 - DeleteStatement: isDeleted()Z
   * 12 Weak Mutation 241: com.sleepycat.je.tree.LN.getLogSize()I:354 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 252: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC 1 size
   * 14 Weak Mutation 253: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC -1 size
   * 15 Weak Mutation 251: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp Negation of size
   * 16 com.sleepycat.je.tree.LN.isDeleted()Z: I4 Branch 6 IFNONNULL L99 - false
   * 17 com.sleepycat.je.tree.LN.getLogSize()I: I15 Branch 18 IFNE L354 - true
   * 18 Weak Mutation 2: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:63 - DeleteStatement: getData()[B
   * 19 Weak Mutation 3: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:64 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 76: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 75: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceComparisonOperator != null -> = null
   * 22 Weak Mutation 239: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 238: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 237: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 236: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> -
   * 26 Weak Mutation 235: com.sleepycat.je.tree.LN.getLogSize()I:353 - DeleteStatement: getBooleanLogSize()I
   * 27 Weak Mutation 234: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC -1 size
   * 28 Weak Mutation 233: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC 1 size
   * 29 Weak Mutation 232: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp Negation of size
   * 30 Weak Mutation 252: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC 1 size
   * 31 Weak Mutation 253: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC -1 size
   * 32 Weak Mutation 251: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp Negation of size
   * 33 Weak Mutation 240: com.sleepycat.je.tree.LN.getLogSize()I:354 - DeleteStatement: isDeleted()Z
   * 34 Weak Mutation 241: com.sleepycat.je.tree.LN.getLogSize()I:354 - ReplaceComparisonOperator != -> ==
   * 35 com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V: I13 Branch 3 IFNONNULL L64 - false
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      int int0 = lN0.getLogSize();
      assertEquals(4294969140L, lN0.getLastId());
      assertEquals(9, int0);
  }

  //Test case number: 1
  /*
   * 128 covered goals:
   * 1 Weak Mutation 162: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:228 - DeleteField: data[B
   * 2 Weak Mutation 171: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> -
   * 3 Weak Mutation 170: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 3
   * 4 Weak Mutation 169: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> -1
   * 5 Weak Mutation 168: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 1
   * 6 Weak Mutation 175: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - DeleteStatement: indent(I)Ljava/lang/String;
   * 7 Weak Mutation 174: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> *
   * 8 Weak Mutation 173: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> /
   * 9 Weak Mutation 172: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 167: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 0
   * 11 Weak Mutation 166: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp IINC -1 nSpaces
   * 12 Weak Mutation 165: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp IINC 1 nSpaces
   * 13 Weak Mutation 164: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp Negation of nSpaces
   * 14 Weak Mutation 176: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 178: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:230 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 177: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:230 - ReplaceConstant - <data> -> 
   * 17 Weak Mutation 179: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteField: data[B
   * 18 Weak Mutation 180: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 19 Weak Mutation 181: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 182: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:232 - ReplaceConstant - </data> -> 
   * 21 Weak Mutation 183: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:232 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 22 Weak Mutation 186: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> -1
   * 23 Weak Mutation 187: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 9
   * 24 Weak Mutation 184: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 0
   * 25 Weak Mutation 185: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 1
   * 26 Weak Mutation 188: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 11
   * 27 Weak Mutation 189: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 28 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I9 Branch 10 IFEQ L221 - true
   * 29 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I51 Branch 11 IFNULL L228 - false
   * 30 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I90 Branch 12 IFEQ L235 - true
   * 31 Weak Mutation 4: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:66 - DeleteStatement: getPartial()Z
   * 32 Weak Mutation 5: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:66 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 15: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:70 - DeleteStatement: getOffset()I
   * 34 Weak Mutation 16: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:70 - DeleteStatement: getSize()I
   * 35 Weak Mutation 19: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceVariable len -> doff
   * 36 Weak Mutation 18: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceVariable len -> off
   * 37 Weak Mutation 21: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp IINC 1 len
   * 38 Weak Mutation 20: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp Negation of len
   * 39 Weak Mutation 23: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> <
   * 40 Weak Mutation 22: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp IINC -1 len
   * 41 Weak Mutation 29: com.sleepycat.je.tree.LN.init([BIIII)V:78 - ReplaceVariable len -> doff
   * 42 Weak Mutation 28: com.sleepycat.je.tree.LN.init([BIIII)V:78 - ReplaceVariable len -> off
   * 43 Weak Mutation 31: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp IINC 1 len
   * 44 Weak Mutation 30: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp Negation of len
   * 45 Weak Mutation 34: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> len
   * 46 Weak Mutation 32: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp IINC -1 len
   * 47 Weak Mutation 33: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> dlen
   * 48 Weak Mutation 38: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 off
   * 49 Weak Mutation 39: com.sleepycat.je.tree.LN.init([BIIII)V:79 - DeleteField: data[B
   * 50 Weak Mutation 36: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of off
   * 51 Weak Mutation 37: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 off
   * 52 Weak Mutation 42: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> len
   * 53 Weak Mutation 43: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of doff
   * 54 Weak Mutation 40: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> dlen
   * 55 Weak Mutation 46: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable dlen -> off
   * 56 Weak Mutation 44: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 doff
   * 57 Weak Mutation 45: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 doff
   * 58 Weak Mutation 51: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 dlen
   * 59 Weak Mutation 50: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 dlen
   * 60 Weak Mutation 49: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of dlen
   * 61 Weak Mutation 48: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable dlen -> doff
   * 62 Weak Mutation 55: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC 1 off
   * 63 Weak Mutation 54: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of off
   * 64 Weak Mutation 53: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable off -> len
   * 65 Weak Mutation 52: com.sleepycat.je.tree.LN.init([BIIII)V:79 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 66 Weak Mutation 59: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC 1 len
   * 67 Weak Mutation 58: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of len
   * 68 Weak Mutation 57: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable len -> off
   * 69 Weak Mutation 56: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC -1 off
   * 70 Weak Mutation 63: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of len
   * 71 Weak Mutation 62: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable len -> off
   * 72 Weak Mutation 61: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceConstant - 0 -> 1
   * 73 Weak Mutation 60: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC -1 len
   * 74 Weak Mutation 127: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp IINC 1 dumpTags
   * 75 Weak Mutation 126: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp Negation of dumpTags
   * 76 Weak Mutation 143: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp Negation of nSpaces
   * 77 Weak Mutation 129: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - ReplaceComparisonOperator == -> !=
   * 78 Weak Mutation 128: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp IINC -1 dumpTags
   * 79 Weak Mutation 152: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> /
   * 80 Weak Mutation 153: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> *
   * 81 Weak Mutation 154: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 155: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 83 Weak Mutation 156: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 0
   * 84 Weak Mutation 157: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 1
   * 85 Weak Mutation 158: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> -1
   * 86 Weak Mutation 159: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 9
   * 87 Weak Mutation 144: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp IINC 1 nSpaces
   * 88 Weak Mutation 145: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp IINC -1 nSpaces
   * 89 Weak Mutation 146: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 0
   * 90 Weak Mutation 147: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 1
   * 91 Weak Mutation 148: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> -1
   * 92 Weak Mutation 149: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 3
   * 93 Weak Mutation 150: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> -
   * 94 Weak Mutation 151: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> %
   * 95 Weak Mutation 171: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> -
   * 96 Weak Mutation 170: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 3
   * 97 Weak Mutation 169: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> -1
   * 98 Weak Mutation 168: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 1
   * 99 Weak Mutation 175: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - DeleteStatement: indent(I)Ljava/lang/String;
   * 100 Weak Mutation 174: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> *
   * 101 Weak Mutation 173: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> /
   * 102 Weak Mutation 172: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceArithmeticOperator + -> %
   * 103 Weak Mutation 163: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:228 - ReplaceComparisonOperator = null -> != null
   * 104 Weak Mutation 162: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:228 - DeleteField: data[B
   * 105 Weak Mutation 161: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 106 Weak Mutation 160: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 11
   * 107 Weak Mutation 167: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - ReplaceConstant - 2 -> 0
   * 108 Weak Mutation 166: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp IINC -1 nSpaces
   * 109 Weak Mutation 165: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp IINC 1 nSpaces
   * 110 Weak Mutation 164: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - InsertUnaryOp Negation of nSpaces
   * 111 Weak Mutation 186: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> -1
   * 112 Weak Mutation 187: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 9
   * 113 Weak Mutation 184: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 0
   * 114 Weak Mutation 185: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 1
   * 115 Weak Mutation 188: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - ReplaceConstant - 10 -> 11
   * 116 Weak Mutation 189: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:233 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 117 Weak Mutation 178: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:230 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 118 Weak Mutation 179: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteField: data[B
   * 119 Weak Mutation 176: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:229 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 120 Weak Mutation 177: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:230 - ReplaceConstant - <data> -> 
   * 121 Weak Mutation 182: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:232 - ReplaceConstant - </data> -> 
   * 122 Weak Mutation 183: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:232 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 123 Weak Mutation 180: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 124 Weak Mutation 181: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:231 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 125 com.sleepycat.je.tree.LN.init([BII)V: root-Branch
   * 126 com.sleepycat.je.tree.LN.init([BIIII)V: I3 Branch 5 IFNE L75 - true
   * 127 com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V: I13 Branch 3 IFNONNULL L64 - true
   * 128 com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V: I25 Branch 4 IFEQ L66 - true
   */
  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      LN lN0 = new LN(databaseEntry0);
      assertNotNull(lN0);
      
      String string0 = lN0.dumpString((int) (byte)0, false);
      assertEquals(4294969195L, lN0.getNodeId());
      assertEquals("  <node>4294969195</node>\n  <data>0 0 0 0 0 0 0 0 0 0 </data>\n", string0);
  }

  //Test case number: 2
  /*
   * 19 covered goals:
   * 1 Weak Mutation 6: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getOffset()I
   * 2 Weak Mutation 7: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getPartialOffset()I
   * 3 Weak Mutation 8: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getSize()I
   * 4 Weak Mutation 9: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> -
   * 5 Weak Mutation 10: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> %
   * 6 Weak Mutation 11: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> /
   * 7 Weak Mutation 12: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> *
   * 8 Weak Mutation 13: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:68 - DeleteStatement: getPartialOffset()I
   * 9 Weak Mutation 14: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:68 - DeleteStatement: getSize()I
   * 10 com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V: I25 Branch 4 IFEQ L66 - false
   * 11 Weak Mutation 6: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getOffset()I
   * 12 Weak Mutation 7: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getPartialOffset()I
   * 13 Weak Mutation 8: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - DeleteStatement: getSize()I
   * 14 Weak Mutation 9: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> -
   * 15 Weak Mutation 10: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 11: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> /
   * 17 Weak Mutation 12: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:67 - ReplaceArithmeticOperator + -> *
   * 18 Weak Mutation 13: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:68 - DeleteStatement: getPartialOffset()I
   * 19 Weak Mutation 14: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:68 - DeleteStatement: getSize()I
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      databaseEntry0.setPartial(true);
      LN lN0 = new LN(databaseEntry0);
      assertNotNull(lN0);
      assertEquals(4294969455L, lN0.getNextNodeId());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * 1 Weak Mutation 24: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 24: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> >
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte) (-10), (-1687));
      LN lN0 = null;
      try {
        lN0 = new LN(databaseEntry0);
        fail("Expecting exception: NegativeArraySizeException");
      } catch(NegativeArraySizeException e) {
      }
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Weak Mutation 35: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> doff
   * 2 Weak Mutation 41: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> off
   * 3 Weak Mutation 35: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> doff
   * 4 Weak Mutation 41: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> off
   */
  @Test
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (-748), 65535);
      LN lN0 = null;
      try {
        lN0 = new LN(databaseEntry0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 64: com.sleepycat.je.tree.LN.getData()[B:88 - DeleteField: data[B
   * 2 com.sleepycat.je.tree.LN.getData()[B: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.tree.LN.<init>([B)V:51 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 1: com.sleepycat.je.tree.LN.<init>([B)V:54 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 25: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> -1
   * 6 Weak Mutation 26: com.sleepycat.je.tree.LN.init([BIIII)V:76 - DeleteField: ZERO_LENGTH_BYTE_ARRAY[B
   * 7 Weak Mutation 64: com.sleepycat.je.tree.LN.getData()[B:88 - DeleteField: data[B
   * 8 com.sleepycat.je.tree.LN.init([BIIII)V: I3 Branch 5 IFNE L75 - false
   * 9 com.sleepycat.je.tree.LN.<init>([B)V: I8 Branch 2 IFNONNULL L51 - true
   */
  @Test
  public void test5()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN((int) (byte) (-6));
      assertNotNull(dupCountLN0);
      
      dupCountLN0.getData();
      assertEquals(4294969633L, dupCountLN0.getLastId());
      assertEquals(4294969633L, dupCountLN0.getNextNodeId());
  }

  //Test case number: 6
  /*
   * 23 covered goals:
   * 1 Weak Mutation 65: com.sleepycat.je.tree.LN.copyData()[B:92 - DeleteField: data[B
   * 2 Weak Mutation 68: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp IINC -1 len
   * 3 Weak Mutation 66: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp Negation of len
   * 4 Weak Mutation 67: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp IINC 1 len
   * 5 Weak Mutation 69: com.sleepycat.je.tree.LN.copyData()[B:94 - DeleteField: data[B
   * 6 Weak Mutation 70: com.sleepycat.je.tree.LN.copyData()[B:94 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 71: com.sleepycat.je.tree.LN.copyData()[B:94 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 72: com.sleepycat.je.tree.LN.copyData()[B:94 - InsertUnaryOp Negation of len
   * 9 Weak Mutation 73: com.sleepycat.je.tree.LN.copyData()[B:94 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 10 com.sleepycat.je.tree.LN.copyData()[B: root-Branch
   * 11 Weak Mutation 0: com.sleepycat.je.tree.LN.<init>([B)V:51 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 1: com.sleepycat.je.tree.LN.<init>([B)V:54 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 25: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> -1
   * 14 Weak Mutation 26: com.sleepycat.je.tree.LN.init([BIIII)V:76 - DeleteField: ZERO_LENGTH_BYTE_ARRAY[B
   * 15 Weak Mutation 68: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp IINC -1 len
   * 16 Weak Mutation 69: com.sleepycat.je.tree.LN.copyData()[B:94 - DeleteField: data[B
   * 17 Weak Mutation 70: com.sleepycat.je.tree.LN.copyData()[B:94 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 71: com.sleepycat.je.tree.LN.copyData()[B:94 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 65: com.sleepycat.je.tree.LN.copyData()[B:92 - DeleteField: data[B
   * 20 Weak Mutation 66: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp Negation of len
   * 21 Weak Mutation 67: com.sleepycat.je.tree.LN.copyData()[B:93 - InsertUnaryOp IINC 1 len
   * 22 Weak Mutation 72: com.sleepycat.je.tree.LN.copyData()[B:94 - InsertUnaryOp Negation of len
   * 23 Weak Mutation 73: com.sleepycat.je.tree.LN.copyData()[B:94 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   */
  @Test
  public void test6()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN((int) (byte) (-61));
      assertNotNull(dupCountLN0);
      
      dupCountLN0.copyData();
      assertEquals(4294969700L, dupCountLN0.getNodeId());
      assertEquals(4294969702L, dupCountLN0.getLastId());
  }

  //Test case number: 7
  /*
   * 38 covered goals:
   * 1 Weak Mutation 77: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 74: com.sleepycat.je.tree.LN.isDeleted()Z:99 - DeleteField: data[B
   * 3 Weak Mutation 250: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 248: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> %
   * 5 Weak Mutation 249: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 246: com.sleepycat.je.tree.LN.getLogSize()I:355 - DeleteStatement: getByteArrayLogSize([B)I
   * 7 Weak Mutation 247: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> -
   * 8 Weak Mutation 244: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp IINC -1 size
   * 9 Weak Mutation 245: com.sleepycat.je.tree.LN.getLogSize()I:355 - DeleteField: data[B
   * 10 Weak Mutation 242: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp Negation of size
   * 11 Weak Mutation 243: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp IINC 1 size
   * 12 com.sleepycat.je.tree.LN.isDeleted()Z: I4 Branch 6 IFNONNULL L99 - true
   * 13 com.sleepycat.je.tree.LN.getLogSize()I: I15 Branch 18 IFNE L354 - false
   * 14 Weak Mutation 75: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 239: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> *
   * 16 Weak Mutation 238: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> /
   * 17 Weak Mutation 237: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> %
   * 18 Weak Mutation 236: com.sleepycat.je.tree.LN.getLogSize()I:353 - ReplaceArithmeticOperator + -> -
   * 19 Weak Mutation 235: com.sleepycat.je.tree.LN.getLogSize()I:353 - DeleteStatement: getBooleanLogSize()I
   * 20 Weak Mutation 234: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC -1 size
   * 21 Weak Mutation 233: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp IINC 1 size
   * 22 Weak Mutation 232: com.sleepycat.je.tree.LN.getLogSize()I:353 - InsertUnaryOp Negation of size
   * 23 Weak Mutation 252: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC 1 size
   * 24 Weak Mutation 253: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp IINC -1 size
   * 25 Weak Mutation 251: com.sleepycat.je.tree.LN.getLogSize()I:357 - InsertUnaryOp Negation of size
   * 26 Weak Mutation 240: com.sleepycat.je.tree.LN.getLogSize()I:354 - DeleteStatement: isDeleted()Z
   * 27 Weak Mutation 241: com.sleepycat.je.tree.LN.getLogSize()I:354 - ReplaceComparisonOperator != -> ==
   * 28 Weak Mutation 77: com.sleepycat.je.tree.LN.isDeleted()Z:99 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 74: com.sleepycat.je.tree.LN.isDeleted()Z:99 - DeleteField: data[B
   * 30 Weak Mutation 250: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> *
   * 31 Weak Mutation 248: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> %
   * 32 Weak Mutation 249: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> /
   * 33 Weak Mutation 246: com.sleepycat.je.tree.LN.getLogSize()I:355 - DeleteStatement: getByteArrayLogSize([B)I
   * 34 Weak Mutation 247: com.sleepycat.je.tree.LN.getLogSize()I:355 - ReplaceArithmeticOperator + -> -
   * 35 Weak Mutation 244: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp IINC -1 size
   * 36 Weak Mutation 245: com.sleepycat.je.tree.LN.getLogSize()I:355 - DeleteField: data[B
   * 37 Weak Mutation 242: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp Negation of size
   * 38 Weak Mutation 243: com.sleepycat.je.tree.LN.getLogSize()I:355 - InsertUnaryOp IINC 1 size
   */
  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      LN lN0 = new LN(databaseEntry0);
      assertNotNull(lN0);
      
      int int0 = lN0.getLogSize();
      assertEquals("<com.sleepycat.je.tree.LN/4294969793", lN0.shortDescription());
      assertEquals(17, int0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 78: com.sleepycat.je.tree.LN.isValidForDelete()Z:107 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.LN.isValidForDelete()Z: root-Branch
   * 3 Weak Mutation 78: com.sleepycat.je.tree.LN.isValidForDelete()Z:107 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test8()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      boolean boolean0 = lN0.isValidForDelete();
      assertEquals(4294969983L, lN0.getLastId());
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * 1 Weak Mutation 79: com.sleepycat.je.tree.LN.isSoughtNode(JZ)Z:114 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.LN.isSoughtNode(JZ)Z: root-Branch
   * 3 com.sleepycat.je.tree.LN.<init>()V: root-Branch
   * 4 Weak Mutation 79: com.sleepycat.je.tree.LN.isSoughtNode(JZ)Z:114 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test9()  throws Throwable  {
      LN lN0 = new LN();
      boolean boolean0 = lN0.isSoughtNode((-12L), false);
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 80: com.sleepycat.je.tree.LN.canBeAncestor(Z)Z:121 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.LN.canBeAncestor(Z)Z: root-Branch
   * 3 Weak Mutation 80: com.sleepycat.je.tree.LN.canBeAncestor(Z)Z:121 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test10()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      boolean boolean0 = fileSummaryLN0.canBeAncestor(false);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 51 covered goals:
   * 1 Weak Mutation 81: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:129 - DeleteStatement: makeDeleted()V
   * 2 Weak Mutation 82: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:130 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 3 Weak Mutation 85: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> -2
   * 4 Weak Mutation 84: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 1
   * 5 Weak Mutation 83: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 87: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:132 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 86: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:132 - ReplaceVariable dupKey -> lnKey
   * 8 Weak Mutation 89: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 88: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - DeleteStatement: isTransactional()Z
   * 10 Weak Mutation 90: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:139 - DeleteField: LOG_DEL_DUPLN_TRANSACTIONALLcom/sleepycat/je/log/LogEntryType;
   * 11 Weak Mutation 92: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;
   * 12 Weak Mutation 91: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getNodeId()J
   * 13 Weak Mutation 93: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:141 - DeleteStatement: getAbortLsn()J
   * 14 Weak Mutation 94: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:142 - DeleteStatement: getAbortKnownDeleted()Z
   * 15 Weak Mutation 95: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - DeleteStatement: getTxnLocker()Lcom/sleepycat/je/txn/Txn;
   * 16 Weak Mutation 103: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of oldLsn
   * 17 Weak Mutation 110: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceComparisonOperator != -> -1
   * 18 Weak Mutation 106: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of logAbortLsn
   * 19 Weak Mutation 107: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - DeleteStatement: longSub(JJ)I
   * 20 Weak Mutation 111: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> 0
   * 21 Weak Mutation 113: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> -2
   * 22 Weak Mutation 112: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> 1
   * 23 Weak Mutation 115: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:157 - ReplaceVariable dupKey -> lnKey
   * 24 Weak Mutation 114: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:157 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 25 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I16 Branch 7 IFNULL L132 - false
   * 26 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I21 Branch 8 IFEQ L138 - false
   * 27 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I72 Branch 9 IFNE L153 - false
   * 28 Weak Mutation 85: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> -2
   * 29 Weak Mutation 84: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 1
   * 30 Weak Mutation 87: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:132 - ReplaceComparisonOperator = null -> != null
   * 31 Weak Mutation 86: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:132 - ReplaceVariable dupKey -> lnKey
   * 32 Weak Mutation 81: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:129 - DeleteStatement: makeDeleted()V
   * 33 Weak Mutation 83: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 0
   * 34 Weak Mutation 82: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:130 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 35 Weak Mutation 93: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:141 - DeleteStatement: getAbortLsn()J
   * 36 Weak Mutation 92: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;
   * 37 Weak Mutation 95: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - DeleteStatement: getTxnLocker()Lcom/sleepycat/je/txn/Txn;
   * 38 Weak Mutation 94: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:142 - DeleteStatement: getAbortKnownDeleted()Z
   * 39 Weak Mutation 89: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 88: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - DeleteStatement: isTransactional()Z
   * 41 Weak Mutation 91: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getNodeId()J
   * 42 Weak Mutation 90: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:139 - DeleteField: LOG_DEL_DUPLN_TRANSACTIONALLcom/sleepycat/je/log/LogEntryType;
   * 43 Weak Mutation 103: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of oldLsn
   * 44 Weak Mutation 110: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceComparisonOperator != -> -1
   * 45 Weak Mutation 111: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> 0
   * 46 Weak Mutation 106: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of logAbortLsn
   * 47 Weak Mutation 107: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - DeleteStatement: longSub(JJ)I
   * 48 Weak Mutation 115: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:157 - ReplaceVariable dupKey -> lnKey
   * 49 Weak Mutation 114: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:157 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 50 Weak Mutation 113: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> -2
   * 51 Weak Mutation 112: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:154 - ReplaceConstant - -1 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[5];
      // Undeclared exception!
      try {
        mapLN0.delete(databaseImpl0, byteArray0, byteArray1, (long) (byte) (-1), (Locker) txn0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 12
  /*
   * 27 covered goals:
   * 1 Weak Mutation 102: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable oldLsn -> logAbortLsn
   * 2 Weak Mutation 101: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable oldLsn -> newLsn
   * 3 Weak Mutation 109: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceComparisonOperator != -> >
   * 4 Weak Mutation 105: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable logAbortLsn -> oldLsn
   * 5 com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J: I72 Branch 9 IFNE L153 - true
   * 6 Weak Mutation 85: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 84: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 1
   * 8 Weak Mutation 87: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:132 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 81: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:129 - DeleteStatement: makeDeleted()V
   * 10 Weak Mutation 83: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:131 - ReplaceConstant - -1 -> 0
   * 11 Weak Mutation 82: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:130 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 12 Weak Mutation 93: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:141 - DeleteStatement: getAbortLsn()J
   * 13 Weak Mutation 92: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;
   * 14 Weak Mutation 95: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:143 - DeleteStatement: getTxnLocker()Lcom/sleepycat/je/txn/Txn;
   * 15 Weak Mutation 94: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:142 - DeleteStatement: getAbortKnownDeleted()Z
   * 16 Weak Mutation 89: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 88: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:138 - DeleteStatement: isTransactional()Z
   * 18 Weak Mutation 91: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:140 - DeleteStatement: getNodeId()J
   * 19 Weak Mutation 90: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:139 - DeleteField: LOG_DEL_DUPLN_TRANSACTIONALLcom/sleepycat/je/log/LogEntryType;
   * 20 Weak Mutation 103: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of oldLsn
   * 21 Weak Mutation 106: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - InsertUnaryOp Negation of logAbortLsn
   * 22 Weak Mutation 107: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - DeleteStatement: longSub(JJ)I
   * 23 Weak Mutation 114: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:157 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 24 Weak Mutation 102: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable oldLsn -> logAbortLsn
   * 25 Weak Mutation 101: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable oldLsn -> newLsn
   * 26 Weak Mutation 109: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceComparisonOperator != -> >
   * 27 Weak Mutation 105: com.sleepycat.je.tree.LN.delete(Lcom/sleepycat/je/dbi/DatabaseImpl;[B[BJLcom/sleepycat/je/txn/Locker;)J:153 - ReplaceVariable logAbortLsn -> oldLsn
   */
  @Test
  public void test12()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try {
        mapLN0.delete(databaseImpl0, byteArray0, byteArray0, (-468L), (Locker) txn0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 13
  /*
   * 71 covered goals:
   * 1 Weak Mutation 116: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:172 - ReplaceVariable newData -> lnKey
   * 2 Weak Mutation 117: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:173 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 3 Weak Mutation 119: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - ReplaceVariable lnKey -> newData
   * 4 Weak Mutation 118: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 5 Weak Mutation 121: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J
   * 6 Weak Mutation 120: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - InsertUnaryOp Negation of oldLsn
   * 7 Weak Mutation 193: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 192: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - InsertUnaryOp Negation of oldLsn
   * 9 Weak Mutation 196: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 195: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - DeleteStatement: isTransactional()Z
   * 11 Weak Mutation 194: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 197: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:303 - DeleteStatement: getTransactionalLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 13 Weak Mutation 199: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:304 - DeleteStatement: getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;
   * 14 Weak Mutation 198: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:304 - DeleteStatement: getNodeId()J
   * 15 Weak Mutation 200: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:305 - DeleteStatement: getAbortLsn()J
   * 16 Weak Mutation 201: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:306 - DeleteStatement: getAbortKnownDeleted()Z
   * 17 Weak Mutation 202: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:307 - DeleteStatement: getTxnLocker()Lcom/sleepycat/je/txn/Txn;
   * 18 Weak Mutation 205: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 206: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 203: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - InsertUnaryOp Negation
   * 21 Weak Mutation 216: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - DeleteStatement: longSub(JJ)I
   * 22 Weak Mutation 217: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> <
   * 23 Weak Mutation 212: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable oldLsn -> logAbortLsn
   * 24 Weak Mutation 213: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of oldLsn
   * 25 Weak Mutation 214: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable logAbortLsn -> oldLsn
   * 26 Weak Mutation 215: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of logAbortLsn
   * 27 Weak Mutation 223: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortLsn -> oldLsn
   * 28 Weak Mutation 228: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC -1 logAbortKnownDeleted
   * 29 Weak Mutation 227: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC 1 logAbortKnownDeleted
   * 30 Weak Mutation 226: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortKnownDeleted
   * 31 Weak Mutation 225: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortKnownDeleted -> isProvisional
   * 32 Weak Mutation 224: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortLsn
   * 33 com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J: root-Branch
   * 34 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J: root-Branch
   * 35 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I3 Branch 13 IFNULL L302 - false
   * 36 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I6 Branch 14 IFEQ L302 - false
   * 37 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I37 Branch 15 IFNE L308 - false
   * 38 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I39 Branch 16 IFNONNULL L308 - true
   * 39 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I66 Branch 17 IFNE L318 - true
   * 40 Weak Mutation 119: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - ReplaceVariable lnKey -> newData
   * 41 Weak Mutation 118: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 42 Weak Mutation 117: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:173 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 43 Weak Mutation 116: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:172 - ReplaceVariable newData -> lnKey
   * 44 Weak Mutation 121: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J
   * 45 Weak Mutation 120: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - InsertUnaryOp Negation of oldLsn
   * 46 Weak Mutation 205: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - ReplaceComparisonOperator != -> ==
   * 47 Weak Mutation 206: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - ReplaceComparisonOperator != null -> = null
   * 48 Weak Mutation 201: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:306 - DeleteStatement: getAbortKnownDeleted()Z
   * 49 Weak Mutation 200: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:305 - DeleteStatement: getAbortLsn()J
   * 50 Weak Mutation 203: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:308 - InsertUnaryOp Negation
   * 51 Weak Mutation 202: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:307 - DeleteStatement: getTxnLocker()Lcom/sleepycat/je/txn/Txn;
   * 52 Weak Mutation 197: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:303 - DeleteStatement: getTransactionalLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 53 Weak Mutation 196: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - ReplaceComparisonOperator == -> !=
   * 54 Weak Mutation 199: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:304 - DeleteStatement: getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;
   * 55 Weak Mutation 198: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:304 - DeleteStatement: getNodeId()J
   * 56 Weak Mutation 193: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - ReplaceConstant - 0 -> 1
   * 57 Weak Mutation 192: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - InsertUnaryOp Negation of oldLsn
   * 58 Weak Mutation 195: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - DeleteStatement: isTransactional()Z
   * 59 Weak Mutation 194: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - ReplaceComparisonOperator = null -> != null
   * 60 Weak Mutation 223: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortLsn -> oldLsn
   * 61 Weak Mutation 216: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - DeleteStatement: longSub(JJ)I
   * 62 Weak Mutation 217: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> <
   * 63 Weak Mutation 212: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable oldLsn -> logAbortLsn
   * 64 Weak Mutation 213: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of oldLsn
   * 65 Weak Mutation 214: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable logAbortLsn -> oldLsn
   * 66 Weak Mutation 215: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of logAbortLsn
   * 67 Weak Mutation 228: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC -1 logAbortKnownDeleted
   * 68 Weak Mutation 227: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC 1 logAbortKnownDeleted
   * 69 Weak Mutation 226: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortKnownDeleted
   * 70 Weak Mutation 225: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortKnownDeleted -> isProvisional
   * 71 Weak Mutation 224: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortLsn
   */
  @Test
  public void test13()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = new byte[2];
      // Undeclared exception!
      try {
        mapLN0.modify(byteArray0, databaseImpl0, byteArray1, 0L, (Locker) txn0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 14
  /*
   * 59 covered goals:
   * 1 Weak Mutation 124: com.sleepycat.je.tree.LN.beginTag()Ljava/lang/String;:212 - ReplaceConstant - <ln> -> 
   * 2 Weak Mutation 125: com.sleepycat.je.tree.LN.endTag()Ljava/lang/String;:216 - ReplaceConstant - </ln> -> 
   * 3 Weak Mutation 127: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp IINC 1 dumpTags
   * 4 Weak Mutation 126: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp Negation of dumpTags
   * 5 Weak Mutation 129: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 128: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:221 - InsertUnaryOp IINC -1 dumpTags
   * 7 Weak Mutation 131: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp IINC 1 nSpaces
   * 8 Weak Mutation 130: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp Negation of nSpaces
   * 9 Weak Mutation 133: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - DeleteStatement: indent(I)Ljava/lang/String;
   * 10 Weak Mutation 132: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp IINC -1 nSpaces
   * 11 Weak Mutation 134: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 136: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:223 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 135: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:223 - DeleteStatement: beginTag()Ljava/lang/String;
   * 14 Weak Mutation 137: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 0
   * 15 Weak Mutation 139: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> -1
   * 16 Weak Mutation 138: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 1
   * 17 Weak Mutation 141: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 11
   * 18 Weak Mutation 140: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 9
   * 19 Weak Mutation 142: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 143: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp Negation of nSpaces
   * 21 Weak Mutation 152: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> /
   * 22 Weak Mutation 153: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 154: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 155: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 25 Weak Mutation 144: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp IINC 1 nSpaces
   * 26 Weak Mutation 145: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - InsertUnaryOp IINC -1 nSpaces
   * 27 Weak Mutation 146: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 0
   * 28 Weak Mutation 147: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 1
   * 29 Weak Mutation 148: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> -1
   * 30 Weak Mutation 149: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceConstant - 2 -> 3
   * 31 Weak Mutation 150: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> -
   * 32 Weak Mutation 151: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:226 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 156: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 0
   * 34 Weak Mutation 157: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 1
   * 35 Weak Mutation 158: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> -1
   * 36 Weak Mutation 159: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 9
   * 37 Weak Mutation 161: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 160: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:227 - ReplaceConstant - 10 -> 11
   * 39 Weak Mutation 163: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:228 - ReplaceComparisonOperator = null -> != null
   * 40 com.sleepycat.je.tree.LN.beginTag()Ljava/lang/String;: root-Branch
   * 41 com.sleepycat.je.tree.LN.endTag()Ljava/lang/String;: root-Branch
   * 42 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I9 Branch 10 IFEQ L221 - false
   * 43 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I51 Branch 11 IFNULL L228 - true
   * 44 com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;: I90 Branch 12 IFEQ L235 - false
   * 45 Weak Mutation 125: com.sleepycat.je.tree.LN.endTag()Ljava/lang/String;:216 - ReplaceConstant - </ln> -> 
   * 46 Weak Mutation 124: com.sleepycat.je.tree.LN.beginTag()Ljava/lang/String;:212 - ReplaceConstant - <ln> -> 
   * 47 Weak Mutation 137: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 0
   * 48 Weak Mutation 136: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:223 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 49 Weak Mutation 139: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> -1
   * 50 Weak Mutation 138: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 1
   * 51 Weak Mutation 141: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 11
   * 52 Weak Mutation 140: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - ReplaceConstant - 10 -> 9
   * 53 Weak Mutation 142: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:224 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 54 Weak Mutation 131: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp IINC 1 nSpaces
   * 55 Weak Mutation 130: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp Negation of nSpaces
   * 56 Weak Mutation 133: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - DeleteStatement: indent(I)Ljava/lang/String;
   * 57 Weak Mutation 132: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - InsertUnaryOp IINC -1 nSpaces
   * 58 Weak Mutation 135: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:223 - DeleteStatement: beginTag()Ljava/lang/String;
   * 59 Weak Mutation 134: com.sleepycat.je.tree.LN.dumpString(IZ)Ljava/lang/String;:222 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      String string0 = lN0.toString();
      assertEquals(4294970383L, lN0.getNextNodeId());
      assertEquals("<ln>\n  <node>4294970381</node>\n</ln>", string0);
  }

  //Test case number: 15
  /*
   * 26 covered goals:
   * 1 Weak Mutation 190: com.sleepycat.je.tree.LN.logProvisional(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJ)J:256 - InsertUnaryOp Negation of oldLsn
   * 2 Weak Mutation 191: com.sleepycat.je.tree.LN.logProvisional(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJ)J:256 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 207: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:311 - DeleteStatement: getLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 4 Weak Mutation 208: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 0
   * 5 Weak Mutation 209: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 210: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 211: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:313 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 219: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 220: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> 0
   * 10 Weak Mutation 221: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> 1
   * 11 Weak Mutation 222: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> -2
   * 12 com.sleepycat.je.tree.LN.logProvisional(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJ)J: root-Branch
   * 13 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I3 Branch 13 IFNULL L302 - true
   * 14 com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J: I66 Branch 17 IFNE L318 - false
   * 15 Weak Mutation 225: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortKnownDeleted -> isProvisional
   * 16 Weak Mutation 190: com.sleepycat.je.tree.LN.logProvisional(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJ)J:256 - InsertUnaryOp Negation of oldLsn
   * 17 Weak Mutation 191: com.sleepycat.je.tree.LN.logProvisional(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJ)J:256 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 207: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:311 - DeleteStatement: getLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 19 Weak Mutation 220: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> 0
   * 20 Weak Mutation 221: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> 1
   * 21 Weak Mutation 222: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:319 - ReplaceConstant - -1 -> -2
   * 22 Weak Mutation 219: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> -1
   * 23 Weak Mutation 208: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 0
   * 24 Weak Mutation 209: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 1
   * 25 Weak Mutation 210: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> -2
   * 26 Weak Mutation 211: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:313 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test15()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN();
      DatabaseId databaseId0 = new DatabaseId(1003);
      byte[] byteArray0 = new byte[3];
      // Undeclared exception!
      try {
        dupCountLN0.logProvisional((EnvironmentImpl) null, databaseId0, byteArray0, (-1L));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 16
  /*
   * 24 covered goals:
   * 1 Weak Mutation 218: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 118: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 3 Weak Mutation 117: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:173 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 4 Weak Mutation 121: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - DeleteStatement: log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J
   * 5 Weak Mutation 120: com.sleepycat.je.tree.LN.modify([BLcom/sleepycat/je/dbi/DatabaseImpl;[BJLcom/sleepycat/je/txn/Locker;)J:174 - InsertUnaryOp Negation of oldLsn
   * 6 Weak Mutation 207: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:311 - DeleteStatement: getLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 7 Weak Mutation 193: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 192: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:276 - InsertUnaryOp Negation of oldLsn
   * 9 Weak Mutation 194: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:302 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 223: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - ReplaceVariable logAbortLsn -> oldLsn
   * 11 Weak Mutation 216: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - DeleteStatement: longSub(JJ)I
   * 12 Weak Mutation 212: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable oldLsn -> logAbortLsn
   * 13 Weak Mutation 213: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of oldLsn
   * 14 Weak Mutation 214: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceVariable logAbortLsn -> oldLsn
   * 15 Weak Mutation 215: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - InsertUnaryOp Negation of logAbortLsn
   * 16 Weak Mutation 208: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 0
   * 17 Weak Mutation 209: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> 1
   * 18 Weak Mutation 210: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:312 - ReplaceConstant - -1 -> -2
   * 19 Weak Mutation 211: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:313 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 228: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC -1 logAbortKnownDeleted
   * 21 Weak Mutation 227: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp IINC 1 logAbortKnownDeleted
   * 22 Weak Mutation 226: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortKnownDeleted
   * 23 Weak Mutation 224: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:322 - InsertUnaryOp Negation of logAbortLsn
   * 24 Weak Mutation 218: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:318 - ReplaceComparisonOperator != -> >
   */
  @Test
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      NameLN nameLN0 = new NameLN();
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      // Undeclared exception!
      try {
        nameLN0.modify(byteArray0, databaseImpl0, byteArray0, (long) (byte) (-102), (Locker) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 Weak Mutation 229: com.sleepycat.je.tree.LN.getTransactionalLogType()Lcom/sleepycat/je/log/LogEntryType;:331 - DeleteField: LOG_LN_TRANSACTIONALLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.LN.getTransactionalLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 229: com.sleepycat.je.tree.LN.getTransactionalLogType()Lcom/sleepycat/je/log/LogEntryType;:331 - DeleteField: LOG_LN_TRANSACTIONALLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test17()  throws Throwable  {
      LN lN0 = new LN();
      LogEntryType logEntryType0 = lN0.getTransactionalLogType();
      assertNotNull(logEntryType0);
      assertEquals(4294970737L, lN0.getNextNodeId());
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Weak Mutation 230: com.sleepycat.je.tree.LN.countAsObsoleteWhenLogged()Z:338 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.LN.countAsObsoleteWhenLogged()Z: root-Branch
   * 3 Weak Mutation 230: com.sleepycat.je.tree.LN.countAsObsoleteWhenLogged()Z:338 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test18()  throws Throwable  {
      LN lN0 = new LN();
      boolean boolean0 = lN0.countAsObsoleteWhenLogged();
      assertEquals(false, boolean0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Weak Mutation 231: com.sleepycat.je.tree.LN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:345 - DeleteField: LOG_LNLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.LN.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 231: com.sleepycat.je.tree.LN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:345 - DeleteField: LOG_LNLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test19()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      lN0.getLogType();
      assertEquals(4294970744L, lN0.getNodeId());
      assertEquals("<ln>\n  <node>4294970744</node>\n</ln>", lN0.toString());
  }

  //Test case number: 20
  /*
   * 6 covered goals:
   * 1 Weak Mutation 266: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp Negation of entryTypeVersion
   * 2 Weak Mutation 267: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp IINC 1 entryTypeVersion
   * 3 Weak Mutation 268: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp IINC -1 entryTypeVersion
   * 4 Weak Mutation 266: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp Negation of entryTypeVersion
   * 5 Weak Mutation 267: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp IINC 1 entryTypeVersion
   * 6 Weak Mutation 268: com.sleepycat.je.tree.LN.readFromLog(Ljava/nio/ByteBuffer;B)V:377 - InsertUnaryOp IINC -1 entryTypeVersion
   */
  @Test
  public void test20()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      // Undeclared exception!
      try {
        fileSummaryLN0.readFromLog((ByteBuffer) null, (byte)2);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 21
  /*
   * 87 covered goals:
   * 1 Weak Mutation 278: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:390 - DeleteField: data[B
   * 2 Weak Mutation 281: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:391 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 280: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:391 - ReplaceConstant - <data> -> 
   * 4 Weak Mutation 283: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 5 Weak Mutation 282: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteField: data[B
   * 6 Weak Mutation 284: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 286: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:393 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 8 Weak Mutation 285: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:393 - ReplaceConstant - </data> -> 
   * 9 com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V: I17 Branch 22 IFNULL L390 - false
   * 10 Weak Mutation 4: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:66 - DeleteStatement: getPartial()Z
   * 11 Weak Mutation 5: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:66 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 15: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:70 - DeleteStatement: getOffset()I
   * 13 Weak Mutation 16: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:70 - DeleteStatement: getSize()I
   * 14 Weak Mutation 19: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceVariable len -> doff
   * 15 Weak Mutation 18: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceVariable len -> off
   * 16 Weak Mutation 21: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp IINC 1 len
   * 17 Weak Mutation 20: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp Negation of len
   * 18 Weak Mutation 23: com.sleepycat.je.tree.LN.init([BIIII)V:75 - ReplaceComparisonOperator != -> <
   * 19 Weak Mutation 22: com.sleepycat.je.tree.LN.init([BIIII)V:75 - InsertUnaryOp IINC -1 len
   * 20 Weak Mutation 29: com.sleepycat.je.tree.LN.init([BIIII)V:78 - ReplaceVariable len -> doff
   * 21 Weak Mutation 28: com.sleepycat.je.tree.LN.init([BIIII)V:78 - ReplaceVariable len -> off
   * 22 Weak Mutation 31: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp IINC 1 len
   * 23 Weak Mutation 30: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp Negation of len
   * 24 Weak Mutation 34: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> len
   * 25 Weak Mutation 32: com.sleepycat.je.tree.LN.init([BIIII)V:78 - InsertUnaryOp IINC -1 len
   * 26 Weak Mutation 33: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable off -> dlen
   * 27 Weak Mutation 38: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 off
   * 28 Weak Mutation 39: com.sleepycat.je.tree.LN.init([BIIII)V:79 - DeleteField: data[B
   * 29 Weak Mutation 36: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of off
   * 30 Weak Mutation 37: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 off
   * 31 Weak Mutation 42: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> len
   * 32 Weak Mutation 43: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of doff
   * 33 Weak Mutation 40: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable doff -> dlen
   * 34 Weak Mutation 46: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable dlen -> off
   * 35 Weak Mutation 44: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 doff
   * 36 Weak Mutation 45: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 doff
   * 37 Weak Mutation 51: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC -1 dlen
   * 38 Weak Mutation 50: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp IINC 1 dlen
   * 39 Weak Mutation 49: com.sleepycat.je.tree.LN.init([BIIII)V:79 - InsertUnaryOp Negation of dlen
   * 40 Weak Mutation 48: com.sleepycat.je.tree.LN.init([BIIII)V:79 - ReplaceVariable dlen -> doff
   * 41 Weak Mutation 55: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC 1 off
   * 42 Weak Mutation 54: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of off
   * 43 Weak Mutation 53: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable off -> len
   * 44 Weak Mutation 52: com.sleepycat.je.tree.LN.init([BIIII)V:79 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 45 Weak Mutation 59: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC 1 len
   * 46 Weak Mutation 58: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of len
   * 47 Weak Mutation 57: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable len -> off
   * 48 Weak Mutation 56: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC -1 off
   * 49 Weak Mutation 63: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp Negation of len
   * 50 Weak Mutation 62: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceVariable len -> off
   * 51 Weak Mutation 61: com.sleepycat.je.tree.LN.init([BII)V:84 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 60: com.sleepycat.je.tree.LN.init([BII)V:84 - InsertUnaryOp IINC -1 len
   * 53 Weak Mutation 125: com.sleepycat.je.tree.LN.endTag()Ljava/lang/String;:216 - ReplaceConstant - </ln> -> 
   * 54 Weak Mutation 124: com.sleepycat.je.tree.LN.beginTag()Ljava/lang/String;:212 - ReplaceConstant - <ln> -> 
   * 55 Weak Mutation 275: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp Negation of verbose
   * 56 Weak Mutation 274: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:388 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 57 Weak Mutation 273: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:388 - DeleteStatement: beginTag()Ljava/lang/String;
   * 58 Weak Mutation 279: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:390 - ReplaceComparisonOperator = null -> != null
   * 59 Weak Mutation 277: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp IINC -1 verbose
   * 60 Weak Mutation 276: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp IINC 1 verbose
   * 61 Weak Mutation 287: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp Negation of verbose
   * 62 Weak Mutation 288: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp IINC 1 verbose
   * 63 Weak Mutation 289: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp IINC -1 verbose
   * 64 Weak Mutation 290: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - DeleteStatement: dumpLogAdditional(Ljava/lang/StringBuffer;Z)V
   * 65 Weak Mutation 291: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:396 - DeleteStatement: endTag()Ljava/lang/String;
   * 66 Weak Mutation 292: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:396 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 67 Weak Mutation 275: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp Negation of verbose
   * 68 Weak Mutation 274: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:388 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 69 Weak Mutation 273: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:388 - DeleteStatement: beginTag()Ljava/lang/String;
   * 70 Weak Mutation 279: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:390 - ReplaceComparisonOperator = null -> != null
   * 71 Weak Mutation 278: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:390 - DeleteField: data[B
   * 72 Weak Mutation 277: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp IINC -1 verbose
   * 73 Weak Mutation 276: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:389 - InsertUnaryOp IINC 1 verbose
   * 74 Weak Mutation 283: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteStatement: dumpByteArray([B)Ljava/lang/String;
   * 75 Weak Mutation 282: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteField: data[B
   * 76 Weak Mutation 281: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:391 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 77 Weak Mutation 280: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:391 - ReplaceConstant - <data> -> 
   * 78 Weak Mutation 287: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp Negation of verbose
   * 79 Weak Mutation 286: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:393 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 80 Weak Mutation 285: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:393 - ReplaceConstant - </data> -> 
   * 81 Weak Mutation 284: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:392 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 82 Weak Mutation 288: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp IINC 1 verbose
   * 83 Weak Mutation 289: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - InsertUnaryOp IINC -1 verbose
   * 84 Weak Mutation 290: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:395 - DeleteStatement: dumpLogAdditional(Ljava/lang/StringBuffer;Z)V
   * 85 Weak Mutation 291: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:396 - DeleteStatement: endTag()Ljava/lang/String;
   * 86 Weak Mutation 292: com.sleepycat.je.tree.LN.dumpLog(Ljava/lang/StringBuffer;Z)V:396 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 87 com.sleepycat.je.tree.LN.dumpLogAdditional(Ljava/lang/StringBuffer;Z)V: root-Branch
   */
  @Test
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      LN lN0 = new LN(databaseEntry0);
      assertNotNull(lN0);
      
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      lN0.dumpLog(stringBuffer0, true);
      assertEquals(70, stringBuffer0.capacity());
      assertEquals("<ln><node>4294970764</node><data>0 0 0 0 </data></ln>", stringBuffer0.toString());
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 Weak Mutation 293: com.sleepycat.je.tree.LN.logEntryIsTransactional()Z:405 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.LN.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 293: com.sleepycat.je.tree.LN.logEntryIsTransactional()Z:405 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test22()  throws Throwable  {
      FileSummaryLN fileSummaryLN0 = new FileSummaryLN();
      boolean boolean0 = fileSummaryLN0.logEntryIsTransactional();
      assertEquals(false, boolean0);
  }

  //Test case number: 23
  /*
   * 7 covered goals:
   * 1 Weak Mutation 294: com.sleepycat.je.tree.LN.getTransactionId()J:414 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 295: com.sleepycat.je.tree.LN.getTransactionId()J:414 - ReplaceConstant - 0 -> -1
   * 3 com.sleepycat.je.tree.LN.getTransactionId()J: root-Branch
   * 4 Weak Mutation 2: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:63 - DeleteStatement: getData()[B
   * 5 Weak Mutation 3: com.sleepycat.je.tree.LN.<init>(Lcom/sleepycat/je/DatabaseEntry;)V:64 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 294: com.sleepycat.je.tree.LN.getTransactionId()J:414 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 295: com.sleepycat.je.tree.LN.getTransactionId()J:414 - ReplaceConstant - 0 -> -1
   */
  @Test
  public void test23()  throws Throwable  {
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      LN lN0 = new LN(databaseEntry0);
      long long0 = lN0.getTransactionId();
      assertEquals("<ln>\n  <node>4294970947</node>\n</ln>", lN0.toString());
      assertEquals(0L, long0);
  }
}
