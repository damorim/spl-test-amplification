/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.InconsistentNodeException;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import java.io.StringWriter;

@RunWith(EvoSuiteRunner.class)
public class TestIN_49 {


  //Test case number: 49
  /*
   * 23 covered goals:
   * 1 Weak Mutation 1641: com.sleepycat.je.tree.IN.verify([B)V:1500 - ReplaceComparisonOperator != null -> = null
   * 2 Weak Mutation 1643: com.sleepycat.je.tree.IN.verify([B)V:1502 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 1646: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp IINC -1
   * 4 Weak Mutation 1647: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp Negation
   * 5 Weak Mutation 1644: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp Negation
   * 6 Weak Mutation 1645: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 1651: com.sleepycat.je.tree.IN.verify([B)V:1502 - ReplaceComparisonOperator >= -> ==
   * 8 Weak Mutation 1649: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp -1
   * 9 Weak Mutation 1648: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp +1
   * 10 com.sleepycat.je.tree.IN.verify([B)V: I4 Branch 85 IFNONNULL L1500 - false
   * 11 com.sleepycat.je.tree.IN.verify([B)V: I24 Branch 86 IF_ICMPGE L1502 - true
   * 12 com.sleepycat.je.tree.IN.verify([B)V: I102 Branch 88 IFNULL L1511 - false
   * 13 com.sleepycat.je.tree.IN.verify([B)V: I104 Branch 89 IFNULL L1511 - true
   * 14 com.sleepycat.je.tree.IN.verify([B)V: I119 Branch 91 IFEQ L1516 - true
   * 15 Weak Mutation 1643: com.sleepycat.je.tree.IN.verify([B)V:1502 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 1641: com.sleepycat.je.tree.IN.verify([B)V:1500 - ReplaceComparisonOperator != null -> = null
   * 17 Weak Mutation 1646: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 1647: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp Negation
   * 19 Weak Mutation 1644: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp Negation
   * 20 Weak Mutation 1645: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 1651: com.sleepycat.je.tree.IN.verify([B)V:1502 - ReplaceComparisonOperator >= -> ==
   * 22 Weak Mutation 1649: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp -1
   * 23 Weak Mutation 1648: com.sleepycat.je.tree.IN.verify([B)V:1502 - InsertUnaryOp +1
   */
  @Test
  public void test49()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      assertNotNull(dBIN0);
      
      byte[] byteArray0 = new byte[10];
      dBIN0.verify(byteArray0);
      assertEquals(113286L, dBIN0.getNextNodeId());
      assertEquals(false, dBIN0.isRoot());
  }
}
