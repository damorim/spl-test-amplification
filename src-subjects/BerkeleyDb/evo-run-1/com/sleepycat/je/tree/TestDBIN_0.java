/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.MapLN;

@RunWith(EvoSuiteRunner.class)
public class TestDBIN_0 {


  //Test case number: 0
  /*
   * 25 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 1: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp Negation
   * 3 Weak Mutation 2: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC 1
   * 4 Weak Mutation 3: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 4: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - DeleteField: dupKey[B
   * 6 Weak Mutation 5: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp Negation
   * 7 Weak Mutation 6: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 7: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC -1
   * 9 Weak Mutation 8: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp Negation
   * 10 Weak Mutation 9: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 10: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp IINC -1
   * 12 com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I: root-Branch
   * 13 com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;: root-Branch
   * 14 com.sleepycat.je.tree.DBIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BI)V: root-Branch
   * 15 Weak Mutation 0: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 16 Weak Mutation 1: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp Negation
   * 17 Weak Mutation 2: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC 1
   * 18 Weak Mutation 3: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 4: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - DeleteField: dupKey[B
   * 20 Weak Mutation 5: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp Negation
   * 21 Weak Mutation 6: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 7: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:36 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 8: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp Negation
   * 24 Weak Mutation 9: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp IINC 1
   * 25 Weak Mutation 10: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:39 - InsertUnaryOp IINC -1
   */
  @Test
  public void test0()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      byte[] byteArray0 = new byte[3];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)1, byteArray0, (-263));
      dBIN0.createNewInstance(byteArray0, (int) (byte)0, (int) (byte)46);
      assertEquals(4294970627L, dBIN0.getNextNodeId());
      assertEquals(4294970628L, mapLN0.getLastId());
  }
}
