/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;

@RunWith(EvoSuiteRunner.class)
public class TestIN_36 {


  //Test case number: 36
  /*
   * 138 covered goals:
   * 1 Weak Mutation 865: com.sleepycat.je.tree.IN.getNEntries()I:687 - DeleteField: nEntriesI
   * 2 Weak Mutation 1819: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - ReplaceComparisonOperator >= -> -1
   * 3 Weak Mutation 1816: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - DeleteStatement: getNEntries()I
   * 4 Weak Mutation 1815: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - InsertUnaryOp IINC -1
   * 5 Weak Mutation 1814: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 1813: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - InsertUnaryOp Negation
   * 7 Weak Mutation 1812: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1841 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 1824: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1842 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 1823: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1842 - DeleteStatement: getTarget(I)Lcom/sleepycat/je/tree/Node;
   * 10 Weak Mutation 1822: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1842 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 1821: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1842 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 1820: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1842 - InsertUnaryOp Negation
   * 13 Weak Mutation 1825: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1843 - ReplaceConstant - 1 -> 0
   * 14 com.sleepycat.je.tree.IN.hasNonLNChildren()Z: root-Branch
   * 15 com.sleepycat.je.tree.IN.hasResidentChildren()Z: I8 Branch 122 IF_ICMPGE L1841 - false
   * 16 com.sleepycat.je.tree.IN.hasResidentChildren()Z: I14 Branch 123 IFNULL L1842 - false
   * 17 Weak Mutation 44: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceBitwiseOperator << -> >>>
   * 18 Weak Mutation 45: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceBitwiseOperator << -> >>
   * 19 Weak Mutation 154: com.sleepycat.je.tree.IN.setDirty(Z)V:322 - InsertUnaryOp Negation
   * 20 Weak Mutation 155: com.sleepycat.je.tree.IN.setDirty(Z)V:322 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 156: com.sleepycat.je.tree.IN.setDirty(Z)V:322 - InsertUnaryOp IINC -1
   * 22 Weak Mutation 176: com.sleepycat.je.tree.IN.getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;:380 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 23 Weak Mutation 332: com.sleepycat.je.tree.IN.getTarget(I)Lcom/sleepycat/je/tree/Node;:450 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 333: com.sleepycat.je.tree.IN.getTarget(I)Lcom/sleepycat/je/tree/Node;:450 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 330: com.sleepycat.je.tree.IN.getTarget(I)Lcom/sleepycat/je/tree/Node;:450 - DeleteField: entryTargets[Lcom/sleepycat/je/tree/Node;
   * 26 Weak Mutation 331: com.sleepycat.je.tree.IN.getTarget(I)Lcom/sleepycat/je/tree/Node;:450 - InsertUnaryOp Negation
   * 27 Weak Mutation 610: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp Negation
   * 28 Weak Mutation 611: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 608: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - ReplaceArithmeticOperator + -> /
   * 30 Weak Mutation 609: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - ReplaceArithmeticOperator + -> *
   * 31 Weak Mutation 612: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 622: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp Negation
   * 33 Weak Mutation 623: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp IINC 1
   * 34 Weak Mutation 621: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - DeleteField: entryLsnByteArray[B
   * 35 Weak Mutation 627: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp IINC -1
   * 36 Weak Mutation 626: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp IINC 1
   * 37 Weak Mutation 625: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp Negation
   * 38 Weak Mutation 624: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - InsertUnaryOp IINC -1
   * 39 Weak Mutation 631: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - DeleteField: entryLsnByteArray[B
   * 40 Weak Mutation 628: com.sleepycat.je.tree.IN.put3ByteInt(II)V:622 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 635: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp Negation
   * 42 Weak Mutation 634: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 633: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp IINC 1
   * 44 Weak Mutation 632: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp Negation
   * 45 Weak Mutation 639: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - ReplaceConstant - 8 -> 1
   * 46 Weak Mutation 638: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - ReplaceConstant - 8 -> 0
   * 47 Weak Mutation 637: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp IINC -1
   * 48 Weak Mutation 636: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - InsertUnaryOp IINC 1
   * 49 Weak Mutation 603: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp IINC 1
   * 50 Weak Mutation 602: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp Negation
   * 51 Weak Mutation 605: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 604: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 607: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - ReplaceArithmeticOperator + -> %
   * 54 Weak Mutation 606: com.sleepycat.je.tree.IN.setFileOffset(II)V:616 - ReplaceArithmeticOperator + -> -
   * 55 Weak Mutation 653: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - ReplaceConstant - 16 -> 1
   * 56 Weak Mutation 652: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - ReplaceConstant - 16 -> 0
   * 57 Weak Mutation 655: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - ReplaceConstant - 16 -> 15
   * 58 Weak Mutation 654: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - ReplaceConstant - 16 -> -1
   * 59 Weak Mutation 649: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp Negation
   * 60 Weak Mutation 648: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp IINC -1
   * 61 Weak Mutation 651: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp IINC -1
   * 62 Weak Mutation 650: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp IINC 1
   * 63 Weak Mutation 645: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - DeleteField: entryLsnByteArray[B
   * 64 Weak Mutation 647: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 646: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - InsertUnaryOp Negation
   * 66 Weak Mutation 641: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - ReplaceConstant - 8 -> 7
   * 67 Weak Mutation 640: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - ReplaceConstant - 8 -> -1
   * 68 Weak Mutation 642: com.sleepycat.je.tree.IN.put3ByteInt(II)V:623 - ReplaceConstant - 8 -> 9
   * 69 Weak Mutation 656: com.sleepycat.je.tree.IN.put3ByteInt(II)V:624 - ReplaceConstant - 16 -> 17
   * 70 Weak Mutation 1135: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - ReplaceConstant - 1 -> 0
   * 71 Weak Mutation 1132: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - InsertUnaryOp +1
   * 72 Weak Mutation 1133: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - InsertUnaryOp -1
   * 73 Weak Mutation 1131: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - InsertUnaryOp Negation
   * 74 Weak Mutation 1151: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp IINC -1
   * 75 Weak Mutation 1150: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp IINC 1
   * 76 Weak Mutation 1149: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp Negation
   * 77 Weak Mutation 1148: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - ReplaceComparisonOperator != -> ==
   * 78 Weak Mutation 1147: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp IINC -1
   * 79 Weak Mutation 1146: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp IINC 1
   * 80 Weak Mutation 1145: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - InsertUnaryOp Negation
   * 81 Weak Mutation 1144: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - ReplaceComparisonOperator == -> !=
   * 82 Weak Mutation 1143: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - DeleteStatement: entryZeroKeyComparesLow()Z
   * 83 Weak Mutation 1142: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1082 - DeleteStatement: getKeyComparator()Ljava/util/Comparator;
   * 84 Weak Mutation 1141: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1081 - ReplaceConstant - 0 -> 1
   * 85 Weak Mutation 1140: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1080 - ReplaceConstant - 0 -> 1
   * 86 Weak Mutation 1139: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - ReplaceArithmeticOperator - -> *
   * 87 Weak Mutation 1138: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - ReplaceArithmeticOperator - -> /
   * 88 Weak Mutation 1137: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - ReplaceArithmeticOperator - -> %
   * 89 Weak Mutation 1136: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1079 - ReplaceArithmeticOperator - -> +
   * 90 Weak Mutation 1227: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1157 - ReplaceComparisonOperator < -> -2
   * 91 Weak Mutation 1238: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1160 - ReplaceComparisonOperator >= -> -1
   * 92 Weak Mutation 1239: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1161 - DeleteStatement: getKey()[B
   * 93 Weak Mutation 1244: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1163 - InsertUnaryOp IINC 1
   * 94 Weak Mutation 1245: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1163 - InsertUnaryOp IINC -1
   * 95 Weak Mutation 1240: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1162 - ReplaceConstant - 1 -> 0
   * 96 Weak Mutation 1241: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1162 - ReplaceConstant - 0 -> 1
   * 97 Weak Mutation 1242: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1162 - DeleteStatement: findEntry([BZZ)I
   * 98 Weak Mutation 1243: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1163 - InsertUnaryOp Negation
   * 99 Weak Mutation 1248: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1163 - ReplaceComparisonOperator < -> -2
   * 100 Weak Mutation 1270: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp -1
   * 101 Weak Mutation 1268: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp Negation
   * 102 Weak Mutation 1269: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp +1
   * 103 Weak Mutation 1266: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp IINC 1
   * 104 Weak Mutation 1267: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp IINC -1
   * 105 Weak Mutation 1265: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - InsertUnaryOp Negation
   * 106 Weak Mutation 1278: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1178 - DeleteField: entryTargets[Lcom/sleepycat/je/tree/Node;
   * 107 Weak Mutation 1279: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1178 - InsertUnaryOp Negation
   * 108 Weak Mutation 1273: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1169 - ReplaceComparisonOperator >= -> >
   * 109 Weak Mutation 1152: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - ReplaceComparisonOperator != -> ==
   * 110 Weak Mutation 1155: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - InsertUnaryOp Negation
   * 111 Weak Mutation 1154: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1083 - ReplaceConstant - 0 -> 1
   * 112 Weak Mutation 1157: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - ReplaceComparisonOperator != -> ==
   * 113 Weak Mutation 1159: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - InsertUnaryOp +1
   * 114 Weak Mutation 1158: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - InsertUnaryOp Negation
   * 115 Weak Mutation 1160: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - InsertUnaryOp -1
   * 116 Weak Mutation 1163: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1084 - ReplaceComparisonOperator >= -> >
   * 117 Weak Mutation 1165: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp Negation
   * 118 Weak Mutation 1167: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp IINC -1
   * 119 Weak Mutation 1166: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp IINC 1
   * 120 Weak Mutation 1168: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp Negation
   * 121 Weak Mutation 1169: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp IINC 1
   * 122 Weak Mutation 1170: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - InsertUnaryOp IINC -1
   * 123 Weak Mutation 1173: com.sleepycat.je.tree.IN.findEntry([BZZ)I:1085 - ReplaceComparisonOperator > -> -2
   * 124 Weak Mutation 1290: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1180 - InsertUnaryOp IINC -1
   * 125 Weak Mutation 1291: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1180 - DeleteStatement: getLsn()J
   * 126 Weak Mutation 1288: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1180 - InsertUnaryOp Negation
   * 127 Weak Mutation 1289: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1180 - InsertUnaryOp IINC 1
   * 128 Weak Mutation 1292: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1180 - DeleteStatement: setLsnElement(IJ)V
   * 129 Weak Mutation 1282: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1178 - DeleteStatement: getTarget()Lcom/sleepycat/je/tree/Node;
   * 130 Weak Mutation 1283: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1179 - DeleteField: entryKeyVals[[B
   * 131 Weak Mutation 1280: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1178 - InsertUnaryOp IINC 1
   * 132 Weak Mutation 1281: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1178 - InsertUnaryOp IINC -1
   * 133 Weak Mutation 1286: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1179 - InsertUnaryOp IINC -1
   * 134 Weak Mutation 1287: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1179 - DeleteStatement: getKey()[B
   * 135 Weak Mutation 1284: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1179 - InsertUnaryOp Negation
   * 136 Weak Mutation 1285: com.sleepycat.je.tree.IN.insertEntry1(Lcom/sleepycat/je/tree/ChildReference;)I:1179 - InsertUnaryOp IINC 1
   * 137 Weak Mutation 1416: com.sleepycat.je.tree.IN.entryZeroKeyComparesLow()Z:1308 - ReplaceConstant - 1 -> 0
   * 138 Weak Mutation 1825: com.sleepycat.je.tree.IN.hasResidentChildren()Z:1843 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test36()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      byte[] byteArray0 = new byte[2];
      ChildReference childReference0 = new ChildReference((Node) mapLN0, byteArray0, (long) (byte)0);
      byte[] byteArray1 = new byte[9];
      DIN dIN0 = new DIN(databaseImpl0, byteArray1, (int) (byte)105, byteArray1, childReference0, (int) (byte)105);
      dIN0.insertEntry1(childReference0);
      boolean boolean0 = dIN0.hasNonLNChildren();
      assertEquals(110893L, databaseImpl0.getEofNodeId());
      assertEquals(true, boolean0);
  }
}
