/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.BIN;

@RunWith(EvoSuiteRunner.class)
public class TestIN_0 {


  //Test case number: 0
  /*
   * 99 covered goals:
   * 1 Weak Mutation 53: com.sleepycat.je.tree.IN.getEqualityKey()J:153 - DeleteStatement: identityHashCode(Ljava/lang/Object;)I
   * 2 Weak Mutation 55: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC 1
   * 3 Weak Mutation 54: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp Negation
   * 4 Weak Mutation 59: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> -1
   * 5 Weak Mutation 58: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 1
   * 6 Weak Mutation 57: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 0
   * 7 Weak Mutation 56: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC -1
   * 8 Weak Mutation 63: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator << -> >>
   * 9 Weak Mutation 62: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator << -> >>>
   * 10 Weak Mutation 61: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 33
   * 11 Weak Mutation 60: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 31
   * 12 Weak Mutation 64: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp Negation
   * 13 Weak Mutation 65: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC 1
   * 14 Weak Mutation 66: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 67: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator | -> &
   * 16 Weak Mutation 69: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - InsertUnaryOp Negation
   * 17 Weak Mutation 70: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - DeleteStatement: getNodeId()J
   * 18 Weak Mutation 71: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - ReplaceBitwiseOperator ^ -> &
   * 19 Weak Mutation 81: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:171 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 84: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - DeleteStatement: longSub(JJ)I
   * 21 Weak Mutation 86: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - ReplaceComparisonOperator >= -> >
   * 22 Weak Mutation 83: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - InsertUnaryOp Negation
   * 23 Weak Mutation 82: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - InsertUnaryOp Negation
   * 24 Weak Mutation 93: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - DeleteStatement: longSub(JJ)I
   * 25 Weak Mutation 92: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - InsertUnaryOp Negation
   * 26 Weak Mutation 95: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 91: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - InsertUnaryOp Negation
   * 28 Weak Mutation 98: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:184 - ReplaceConstant - 0 -> 1
   * 29 com.sleepycat.je.tree.IN.getEqualityKey()J: root-Branch
   * 30 com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I: I3 Branch 4 IFNONNULL L171 - true
   * 31 com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I: I30 Branch 5 IFGE L177 - true
   * 32 com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I: I40 Branch 6 IFLE L180 - true
   * 33 Weak Mutation 0: com.sleepycat.je.tree.IN.<init>()V:94 - ReplaceConstant - -1 -> 0
   * 34 Weak Mutation 1: com.sleepycat.je.tree.IN.<init>()V:94 - ReplaceConstant - -1 -> 1
   * 35 Weak Mutation 2: com.sleepycat.je.tree.IN.<init>()V:94 - ReplaceConstant - -1 -> -2
   * 36 Weak Mutation 3: com.sleepycat.je.tree.IN.<init>()V:107 - DeleteField: EMPTY_KEY[B
   * 37 Weak Mutation 4: com.sleepycat.je.tree.IN.<init>()V:107 - ReplaceConstant - 0 -> 1
   * 38 Weak Mutation 5: com.sleepycat.je.tree.IN.<init>()V:107 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 6: com.sleepycat.je.tree.IN.<init>()V:107 - DeleteStatement: init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V
   * 40 Weak Mutation 19: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:123 - DeleteStatement: setDatabase(Lcom/sleepycat/je/dbi/DatabaseImpl;)V
   * 41 Weak Mutation 21: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:124 - ReplaceComparisonOperator != null -> = null
   * 42 Weak Mutation 25: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:128 - ReplaceConstant - 0 -> -1
   * 43 Weak Mutation 24: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:128 - ReplaceConstant - 0 -> 1
   * 44 Weak Mutation 27: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:130 - ReplaceConstant - 0 -> 1
   * 45 Weak Mutation 26: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:129 - ReplaceConstant - 0 -> 1
   * 46 Weak Mutation 29: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:132 - InsertUnaryOp IINC 1
   * 47 Weak Mutation 28: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:132 - InsertUnaryOp Negation
   * 48 Weak Mutation 31: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:133 - InsertUnaryOp Negation
   * 49 Weak Mutation 30: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:132 - InsertUnaryOp IINC -1
   * 50 Weak Mutation 34: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:134 - ReplaceConstant - -1 -> 0
   * 51 Weak Mutation 35: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:134 - ReplaceConstant - -1 -> 1
   * 52 Weak Mutation 32: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:133 - InsertUnaryOp IINC 1
   * 53 Weak Mutation 33: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:133 - InsertUnaryOp IINC -1
   * 54 Weak Mutation 38: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - InsertUnaryOp IINC 1
   * 55 Weak Mutation 39: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - InsertUnaryOp IINC -1
   * 56 Weak Mutation 36: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:134 - ReplaceConstant - -1 -> -2
   * 57 Weak Mutation 37: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - InsertUnaryOp Negation
   * 58 Weak Mutation 42: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceConstant - 2 -> -1
   * 59 Weak Mutation 43: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceConstant - 2 -> 3
   * 60 Weak Mutation 40: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceConstant - 2 -> 0
   * 61 Weak Mutation 41: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:135 - ReplaceConstant - 2 -> 1
   * 62 Weak Mutation 46: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:137 - InsertUnaryOp Negation
   * 63 Weak Mutation 47: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:137 - InsertUnaryOp IINC 1
   * 64 Weak Mutation 51: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:139 - InsertUnaryOp IINC 1
   * 65 Weak Mutation 50: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:139 - InsertUnaryOp Negation
   * 66 Weak Mutation 49: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:138 - ReplaceConstant - 0 -> 1
   * 67 Weak Mutation 48: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:137 - InsertUnaryOp IINC -1
   * 68 Weak Mutation 55: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC 1
   * 69 Weak Mutation 54: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp Negation
   * 70 Weak Mutation 53: com.sleepycat.je.tree.IN.getEqualityKey()J:153 - DeleteStatement: identityHashCode(Ljava/lang/Object;)I
   * 71 Weak Mutation 52: com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:139 - InsertUnaryOp IINC -1
   * 72 Weak Mutation 59: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> -1
   * 73 Weak Mutation 58: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 1
   * 74 Weak Mutation 57: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 0
   * 75 Weak Mutation 56: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC -1
   * 76 Weak Mutation 63: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator << -> >>
   * 77 Weak Mutation 62: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator << -> >>>
   * 78 Weak Mutation 61: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 33
   * 79 Weak Mutation 60: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceConstant - 32 -> 31
   * 80 Weak Mutation 69: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - InsertUnaryOp Negation
   * 81 Weak Mutation 70: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - DeleteStatement: getNodeId()J
   * 82 Weak Mutation 71: com.sleepycat.je.tree.IN.getEqualityKey()J:155 - ReplaceBitwiseOperator ^ -> &
   * 83 Weak Mutation 64: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp Negation
   * 84 Weak Mutation 65: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC 1
   * 85 Weak Mutation 66: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - InsertUnaryOp IINC -1
   * 86 Weak Mutation 67: com.sleepycat.je.tree.IN.getEqualityKey()J:154 - ReplaceBitwiseOperator | -> &
   * 87 Weak Mutation 84: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - DeleteStatement: longSub(JJ)I
   * 88 Weak Mutation 86: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - ReplaceComparisonOperator >= -> >
   * 89 Weak Mutation 81: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:171 - ReplaceComparisonOperator != null -> = null
   * 90 Weak Mutation 83: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - InsertUnaryOp Negation
   * 91 Weak Mutation 82: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:177 - InsertUnaryOp Negation
   * 92 Weak Mutation 93: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - DeleteStatement: longSub(JJ)I
   * 93 Weak Mutation 92: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - InsertUnaryOp Negation
   * 94 Weak Mutation 95: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - ReplaceComparisonOperator <= -> <
   * 95 Weak Mutation 91: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:180 - InsertUnaryOp Negation
   * 96 Weak Mutation 98: com.sleepycat.je.tree.IN.compareTo(Ljava/lang/Object;)I:184 - ReplaceConstant - 0 -> 1
   * 97 com.sleepycat.je.tree.IN.<init>()V: root-Branch
   * 98 com.sleepycat.je.tree.IN.setDatabase(Lcom/sleepycat/je/dbi/DatabaseImpl;)V: root-Branch
   * 99 com.sleepycat.je.tree.IN.init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V: I9 Branch 1 IFNONNULL L124 - false
   */
  @Test
  public void test0()  throws Throwable  {
      BIN bIN0 = new BIN();
      assertNotNull(bIN0);
      
      int int0 = bIN0.compareTo((Object) bIN0);
      assertEquals(101533L, bIN0.getNextNodeId());
      assertEquals(0, int0);
  }
}
