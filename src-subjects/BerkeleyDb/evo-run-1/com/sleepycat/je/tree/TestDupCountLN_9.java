/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.DupCountLN;

@RunWith(EvoSuiteRunner.class)
public class TestDupCountLN_9 {


  //Test case number: 9
  /*
   * 139 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 61: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 3 Weak Mutation 60: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 62: com.sleepycat.je.tree.DupCountLN.beginTag()Ljava/lang/String;:73 - ReplaceConstant - <dupCountLN> -> 
   * 5 Weak Mutation 63: com.sleepycat.je.tree.DupCountLN.endTag()Ljava/lang/String;:76 - ReplaceConstant - </dupCountLN> -> 
   * 6 Weak Mutation 64: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp Negation
   * 7 Weak Mutation 65: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC 1
   * 8 Weak Mutation 66: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC -1
   * 9 Weak Mutation 67: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 68: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp Negation
   * 11 Weak Mutation 69: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 70: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 71: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - DeleteStatement: indent(I)Ljava/lang/String;
   * 14 Weak Mutation 72: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 73: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:82 - DeleteStatement: beginTag()Ljava/lang/String;
   * 16 Weak Mutation 74: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:82 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 17 Weak Mutation 76: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 1
   * 18 Weak Mutation 77: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> -1
   * 19 Weak Mutation 78: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 9
   * 20 Weak Mutation 79: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 11
   * 21 Weak Mutation 75: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 0
   * 22 Weak Mutation 80: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 23 Weak Mutation 85: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 1
   * 24 Weak Mutation 84: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 0
   * 25 Weak Mutation 87: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 3
   * 26 Weak Mutation 86: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> -1
   * 27 Weak Mutation 81: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp Negation
   * 28 Weak Mutation 83: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC -1
   * 29 Weak Mutation 82: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC 1
   * 30 Weak Mutation 93: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 31 Weak Mutation 92: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: indent(I)Ljava/lang/String;
   * 32 Weak Mutation 89: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 88: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> -
   * 34 Weak Mutation 91: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 90: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> /
   * 36 Weak Mutation 95: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 37 Weak Mutation 94: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - <count v=" -> 
   * 38 Weak Mutation 102: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 39 Weak Mutation 103: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 0
   * 40 Weak Mutation 100: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 41 Weak Mutation 101: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - "/> -> 
   * 42 Weak Mutation 98: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp -1
   * 43 Weak Mutation 99: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteField: dupCountI
   * 44 Weak Mutation 96: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp Negation
   * 45 Weak Mutation 97: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp +1
   * 46 Weak Mutation 108: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 47 Weak Mutation 106: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 9
   * 48 Weak Mutation 107: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 11
   * 49 Weak Mutation 104: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 1
   * 50 Weak Mutation 105: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> -1
   * 51 Weak Mutation 110: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC 1
   * 52 Weak Mutation 111: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC -1
   * 53 Weak Mutation 109: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp Negation
   * 54 Weak Mutation 113: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 55 Weak Mutation 112: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - ReplaceConstant - 0 -> 1
   * 56 Weak Mutation 117: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - ReplaceComparisonOperator == -> !=
   * 57 Weak Mutation 116: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC -1
   * 58 Weak Mutation 115: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC 1
   * 59 Weak Mutation 114: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp Negation
   * 60 Weak Mutation 119: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp IINC 1
   * 61 Weak Mutation 118: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp Negation
   * 62 Weak Mutation 122: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 63 Weak Mutation 121: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - DeleteStatement: indent(I)Ljava/lang/String;
   * 64 Weak Mutation 120: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp IINC -1
   * 65 Weak Mutation 124: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:90 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 66 Weak Mutation 123: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:90 - DeleteStatement: endTag()Ljava/lang/String;
   * 67 Weak Mutation 125: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:92 - DeleteStatement: toString()Ljava/lang/String;
   * 68 com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;: root-Branch
   * 69 com.sleepycat.je.tree.DupCountLN.endTag()Ljava/lang/String;: root-Branch
   * 70 com.sleepycat.je.tree.DupCountLN.beginTag()Ljava/lang/String;: root-Branch
   * 71 com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;: I9 Branch 5 IFEQ L80 - false
   * 72 com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;: I64 Branch 6 IFEQ L88 - false
   * 73 Weak Mutation 59: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - ReplaceConstant - 0 -> 1
   * 74 Weak Mutation 63: com.sleepycat.je.tree.DupCountLN.endTag()Ljava/lang/String;:76 - ReplaceConstant - </dupCountLN> -> 
   * 75 Weak Mutation 62: com.sleepycat.je.tree.DupCountLN.beginTag()Ljava/lang/String;:73 - ReplaceConstant - <dupCountLN> -> 
   * 76 Weak Mutation 61: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 77 Weak Mutation 60: com.sleepycat.je.tree.DupCountLN.toString()Ljava/lang/String;:70 - ReplaceConstant - 1 -> 0
   * 78 Weak Mutation 68: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp Negation
   * 79 Weak Mutation 69: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp IINC 1
   * 80 Weak Mutation 70: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - InsertUnaryOp IINC -1
   * 81 Weak Mutation 71: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - DeleteStatement: indent(I)Ljava/lang/String;
   * 82 Weak Mutation 64: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp Negation
   * 83 Weak Mutation 65: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC 1
   * 84 Weak Mutation 66: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - InsertUnaryOp IINC -1
   * 85 Weak Mutation 67: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:80 - ReplaceComparisonOperator == -> !=
   * 86 Weak Mutation 76: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 1
   * 87 Weak Mutation 77: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> -1
   * 88 Weak Mutation 78: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 9
   * 89 Weak Mutation 79: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 11
   * 90 Weak Mutation 72: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:81 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 91 Weak Mutation 73: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:82 - DeleteStatement: beginTag()Ljava/lang/String;
   * 92 Weak Mutation 74: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:82 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 93 Weak Mutation 75: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - ReplaceConstant - 10 -> 0
   * 94 Weak Mutation 85: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 1
   * 95 Weak Mutation 84: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 0
   * 96 Weak Mutation 87: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> 3
   * 97 Weak Mutation 86: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceConstant - 2 -> -1
   * 98 Weak Mutation 81: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp Negation
   * 99 Weak Mutation 80: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:83 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 100 Weak Mutation 83: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC -1
   * 101 Weak Mutation 82: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - InsertUnaryOp IINC 1
   * 102 Weak Mutation 93: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 103 Weak Mutation 92: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - DeleteStatement: indent(I)Ljava/lang/String;
   * 104 Weak Mutation 95: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 105 Weak Mutation 94: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - <count v=" -> 
   * 106 Weak Mutation 89: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> %
   * 107 Weak Mutation 88: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> -
   * 108 Weak Mutation 91: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> *
   * 109 Weak Mutation 90: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:85 - ReplaceArithmeticOperator + -> /
   * 110 Weak Mutation 102: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 111 Weak Mutation 103: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 0
   * 112 Weak Mutation 100: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 113 Weak Mutation 101: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - "/> -> 
   * 114 Weak Mutation 98: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp -1
   * 115 Weak Mutation 99: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteField: dupCountI
   * 116 Weak Mutation 96: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp Negation
   * 117 Weak Mutation 97: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - InsertUnaryOp +1
   * 118 Weak Mutation 110: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC 1
   * 119 Weak Mutation 111: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp IINC -1
   * 120 Weak Mutation 108: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 121 Weak Mutation 109: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - InsertUnaryOp Negation
   * 122 Weak Mutation 106: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 9
   * 123 Weak Mutation 107: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 11
   * 124 Weak Mutation 104: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> 1
   * 125 Weak Mutation 105: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:86 - ReplaceConstant - 10 -> -1
   * 126 Weak Mutation 119: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp IINC 1
   * 127 Weak Mutation 118: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp Negation
   * 128 Weak Mutation 117: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - ReplaceComparisonOperator == -> !=
   * 129 Weak Mutation 116: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC -1
   * 130 Weak Mutation 115: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp IINC 1
   * 131 Weak Mutation 114: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:88 - InsertUnaryOp Negation
   * 132 Weak Mutation 113: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 133 Weak Mutation 112: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:87 - ReplaceConstant - 0 -> 1
   * 134 Weak Mutation 125: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:92 - DeleteStatement: toString()Ljava/lang/String;
   * 135 Weak Mutation 124: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:90 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 136 Weak Mutation 123: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:90 - DeleteStatement: endTag()Ljava/lang/String;
   * 137 Weak Mutation 122: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 138 Weak Mutation 121: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - DeleteStatement: indent(I)Ljava/lang/String;
   * 139 Weak Mutation 120: com.sleepycat.je.tree.DupCountLN.dumpString(IZ)Ljava/lang/String;:89 - InsertUnaryOp IINC -1
   */
  @Test
  public void test9()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN(864);
      String string0 = dupCountLN0.toString();
      assertEquals(10000774L, dupCountLN0.getNextNodeId());
      assertEquals("<dupCountLN>\n  <count v=\"864\"/>\n  <node>10000772</node>\n  <data></data>\n</dupCountLN>", string0);
  }
}
