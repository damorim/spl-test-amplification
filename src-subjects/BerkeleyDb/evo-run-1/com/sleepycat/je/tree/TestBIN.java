/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.SearchResult;

@RunWith(EvoSuiteRunner.class)
public class TestBIN {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 Weak Mutation 10: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getNodeId()J
   * 2 Weak Mutation 11: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 3 Weak Mutation 12: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 4 com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;: root-Branch
   * 5 Weak Mutation 0: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 1: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> 1
   * 7 Weak Mutation 2: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> -2
   * 8 Weak Mutation 3: com.sleepycat.je.tree.BIN.<init>()V:37 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 4: com.sleepycat.je.tree.BIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 10: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getNodeId()J
   * 11 Weak Mutation 11: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 12 Weak Mutation 12: com.sleepycat.je.tree.BIN.createReference()Lcom/sleepycat/je/tree/BINReference;:54 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 13 com.sleepycat.je.tree.BIN.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.createReference();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 49 covered goals:
   * 1 Weak Mutation 201: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp Negation of index
   * 2 Weak Mutation 200: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> EXACT_MATCH
   * 3 Weak Mutation 203: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp IINC -1 index
   * 4 Weak Mutation 202: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp IINC 1 index
   * 5 Weak Mutation 197: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> INSERT_SUCCESS
   * 6 Weak Mutation 196: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> LEVEL_MASK
   * 7 Weak Mutation 199: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> BIN_LEVEL
   * 8 Weak Mutation 198: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> DBMAP_LEVEL
   * 9 Weak Mutation 193: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 10 Weak Mutation 192: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MAX_LEVEL
   * 11 Weak Mutation 195: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MAIN_LEVEL
   * 12 Weak Mutation 194: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MIN_LEVEL
   * 13 Weak Mutation 205: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:231 - DeleteStatement: setDirty(Z)V
   * 14 Weak Mutation 204: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:231 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 5: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> 0
   * 16 Weak Mutation 6: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> 1
   * 17 Weak Mutation 7: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> -2
   * 18 Weak Mutation 8: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:45 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 9: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:46 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 186: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> EXACT_MATCH
   * 21 Weak Mutation 187: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp Negation of index
   * 22 Weak Mutation 184: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> DBMAP_LEVEL
   * 23 Weak Mutation 185: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> BIN_LEVEL
   * 24 Weak Mutation 190: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 191: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - DeleteStatement: setMigrate(IZ)V
   * 26 Weak Mutation 188: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp IINC 1 index
   * 27 Weak Mutation 189: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp IINC -1 index
   * 28 Weak Mutation 178: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MAX_LEVEL
   * 29 Weak Mutation 179: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 30 Weak Mutation 182: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> LEVEL_MASK
   * 31 Weak Mutation 183: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> INSERT_SUCCESS
   * 32 Weak Mutation 180: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MIN_LEVEL
   * 33 Weak Mutation 181: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MAIN_LEVEL
   * 34 Weak Mutation 205: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:231 - DeleteStatement: setDirty(Z)V
   * 35 Weak Mutation 204: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:231 - ReplaceConstant - 1 -> 0
   * 36 Weak Mutation 201: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp Negation of index
   * 37 Weak Mutation 200: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> EXACT_MATCH
   * 38 Weak Mutation 203: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp IINC -1 index
   * 39 Weak Mutation 202: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - InsertUnaryOp IINC 1 index
   * 40 Weak Mutation 197: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> INSERT_SUCCESS
   * 41 Weak Mutation 196: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> LEVEL_MASK
   * 42 Weak Mutation 199: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> BIN_LEVEL
   * 43 Weak Mutation 198: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> DBMAP_LEVEL
   * 44 Weak Mutation 193: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 45 Weak Mutation 192: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MAX_LEVEL
   * 46 Weak Mutation 195: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MAIN_LEVEL
   * 47 Weak Mutation 194: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:230 - ReplaceVariable index -> MIN_LEVEL
   * 48 com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V: root-Branch
   * 49 com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[10];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)72, byteArray0, (int) (byte)72);
      dBIN0.setKnownDeletedLeaveTarget((int) (byte)13);
      assertEquals(true, dBIN0.getDirty());
      assertEquals(6419L, dBIN0.getNodeId());
  }

  //Test case number: 2
  /*
   * 237 covered goals:
   * 1 Weak Mutation 14: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 15: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 3 Weak Mutation 17: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> level
   * 4 Weak Mutation 16: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 5 Weak Mutation 19: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 6 Weak Mutation 18: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 7 Weak Mutation 21: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 8 Weak Mutation 20: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 9 Weak Mutation 23: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 10 Weak Mutation 22: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 11 Weak Mutation 25: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of maxEntries
   * 12 Weak Mutation 24: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 13 Weak Mutation 27: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 maxEntries
   * 14 Weak Mutation 26: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 maxEntries
   * 15 Weak Mutation 29: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 16 Weak Mutation 28: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAX_LEVEL
   * 17 Weak Mutation 31: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAIN_LEVEL
   * 18 Weak Mutation 30: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MIN_LEVEL
   * 19 Weak Mutation 34: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> DBMAP_LEVEL
   * 20 Weak Mutation 35: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> BIN_LEVEL
   * 21 Weak Mutation 32: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> LEVEL_MASK
   * 22 Weak Mutation 33: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> INSERT_SUCCESS
   * 23 Weak Mutation 38: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of level
   * 24 Weak Mutation 39: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 level
   * 25 Weak Mutation 36: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> EXACT_MATCH
   * 26 Weak Mutation 37: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> maxEntries
   * 27 Weak Mutation 40: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 level
   * 28 Weak Mutation 137: com.sleepycat.je.tree.BIN.entryZeroKeyComparesLow()Z:200 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 248: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - DeleteStatement: findEntry([BZZ)I
   * 30 Weak Mutation 246: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 247: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 249: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:331 - DeleteStatement: getNEntries()I
   * 33 Weak Mutation 254: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> nEntries
   * 34 Weak Mutation 255: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAIN_LEVEL
   * 35 Weak Mutation 252: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> parentIndex
   * 36 Weak Mutation 250: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAX_LEVEL
   * 37 Weak Mutation 251: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 38 Weak Mutation 275: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 1 -> 0
   * 39 Weak Mutation 272: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceComparisonOperator == -> >=
   * 40 Weak Mutation 258: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> DBMAP_LEVEL
   * 41 Weak Mutation 259: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> BIN_LEVEL
   * 42 Weak Mutation 256: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> LEVEL_MASK
   * 43 Weak Mutation 257: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> INSERT_SUCCESS
   * 44 Weak Mutation 262: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp Negation of index
   * 45 Weak Mutation 263: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC 1 index
   * 46 Weak Mutation 260: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> EXACT_MATCH
   * 47 Weak Mutation 261: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> maxEntriesPerNode
   * 48 Weak Mutation 266: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 1
   * 49 Weak Mutation 267: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> -1
   * 50 Weak Mutation 264: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC -1 index
   * 51 Weak Mutation 265: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 0
   * 52 Weak Mutation 270: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> |
   * 53 Weak Mutation 271: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> ^
   * 54 Weak Mutation 268: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65535
   * 55 Weak Mutation 269: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65537
   * 56 Weak Mutation 279: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> parentIndex
   * 57 Weak Mutation 278: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 58 Weak Mutation 277: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAX_LEVEL
   * 59 Weak Mutation 283: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> LEVEL_MASK
   * 60 Weak Mutation 282: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAIN_LEVEL
   * 61 Weak Mutation 281: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> nEntries
   * 62 Weak Mutation 287: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> EXACT_MATCH
   * 63 Weak Mutation 286: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> BIN_LEVEL
   * 64 Weak Mutation 285: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> DBMAP_LEVEL
   * 65 Weak Mutation 284: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> INSERT_SUCCESS
   * 66 Weak Mutation 288: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> maxEntriesPerNode
   * 67 Weak Mutation 289: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 290: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 0
   * 69 Weak Mutation 291: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 1
   * 70 Weak Mutation 292: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -1
   * 71 Weak Mutation 293: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65538
   * 72 Weak Mutation 294: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65536
   * 73 Weak Mutation 295: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> |
   * 74 Weak Mutation 296: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> ^
   * 75 Weak Mutation 297: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - ReplaceVariable leftSide -> exact
   * 76 Weak Mutation 298: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - InsertUnaryOp Negation of leftSide
   * 77 Weak Mutation 299: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - ReplaceComparisonOperator == -> !=
   * 78 Weak Mutation 351: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable exact -> leftSide
   * 79 Weak Mutation 350: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 80 Weak Mutation 349: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of leftSide
   * 81 Weak Mutation 348: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable leftSide -> exact
   * 82 Weak Mutation 352: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of exact
   * 83 Weak Mutation 353: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 84 Weak Mutation 441: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MAX_LEVEL
   * 85 Weak Mutation 442: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> index
   * 86 Weak Mutation 443: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> ACCUMULATED_LIMIT
   * 87 Weak Mutation 444: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MIN_LEVEL
   * 88 Weak Mutation 445: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> nEntries
   * 89 Weak Mutation 446: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MAIN_LEVEL
   * 90 Weak Mutation 447: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> LEVEL_MASK
   * 91 Weak Mutation 470: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC -1 maxEntriesPerNode
   * 92 Weak Mutation 471: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - DeleteStatement: split(Lcom/sleepycat/je/tree/IN;II)V
   * 93 Weak Mutation 468: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp Negation of maxEntriesPerNode
   * 94 Weak Mutation 469: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC 1 maxEntriesPerNode
   * 95 Weak Mutation 466: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> BIN_LEVEL
   * 96 Weak Mutation 467: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> EXACT_MATCH
   * 97 Weak Mutation 464: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> INSERT_SUCCESS
   * 98 Weak Mutation 465: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> DBMAP_LEVEL
   * 99 Weak Mutation 463: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> LEVEL_MASK
   * 100 Weak Mutation 462: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MAIN_LEVEL
   * 101 Weak Mutation 460: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MIN_LEVEL
   * 102 Weak Mutation 459: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> parentIndex
   * 103 Weak Mutation 458: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> ACCUMULATED_LIMIT
   * 104 Weak Mutation 457: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> index
   * 105 Weak Mutation 456: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MAX_LEVEL
   * 106 Weak Mutation 455: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC -1 parentIndex
   * 107 Weak Mutation 454: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC 1 parentIndex
   * 108 Weak Mutation 453: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp Negation of parentIndex
   * 109 Weak Mutation 452: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> maxEntriesPerNode
   * 110 Weak Mutation 451: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> EXACT_MATCH
   * 111 Weak Mutation 450: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> BIN_LEVEL
   * 112 Weak Mutation 449: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> DBMAP_LEVEL
   * 113 Weak Mutation 448: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> INSERT_SUCCESS
   * 114 Weak Mutation 730: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 115 Weak Mutation 731: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 116 com.sleepycat.je.tree.BIN.entryZeroKeyComparesLow()Z: root-Branch
   * 117 com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;: root-Branch
   * 118 com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;: root-Branch
   * 119 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I18 Branch 14 IFEQ L332 - false
   * 120 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I34 Branch 15 IFEQ L334 - true
   * 121 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I50 Branch 17 IFNE L336 - false
   * 122 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I52 Branch 18 IFNE L336 - true
   * 123 Weak Mutation 14: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 124 Weak Mutation 15: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 125 Weak Mutation 17: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> level
   * 126 Weak Mutation 16: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 127 Weak Mutation 19: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 128 Weak Mutation 18: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 129 Weak Mutation 21: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 130 Weak Mutation 20: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 131 Weak Mutation 23: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 132 Weak Mutation 22: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 133 Weak Mutation 25: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of maxEntries
   * 134 Weak Mutation 24: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 135 Weak Mutation 27: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 maxEntries
   * 136 Weak Mutation 26: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 maxEntries
   * 137 Weak Mutation 29: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 138 Weak Mutation 28: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAX_LEVEL
   * 139 Weak Mutation 31: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAIN_LEVEL
   * 140 Weak Mutation 30: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MIN_LEVEL
   * 141 Weak Mutation 34: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> DBMAP_LEVEL
   * 142 Weak Mutation 35: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> BIN_LEVEL
   * 143 Weak Mutation 32: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> LEVEL_MASK
   * 144 Weak Mutation 33: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> INSERT_SUCCESS
   * 145 Weak Mutation 38: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of level
   * 146 Weak Mutation 39: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 level
   * 147 Weak Mutation 36: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> EXACT_MATCH
   * 148 Weak Mutation 37: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> maxEntries
   * 149 Weak Mutation 40: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 level
   * 150 Weak Mutation 137: com.sleepycat.je.tree.BIN.entryZeroKeyComparesLow()Z:200 - ReplaceConstant - 0 -> 1
   * 151 Weak Mutation 254: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> nEntries
   * 152 Weak Mutation 255: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAIN_LEVEL
   * 153 Weak Mutation 252: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> parentIndex
   * 154 Weak Mutation 250: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAX_LEVEL
   * 155 Weak Mutation 251: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 156 Weak Mutation 248: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - DeleteStatement: findEntry([BZZ)I
   * 157 Weak Mutation 249: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:331 - DeleteStatement: getNEntries()I
   * 158 Weak Mutation 246: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 1 -> 0
   * 159 Weak Mutation 247: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 0 -> 1
   * 160 Weak Mutation 275: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 1 -> 0
   * 161 Weak Mutation 272: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceComparisonOperator == -> >=
   * 162 Weak Mutation 279: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> parentIndex
   * 163 Weak Mutation 278: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 164 Weak Mutation 277: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAX_LEVEL
   * 165 Weak Mutation 283: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> LEVEL_MASK
   * 166 Weak Mutation 282: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAIN_LEVEL
   * 167 Weak Mutation 281: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> nEntries
   * 168 Weak Mutation 287: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> EXACT_MATCH
   * 169 Weak Mutation 286: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> BIN_LEVEL
   * 170 Weak Mutation 285: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> DBMAP_LEVEL
   * 171 Weak Mutation 284: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> INSERT_SUCCESS
   * 172 Weak Mutation 258: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> DBMAP_LEVEL
   * 173 Weak Mutation 259: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> BIN_LEVEL
   * 174 Weak Mutation 256: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> LEVEL_MASK
   * 175 Weak Mutation 257: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> INSERT_SUCCESS
   * 176 Weak Mutation 262: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp Negation of index
   * 177 Weak Mutation 263: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC 1 index
   * 178 Weak Mutation 260: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> EXACT_MATCH
   * 179 Weak Mutation 261: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> maxEntriesPerNode
   * 180 Weak Mutation 266: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 1
   * 181 Weak Mutation 267: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> -1
   * 182 Weak Mutation 264: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC -1 index
   * 183 Weak Mutation 265: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 0
   * 184 Weak Mutation 270: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> |
   * 185 Weak Mutation 271: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> ^
   * 186 Weak Mutation 268: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65535
   * 187 Weak Mutation 269: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65537
   * 188 Weak Mutation 288: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> maxEntriesPerNode
   * 189 Weak Mutation 289: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - InsertUnaryOp Negation of index
   * 190 Weak Mutation 290: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 0
   * 191 Weak Mutation 291: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 1
   * 192 Weak Mutation 292: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -1
   * 193 Weak Mutation 293: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65538
   * 194 Weak Mutation 294: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65536
   * 195 Weak Mutation 295: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> |
   * 196 Weak Mutation 296: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> ^
   * 197 Weak Mutation 297: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - ReplaceVariable leftSide -> exact
   * 198 Weak Mutation 298: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - InsertUnaryOp Negation of leftSide
   * 199 Weak Mutation 299: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - ReplaceComparisonOperator == -> !=
   * 200 Weak Mutation 351: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable exact -> leftSide
   * 201 Weak Mutation 350: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 202 Weak Mutation 349: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of leftSide
   * 203 Weak Mutation 348: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable leftSide -> exact
   * 204 Weak Mutation 352: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of exact
   * 205 Weak Mutation 353: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 206 Weak Mutation 441: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MAX_LEVEL
   * 207 Weak Mutation 442: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> index
   * 208 Weak Mutation 443: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> ACCUMULATED_LIMIT
   * 209 Weak Mutation 444: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MIN_LEVEL
   * 210 Weak Mutation 445: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> nEntries
   * 211 Weak Mutation 446: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> MAIN_LEVEL
   * 212 Weak Mutation 447: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> LEVEL_MASK
   * 213 Weak Mutation 470: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC -1 maxEntriesPerNode
   * 214 Weak Mutation 471: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - DeleteStatement: split(Lcom/sleepycat/je/tree/IN;II)V
   * 215 Weak Mutation 468: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp Negation of maxEntriesPerNode
   * 216 Weak Mutation 469: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC 1 maxEntriesPerNode
   * 217 Weak Mutation 466: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> BIN_LEVEL
   * 218 Weak Mutation 467: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> EXACT_MATCH
   * 219 Weak Mutation 464: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> INSERT_SUCCESS
   * 220 Weak Mutation 465: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> DBMAP_LEVEL
   * 221 Weak Mutation 463: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> LEVEL_MASK
   * 222 Weak Mutation 462: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MAIN_LEVEL
   * 223 Weak Mutation 460: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MIN_LEVEL
   * 224 Weak Mutation 459: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> parentIndex
   * 225 Weak Mutation 458: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> ACCUMULATED_LIMIT
   * 226 Weak Mutation 457: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> index
   * 227 Weak Mutation 456: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable maxEntriesPerNode -> MAX_LEVEL
   * 228 Weak Mutation 455: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC -1 parentIndex
   * 229 Weak Mutation 454: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp IINC 1 parentIndex
   * 230 Weak Mutation 453: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - InsertUnaryOp Negation of parentIndex
   * 231 Weak Mutation 452: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> maxEntriesPerNode
   * 232 Weak Mutation 451: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> EXACT_MATCH
   * 233 Weak Mutation 450: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> BIN_LEVEL
   * 234 Weak Mutation 449: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> DBMAP_LEVEL
   * 235 Weak Mutation 448: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:339 - ReplaceVariable parentIndex -> INSERT_SUCCESS
   * 236 Weak Mutation 730: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 237 Weak Mutation 731: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   */
  @Test
  public void test2()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[6];
      BIN bIN0 = new BIN(databaseImpl0, byteArray0, 14, 720);
      bIN0.splitSpecial((IN) bIN0, (int) (byte)10, 0, byteArray0, false);
      assertEquals(6558L, bIN0.getNextNodeId());
      assertEquals(6554L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * 1 Weak Mutation 41: com.sleepycat.je.tree.BIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:73 - DeleteStatement: getDupKey()[B
   * 2 Weak Mutation 735: com.sleepycat.je.tree.BIN.shortClassName()Ljava/lang/String;:715 - ReplaceConstant - BIN -> 
   * 3 com.sleepycat.je.tree.BIN.shortClassName()Ljava/lang/String;: root-Branch
   * 4 com.sleepycat.je.tree.BIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B: root-Branch
   * 5 Weak Mutation 41: com.sleepycat.je.tree.BIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:73 - DeleteStatement: getDupKey()[B
   * 6 Weak Mutation 735: com.sleepycat.je.tree.BIN.shortClassName()Ljava/lang/String;:715 - ReplaceConstant - BIN -> 
   */
  @Test
  public void test3()  throws Throwable  {
      BIN bIN0 = new BIN();
      try {
        bIN0.getChildKey((IN) bIN0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * BIN.getDupKey() called
         */
      }
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 42: com.sleepycat.je.tree.BIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;:80 - DeleteField: LOG_BIN_DELTALcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.BIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 42: com.sleepycat.je.tree.BIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;:80 - DeleteField: LOG_BIN_DELTALcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test4()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.getBINDeltaType();
      assertEquals(7074L, bIN0.getLastId());
      assertEquals(7074L, bIN0.getNextNodeId());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 43: com.sleepycat.je.tree.BIN.getLastDeltaVersion()J:87 - InsertUnaryOp Negation
   * 2 Weak Mutation 44: com.sleepycat.je.tree.BIN.getLastDeltaVersion()J:87 - DeleteField: lastDeltaVersionJ
   * 3 com.sleepycat.je.tree.BIN.getLastDeltaVersion()J: root-Branch
   * 4 Weak Mutation 43: com.sleepycat.je.tree.BIN.getLastDeltaVersion()J:87 - InsertUnaryOp Negation
   * 5 Weak Mutation 44: com.sleepycat.je.tree.BIN.getLastDeltaVersion()J:87 - DeleteField: lastDeltaVersionJ
   */
  @Test
  public void test5()  throws Throwable  {
      BIN bIN0 = new BIN();
      long long0 = bIN0.getLastDeltaVersion();
      assertEquals(7088L, bIN0.getNextNodeId());
      assertEquals((-1L), long0);
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 45: com.sleepycat.je.tree.BIN.setProhibitNextDelta()V:96 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.BIN.setProhibitNextDelta()V: root-Branch
   * 3 Weak Mutation 45: com.sleepycat.je.tree.BIN.setProhibitNextDelta()V:96 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test6()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.setProhibitNextDelta();
      assertEquals(7104L, bIN0.getNextNodeId());
      assertEquals(7104L, bIN0.getLastId());
  }

  //Test case number: 7
  /*
   * 26 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetIsRoot -> requireExactMatch
   * 2 Weak Mutation 63: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC -1 targetIsRoot
   * 3 Weak Mutation 62: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC 1 targetIsRoot
   * 4 Weak Mutation 61: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp Negation of targetIsRoot
   * 5 Weak Mutation 60: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetIsRoot -> targetContainsDuplicates
   * 6 Weak Mutation 64: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 46: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceVariable targetContainsDuplicates -> targetIsRoot
   * 8 Weak Mutation 51: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - DeleteStatement: canBeAncestor(Z)Z
   * 9 Weak Mutation 50: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp IINC -1 targetContainsDuplicates
   * 10 Weak Mutation 49: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp IINC 1 targetContainsDuplicates
   * 11 Weak Mutation 48: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp Negation of targetContainsDuplicates
   * 12 Weak Mutation 55: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp Negation of targetContainsDuplicates
   * 13 Weak Mutation 53: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetContainsDuplicates -> targetIsRoot
   * 14 Weak Mutation 52: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 59: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetIsRoot -> requireExactMatch
   * 16 Weak Mutation 58: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 57: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC -1 targetContainsDuplicates
   * 18 Weak Mutation 56: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC 1 targetContainsDuplicates
   * 19 Weak Mutation 63: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC -1 targetIsRoot
   * 20 Weak Mutation 62: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC 1 targetIsRoot
   * 21 Weak Mutation 61: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp Negation of targetIsRoot
   * 22 Weak Mutation 60: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetIsRoot -> targetContainsDuplicates
   * 23 Weak Mutation 64: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceComparisonOperator == -> !=
   * 24 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I5 Branch 2 IFEQ L103 - false
   * 25 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I9 Branch 3 IFEQ L104 - false
   * 26 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I11 Branch 4 IFEQ L104 - true
   */
  @Test
  public void test7()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      SearchResult searchResult0 = new SearchResult();
      DIN dIN0 = new DIN();
      dBIN0.descendOnParentSearch(searchResult0, true, false, (-1928L), (Node) dIN0, true);
      assertEquals("exactParentFound=false keepSearching=true parent=0 index=-1 childNotResident=false", searchResult0.toString());
      assertEquals(7119L, dIN0.getLastId());
  }

  //Test case number: 8
  /*
   * 18 covered goals:
   * 1 Weak Mutation 86: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:130 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 87: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:131 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 93: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 92: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp IINC -1 requireExactMatch
   * 5 Weak Mutation 91: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp IINC 1 requireExactMatch
   * 6 Weak Mutation 90: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp Negation of requireExactMatch
   * 7 Weak Mutation 96: com.sleepycat.je.tree.BIN.canBeAncestor(Z)Z:144 - InsertUnaryOp Negation of targetContainsDuplicates
   * 8 com.sleepycat.je.tree.BIN.canBeAncestor(Z)Z: root-Branch
   * 9 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I5 Branch 2 IFEQ L103 - true
   * 10 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I86 Branch 8 IFNE L132 - false
   * 11 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I88 Branch 9 IFEQ L132 - true
   * 12 Weak Mutation 87: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:131 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 86: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:130 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 93: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - ReplaceComparisonOperator != -> ==
   * 15 Weak Mutation 92: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp IINC -1 requireExactMatch
   * 16 Weak Mutation 91: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp IINC 1 requireExactMatch
   * 17 Weak Mutation 90: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:132 - InsertUnaryOp Negation of requireExactMatch
   * 18 Weak Mutation 96: com.sleepycat.je.tree.BIN.canBeAncestor(Z)Z:144 - InsertUnaryOp Negation of targetContainsDuplicates
   */
  @Test
  public void test8()  throws Throwable  {
      BIN bIN0 = new BIN();
      SearchResult searchResult0 = new SearchResult();
      bIN0.descendOnParentSearch(searchResult0, false, false, (-85L), (Node) bIN0, false);
      assertEquals(false, searchResult0.keepSearching);
      assertEquals(7218L, bIN0.getNextNodeId());
  }

  //Test case number: 9
  /*
   * 12 covered goals:
   * 1 Weak Mutation 102: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 99: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - ReplaceComparisonOperator <= -> <
   * 3 Weak Mutation 97: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - DeleteStatement: nCursors()I
   * 4 Weak Mutation 227: com.sleepycat.je.tree.BIN.nCursors()I:293 - DeleteStatement: size()I
   * 5 Weak Mutation 226: com.sleepycat.je.tree.BIN.nCursors()I:293 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 6 com.sleepycat.je.tree.BIN.nCursors()I: root-Branch
   * 7 com.sleepycat.je.tree.BIN.isEvictionProhibited()Z: I4 Branch 10 IFLE L151 - true
   * 8 Weak Mutation 102: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 99: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 97: com.sleepycat.je.tree.BIN.isEvictionProhibited()Z:151 - DeleteStatement: nCursors()I
   * 11 Weak Mutation 227: com.sleepycat.je.tree.BIN.nCursors()I:293 - DeleteStatement: size()I
   * 12 Weak Mutation 226: com.sleepycat.je.tree.BIN.nCursors()I:293 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   */
  @Test
  public void test9()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = bIN0.isEvictionProhibited();
      assertEquals(7266L, bIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 10
  /*
   * 33 covered goals:
   * 1 Weak Mutation 103: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 127: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> BIN_LEVEL
   * 3 Weak Mutation 126: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> DBMAP_LEVEL
   * 4 Weak Mutation 125: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> INSERT_SUCCESS
   * 5 Weak Mutation 124: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> LEVEL_MASK
   * 6 Weak Mutation 123: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MAIN_LEVEL
   * 7 Weak Mutation 122: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MIN_LEVEL
   * 8 Weak Mutation 121: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 120: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MAX_LEVEL
   * 10 Weak Mutation 129: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp Negation of i
   * 11 Weak Mutation 128: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> EXACT_MATCH
   * 12 Weak Mutation 131: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 130: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 132: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - DeleteStatement: getNEntries()I
   * 15 Weak Mutation 135: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceComparisonOperator < -> <=
   * 16 Weak Mutation 136: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:166 - ReplaceConstant - 0 -> 1
   * 17 com.sleepycat.je.tree.BIN.hasNonLNChildren()Z: I32 Branch 13 IF_ICMPLT L158 - false
   * 18 Weak Mutation 103: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 127: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> BIN_LEVEL
   * 20 Weak Mutation 126: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> DBMAP_LEVEL
   * 21 Weak Mutation 125: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> INSERT_SUCCESS
   * 22 Weak Mutation 124: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> LEVEL_MASK
   * 23 Weak Mutation 123: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MAIN_LEVEL
   * 24 Weak Mutation 122: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MIN_LEVEL
   * 25 Weak Mutation 121: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 26 Weak Mutation 120: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> MAX_LEVEL
   * 27 Weak Mutation 136: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:166 - ReplaceConstant - 0 -> 1
   * 28 Weak Mutation 129: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp Negation of i
   * 29 Weak Mutation 128: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceVariable i -> EXACT_MATCH
   * 30 Weak Mutation 131: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 130: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 132: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - DeleteStatement: getNEntries()I
   * 33 Weak Mutation 135: com.sleepycat.je.tree.BIN.hasNonLNChildren()Z:158 - ReplaceComparisonOperator < -> <=
   */
  @Test
  public void test10()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = bIN0.hasNonLNChildren();
      assertEquals(7292L, bIN0.getLastId());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 25 covered goals:
   * 1 Weak Mutation 139: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 2 Weak Mutation 138: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MAX_LEVEL
   * 3 Weak Mutation 141: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MAIN_LEVEL
   * 4 Weak Mutation 140: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MIN_LEVEL
   * 5 Weak Mutation 143: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> INSERT_SUCCESS
   * 6 Weak Mutation 142: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> LEVEL_MASK
   * 7 Weak Mutation 144: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> DBMAP_LEVEL
   * 8 Weak Mutation 145: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> BIN_LEVEL
   * 9 Weak Mutation 146: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> EXACT_MATCH
   * 10 Weak Mutation 147: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 148: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 149: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp IINC -1 index
   * 13 com.sleepycat.je.tree.BIN.setKnownDeleted(I)V: root-Branch
   * 14 Weak Mutation 139: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 15 Weak Mutation 138: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MAX_LEVEL
   * 16 Weak Mutation 141: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MAIN_LEVEL
   * 17 Weak Mutation 140: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> MIN_LEVEL
   * 18 Weak Mutation 143: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> INSERT_SUCCESS
   * 19 Weak Mutation 142: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> LEVEL_MASK
   * 20 Weak Mutation 144: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> DBMAP_LEVEL
   * 21 Weak Mutation 145: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> BIN_LEVEL
   * 22 Weak Mutation 146: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - ReplaceVariable index -> EXACT_MATCH
   * 23 Weak Mutation 147: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp Negation of index
   * 24 Weak Mutation 148: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp IINC 1 index
   * 25 Weak Mutation 149: com.sleepycat.je.tree.BIN.setKnownDeleted(I)V:210 - InsertUnaryOp IINC -1 index
   */
  @Test
  public void test11()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.setKnownDeleted(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 0
         */
      }
  }

  //Test case number: 12
  /*
   * 15 covered goals:
   * 1 Weak Mutation 186: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> EXACT_MATCH
   * 2 Weak Mutation 187: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp Negation of index
   * 3 Weak Mutation 184: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> DBMAP_LEVEL
   * 4 Weak Mutation 185: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> BIN_LEVEL
   * 5 Weak Mutation 190: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 191: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - DeleteStatement: setMigrate(IZ)V
   * 7 Weak Mutation 188: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp IINC 1 index
   * 8 Weak Mutation 189: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 178: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MAX_LEVEL
   * 10 Weak Mutation 179: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 11 Weak Mutation 182: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> LEVEL_MASK
   * 12 Weak Mutation 183: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> INSERT_SUCCESS
   * 13 Weak Mutation 180: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MIN_LEVEL
   * 14 Weak Mutation 181: com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V:229 - ReplaceVariable index -> MAIN_LEVEL
   * 15 com.sleepycat.je.tree.BIN.setKnownDeletedLeaveTarget(I)V: root-Branch
   */
  @Test
  public void test12()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.setKnownDeletedLeaveTarget(1213);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
        /*
         * 1213
         */
      }
  }

  //Test case number: 13
  /*
   * 29 covered goals:
   * 1 Weak Mutation 207: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 2 Weak Mutation 206: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MAX_LEVEL
   * 3 Weak Mutation 216: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 217: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp IINC -1 index
   * 5 Weak Mutation 212: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> DBMAP_LEVEL
   * 6 Weak Mutation 213: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> BIN_LEVEL
   * 7 Weak Mutation 214: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> EXACT_MATCH
   * 8 Weak Mutation 215: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp Negation of index
   * 9 Weak Mutation 208: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MIN_LEVEL
   * 10 Weak Mutation 209: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MAIN_LEVEL
   * 11 Weak Mutation 210: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> LEVEL_MASK
   * 12 Weak Mutation 211: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> INSERT_SUCCESS
   * 13 Weak Mutation 218: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:242 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 219: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:242 - DeleteStatement: setDirty(Z)V
   * 15 com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V: root-Branch
   * 16 Weak Mutation 207: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 17 Weak Mutation 206: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MAX_LEVEL
   * 18 Weak Mutation 216: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp IINC 1 index
   * 19 Weak Mutation 217: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp IINC -1 index
   * 20 Weak Mutation 218: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:242 - ReplaceConstant - 1 -> 0
   * 21 Weak Mutation 219: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:242 - DeleteStatement: setDirty(Z)V
   * 22 Weak Mutation 212: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> DBMAP_LEVEL
   * 23 Weak Mutation 213: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> BIN_LEVEL
   * 24 Weak Mutation 214: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> EXACT_MATCH
   * 25 Weak Mutation 215: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - InsertUnaryOp Negation of index
   * 26 Weak Mutation 208: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MIN_LEVEL
   * 27 Weak Mutation 209: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> MAIN_LEVEL
   * 28 Weak Mutation 210: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> LEVEL_MASK
   * 29 Weak Mutation 211: com.sleepycat.je.tree.BIN.clearKnownDeleted(I)V:241 - ReplaceVariable index -> INSERT_SUCCESS
   */
  @Test
  public void test13()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[6];
      BIN bIN0 = new BIN(databaseImpl0, byteArray0, 14, 720);
      bIN0.clearKnownDeleted((int) (byte)10);
      assertEquals("<com.sleepycat.je.tree.BIN/7416", bIN0.shortDescription());
      assertEquals(7415L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 220: com.sleepycat.je.tree.BIN.getCursorSet()Ljava/util/Set;:260 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 2 Weak Mutation 221: com.sleepycat.je.tree.BIN.getCursorSet()Ljava/util/Set;:260 - DeleteStatement: copy()Ljava/util/Set;
   * 3 com.sleepycat.je.tree.BIN.getCursorSet()Ljava/util/Set;: root-Branch
   * 4 Weak Mutation 220: com.sleepycat.je.tree.BIN.getCursorSet()Ljava/util/Set;:260 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 5 Weak Mutation 221: com.sleepycat.je.tree.BIN.getCursorSet()Ljava/util/Set;:260 - DeleteStatement: copy()Ljava/util/Set;
   */
  @Test
  public void test14()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.getCursorSet();
      assertEquals(7496L, bIN0.getLastId());
      assertEquals(7496L, bIN0.getNextNodeId());
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 222: com.sleepycat.je.tree.BIN.addCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:273 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 2 Weak Mutation 223: com.sleepycat.je.tree.BIN.addCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:273 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 3 com.sleepycat.je.tree.BIN.addCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: root-Branch
   * 4 Weak Mutation 222: com.sleepycat.je.tree.BIN.addCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:273 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 5 Weak Mutation 223: com.sleepycat.je.tree.BIN.addCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:273 - DeleteStatement: add(Ljava/lang/Object;)Z
   */
  @Test
  public void test15()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.addCursor((CursorImpl) null);
      assertEquals(7512L, bIN0.getLastId());
      assertEquals(7512L, bIN0.getNextNodeId());
  }

  //Test case number: 16
  /*
   * 5 covered goals:
   * 1 Weak Mutation 225: com.sleepycat.je.tree.BIN.removeCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:286 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 2 Weak Mutation 224: com.sleepycat.je.tree.BIN.removeCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:286 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 3 com.sleepycat.je.tree.BIN.removeCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: root-Branch
   * 4 Weak Mutation 225: com.sleepycat.je.tree.BIN.removeCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:286 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 5 Weak Mutation 224: com.sleepycat.je.tree.BIN.removeCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:286 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   */
  @Test
  public void test16()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.removeCursor((CursorImpl) null);
      assertEquals(7528L, dBIN0.getNextNodeId());
      assertEquals(7528L, dBIN0.getLastId());
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * 1 Weak Mutation 228: com.sleepycat.je.tree.BIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:303 - DeleteStatement: getBIN()Lcom/sleepycat/je/tree/BIN;
   * 2 com.sleepycat.je.tree.BIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;: root-Branch
   * 3 Weak Mutation 228: com.sleepycat.je.tree.BIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:303 - DeleteStatement: getBIN()Lcom/sleepycat/je/tree/BIN;
   */
  @Test
  public void test17()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.getCursorBIN((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * 1 Weak Mutation 229: com.sleepycat.je.tree.BIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:307 - DeleteStatement: getBINToBeRemoved()Lcom/sleepycat/je/tree/BIN;
   * 2 com.sleepycat.je.tree.BIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;: root-Branch
   * 3 Weak Mutation 229: com.sleepycat.je.tree.BIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:307 - DeleteStatement: getBINToBeRemoved()Lcom/sleepycat/je/tree/BIN;
   */
  @Test
  public void test18()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.getCursorBINToBeRemoved((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 19
  /*
   * 27 covered goals:
   * 1 Weak Mutation 239: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> DBMAP_LEVEL
   * 2 Weak Mutation 238: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> INSERT_SUCCESS
   * 3 Weak Mutation 237: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> LEVEL_MASK
   * 4 Weak Mutation 236: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MAIN_LEVEL
   * 5 Weak Mutation 235: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MIN_LEVEL
   * 6 Weak Mutation 234: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 7 Weak Mutation 233: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MAX_LEVEL
   * 8 Weak Mutation 244: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp IINC -1 index
   * 9 Weak Mutation 245: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - DeleteStatement: setIndex(I)V
   * 10 Weak Mutation 242: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp Negation of index
   * 11 Weak Mutation 243: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp IINC 1 index
   * 12 Weak Mutation 240: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> BIN_LEVEL
   * 13 Weak Mutation 241: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> EXACT_MATCH
   * 14 com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V: root-Branch
   * 15 Weak Mutation 239: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> DBMAP_LEVEL
   * 16 Weak Mutation 238: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> INSERT_SUCCESS
   * 17 Weak Mutation 237: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> LEVEL_MASK
   * 18 Weak Mutation 236: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MAIN_LEVEL
   * 19 Weak Mutation 235: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MIN_LEVEL
   * 20 Weak Mutation 234: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 21 Weak Mutation 233: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> MAX_LEVEL
   * 22 Weak Mutation 244: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp IINC -1 index
   * 23 Weak Mutation 245: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - DeleteStatement: setIndex(I)V
   * 24 Weak Mutation 242: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp Negation of index
   * 25 Weak Mutation 243: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - InsertUnaryOp IINC 1 index
   * 26 Weak Mutation 240: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> BIN_LEVEL
   * 27 Weak Mutation 241: com.sleepycat.je.tree.BIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:319 - ReplaceVariable index -> EXACT_MATCH
   */
  @Test
  public void test19()  throws Throwable  {
      BIN bIN0 = new BIN();
      // Undeclared exception!
      try {
        bIN0.setCursorIndex((CursorImpl) null, 0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 20
  /*
   * 270 covered goals:
   * 1 Weak Mutation 253: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MIN_LEVEL
   * 2 Weak Mutation 274: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceComparisonOperator == -> -2
   * 3 Weak Mutation 276: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 280: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MIN_LEVEL
   * 5 Weak Mutation 373: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> LEVEL_MASK
   * 6 Weak Mutation 372: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MAIN_LEVEL
   * 7 Weak Mutation 375: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> DBMAP_LEVEL
   * 8 Weak Mutation 374: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> INSERT_SUCCESS
   * 9 Weak Mutation 369: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> ACCUMULATED_LIMIT
   * 10 Weak Mutation 368: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> index
   * 11 Weak Mutation 371: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MIN_LEVEL
   * 12 Weak Mutation 370: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> parentIndex
   * 13 Weak Mutation 381: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp IINC -1 nEntries
   * 14 Weak Mutation 380: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp IINC 1 nEntries
   * 15 Weak Mutation 383: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> +
   * 16 Weak Mutation 382: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 377: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> EXACT_MATCH
   * 18 Weak Mutation 376: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> BIN_LEVEL
   * 19 Weak Mutation 379: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of nEntries
   * 20 Weak Mutation 378: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> maxEntriesPerNode
   * 21 Weak Mutation 356: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> parentIndex
   * 22 Weak Mutation 357: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MIN_LEVEL
   * 23 Weak Mutation 358: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> nEntries
   * 24 Weak Mutation 359: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MAIN_LEVEL
   * 25 Weak Mutation 354: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MAX_LEVEL
   * 26 Weak Mutation 355: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 27 Weak Mutation 364: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> EXACT_MATCH
   * 28 Weak Mutation 366: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of index
   * 29 Weak Mutation 367: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MAX_LEVEL
   * 30 Weak Mutation 360: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> LEVEL_MASK
   * 31 Weak Mutation 361: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> INSERT_SUCCESS
   * 32 Weak Mutation 362: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> DBMAP_LEVEL
   * 33 Weak Mutation 363: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> BIN_LEVEL
   * 34 Weak Mutation 386: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> *
   * 35 Weak Mutation 385: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> /
   * 36 Weak Mutation 389: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> -1
   * 37 Weak Mutation 410: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> nEntries
   * 38 Weak Mutation 411: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MAIN_LEVEL
   * 39 Weak Mutation 408: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> parentIndex
   * 40 Weak Mutation 409: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MIN_LEVEL
   * 41 Weak Mutation 414: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> DBMAP_LEVEL
   * 42 Weak Mutation 415: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> BIN_LEVEL
   * 43 Weak Mutation 412: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> LEVEL_MASK
   * 44 Weak Mutation 413: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> INSERT_SUCCESS
   * 45 Weak Mutation 402: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of parentIndex
   * 46 Weak Mutation 403: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 parentIndex
   * 47 Weak Mutation 400: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> EXACT_MATCH
   * 48 Weak Mutation 401: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> maxEntriesPerNode
   * 49 Weak Mutation 407: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> ACCUMULATED_LIMIT
   * 50 Weak Mutation 404: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 parentIndex
   * 51 Weak Mutation 405: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MAX_LEVEL
   * 52 Weak Mutation 395: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MAIN_LEVEL
   * 53 Weak Mutation 394: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> nEntries
   * 54 Weak Mutation 393: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MIN_LEVEL
   * 55 Weak Mutation 392: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> ACCUMULATED_LIMIT
   * 56 Weak Mutation 399: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> BIN_LEVEL
   * 57 Weak Mutation 398: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> DBMAP_LEVEL
   * 58 Weak Mutation 397: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> INSERT_SUCCESS
   * 59 Weak Mutation 396: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> LEVEL_MASK
   * 60 Weak Mutation 391: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> index
   * 61 Weak Mutation 390: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MAX_LEVEL
   * 62 Weak Mutation 440: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - DeleteStatement: splitInternal(Lcom/sleepycat/je/tree/IN;III)V
   * 63 Weak Mutation 432: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of nEntries
   * 64 Weak Mutation 433: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 nEntries
   * 65 Weak Mutation 434: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 nEntries
   * 66 Weak Mutation 435: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceConstant - 1 -> 0
   * 67 Weak Mutation 436: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> +
   * 68 Weak Mutation 438: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> /
   * 69 Weak Mutation 439: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> *
   * 70 Weak Mutation 425: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MAIN_LEVEL
   * 71 Weak Mutation 424: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MIN_LEVEL
   * 72 Weak Mutation 427: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> INSERT_SUCCESS
   * 73 Weak Mutation 426: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> LEVEL_MASK
   * 74 Weak Mutation 429: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> BIN_LEVEL
   * 75 Weak Mutation 428: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> DBMAP_LEVEL
   * 76 Weak Mutation 431: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> maxEntriesPerNode
   * 77 Weak Mutation 430: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> EXACT_MATCH
   * 78 Weak Mutation 417: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of maxEntriesPerNode
   * 79 Weak Mutation 416: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> EXACT_MATCH
   * 80 Weak Mutation 419: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 maxEntriesPerNode
   * 81 Weak Mutation 418: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 maxEntriesPerNode
   * 82 Weak Mutation 421: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> index
   * 83 Weak Mutation 420: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MAX_LEVEL
   * 84 Weak Mutation 423: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> parentIndex
   * 85 Weak Mutation 422: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> ACCUMULATED_LIMIT
   * 86 Weak Mutation 527: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:423 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 87 Weak Mutation 528: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:423 - ReplaceComparisonOperator = null -> != null
   * 88 Weak Mutation 529: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:424 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 89 Weak Mutation 530: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:424 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 90 Weak Mutation 583: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:425 - DeleteStatement: hasNext()Z
   * 91 Weak Mutation 584: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:425 - ReplaceComparisonOperator != -> ==
   * 92 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I18 Branch 14 IFEQ L332 - true
   * 93 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I52 Branch 18 IFNE L336 - false
   * 94 com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V: I57 Branch 19 IF_ICMPNE L336 - false
   * 95 com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V: I4 Branch 29 IFNULL L423 - false
   * 96 com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V: I50 Branch 32 IFNE L425 - false
   * 97 Weak Mutation 5: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> 0
   * 98 Weak Mutation 6: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> 1
   * 99 Weak Mutation 7: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:31 - ReplaceConstant - -1 -> -2
   * 100 Weak Mutation 8: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:45 - ReplaceConstant - 0 -> 1
   * 101 Weak Mutation 9: com.sleepycat.je.tree.BIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V:46 - ReplaceConstant - 0 -> 1
   * 102 Weak Mutation 14: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 103 Weak Mutation 15: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 104 Weak Mutation 17: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> level
   * 105 Weak Mutation 16: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 106 Weak Mutation 19: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 107 Weak Mutation 18: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 108 Weak Mutation 21: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 109 Weak Mutation 20: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 110 Weak Mutation 23: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 111 Weak Mutation 22: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 112 Weak Mutation 25: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of maxEntries
   * 113 Weak Mutation 24: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 114 Weak Mutation 27: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 maxEntries
   * 115 Weak Mutation 26: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 maxEntries
   * 116 Weak Mutation 29: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 117 Weak Mutation 28: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAX_LEVEL
   * 118 Weak Mutation 31: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MAIN_LEVEL
   * 119 Weak Mutation 30: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> MIN_LEVEL
   * 120 Weak Mutation 34: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> DBMAP_LEVEL
   * 121 Weak Mutation 35: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> BIN_LEVEL
   * 122 Weak Mutation 32: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> LEVEL_MASK
   * 123 Weak Mutation 33: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> INSERT_SUCCESS
   * 124 Weak Mutation 38: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp Negation of level
   * 125 Weak Mutation 39: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC 1 level
   * 126 Weak Mutation 36: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> EXACT_MATCH
   * 127 Weak Mutation 37: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - ReplaceVariable level -> maxEntries
   * 128 Weak Mutation 40: com.sleepycat.je.tree.BIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:64 - InsertUnaryOp IINC -1 level
   * 129 Weak Mutation 137: com.sleepycat.je.tree.BIN.entryZeroKeyComparesLow()Z:200 - ReplaceConstant - 0 -> 1
   * 130 Weak Mutation 254: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> nEntries
   * 131 Weak Mutation 255: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAIN_LEVEL
   * 132 Weak Mutation 252: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> parentIndex
   * 133 Weak Mutation 250: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MAX_LEVEL
   * 134 Weak Mutation 251: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 135 Weak Mutation 248: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - DeleteStatement: findEntry([BZZ)I
   * 136 Weak Mutation 249: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:331 - DeleteStatement: getNEntries()I
   * 137 Weak Mutation 246: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 1 -> 0
   * 138 Weak Mutation 247: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:330 - ReplaceConstant - 0 -> 1
   * 139 Weak Mutation 279: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> parentIndex
   * 140 Weak Mutation 278: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 141 Weak Mutation 277: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAX_LEVEL
   * 142 Weak Mutation 283: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> LEVEL_MASK
   * 143 Weak Mutation 282: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MAIN_LEVEL
   * 144 Weak Mutation 281: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> nEntries
   * 145 Weak Mutation 287: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> EXACT_MATCH
   * 146 Weak Mutation 286: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> BIN_LEVEL
   * 147 Weak Mutation 285: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> DBMAP_LEVEL
   * 148 Weak Mutation 284: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> INSERT_SUCCESS
   * 149 Weak Mutation 258: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> DBMAP_LEVEL
   * 150 Weak Mutation 259: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> BIN_LEVEL
   * 151 Weak Mutation 256: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> LEVEL_MASK
   * 152 Weak Mutation 257: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> INSERT_SUCCESS
   * 153 Weak Mutation 262: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp Negation of index
   * 154 Weak Mutation 263: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC 1 index
   * 155 Weak Mutation 260: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> EXACT_MATCH
   * 156 Weak Mutation 266: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 1
   * 157 Weak Mutation 267: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> -1
   * 158 Weak Mutation 264: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - InsertUnaryOp IINC -1 index
   * 159 Weak Mutation 265: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 0
   * 160 Weak Mutation 270: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> |
   * 161 Weak Mutation 271: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceBitwiseOperator & -> ^
   * 162 Weak Mutation 268: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65535
   * 163 Weak Mutation 269: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 65536 -> 65537
   * 164 Weak Mutation 289: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - InsertUnaryOp Negation of index
   * 165 Weak Mutation 290: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 0
   * 166 Weak Mutation 291: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> 1
   * 167 Weak Mutation 292: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -1
   * 168 Weak Mutation 293: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65538
   * 169 Weak Mutation 294: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceConstant - -65537 -> -65536
   * 170 Weak Mutation 295: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> |
   * 171 Weak Mutation 296: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceBitwiseOperator & -> ^
   * 172 Weak Mutation 298: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - InsertUnaryOp Negation of leftSide
   * 173 Weak Mutation 299: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:334 - ReplaceComparisonOperator == -> !=
   * 174 Weak Mutation 350: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 175 Weak Mutation 349: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of leftSide
   * 176 Weak Mutation 352: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of exact
   * 177 Weak Mutation 353: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> ==
   * 178 Weak Mutation 730: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 179 Weak Mutation 731: com.sleepycat.je.tree.BIN.getKeyComparator()Ljava/util/Comparator;:696 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 180 Weak Mutation 253: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceVariable index -> MIN_LEVEL
   * 181 Weak Mutation 274: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceComparisonOperator == -> -2
   * 182 Weak Mutation 276: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:332 - ReplaceConstant - 0 -> 1
   * 183 Weak Mutation 280: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:333 - ReplaceVariable index -> MIN_LEVEL
   * 184 Weak Mutation 373: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> LEVEL_MASK
   * 185 Weak Mutation 372: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MAIN_LEVEL
   * 186 Weak Mutation 375: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> DBMAP_LEVEL
   * 187 Weak Mutation 374: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> INSERT_SUCCESS
   * 188 Weak Mutation 369: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> ACCUMULATED_LIMIT
   * 189 Weak Mutation 368: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> index
   * 190 Weak Mutation 371: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MIN_LEVEL
   * 191 Weak Mutation 370: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> parentIndex
   * 192 Weak Mutation 381: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp IINC -1 nEntries
   * 193 Weak Mutation 380: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp IINC 1 nEntries
   * 194 Weak Mutation 383: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> +
   * 195 Weak Mutation 382: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceConstant - 1 -> 0
   * 196 Weak Mutation 377: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> EXACT_MATCH
   * 197 Weak Mutation 376: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> BIN_LEVEL
   * 198 Weak Mutation 379: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of nEntries
   * 199 Weak Mutation 378: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> maxEntriesPerNode
   * 200 Weak Mutation 356: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> parentIndex
   * 201 Weak Mutation 357: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MIN_LEVEL
   * 202 Weak Mutation 358: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> nEntries
   * 203 Weak Mutation 359: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MAIN_LEVEL
   * 204 Weak Mutation 354: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> MAX_LEVEL
   * 205 Weak Mutation 355: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> ACCUMULATED_LIMIT
   * 206 Weak Mutation 364: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> EXACT_MATCH
   * 207 Weak Mutation 366: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - InsertUnaryOp Negation of index
   * 208 Weak Mutation 367: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable nEntries -> MAX_LEVEL
   * 209 Weak Mutation 360: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> LEVEL_MASK
   * 210 Weak Mutation 361: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> INSERT_SUCCESS
   * 211 Weak Mutation 362: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> DBMAP_LEVEL
   * 212 Weak Mutation 363: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceVariable index -> BIN_LEVEL
   * 213 Weak Mutation 410: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> nEntries
   * 214 Weak Mutation 411: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MAIN_LEVEL
   * 215 Weak Mutation 408: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> parentIndex
   * 216 Weak Mutation 409: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MIN_LEVEL
   * 217 Weak Mutation 414: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> DBMAP_LEVEL
   * 218 Weak Mutation 415: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> BIN_LEVEL
   * 219 Weak Mutation 412: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> LEVEL_MASK
   * 220 Weak Mutation 413: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> INSERT_SUCCESS
   * 221 Weak Mutation 402: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of parentIndex
   * 222 Weak Mutation 403: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 parentIndex
   * 223 Weak Mutation 400: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> EXACT_MATCH
   * 224 Weak Mutation 401: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> maxEntriesPerNode
   * 225 Weak Mutation 407: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> ACCUMULATED_LIMIT
   * 226 Weak Mutation 404: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 parentIndex
   * 227 Weak Mutation 405: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> MAX_LEVEL
   * 228 Weak Mutation 395: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MAIN_LEVEL
   * 229 Weak Mutation 394: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> nEntries
   * 230 Weak Mutation 393: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MIN_LEVEL
   * 231 Weak Mutation 392: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> ACCUMULATED_LIMIT
   * 232 Weak Mutation 399: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> BIN_LEVEL
   * 233 Weak Mutation 398: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> DBMAP_LEVEL
   * 234 Weak Mutation 397: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> INSERT_SUCCESS
   * 235 Weak Mutation 396: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> LEVEL_MASK
   * 236 Weak Mutation 386: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> *
   * 237 Weak Mutation 385: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceArithmeticOperator - -> /
   * 238 Weak Mutation 391: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> index
   * 239 Weak Mutation 390: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable parentIndex -> MAX_LEVEL
   * 240 Weak Mutation 389: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:336 - ReplaceComparisonOperator != -> -1
   * 241 Weak Mutation 440: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - DeleteStatement: splitInternal(Lcom/sleepycat/je/tree/IN;III)V
   * 242 Weak Mutation 432: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of nEntries
   * 243 Weak Mutation 433: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 nEntries
   * 244 Weak Mutation 434: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 nEntries
   * 245 Weak Mutation 435: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceConstant - 1 -> 0
   * 246 Weak Mutation 436: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> +
   * 247 Weak Mutation 438: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> /
   * 248 Weak Mutation 439: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceArithmeticOperator - -> *
   * 249 Weak Mutation 425: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MAIN_LEVEL
   * 250 Weak Mutation 424: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MIN_LEVEL
   * 251 Weak Mutation 427: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> INSERT_SUCCESS
   * 252 Weak Mutation 426: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> LEVEL_MASK
   * 253 Weak Mutation 429: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> BIN_LEVEL
   * 254 Weak Mutation 428: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> DBMAP_LEVEL
   * 255 Weak Mutation 431: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> maxEntriesPerNode
   * 256 Weak Mutation 430: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> EXACT_MATCH
   * 257 Weak Mutation 417: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp Negation of maxEntriesPerNode
   * 258 Weak Mutation 416: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable maxEntriesPerNode -> EXACT_MATCH
   * 259 Weak Mutation 419: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC -1 maxEntriesPerNode
   * 260 Weak Mutation 418: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - InsertUnaryOp IINC 1 maxEntriesPerNode
   * 261 Weak Mutation 421: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> index
   * 262 Weak Mutation 420: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> MAX_LEVEL
   * 263 Weak Mutation 423: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> parentIndex
   * 264 Weak Mutation 422: com.sleepycat.je.tree.BIN.splitSpecial(Lcom/sleepycat/je/tree/IN;II[BZ)V:337 - ReplaceVariable nEntries -> ACCUMULATED_LIMIT
   * 265 Weak Mutation 527: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:423 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 266 Weak Mutation 529: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:424 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 267 Weak Mutation 528: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:423 - ReplaceComparisonOperator = null -> != null
   * 268 Weak Mutation 530: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:424 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 269 Weak Mutation 583: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:425 - DeleteStatement: hasNext()Z
   * 270 Weak Mutation 584: com.sleepycat.je.tree.BIN.adjustCursorsForInsert(I)V:425 - ReplaceComparisonOperator != -> ==
   */
  @Test
  public void test20()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[6];
      BIN bIN0 = new BIN(databaseImpl0, byteArray0, 14, 720);
      DIN dIN0 = new DIN();
      ChildReference childReference0 = dIN0.getDupCountLNRef();
      bIN0.insertEntry1(childReference0);
      bIN0.splitSpecial((IN) bIN0, (int) (byte)10, 0, byteArray0, false);
      assertEquals(7609L, databaseImpl0.getEofNodeId());
      assertEquals(7617L, bIN0.getLastId());
  }

  //Test case number: 21
  /*
   * 65 covered goals:
   * 1 Weak Mutation 478: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> DBMAP_LEVEL
   * 2 Weak Mutation 479: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> newSiblingLow
   * 3 Weak Mutation 476: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> LEVEL_MASK
   * 4 Weak Mutation 477: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> INSERT_SUCCESS
   * 5 Weak Mutation 474: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MIN_LEVEL
   * 6 Weak Mutation 475: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MAIN_LEVEL
   * 7 Weak Mutation 472: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MAX_LEVEL
   * 8 Weak Mutation 473: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 500: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> /
   * 10 Weak Mutation 501: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> *
   * 11 Weak Mutation 496: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC 1 newSiblingLow
   * 12 Weak Mutation 497: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC -1 newSiblingLow
   * 13 Weak Mutation 498: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> +
   * 14 Weak Mutation 499: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> %
   * 15 Weak Mutation 493: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> BIN_LEVEL
   * 16 Weak Mutation 492: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> newSiblingHigh
   * 17 Weak Mutation 495: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp Negation of newSiblingLow
   * 18 Weak Mutation 494: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> EXACT_MATCH
   * 19 Weak Mutation 489: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> LEVEL_MASK
   * 20 Weak Mutation 488: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MAIN_LEVEL
   * 21 Weak Mutation 491: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> DBMAP_LEVEL
   * 22 Weak Mutation 490: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> INSERT_SUCCESS
   * 23 Weak Mutation 485: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MAX_LEVEL
   * 24 Weak Mutation 484: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC -1 newSiblingHigh
   * 25 Weak Mutation 487: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MIN_LEVEL
   * 26 Weak Mutation 486: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> ACCUMULATED_LIMIT
   * 27 Weak Mutation 481: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> EXACT_MATCH
   * 28 Weak Mutation 480: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> BIN_LEVEL
   * 29 Weak Mutation 483: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC 1 newSiblingHigh
   * 30 Weak Mutation 482: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp Negation of newSiblingHigh
   * 31 Weak Mutation 502: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:363 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 32 Weak Mutation 503: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:363 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 33 com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V: I158 Branch 28 IFNE L364 - false
   * 34 Weak Mutation 478: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> DBMAP_LEVEL
   * 35 Weak Mutation 479: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> newSiblingLow
   * 36 Weak Mutation 476: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> LEVEL_MASK
   * 37 Weak Mutation 477: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> INSERT_SUCCESS
   * 38 Weak Mutation 474: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MIN_LEVEL
   * 39 Weak Mutation 475: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MAIN_LEVEL
   * 40 Weak Mutation 472: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> MAX_LEVEL
   * 41 Weak Mutation 473: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> ACCUMULATED_LIMIT
   * 42 Weak Mutation 500: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> /
   * 43 Weak Mutation 501: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> *
   * 44 Weak Mutation 502: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:363 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 45 Weak Mutation 503: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:363 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 46 Weak Mutation 496: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC 1 newSiblingLow
   * 47 Weak Mutation 497: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC -1 newSiblingLow
   * 48 Weak Mutation 498: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> +
   * 49 Weak Mutation 499: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceArithmeticOperator - -> %
   * 50 Weak Mutation 493: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> BIN_LEVEL
   * 51 Weak Mutation 492: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> newSiblingHigh
   * 52 Weak Mutation 495: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp Negation of newSiblingLow
   * 53 Weak Mutation 494: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> EXACT_MATCH
   * 54 Weak Mutation 489: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> LEVEL_MASK
   * 55 Weak Mutation 488: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MAIN_LEVEL
   * 56 Weak Mutation 491: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> DBMAP_LEVEL
   * 57 Weak Mutation 490: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> INSERT_SUCCESS
   * 58 Weak Mutation 485: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MAX_LEVEL
   * 59 Weak Mutation 484: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC -1 newSiblingHigh
   * 60 Weak Mutation 487: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> MIN_LEVEL
   * 61 Weak Mutation 486: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingLow -> ACCUMULATED_LIMIT
   * 62 Weak Mutation 481: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> EXACT_MATCH
   * 63 Weak Mutation 480: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - ReplaceVariable newSiblingHigh -> BIN_LEVEL
   * 64 Weak Mutation 483: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp IINC 1 newSiblingHigh
   * 65 Weak Mutation 482: com.sleepycat.je.tree.BIN.adjustCursors(Lcom/sleepycat/je/tree/IN;II)V:362 - InsertUnaryOp Negation of newSiblingHigh
   */
  @Test
  public void test21()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.adjustCursors((IN) bIN0, 15, (int) (byte)75);
      assertEquals(8515L, bIN0.getNextNodeId());
      assertEquals(8515L, bIN0.getLastId());
  }

  //Test case number: 22
  /*
   * 14 covered goals:
   * 1 Weak Mutation 585: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:457 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 2 Weak Mutation 586: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:457 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 587: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:458 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 4 Weak Mutation 588: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:458 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 5 Weak Mutation 638: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:459 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 637: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:459 - DeleteStatement: hasNext()Z
   * 7 com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V: I4 Branch 33 IFNULL L457 - false
   * 8 com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V: I64 Branch 39 IFNE L459 - false
   * 9 Weak Mutation 638: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:459 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 637: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:459 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 585: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:457 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 12 Weak Mutation 586: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:457 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 587: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:458 - DeleteField: cursorSetLcom/sleepycat/je/utilint/TinyHashSet;
   * 14 Weak Mutation 588: com.sleepycat.je.tree.BIN.adjustCursorsForMutation(ILcom/sleepycat/je/tree/DBIN;ILcom/sleepycat/je/dbi/CursorImpl;)V:458 - DeleteStatement: iterator()Ljava/util/Iterator;
   */
  @Test
  public void test22()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      dBIN0.adjustCursorsForMutation(1330, dBIN0, 0, (CursorImpl) null);
      assertEquals(8591L, dBIN0.getLastId());
      assertEquals(8591L, dBIN0.getNextNodeId());
  }

  //Test case number: 23
  /*
   * 10 covered goals:
   * 1 Weak Mutation 639: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:491 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 640: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:492 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 641: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:493 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 642: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:494 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 5 Weak Mutation 643: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:495 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 6 Weak Mutation 639: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:491 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 641: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:493 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 640: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:492 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 643: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:495 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 10 Weak Mutation 642: com.sleepycat.je.tree.BIN.compress(Lcom/sleepycat/je/tree/BINReference;Z)Z:494 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   */
  @Test
  public void test23()  throws Throwable  {
      BIN bIN0 = new BIN();
      DIN dIN0 = new DIN();
      ChildReference childReference0 = dIN0.getDupCountLNRef();
      // Undeclared exception!
      try {
        bIN0.insertEntry1(childReference0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 Weak Mutation 725: com.sleepycat.je.tree.BIN.isCompressible()Z:571 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.BIN.isCompressible()Z: root-Branch
   * 3 Weak Mutation 725: com.sleepycat.je.tree.BIN.isCompressible()Z:571 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test24()  throws Throwable  {
      BIN bIN0 = new BIN();
      boolean boolean0 = bIN0.isCompressible();
      assertEquals(8670L, bIN0.getLastId());
      assertEquals(true, boolean0);
  }

  //Test case number: 25
  /*
   * 6 covered goals:
   * 1 Weak Mutation 732: com.sleepycat.je.tree.BIN.beginTag()Ljava/lang/String;:700 - ReplaceConstant - <bin> -> 
   * 2 Weak Mutation 733: com.sleepycat.je.tree.BIN.endTag()Ljava/lang/String;:704 - ReplaceConstant - </bin> -> 
   * 3 com.sleepycat.je.tree.BIN.endTag()Ljava/lang/String;: root-Branch
   * 4 com.sleepycat.je.tree.BIN.beginTag()Ljava/lang/String;: root-Branch
   * 5 Weak Mutation 732: com.sleepycat.je.tree.BIN.beginTag()Ljava/lang/String;:700 - ReplaceConstant - <bin> -> 
   * 6 Weak Mutation 733: com.sleepycat.je.tree.BIN.endTag()Ljava/lang/String;:704 - ReplaceConstant - </bin> -> 
   */
  @Test
  public void test25()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.dump(0);
      assertEquals(8684L, bIN0.getNextNodeId());
      assertEquals(8684L, bIN0.getLastId());
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * 1 Weak Mutation 734: com.sleepycat.je.tree.BIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:711 - DeleteField: LOG_BINLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.BIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 734: com.sleepycat.je.tree.BIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:711 - DeleteField: LOG_BINLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test26()  throws Throwable  {
      BIN bIN0 = new BIN();
      bIN0.getLogType();
      assertEquals(8700L, bIN0.getLastId());
      assertEquals(8700L, bIN0.getNextNodeId());
  }

  //Test case number: 27
  /*
   * 21 covered goals:
   * 1 com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V: I9 Branch 3 IFEQ L104 - true
   * 2 Weak Mutation 0: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> 0
   * 3 Weak Mutation 1: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 2: com.sleepycat.je.tree.BIN.<init>()V:31 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 3: com.sleepycat.je.tree.BIN.<init>()V:37 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 4: com.sleepycat.je.tree.BIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 46: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceVariable targetContainsDuplicates -> targetIsRoot
   * 8 Weak Mutation 47: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceVariable targetContainsDuplicates -> requireExactMatch
   * 9 Weak Mutation 51: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - DeleteStatement: canBeAncestor(Z)Z
   * 10 Weak Mutation 50: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp IINC -1 targetContainsDuplicates
   * 11 Weak Mutation 49: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp IINC 1 targetContainsDuplicates
   * 12 Weak Mutation 48: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - InsertUnaryOp Negation of targetContainsDuplicates
   * 13 Weak Mutation 55: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp Negation of targetContainsDuplicates
   * 14 Weak Mutation 54: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetContainsDuplicates -> requireExactMatch
   * 15 Weak Mutation 53: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetContainsDuplicates -> targetIsRoot
   * 16 Weak Mutation 52: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 58: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 57: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC -1 targetContainsDuplicates
   * 19 Weak Mutation 56: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - InsertUnaryOp IINC 1 targetContainsDuplicates
   * 20 Weak Mutation 47: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:103 - ReplaceVariable targetContainsDuplicates -> requireExactMatch
   * 21 Weak Mutation 54: com.sleepycat.je.tree.BIN.descendOnParentSearch(Lcom/sleepycat/je/tree/SearchResult;ZZJLcom/sleepycat/je/tree/Node;Z)V:104 - ReplaceVariable targetContainsDuplicates -> requireExactMatch
   */
  @Test
  public void test27()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      SearchResult searchResult0 = new SearchResult();
      DIN dIN0 = new DIN();
      dBIN0.descendOnParentSearch(searchResult0, false, true, (long) (-1), (Node) dIN0, true);
      assertEquals("exactParentFound=false keepSearching=true parent=0 index=-1 childNotResident=false", searchResult0.toString());
      assertEquals(8715L, dIN0.getLastId());
  }
}
