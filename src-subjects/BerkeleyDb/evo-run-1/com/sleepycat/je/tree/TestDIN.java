/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogManager;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;

@RunWith(EvoSuiteRunner.class)
public class TestDIN {


  //Test case number: 0
  /*
   * 8 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:72 - DeleteStatement: getIdentifierKey()[B
   * 2 com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.tree.DIN.<init>()V:38 - DeleteField: EMPTY_KEY[B
   * 4 Weak Mutation 1: com.sleepycat.je.tree.DIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 2: com.sleepycat.je.tree.DIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 3: com.sleepycat.je.tree.DIN.<init>()V:38 - DeleteStatement: init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V
   * 7 Weak Mutation 47: com.sleepycat.je.tree.DIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:72 - DeleteStatement: getIdentifierKey()[B
   * 8 com.sleepycat.je.tree.DIN.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getChildKey((IN) dIN0);
      assertEquals(501249L, dIN0.getNextNodeId());
      assertEquals(501249L, dIN0.getLastId());
  }

  //Test case number: 1
  /*
   * 50 covered goals:
   * 1 Weak Mutation 31: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteField: dupKey[B
   * 2 Weak Mutation 4: com.sleepycat.je.tree.DIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BLcom/sleepycat/je/tree/ChildReference;I)V:45 - ReplaceVariable dupKey -> identifierKey
   * 3 Weak Mutation 51: com.sleepycat.je.tree.DIN.getDupCountLNRef()Lcom/sleepycat/je/tree/ChildReference;:90 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 4 Weak Mutation 4: com.sleepycat.je.tree.DIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BLcom/sleepycat/je/tree/ChildReference;I)V:45 - ReplaceVariable dupKey -> identifierKey
   * 5 Weak Mutation 5: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MAX_LEVEL
   * 6 Weak Mutation 6: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> ACCUMULATED_LIMIT
   * 7 Weak Mutation 7: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MIN_LEVEL
   * 8 Weak Mutation 8: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MAIN_LEVEL
   * 9 Weak Mutation 9: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> LEVEL_MASK
   * 10 Weak Mutation 10: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> INSERT_SUCCESS
   * 11 Weak Mutation 11: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> DBMAP_LEVEL
   * 12 Weak Mutation 12: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> BIN_LEVEL
   * 13 Weak Mutation 13: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> EXACT_MATCH
   * 14 Weak Mutation 14: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp Negation of newLevel
   * 15 Weak Mutation 15: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp IINC 1 newLevel
   * 16 Weak Mutation 17: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 17 Weak Mutation 16: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp IINC -1 newLevel
   * 18 Weak Mutation 19: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 19 Weak Mutation 18: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 20 Weak Mutation 21: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 21 Weak Mutation 20: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> level
   * 22 Weak Mutation 23: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 23 Weak Mutation 22: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 24 Weak Mutation 25: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 25 Weak Mutation 24: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 26 Weak Mutation 27: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 27 Weak Mutation 26: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 28 Weak Mutation 29: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC 1 maxEntries
   * 29 Weak Mutation 28: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp Negation of maxEntries
   * 30 Weak Mutation 31: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteField: dupKey[B
   * 31 Weak Mutation 30: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC -1 maxEntries
   * 32 Weak Mutation 34: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 33 Weak Mutation 35: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MIN_LEVEL
   * 34 Weak Mutation 32: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 35 Weak Mutation 33: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MAX_LEVEL
   * 36 Weak Mutation 38: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> INSERT_SUCCESS
   * 37 Weak Mutation 39: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> DBMAP_LEVEL
   * 38 Weak Mutation 36: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MAIN_LEVEL
   * 39 Weak Mutation 37: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> LEVEL_MASK
   * 40 Weak Mutation 42: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> maxEntries
   * 41 Weak Mutation 43: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp Negation of level
   * 42 Weak Mutation 40: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> BIN_LEVEL
   * 43 Weak Mutation 41: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> EXACT_MATCH
   * 44 Weak Mutation 44: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC 1 level
   * 45 Weak Mutation 45: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC -1 level
   * 46 Weak Mutation 51: com.sleepycat.je.tree.DIN.getDupCountLNRef()Lcom/sleepycat/je/tree/ChildReference;:90 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 47 com.sleepycat.je.tree.DIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BLcom/sleepycat/je/tree/ChildReference;I)V: root-Branch
   * 48 com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I: root-Branch
   * 49 com.sleepycat.je.tree.DIN.getDupCountLNRef()Lcom/sleepycat/je/tree/ChildReference;: root-Branch
   * 50 com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = new byte[5];
      DIN dIN0 = new DIN();
      ChildReference childReference0 = dIN0.getDupCountLNRef();
      DIN dIN1 = new DIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray1, childReference0, (int) (byte)0);
      dIN1.createNewInstance(byteArray0, (int) (byte)5, (-173));
      assertEquals(501272L, dIN0.getNextNodeId());
      assertEquals(501260L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 2
  /*
   * 29 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 19: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 3 Weak Mutation 18: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 4 Weak Mutation 21: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 5 Weak Mutation 20: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> level
   * 6 Weak Mutation 23: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 7 Weak Mutation 22: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 8 Weak Mutation 25: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 9 Weak Mutation 24: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 10 Weak Mutation 27: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 11 Weak Mutation 26: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 12 Weak Mutation 29: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC 1 maxEntries
   * 13 Weak Mutation 28: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp Negation of maxEntries
   * 14 Weak Mutation 30: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC -1 maxEntries
   * 15 Weak Mutation 34: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 16 Weak Mutation 35: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MIN_LEVEL
   * 17 Weak Mutation 32: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 18 Weak Mutation 33: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MAX_LEVEL
   * 19 Weak Mutation 38: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> INSERT_SUCCESS
   * 20 Weak Mutation 39: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> DBMAP_LEVEL
   * 21 Weak Mutation 36: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> MAIN_LEVEL
   * 22 Weak Mutation 37: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> LEVEL_MASK
   * 23 Weak Mutation 42: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> maxEntries
   * 24 Weak Mutation 43: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp Negation of level
   * 25 Weak Mutation 40: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> BIN_LEVEL
   * 26 Weak Mutation 41: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - ReplaceVariable level -> EXACT_MATCH
   * 27 Weak Mutation 44: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC 1 level
   * 28 Weak Mutation 45: com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:59 - InsertUnaryOp IINC -1 level
   * 29 com.sleepycat.je.tree.DIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try {
        dIN0.createNewInstance(byteArray0, (int) (byte)5, (-173));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.tree.DIN.getDupKey()[B:65 - DeleteField: dupKey[B
   * 2 com.sleepycat.je.tree.DIN.getDupKey()[B: root-Branch
   * 3 Weak Mutation 46: com.sleepycat.je.tree.DIN.getDupKey()[B:65 - DeleteField: dupKey[B
   */
  @Test
  public void test3()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[9];
      DBIN dBIN0 = new DBIN();
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, 0L);
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, 1153, byteArray0, childReference0, (int) (byte)0);
      dIN0.getDupKey();
      assertEquals(502029L, databaseImpl0.getEofNodeId());
      assertEquals("<din>\n  <dupkey><key v=\"0 0 0 0 0 0 0 0 0 \"/></dupkey>\n    <DbLsn val=\"0x0/0x0\"/>\n    <key v=\"0 0 0 0 0 0 0 0 0 \"/>\n    <dbin>\n      <dupkey></dupkey>\n      <node>0</node>\n      <idkey><key v=\"\"/></idkey>\n      <dirty val=\"false\"/>\n      <generation val=\"0\"/>\n      <level val=\"0\"/>\n      <isRoot val=\"false\"/>\n      <entries nEntries=\"0\">\n      </entries>\n    </dbin>\n    <knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"true\"/>\n  <node>502032</node>\n  <idkey><key v=\"0 0 0 0 0 0 0 0 0 \"/></idkey>\n  <dirty val=\"false\"/>\n  <generation val=\"0\"/>\n  <level val=\"0\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</din>", dIN0.toString());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 48: com.sleepycat.je.tree.DIN.selectKey([B[B)[B:75 - ReplaceVariable dupTreeKey -> mainTreeKey
   * 2 com.sleepycat.je.tree.DIN.selectKey([B[B)[B: root-Branch
   * 3 Weak Mutation 48: com.sleepycat.je.tree.DIN.selectKey([B[B)[B:75 - ReplaceVariable dupTreeKey -> mainTreeKey
   */
  @Test
  public void test4()  throws Throwable  {
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = new byte[8];
      dIN0.selectKey(byteArray0, byteArray1);
      assertEquals(502150L, dIN0.getNextNodeId());
      assertEquals("<din>\n  <dupkey></dupkey>\n    <lsn/>\n    <key v=\"\"/>\n    <target/>\n    <knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"false\"/>\n  <node>0</node>\n  <idkey><key v=\"\"/></idkey>\n  <dirty val=\"false\"/>\n  <generation val=\"0\"/>\n  <level val=\"0\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</din>", dIN0.toString());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 49: com.sleepycat.je.tree.DIN.getDupTreeKey()[B:81 - DeleteStatement: getIdentifierKey()[B
   * 2 com.sleepycat.je.tree.DIN.getDupTreeKey()[B: root-Branch
   * 3 Weak Mutation 49: com.sleepycat.je.tree.DIN.getDupTreeKey()[B:81 - DeleteStatement: getIdentifierKey()[B
   */
  @Test
  public void test5()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getDupTreeKey();
      assertEquals(502162L, dIN0.getNextNodeId());
      assertEquals(502162L, dIN0.getLastId());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 Weak Mutation 54: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteStatement: fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;
   * 2 Weak Mutation 53: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 3 Weak Mutation 52: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 4 com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;: root-Branch
   * 5 Weak Mutation 54: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteStatement: fetchTarget(Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/tree/IN;)Lcom/sleepycat/je/tree/Node;
   * 6 Weak Mutation 53: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 7 Weak Mutation 52: com.sleepycat.je.tree.DIN.getDupCountLN()Lcom/sleepycat/je/tree/DupCountLN;:93 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   */
  @Test
  public void test6()  throws Throwable  {
      DIN dIN0 = new DIN();
      try {
        dIN0.getDupCountLN();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * fetchTarget of null lsn IN=0 state=0 NULL_LSN without KnownDeleted
         */
      }
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * 1 Weak Mutation 55: com.sleepycat.je.tree.DIN.updateDupCountLN(Lcom/sleepycat/je/tree/Node;)V:111 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 2 Weak Mutation 56: com.sleepycat.je.tree.DIN.updateDupCountLN(Lcom/sleepycat/je/tree/Node;)V:111 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   * 3 com.sleepycat.je.tree.DIN.updateDupCountLN(Lcom/sleepycat/je/tree/Node;)V: root-Branch
   * 4 Weak Mutation 55: com.sleepycat.je.tree.DIN.updateDupCountLN(Lcom/sleepycat/je/tree/Node;)V:111 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 5 Weak Mutation 56: com.sleepycat.je.tree.DIN.updateDupCountLN(Lcom/sleepycat/je/tree/Node;)V:111 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   */
  @Test
  public void test7()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLN((Node) null);
      assertEquals(502190L, dIN0.getLastId());
      assertEquals(502190L, dIN0.getNextNodeId());
  }

  //Test case number: 8
  /*
   * 15 covered goals:
   * 1 Weak Mutation 58: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - DeleteStatement: setDirty(Z)V
   * 2 Weak Mutation 57: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 59: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 4 Weak Mutation 60: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   * 5 Weak Mutation 63: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteStatement: setLsn(J)V
   * 6 Weak Mutation 62: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - InsertUnaryOp Negation of newLsn
   * 7 Weak Mutation 61: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 8 com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V: root-Branch
   * 9 Weak Mutation 59: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 10 Weak Mutation 58: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - DeleteStatement: setDirty(Z)V
   * 11 Weak Mutation 57: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:123 - ReplaceConstant - 1 -> 0
   * 12 Weak Mutation 63: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteStatement: setLsn(J)V
   * 13 Weak Mutation 62: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - InsertUnaryOp Negation of newLsn
   * 14 Weak Mutation 61: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:128 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 15 Weak Mutation 60: com.sleepycat.je.tree.DIN.updateDupCountLNRefAndNullTarget(J)V:127 - DeleteStatement: setTarget(Lcom/sleepycat/je/tree/Node;)V
   */
  @Test
  public void test8()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRefAndNullTarget((long) 86);
      assertEquals(true, dIN0.getDirty());
      assertEquals("<din>\n  <dupkey></dupkey>\n    <DbLsn val=\"0x0/0x56\"/>\n    <key v=\"\"/>\n    <target/>\n    <knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"true\"/>\n  <node>0</node>\n  <idkey><key v=\"\"/></idkey>\n  <dirty val=\"true\"/>\n  <generation val=\"0\"/>\n  <level val=\"0\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</din>", dIN0.toString());
  }

  //Test case number: 9
  /*
   * 11 covered goals:
   * 1 Weak Mutation 64: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:140 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 65: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:140 - DeleteStatement: setDirty(Z)V
   * 3 Weak Mutation 68: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - DeleteStatement: setLsn(J)V
   * 4 Weak Mutation 66: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 5 Weak Mutation 67: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - InsertUnaryOp Negation of newLsn
   * 6 com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V: root-Branch
   * 7 Weak Mutation 68: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - DeleteStatement: setLsn(J)V
   * 8 Weak Mutation 64: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:140 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 65: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:140 - DeleteStatement: setDirty(Z)V
   * 10 Weak Mutation 66: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 11 Weak Mutation 67: com.sleepycat.je.tree.DIN.updateDupCountLNRef(J)V:141 - InsertUnaryOp Negation of newLsn
   */
  @Test
  public void test9()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.updateDupCountLNRef((long) (byte)0);
      assertEquals(true, dIN0.getDirty());
      assertEquals(502228L, dIN0.getNextNodeId());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 69: com.sleepycat.je.tree.DIN.containsDuplicates()Z:148 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.DIN.containsDuplicates()Z: root-Branch
   * 3 Weak Mutation 69: com.sleepycat.je.tree.DIN.containsDuplicates()Z:148 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test10()  throws Throwable  {
      DIN dIN0 = new DIN();
      boolean boolean0 = dIN0.containsDuplicates();
      assertEquals(502248L, dIN0.getNextNodeId());
      assertEquals(true, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Weak Mutation 70: com.sleepycat.je.tree.DIN.isDbRoot()Z:151 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.DIN.isDbRoot()Z: root-Branch
   * 3 Weak Mutation 70: com.sleepycat.je.tree.DIN.isDbRoot()Z:151 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      DIN dIN0 = new DIN();
      boolean boolean0 = dIN0.isDbRoot();
      assertEquals(502260L, dIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 71: com.sleepycat.je.tree.DIN.getKeyComparator()Ljava/util/Comparator;:158 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 72: com.sleepycat.je.tree.DIN.getKeyComparator()Ljava/util/Comparator;:158 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 3 com.sleepycat.je.tree.DIN.getKeyComparator()Ljava/util/Comparator;: root-Branch
   * 4 Weak Mutation 71: com.sleepycat.je.tree.DIN.getKeyComparator()Ljava/util/Comparator;:158 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 5 Weak Mutation 72: com.sleepycat.je.tree.DIN.getKeyComparator()Ljava/util/Comparator;:158 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   */
  @Test
  public void test12()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try {
        dIN0.split((IN) dIN0, 86, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 13
  /*
   * 33 covered goals:
   * 1 Weak Mutation 101: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 127: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> DBMAP_LEVEL
   * 3 Weak Mutation 126: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> INSERT_SUCCESS
   * 4 Weak Mutation 125: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> LEVEL_MASK
   * 5 Weak Mutation 124: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MAIN_LEVEL
   * 6 Weak Mutation 123: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MIN_LEVEL
   * 7 Weak Mutation 122: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 8 Weak Mutation 121: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MAX_LEVEL
   * 9 Weak Mutation 136: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceComparisonOperator < -> <=
   * 10 Weak Mutation 129: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> EXACT_MATCH
   * 11 Weak Mutation 128: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> BIN_LEVEL
   * 12 Weak Mutation 131: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 130: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 133: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - DeleteStatement: getNEntries()I
   * 15 Weak Mutation 132: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp IINC -1 i
   * 16 Weak Mutation 137: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:215 - ReplaceConstant - 0 -> 1
   * 17 com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z: I38 Branch 7 IF_ICMPLT L206 - false
   * 18 Weak Mutation 101: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 127: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> DBMAP_LEVEL
   * 20 Weak Mutation 126: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> INSERT_SUCCESS
   * 21 Weak Mutation 125: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> LEVEL_MASK
   * 22 Weak Mutation 124: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MAIN_LEVEL
   * 23 Weak Mutation 123: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MIN_LEVEL
   * 24 Weak Mutation 122: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 25 Weak Mutation 121: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> MAX_LEVEL
   * 26 Weak Mutation 137: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:215 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 136: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceComparisonOperator < -> <=
   * 28 Weak Mutation 129: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> EXACT_MATCH
   * 29 Weak Mutation 128: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - ReplaceVariable i -> BIN_LEVEL
   * 30 Weak Mutation 131: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp IINC 1 i
   * 31 Weak Mutation 130: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp Negation of i
   * 32 Weak Mutation 133: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - DeleteStatement: getNEntries()I
   * 33 Weak Mutation 132: com.sleepycat.je.tree.DIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:206 - InsertUnaryOp IINC -1 i
   */
  @Test
  public void test13()  throws Throwable  {
      DIN dIN0 = new DIN();
      boolean boolean0 = dIN0.matchLNByNodeId((TreeLocation) null, (long) (byte) (-60));
      assertEquals(502286L, dIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Weak Mutation 139: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: getLevel()I
   * 2 Weak Mutation 138: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: getNodeId()J
   * 3 Weak Mutation 140: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: processDIN(Lcom/sleepycat/je/tree/DIN;Ljava/lang/Long;I)V
   * 4 com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V: root-Branch
   * 5 Weak Mutation 139: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: getLevel()I
   * 6 Weak Mutation 138: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: getNodeId()J
   * 7 Weak Mutation 140: com.sleepycat.je.tree.DIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:218 - DeleteStatement: processDIN(Lcom/sleepycat/je/tree/DIN;Ljava/lang/Long;I)V
   */
  @Test
  public void test14()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try {
        dIN0.accumulateStats((TreeWalkerStatsAccumulator) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Weak Mutation 141: com.sleepycat.je.tree.DIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:224 - DeleteField: LOG_DINLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.DIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 141: com.sleepycat.je.tree.DIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:224 - DeleteField: LOG_DINLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test15()  throws Throwable  {
      DIN dIN0 = new DIN();
      dIN0.getLogType();
      assertEquals(502348L, dIN0.getLastId());
      assertEquals(502348L, dIN0.getNextNodeId());
  }

  //Test case number: 16
  /*
   * 9 covered goals:
   * 1 Weak Mutation 143: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:232 - ReplaceComparisonOperator = null -> != null
   * 2 Weak Mutation 142: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:232 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 3 Weak Mutation 144: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:235 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 4 Weak Mutation 145: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:235 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 5 com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J: I4 Branch 8 IFNULL L232 - false
   * 6 Weak Mutation 143: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:232 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 142: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:232 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 8 Weak Mutation 144: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:235 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 9 Weak Mutation 145: com.sleepycat.je.tree.DIN.logInternal(Lcom/sleepycat/je/log/LogManager;ZZZLcom/sleepycat/je/tree/IN;)J:235 - DeleteStatement: getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   */
  @Test
  public void test16()  throws Throwable  {
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try {
        dIN0.log((LogManager) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 17
  /*
   * 135 covered goals:
   * 1 Weak Mutation 179: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 177: com.sleepycat.je.tree.DIN.getLogSize()I:247 - DeleteField: dupKey[B
   * 3 Weak Mutation 182: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 180: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> %
   * 5 Weak Mutation 181: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 186: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MAIN_LEVEL
   * 7 Weak Mutation 187: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> LEVEL_MASK
   * 8 Weak Mutation 184: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 185: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MIN_LEVEL
   * 10 Weak Mutation 190: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> BIN_LEVEL
   * 11 Weak Mutation 191: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> EXACT_MATCH
   * 12 Weak Mutation 188: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> INSERT_SUCCESS
   * 13 Weak Mutation 189: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> DBMAP_LEVEL
   * 14 Weak Mutation 183: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MAX_LEVEL
   * 15 Weak Mutation 197: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 196: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> -
   * 17 Weak Mutation 199: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> *
   * 18 Weak Mutation 198: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> /
   * 19 Weak Mutation 193: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp IINC 1 size
   * 20 Weak Mutation 192: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp Negation of size
   * 21 Weak Mutation 195: com.sleepycat.je.tree.DIN.getLogSize()I:248 - DeleteStatement: getBooleanLogSize()I
   * 22 Weak Mutation 194: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp IINC -1 size
   * 23 Weak Mutation 201: com.sleepycat.je.tree.DIN.getLogSize()I:249 - ReplaceComparisonOperator = null -> != null
   * 24 Weak Mutation 200: com.sleepycat.je.tree.DIN.getLogSize()I:249 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 25 Weak Mutation 205: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MAIN_LEVEL
   * 26 Weak Mutation 204: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MIN_LEVEL
   * 27 Weak Mutation 207: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> INSERT_SUCCESS
   * 28 Weak Mutation 206: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> LEVEL_MASK
   * 29 Weak Mutation 203: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 30 Weak Mutation 202: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MAX_LEVEL
   * 31 Weak Mutation 216: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> -
   * 32 Weak Mutation 217: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 218: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> /
   * 34 Weak Mutation 219: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 212: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp IINC 1 size
   * 36 Weak Mutation 213: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp IINC -1 size
   * 37 Weak Mutation 214: com.sleepycat.je.tree.DIN.getLogSize()I:250 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 38 Weak Mutation 215: com.sleepycat.je.tree.DIN.getLogSize()I:250 - DeleteStatement: getLogSize()I
   * 39 Weak Mutation 208: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> DBMAP_LEVEL
   * 40 Weak Mutation 209: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> BIN_LEVEL
   * 41 Weak Mutation 210: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> EXACT_MATCH
   * 42 Weak Mutation 211: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp Negation of size
   * 43 Weak Mutation 220: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MAX_LEVEL
   * 44 Weak Mutation 221: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 45 Weak Mutation 222: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MIN_LEVEL
   * 46 Weak Mutation 223: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MAIN_LEVEL
   * 47 Weak Mutation 231: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp IINC -1 size
   * 48 Weak Mutation 230: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp IINC 1 size
   * 49 Weak Mutation 229: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp Negation of size
   * 50 Weak Mutation 228: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> EXACT_MATCH
   * 51 Weak Mutation 227: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> BIN_LEVEL
   * 52 Weak Mutation 226: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> DBMAP_LEVEL
   * 53 Weak Mutation 225: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> INSERT_SUCCESS
   * 54 Weak Mutation 224: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> LEVEL_MASK
   * 55 com.sleepycat.je.tree.DIN.getLogSize()I: I23 Branch 9 IFNULL L249 - false
   * 56 Weak Mutation 171: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> DBMAP_LEVEL
   * 57 Weak Mutation 170: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> INSERT_SUCCESS
   * 58 Weak Mutation 169: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> LEVEL_MASK
   * 59 Weak Mutation 168: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MAIN_LEVEL
   * 60 Weak Mutation 175: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp IINC 1 size
   * 61 Weak Mutation 174: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp Negation of size
   * 62 Weak Mutation 173: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> EXACT_MATCH
   * 63 Weak Mutation 172: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> BIN_LEVEL
   * 64 Weak Mutation 167: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MIN_LEVEL
   * 65 Weak Mutation 166: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 66 Weak Mutation 165: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MAX_LEVEL
   * 67 Weak Mutation 178: com.sleepycat.je.tree.DIN.getLogSize()I:247 - DeleteStatement: getByteArrayLogSize([B)I
   * 68 Weak Mutation 176: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp IINC -1 size
   * 69 Weak Mutation 171: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> DBMAP_LEVEL
   * 70 Weak Mutation 170: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> INSERT_SUCCESS
   * 71 Weak Mutation 169: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> LEVEL_MASK
   * 72 Weak Mutation 168: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MAIN_LEVEL
   * 73 Weak Mutation 175: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp IINC 1 size
   * 74 Weak Mutation 174: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp Negation of size
   * 75 Weak Mutation 173: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> EXACT_MATCH
   * 76 Weak Mutation 172: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> BIN_LEVEL
   * 77 Weak Mutation 167: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MIN_LEVEL
   * 78 Weak Mutation 166: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 79 Weak Mutation 165: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceVariable size -> MAX_LEVEL
   * 80 Weak Mutation 186: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MAIN_LEVEL
   * 81 Weak Mutation 187: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> LEVEL_MASK
   * 82 Weak Mutation 184: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 83 Weak Mutation 185: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MIN_LEVEL
   * 84 Weak Mutation 190: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> BIN_LEVEL
   * 85 Weak Mutation 191: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> EXACT_MATCH
   * 86 Weak Mutation 188: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> INSERT_SUCCESS
   * 87 Weak Mutation 189: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> DBMAP_LEVEL
   * 88 Weak Mutation 178: com.sleepycat.je.tree.DIN.getLogSize()I:247 - DeleteStatement: getByteArrayLogSize([B)I
   * 89 Weak Mutation 179: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> -
   * 90 Weak Mutation 176: com.sleepycat.je.tree.DIN.getLogSize()I:247 - InsertUnaryOp IINC -1 size
   * 91 Weak Mutation 177: com.sleepycat.je.tree.DIN.getLogSize()I:247 - DeleteField: dupKey[B
   * 92 Weak Mutation 182: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> *
   * 93 Weak Mutation 183: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceVariable size -> MAX_LEVEL
   * 94 Weak Mutation 180: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> %
   * 95 Weak Mutation 181: com.sleepycat.je.tree.DIN.getLogSize()I:247 - ReplaceArithmeticOperator + -> /
   * 96 Weak Mutation 205: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MAIN_LEVEL
   * 97 Weak Mutation 204: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MIN_LEVEL
   * 98 Weak Mutation 207: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> INSERT_SUCCESS
   * 99 Weak Mutation 206: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> LEVEL_MASK
   * 100 Weak Mutation 201: com.sleepycat.je.tree.DIN.getLogSize()I:249 - ReplaceComparisonOperator = null -> != null
   * 101 Weak Mutation 200: com.sleepycat.je.tree.DIN.getLogSize()I:249 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 102 Weak Mutation 203: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 103 Weak Mutation 202: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> MAX_LEVEL
   * 104 Weak Mutation 197: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> %
   * 105 Weak Mutation 196: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> -
   * 106 Weak Mutation 199: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> *
   * 107 Weak Mutation 198: com.sleepycat.je.tree.DIN.getLogSize()I:248 - ReplaceArithmeticOperator + -> /
   * 108 Weak Mutation 193: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp IINC 1 size
   * 109 Weak Mutation 192: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp Negation of size
   * 110 Weak Mutation 195: com.sleepycat.je.tree.DIN.getLogSize()I:248 - DeleteStatement: getBooleanLogSize()I
   * 111 Weak Mutation 194: com.sleepycat.je.tree.DIN.getLogSize()I:248 - InsertUnaryOp IINC -1 size
   * 112 Weak Mutation 220: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MAX_LEVEL
   * 113 Weak Mutation 221: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 114 Weak Mutation 222: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MIN_LEVEL
   * 115 Weak Mutation 223: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> MAIN_LEVEL
   * 116 Weak Mutation 216: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> -
   * 117 Weak Mutation 217: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> %
   * 118 Weak Mutation 218: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> /
   * 119 Weak Mutation 219: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceArithmeticOperator + -> *
   * 120 Weak Mutation 212: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp IINC 1 size
   * 121 Weak Mutation 213: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp IINC -1 size
   * 122 Weak Mutation 214: com.sleepycat.je.tree.DIN.getLogSize()I:250 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 123 Weak Mutation 215: com.sleepycat.je.tree.DIN.getLogSize()I:250 - DeleteStatement: getLogSize()I
   * 124 Weak Mutation 208: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> DBMAP_LEVEL
   * 125 Weak Mutation 209: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> BIN_LEVEL
   * 126 Weak Mutation 210: com.sleepycat.je.tree.DIN.getLogSize()I:250 - ReplaceVariable size -> EXACT_MATCH
   * 127 Weak Mutation 211: com.sleepycat.je.tree.DIN.getLogSize()I:250 - InsertUnaryOp Negation of size
   * 128 Weak Mutation 231: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp IINC -1 size
   * 129 Weak Mutation 230: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp IINC 1 size
   * 130 Weak Mutation 229: com.sleepycat.je.tree.DIN.getLogSize()I:252 - InsertUnaryOp Negation of size
   * 131 Weak Mutation 228: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> EXACT_MATCH
   * 132 Weak Mutation 227: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> BIN_LEVEL
   * 133 Weak Mutation 226: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> DBMAP_LEVEL
   * 134 Weak Mutation 225: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> INSERT_SUCCESS
   * 135 Weak Mutation 224: com.sleepycat.je.tree.DIN.getLogSize()I:252 - ReplaceVariable size -> LEVEL_MASK
   */
  @Test
  public void test17()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[4];
      LN lN0 = new LN(byteArray0);
      ChildReference childReference0 = new ChildReference((Node) lN0, byteArray0, (long) (byte)0, (byte) (-77));
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray0, childReference0, (-1040));
      int int0 = dIN0.getLogSize();
      assertEquals(502385L, lN0.getLastId());
      assertEquals(60, int0);
  }

  //Test case number: 18
  /*
   * 23 covered goals:
   * 1 Weak Mutation 259: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 260: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 3 Weak Mutation 261: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 262: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:286 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 5 Weak Mutation 263: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:286 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 266: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 7 Weak Mutation 264: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 8 Weak Mutation 265: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 267: com.sleepycat.je.tree.DIN.beginTag()Ljava/lang/String;:291 - ReplaceConstant - <din> -> 
   * 10 Weak Mutation 268: com.sleepycat.je.tree.DIN.endTag()Ljava/lang/String;:294 - ReplaceConstant - </din> -> 
   * 11 com.sleepycat.je.tree.DIN.endTag()Ljava/lang/String;: root-Branch
   * 12 com.sleepycat.je.tree.DIN.beginTag()Ljava/lang/String;: root-Branch
   * 13 com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V: I18 Branch 13 IFNULL L286 - false
   * 14 Weak Mutation 259: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 262: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:286 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 16 Weak Mutation 263: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:286 - ReplaceComparisonOperator = null -> != null
   * 17 Weak Mutation 260: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 18 Weak Mutation 261: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:285 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 266: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 20 Weak Mutation 267: com.sleepycat.je.tree.DIN.beginTag()Ljava/lang/String;:291 - ReplaceConstant - <din> -> 
   * 21 Weak Mutation 264: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 22 Weak Mutation 265: com.sleepycat.je.tree.DIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:287 - ReplaceConstant - 1 -> 0
   * 23 Weak Mutation 268: com.sleepycat.je.tree.DIN.endTag()Ljava/lang/String;:294 - ReplaceConstant - </din> -> 
   */
  @Test
  public void test18()  throws Throwable  {
      DIN dIN0 = new DIN();
      StringBuffer stringBuffer0 = new StringBuffer();
      dIN0.dumpLog(stringBuffer0, false);
      assertEquals(503107L, dIN0.getNextNodeId());
      assertEquals(257, stringBuffer0.length());
  }

  //Test case number: 19
  /*
   * 149 covered goals:
   * 1 Weak Mutation 343: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 2 Weak Mutation 342: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 3 Weak Mutation 341: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 4 Weak Mutation 340: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 5 Weak Mutation 339: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 6 Weak Mutation 338: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 7 Weak Mutation 337: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 8 Weak Mutation 336: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 351: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> -
   * 10 Weak Mutation 350: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 3
   * 11 Weak Mutation 349: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> -1
   * 12 Weak Mutation 348: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 1
   * 13 Weak Mutation 347: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 0
   * 14 Weak Mutation 346: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp IINC -1 nSpaces
   * 15 Weak Mutation 345: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp IINC 1 nSpaces
   * 16 Weak Mutation 344: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp Negation of nSpaces
   * 17 Weak Mutation 335: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 18 Weak Mutation 356: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 352: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> %
   * 20 Weak Mutation 353: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> /
   * 21 Weak Mutation 354: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> *
   * 22 Weak Mutation 355: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - DeleteStatement: indent(I)Ljava/lang/String;
   * 23 Weak Mutation 357: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 358: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - ReplaceConstant - 1 -> 0
   * 25 Weak Mutation 359: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 26 com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;: root-Branch
   * 27 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I77 Branch 16 IFNONNULL L312 - false
   * 28 Weak Mutation 275: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 29 Weak Mutation 274: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 30 Weak Mutation 273: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 31 Weak Mutation 279: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 32 Weak Mutation 278: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 33 Weak Mutation 277: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 34 Weak Mutation 276: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 35 Weak Mutation 283: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp IINC 1 nSpaces
   * 36 Weak Mutation 282: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp Negation of nSpaces
   * 37 Weak Mutation 281: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 38 Weak Mutation 280: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 39 Weak Mutation 287: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:304 - DeleteStatement: beginTag()Ljava/lang/String;
   * 40 Weak Mutation 286: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 41 Weak Mutation 285: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - DeleteStatement: indent(I)Ljava/lang/String;
   * 42 Weak Mutation 284: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp IINC -1 nSpaces
   * 43 Weak Mutation 267: com.sleepycat.je.tree.DIN.beginTag()Ljava/lang/String;:291 - ReplaceConstant - <din> -> 
   * 44 Weak Mutation 268: com.sleepycat.je.tree.DIN.endTag()Ljava/lang/String;:294 - ReplaceConstant - </din> -> 
   * 45 Weak Mutation 312: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> %
   * 46 Weak Mutation 319: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteField: dupKey[B
   * 47 Weak Mutation 288: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:304 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 48 Weak Mutation 289: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 0
   * 49 Weak Mutation 290: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 1
   * 50 Weak Mutation 291: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> -1
   * 51 Weak Mutation 292: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 9
   * 52 Weak Mutation 293: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 11
   * 53 Weak Mutation 294: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 54 Weak Mutation 322: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 323: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 56 Weak Mutation 321: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteField: dupKey[B
   * 57 Weak Mutation 275: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 58 Weak Mutation 274: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 59 Weak Mutation 273: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 60 Weak Mutation 272: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - ReplaceComparisonOperator == -> !=
   * 61 Weak Mutation 279: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 62 Weak Mutation 278: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 63 Weak Mutation 277: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 64 Weak Mutation 276: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 65 Weak Mutation 283: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp IINC 1 nSpaces
   * 66 Weak Mutation 282: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp Negation of nSpaces
   * 67 Weak Mutation 281: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 68 Weak Mutation 280: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 69 Weak Mutation 287: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:304 - DeleteStatement: beginTag()Ljava/lang/String;
   * 70 Weak Mutation 286: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 71 Weak Mutation 285: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - DeleteStatement: indent(I)Ljava/lang/String;
   * 72 Weak Mutation 284: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:303 - InsertUnaryOp IINC -1 nSpaces
   * 73 Weak Mutation 270: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp IINC 1 dumpTags
   * 74 Weak Mutation 271: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp IINC -1 dumpTags
   * 75 Weak Mutation 269: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp Negation of dumpTags
   * 76 Weak Mutation 305: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp IINC 1 nSpaces
   * 77 Weak Mutation 304: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp Negation of nSpaces
   * 78 Weak Mutation 307: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 0
   * 79 Weak Mutation 306: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp IINC -1 nSpaces
   * 80 Weak Mutation 309: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> -1
   * 81 Weak Mutation 308: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 1
   * 82 Weak Mutation 311: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> -
   * 83 Weak Mutation 310: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 3
   * 84 Weak Mutation 313: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> /
   * 85 Weak Mutation 312: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> %
   * 86 Weak Mutation 315: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - DeleteStatement: indent(I)Ljava/lang/String;
   * 87 Weak Mutation 314: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> *
   * 88 Weak Mutation 317: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:308 - ReplaceConstant - <dupkey> -> 
   * 89 Weak Mutation 316: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 90 Weak Mutation 319: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteField: dupKey[B
   * 91 Weak Mutation 318: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:308 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 92 Weak Mutation 288: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:304 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 93 Weak Mutation 289: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 0
   * 94 Weak Mutation 290: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 1
   * 95 Weak Mutation 291: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> -1
   * 96 Weak Mutation 292: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 9
   * 97 Weak Mutation 293: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - ReplaceConstant - 10 -> 11
   * 98 Weak Mutation 294: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:305 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 99 Weak Mutation 295: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 100 Weak Mutation 296: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 101 Weak Mutation 297: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 102 Weak Mutation 298: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 103 Weak Mutation 299: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 104 Weak Mutation 300: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 105 Weak Mutation 301: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 106 Weak Mutation 302: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 107 Weak Mutation 303: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 108 Weak Mutation 343: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 109 Weak Mutation 342: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 110 Weak Mutation 341: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 111 Weak Mutation 340: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 112 Weak Mutation 339: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 113 Weak Mutation 338: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 114 Weak Mutation 337: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 115 Weak Mutation 336: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 116 Weak Mutation 351: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> -
   * 117 Weak Mutation 350: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 3
   * 118 Weak Mutation 349: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> -1
   * 119 Weak Mutation 348: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 1
   * 120 Weak Mutation 347: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceConstant - 2 -> 0
   * 121 Weak Mutation 346: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp IINC -1 nSpaces
   * 122 Weak Mutation 345: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp IINC 1 nSpaces
   * 123 Weak Mutation 344: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - InsertUnaryOp Negation of nSpaces
   * 124 Weak Mutation 326: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:310 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 125 Weak Mutation 327: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 0
   * 126 Weak Mutation 324: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 127 Weak Mutation 325: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:310 - ReplaceConstant - </dupkey> -> 
   * 128 Weak Mutation 322: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - ReplaceConstant - 0 -> 1
   * 129 Weak Mutation 323: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 130 Weak Mutation 320: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - ReplaceComparisonOperator != null -> = null
   * 131 Weak Mutation 321: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteField: dupKey[B
   * 132 Weak Mutation 334: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:312 - ReplaceComparisonOperator != null -> = null
   * 133 Weak Mutation 335: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 134 Weak Mutation 332: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 135 Weak Mutation 330: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 9
   * 136 Weak Mutation 331: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 11
   * 137 Weak Mutation 328: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 1
   * 138 Weak Mutation 329: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> -1
   * 139 Weak Mutation 356: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 140 Weak Mutation 357: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - ReplaceConstant - 0 -> 1
   * 141 Weak Mutation 358: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - ReplaceConstant - 1 -> 0
   * 142 Weak Mutation 359: com.sleepycat.je.tree.DIN.toString()Ljava/lang/String;:328 - DeleteStatement: dumpString(IZ)Ljava/lang/String;
   * 143 Weak Mutation 352: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> %
   * 144 Weak Mutation 353: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> /
   * 145 Weak Mutation 354: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - ReplaceArithmeticOperator + -> *
   * 146 Weak Mutation 355: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:313 - DeleteStatement: indent(I)Ljava/lang/String;
   * 147 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I9 Branch 14 IFEQ L302 - false
   * 148 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I50 Branch 15 IFNONNULL L309 - true
   * 149 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I126 Branch 17 IFEQ L321 - false
   */
  @Test
  public void test19()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[5];
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, 86, byteArray0, (ChildReference) null, (int) (byte)121);
      String string0 = dIN0.toString();
      assertEquals(503141L, dIN0.getNextNodeId());
      assertEquals("<din>\n  <dupkey><key v=\"0 0 0 0 0 \"/></dupkey>\n  <dupCountLN/>\n  <node>503139</node>\n  <idkey><key v=\"0 0 0 0 0 \"/></idkey>\n  <dirty val=\"false\"/>\n  <generation val=\"0\"/>\n  <level val=\"79\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</din>", string0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Weak Mutation 360: com.sleepycat.je.tree.DIN.shortClassName()Ljava/lang/String;:331 - ReplaceConstant - DIN -> 
   * 2 com.sleepycat.je.tree.DIN.shortClassName()Ljava/lang/String;: root-Branch
   * 3 Weak Mutation 360: com.sleepycat.je.tree.DIN.shortClassName()Ljava/lang/String;:331 - ReplaceConstant - DIN -> 
   */
  @Test
  public void test20()  throws Throwable  {
      DIN dIN0 = new DIN();
      String string0 = dIN0.shortClassName();
      assertEquals(503543L, dIN0.getNextNodeId());
      assertEquals("DIN", string0);
  }

  //Test case number: 21
  /*
   * 13 covered goals:
   * 1 com.sleepycat.je.tree.DIN.setDupCountLN(Lcom/sleepycat/je/tree/ChildReference;)V: root-Branch
   * 2 Weak Mutation 5: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MAX_LEVEL
   * 3 Weak Mutation 6: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> ACCUMULATED_LIMIT
   * 4 Weak Mutation 7: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MIN_LEVEL
   * 5 Weak Mutation 8: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> MAIN_LEVEL
   * 6 Weak Mutation 9: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> LEVEL_MASK
   * 7 Weak Mutation 10: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> INSERT_SUCCESS
   * 8 Weak Mutation 11: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> DBMAP_LEVEL
   * 9 Weak Mutation 12: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> BIN_LEVEL
   * 10 Weak Mutation 13: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - ReplaceVariable newLevel -> EXACT_MATCH
   * 11 Weak Mutation 14: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp Negation of newLevel
   * 12 Weak Mutation 15: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp IINC 1 newLevel
   * 13 Weak Mutation 16: com.sleepycat.je.tree.DIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:52 - InsertUnaryOp IINC -1 newLevel
   */
  @Test
  public void test21()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[9];
      DBIN dBIN0 = new DBIN();
      ChildReference childReference0 = new ChildReference((Node) dBIN0, byteArray0, 0L);
      DIN dIN0 = new DIN(databaseImpl0, byteArray0, 1153, byteArray0, childReference0, (int) (byte)0);
      dIN0.setDupCountLN(childReference0);
      assertEquals(503554L, databaseImpl0.getEofNodeId());
      assertEquals(503560L, dIN0.getLastId());
  }

  //Test case number: 22
  /*
   * 48 covered goals:
   * 1 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I9 Branch 14 IFEQ L302 - true
   * 2 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I50 Branch 15 IFNONNULL L309 - false
   * 3 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I126 Branch 17 IFEQ L321 - true
   * 4 Weak Mutation 0: com.sleepycat.je.tree.DIN.<init>()V:38 - DeleteField: EMPTY_KEY[B
   * 5 Weak Mutation 1: com.sleepycat.je.tree.DIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 2: com.sleepycat.je.tree.DIN.<init>()V:38 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 3: com.sleepycat.je.tree.DIN.<init>()V:38 - DeleteStatement: init(Lcom/sleepycat/je/dbi/DatabaseImpl;[BII)V
   * 8 Weak Mutation 272: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 270: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp IINC 1 dumpTags
   * 10 Weak Mutation 271: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp IINC -1 dumpTags
   * 11 Weak Mutation 269: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:302 - InsertUnaryOp Negation of dumpTags
   * 12 Weak Mutation 305: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp IINC 1 nSpaces
   * 13 Weak Mutation 304: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp Negation of nSpaces
   * 14 Weak Mutation 307: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 0
   * 15 Weak Mutation 306: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - InsertUnaryOp IINC -1 nSpaces
   * 16 Weak Mutation 309: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> -1
   * 17 Weak Mutation 308: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 1
   * 18 Weak Mutation 311: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> -
   * 19 Weak Mutation 310: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceConstant - 2 -> 3
   * 20 Weak Mutation 313: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> /
   * 21 Weak Mutation 315: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - DeleteStatement: indent(I)Ljava/lang/String;
   * 22 Weak Mutation 314: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 317: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:308 - ReplaceConstant - <dupkey> -> 
   * 24 Weak Mutation 316: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 25 Weak Mutation 318: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:308 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 295: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 27 Weak Mutation 296: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 28 Weak Mutation 297: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 29 Weak Mutation 298: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 30 Weak Mutation 299: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 31 Weak Mutation 300: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 32 Weak Mutation 301: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 33 Weak Mutation 302: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 34 Weak Mutation 303: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:307 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 35 Weak Mutation 326: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:310 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 36 Weak Mutation 327: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 0
   * 37 Weak Mutation 324: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 325: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:310 - ReplaceConstant - </dupkey> -> 
   * 39 Weak Mutation 320: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:309 - ReplaceComparisonOperator != null -> = null
   * 40 Weak Mutation 334: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:312 - ReplaceComparisonOperator != null -> = null
   * 41 Weak Mutation 332: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 42 Weak Mutation 333: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:312 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 43 Weak Mutation 330: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 9
   * 44 Weak Mutation 331: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 11
   * 45 Weak Mutation 328: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> 1
   * 46 Weak Mutation 329: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:311 - ReplaceConstant - 10 -> -1
   * 47 Weak Mutation 333: com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;:312 - DeleteField: dupCountLNRefLcom/sleepycat/je/tree/ChildReference;
   * 48 com.sleepycat.je.tree.DIN.dumpString(IZ)Ljava/lang/String;: I77 Branch 16 IFNONNULL L312 - true
   */
  @Test
  public void test22()  throws Throwable  {
      DIN dIN0 = new DIN();
      String string0 = dIN0.dumpString((-2), false);
      assertEquals(503667L, dIN0.getLastId());
      assertEquals("<dupkey></dupkey>\n  <lsn/>\n  <key v=\"\"/>\n  <target/>\n  <knownDeleted val=\"false\"/><pendingDeleted val=\"false\"/><dirty val=\"false\"/>\n<node>0</node>\n<idkey><key v=\"\"/></idkey>\n<dirty val=\"false\"/>\n<generation val=\"0\"/>\n<level val=\"0\"/>\n<isRoot val=\"false\"/>\n<entries nEntries=\"0\">\n</entries>\n", string0);
  }
}
