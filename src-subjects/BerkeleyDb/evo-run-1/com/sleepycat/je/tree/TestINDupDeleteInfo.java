/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.INDupDeleteInfo;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestINDupDeleteInfo {


  //Test case number: 0
  /*
   * 7 covered goals:
   * 1 Weak Mutation 3: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedNodeId()J:35 - InsertUnaryOp Negation
   * 2 Weak Mutation 4: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedNodeId()J:35 - DeleteField: deletedNodeIdJ
   * 3 com.sleepycat.je.tree.INDupDeleteInfo.getDeletedNodeId()J: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:23 - InsertUnaryOp Negation of deletedNodeId
   * 5 Weak Mutation 3: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedNodeId()J:35 - InsertUnaryOp Negation
   * 6 Weak Mutation 4: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedNodeId()J:35 - DeleteField: deletedNodeIdJ
   * 7 com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseId databaseId0 = new DatabaseId((int) (byte) (-30));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((long) (byte) (-30), byteArray0, byteArray0, databaseId0);
      long long0 = iNDupDeleteInfo0.getDeletedNodeId();
      assertEquals((-30L), long0);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * 1 Weak Mutation 1: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:24 - ReplaceVariable deletedMainKey -> deletedDupKey
   * 2 Weak Mutation 2: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:25 - ReplaceVariable deletedDupKey -> deletedMainKey
   * 3 Weak Mutation 1: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:24 - ReplaceVariable deletedMainKey -> deletedDupKey
   * 4 Weak Mutation 2: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:25 - ReplaceVariable deletedDupKey -> deletedMainKey
   */
  @Test
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = new byte[7];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(1368L, byteArray0, byteArray1, databaseId0);
      assertEquals(1368L, iNDupDeleteInfo0.getDeletedNodeId());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Weak Mutation 5: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedMainKey()[B:38 - DeleteField: deletedMainKey[B
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.getDeletedMainKey()[B: root-Branch
   * 3 Weak Mutation 5: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedMainKey()[B:38 - DeleteField: deletedMainKey[B
   */
  @Test
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-158L), byteArray0, byteArray0, databaseId0);
      byte[] byteArray1 = iNDupDeleteInfo0.getDeletedMainKey();
      assertEquals((-158L), iNDupDeleteInfo0.getDeletedNodeId());
      assertNotNull(byteArray1);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 6: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedDupKey()[B:41 - DeleteField: deletedDupKey[B
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.getDeletedDupKey()[B: root-Branch
   * 3 Weak Mutation 6: com.sleepycat.je.tree.INDupDeleteInfo.getDeletedDupKey()[B:41 - DeleteField: deletedDupKey[B
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-50L), byteArray0, byteArray0, databaseId0);
      byte[] byteArray1 = iNDupDeleteInfo0.getDeletedDupKey();
      assertNotNull(byteArray1);
      assertEquals((-50L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Weak Mutation 7: com.sleepycat.je.tree.INDupDeleteInfo.getDatabaseId()Lcom/sleepycat/je/dbi/DatabaseId;:44 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.<init>()V: root-Branch
   * 3 com.sleepycat.je.tree.INDupDeleteInfo.getDatabaseId()Lcom/sleepycat/je/dbi/DatabaseId;: root-Branch
   * 4 Weak Mutation 7: com.sleepycat.je.tree.INDupDeleteInfo.getDatabaseId()Lcom/sleepycat/je/dbi/DatabaseId;:44 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test4()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      DatabaseId databaseId0 = iNDupDeleteInfo0.getDatabaseId();
      assertEquals(0, databaseId0.getId());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 8: com.sleepycat.je.tree.INDupDeleteInfo.getLogType()Lcom/sleepycat/je/log/LogEntryType;:50 - DeleteField: LOG_IN_DUPDELETE_INFOLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 8: com.sleepycat.je.tree.INDupDeleteInfo.getLogType()Lcom/sleepycat/je/log/LogEntryType;:50 - DeleteField: LOG_IN_DUPDELETE_INFOLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test5()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      LogEntryType logEntryType0 = iNDupDeleteInfo0.getLogType();
      assertEquals(false, logEntryType0.isNodeType());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 9: com.sleepycat.je.tree.INDupDeleteInfo.marshallOutsideWriteLatch()Z:56 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.marshallOutsideWriteLatch()Z: root-Branch
   * 3 Weak Mutation 9: com.sleepycat.je.tree.INDupDeleteInfo.marshallOutsideWriteLatch()Z:56 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test6()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      boolean boolean0 = iNDupDeleteInfo0.marshallOutsideWriteLatch();
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Weak Mutation 10: com.sleepycat.je.tree.INDupDeleteInfo.countAsObsoleteWhenLogged()Z:62 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.countAsObsoleteWhenLogged()Z: root-Branch
   * 3 Weak Mutation 10: com.sleepycat.je.tree.INDupDeleteInfo.countAsObsoleteWhenLogged()Z:62 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test7()  throws Throwable  {
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo();
      boolean boolean0 = iNDupDeleteInfo0.countAsObsoleteWhenLogged();
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 47 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 0
   * 2 Weak Mutation 12: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 1
   * 3 Weak Mutation 13: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> -1
   * 4 Weak Mutation 14: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 7
   * 5 Weak Mutation 15: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 9
   * 6 Weak Mutation 17: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getByteArrayLogSize([B)I
   * 7 Weak Mutation 16: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: deletedMainKey[B
   * 8 Weak Mutation 19: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 9 Weak Mutation 18: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 10 Weak Mutation 21: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   * 11 Weak Mutation 20: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 23: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getByteArrayLogSize([B)I
   * 13 Weak Mutation 22: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: deletedDupKey[B
   * 14 Weak Mutation 25: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 15 Weak Mutation 24: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 16 Weak Mutation 27: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 26: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 18 Weak Mutation 29: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getLogSize()I
   * 19 Weak Mutation 28: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 20 Weak Mutation 31: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 30: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 32: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 23 Weak Mutation 33: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   * 24 com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I: root-Branch
   * 25 Weak Mutation 11: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 0
   * 26 Weak Mutation 12: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 1
   * 27 Weak Mutation 13: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> -1
   * 28 Weak Mutation 14: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 7
   * 29 Weak Mutation 15: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceConstant - 8 -> 9
   * 30 Weak Mutation 17: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getByteArrayLogSize([B)I
   * 31 Weak Mutation 16: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: deletedMainKey[B
   * 32 Weak Mutation 19: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 18: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 34 Weak Mutation 21: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   * 35 Weak Mutation 20: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 36 Weak Mutation 23: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getByteArrayLogSize([B)I
   * 37 Weak Mutation 22: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: deletedDupKey[B
   * 38 Weak Mutation 25: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 39 Weak Mutation 24: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 40 Weak Mutation 27: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   * 41 Weak Mutation 26: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 42 Weak Mutation 29: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteStatement: getLogSize()I
   * 43 Weak Mutation 28: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 44 Weak Mutation 31: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> %
   * 45 Weak Mutation 30: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> -
   * 46 Weak Mutation 32: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> /
   * 47 Weak Mutation 33: com.sleepycat.je.tree.INDupDeleteInfo.getLogSize()I:73 - ReplaceArithmeticOperator + -> *
   */
  @Test
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo(1368L, byteArray0, byteArray0, databaseId0);
      int int0 = iNDupDeleteInfo0.getLogSize();
      assertEquals(34, int0);
      assertEquals(1368L, iNDupDeleteInfo0.getDeletedNodeId());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - InsertUnaryOp Negation
   * 2 Weak Mutation 35: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - DeleteField: deletedNodeIdJ
   * 3 Weak Mutation 36: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 4 com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V: root-Branch
   * 5 Weak Mutation 34: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - InsertUnaryOp Negation
   * 6 Weak Mutation 35: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - DeleteField: deletedNodeIdJ
   * 7 Weak Mutation 36: com.sleepycat.je.tree.INDupDeleteInfo.writeToLog(Ljava/nio/ByteBuffer;)V:79 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   */
  @Test
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseId databaseId0 = new DatabaseId((int) (byte) (-30));
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((long) (byte) (-30), byteArray0, byteArray0, databaseId0);
      // Undeclared exception!
      try {
        iNDupDeleteInfo0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 43: com.sleepycat.je.tree.INDupDeleteInfo.readFromLog(Ljava/nio/ByteBuffer;B)V:88 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.readFromLog(Ljava/nio/ByteBuffer;B)V: root-Branch
   * 3 Weak Mutation 43: com.sleepycat.je.tree.INDupDeleteInfo.readFromLog(Ljava/nio/ByteBuffer;B)V:88 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   */
  @Test
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-158L), byteArray0, byteArray0, databaseId0);
      // Undeclared exception!
      try {
        iNDupDeleteInfo0.readFromLog((ByteBuffer) null, (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 11
  /*
   * 45 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - ReplaceConstant - <INDupDeleteEntry node=" -> 
   * 2 Weak Mutation 55: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 54: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteField: deletedNodeIdJ
   * 4 Weak Mutation 53: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - InsertUnaryOp Negation
   * 5 Weak Mutation 52: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 6 Weak Mutation 57: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:98 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 56: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:98 - ReplaceConstant - "> -> 
   * 8 Weak Mutation 59: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 58: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteField: deletedMainKey[B
   * 10 Weak Mutation 61: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 60: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 12 Weak Mutation 63: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 62: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteField: deletedDupKey[B
   * 14 Weak Mutation 64: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 15 Weak Mutation 65: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 68: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp IINC 1 verbose
   * 17 Weak Mutation 69: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp IINC -1 verbose
   * 18 Weak Mutation 70: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 19 Weak Mutation 66: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 20 Weak Mutation 67: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp Negation of verbose
   * 21 Weak Mutation 71: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:102 - ReplaceConstant - </INDupDeleteEntry> -> 
   * 22 Weak Mutation 72: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:102 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 23 com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V: root-Branch
   * 24 Weak Mutation 51: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - ReplaceConstant - <INDupDeleteEntry node=" -> 
   * 25 Weak Mutation 55: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 26 Weak Mutation 54: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteField: deletedNodeIdJ
   * 27 Weak Mutation 53: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - InsertUnaryOp Negation
   * 28 Weak Mutation 52: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:97 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 29 Weak Mutation 59: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 58: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteField: deletedMainKey[B
   * 31 Weak Mutation 57: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:98 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 32 Weak Mutation 56: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:98 - ReplaceConstant - "> -> 
   * 33 Weak Mutation 63: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 62: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteField: deletedDupKey[B
   * 35 Weak Mutation 61: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 36 Weak Mutation 60: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:99 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 37 Weak Mutation 68: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp IINC 1 verbose
   * 38 Weak Mutation 69: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp IINC -1 verbose
   * 39 Weak Mutation 70: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 40 Weak Mutation 71: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:102 - ReplaceConstant - </INDupDeleteEntry> -> 
   * 41 Weak Mutation 64: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 42 Weak Mutation 65: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 43 Weak Mutation 66: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - DeleteField: dbIdLcom/sleepycat/je/dbi/DatabaseId;
   * 44 Weak Mutation 67: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:101 - InsertUnaryOp Negation of verbose
   * 45 Weak Mutation 72: com.sleepycat.je.tree.INDupDeleteInfo.dumpLog(Ljava/lang/StringBuffer;Z)V:102 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1576L), byteArray0, byteArray0, databaseId0);
      StringBuffer stringBuffer0 = new StringBuffer("f9J:N4yq,+:a8(7b");
      iNDupDeleteInfo0.dumpLog(stringBuffer0, false);
      assertEquals(270, stringBuffer0.capacity());
      assertEquals(138, stringBuffer0.length());
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Weak Mutation 73: com.sleepycat.je.tree.INDupDeleteInfo.logEntryIsTransactional()Z:108 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.INDupDeleteInfo.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 73: com.sleepycat.je.tree.INDupDeleteInfo.logEntryIsTransactional()Z:108 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      DatabaseId databaseId0 = new DatabaseId((int) (byte)0);
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-1576L), byteArray0, byteArray0, databaseId0);
      boolean boolean0 = iNDupDeleteInfo0.logEntryIsTransactional();
      assertEquals(false, boolean0);
      assertEquals((-1576L), iNDupDeleteInfo0.getDeletedNodeId());
  }

  //Test case number: 13
  /*
   * 6 covered goals:
   * 1 Weak Mutation 74: com.sleepycat.je.tree.INDupDeleteInfo.getTransactionId()J:114 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 75: com.sleepycat.je.tree.INDupDeleteInfo.getTransactionId()J:114 - ReplaceConstant - 0 -> -1
   * 3 com.sleepycat.je.tree.INDupDeleteInfo.getTransactionId()J: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.tree.INDupDeleteInfo.<init>(J[B[BLcom/sleepycat/je/dbi/DatabaseId;)V:23 - InsertUnaryOp Negation of deletedNodeId
   * 5 Weak Mutation 74: com.sleepycat.je.tree.INDupDeleteInfo.getTransactionId()J:114 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 75: com.sleepycat.je.tree.INDupDeleteInfo.getTransactionId()J:114 - ReplaceConstant - 0 -> -1
   */
  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      DatabaseId databaseId0 = new DatabaseId();
      INDupDeleteInfo iNDupDeleteInfo0 = new INDupDeleteInfo((-50L), byteArray0, byteArray0, databaseId0);
      long long0 = iNDupDeleteInfo0.getTransactionId();
      assertEquals((-50L), iNDupDeleteInfo0.getDeletedNodeId());
      assertEquals(0L, long0);
  }
}
