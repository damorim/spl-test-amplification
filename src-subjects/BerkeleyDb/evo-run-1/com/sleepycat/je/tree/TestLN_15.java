/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.txn.Locker;

@RunWith(EvoSuiteRunner.class)
public class TestLN_15 {


  //Test case number: 15
  /*
   * 17 covered goals:
   * 1 Weak Mutation 179: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:278 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 171: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:271 - DeleteStatement: getLogType()Lcom/sleepycat/je/log/LogEntryType;
   * 3 Weak Mutation 170: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:245 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 169: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;)J:245 - InsertUnaryOp Negation
   * 5 Weak Mutation 175: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:273 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 174: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:272 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 173: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:272 - ReplaceConstant - -1 -> 1
   * 8 Weak Mutation 172: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:272 - ReplaceConstant - -1 -> 0
   * 9 Weak Mutation 186: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:281 - InsertUnaryOp Negation
   * 10 Weak Mutation 187: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:281 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 185: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:281 - InsertUnaryOp Negation
   * 12 Weak Mutation 188: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:281 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 189: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:286 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 14 Weak Mutation 178: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:278 - DeleteStatement: longSub(JJ)I
   * 15 Weak Mutation 176: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:278 - InsertUnaryOp Negation
   * 16 Weak Mutation 177: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:278 - InsertUnaryOp Negation
   * 17 Weak Mutation 179: com.sleepycat.je.tree.LN.log(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DatabaseId;[BJLcom/sleepycat/je/txn/Locker;Z)J:278 - ReplaceComparisonOperator != -> <
   */
  @Test
  public void test15()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN();
      byte[] byteArray0 = new byte[8];
      // Undeclared exception!
      try {
        dupCountLN0.log((EnvironmentImpl) null, (DatabaseId) null, byteArray0, 1889L, (Locker) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
