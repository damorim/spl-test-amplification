/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.DupCountLN;

@RunWith(EvoSuiteRunner.class)
public class TestLN_0 {


  //Test case number: 0
  /*
   * 37 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.tree.LN.copyData()[B:86 - DeleteField: data[B
   * 2 Weak Mutation 50: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp IINC -1
   * 3 Weak Mutation 49: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp IINC 1
   * 4 Weak Mutation 48: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp Negation
   * 5 Weak Mutation 51: com.sleepycat.je.tree.LN.copyData()[B:88 - DeleteField: data[B
   * 6 Weak Mutation 55: com.sleepycat.je.tree.LN.copyData()[B:88 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 7 Weak Mutation 54: com.sleepycat.je.tree.LN.copyData()[B:88 - InsertUnaryOp Negation
   * 8 Weak Mutation 53: com.sleepycat.je.tree.LN.copyData()[B:88 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 52: com.sleepycat.je.tree.LN.copyData()[B:88 - ReplaceConstant - 0 -> 1
   * 10 com.sleepycat.je.tree.LN.copyData()[B: root-Branch
   * 11 Weak Mutation 0: com.sleepycat.je.tree.LN.<init>([B)V:47 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 1: com.sleepycat.je.tree.LN.<init>([B)V:51 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 17: com.sleepycat.je.tree.LN.init([BIIII)V:71 - InsertUnaryOp Negation
   * 14 Weak Mutation 19: com.sleepycat.je.tree.LN.init([BIIII)V:71 - InsertUnaryOp IINC -1
   * 15 Weak Mutation 18: com.sleepycat.je.tree.LN.init([BIIII)V:71 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 23: com.sleepycat.je.tree.LN.init([BIIII)V:72 - DeleteField: ZERO_LENGTH_BYTE_ARRAY[B
   * 17 Weak Mutation 22: com.sleepycat.je.tree.LN.init([BIIII)V:71 - ReplaceComparisonOperator != -> -1
   * 18 Weak Mutation 38: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp Negation
   * 19 Weak Mutation 39: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 42: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 43: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp IINC -1
   * 22 Weak Mutation 40: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 41: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp Negation
   * 24 Weak Mutation 47: com.sleepycat.je.tree.LN.copyData()[B:86 - DeleteField: data[B
   * 25 Weak Mutation 44: com.sleepycat.je.tree.LN.init([BII)V:80 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 45: com.sleepycat.je.tree.LN.init([BII)V:80 - InsertUnaryOp Negation
   * 27 Weak Mutation 51: com.sleepycat.je.tree.LN.copyData()[B:88 - DeleteField: data[B
   * 28 Weak Mutation 50: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp IINC -1
   * 29 Weak Mutation 49: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp IINC 1
   * 30 Weak Mutation 48: com.sleepycat.je.tree.LN.copyData()[B:87 - InsertUnaryOp Negation
   * 31 Weak Mutation 55: com.sleepycat.je.tree.LN.copyData()[B:88 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 32 Weak Mutation 54: com.sleepycat.je.tree.LN.copyData()[B:88 - InsertUnaryOp Negation
   * 33 Weak Mutation 53: com.sleepycat.je.tree.LN.copyData()[B:88 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 52: com.sleepycat.je.tree.LN.copyData()[B:88 - ReplaceConstant - 0 -> 1
   * 35 com.sleepycat.je.tree.LN.init([BII)V: root-Branch
   * 36 com.sleepycat.je.tree.LN.init([BIIII)V: I3 Branch 4 IFNE L71 - false
   * 37 com.sleepycat.je.tree.LN.<init>([B)V: I8 Branch 1 IFNONNULL L47 - true
   */
  @Test
  public void test0()  throws Throwable  {
      DupCountLN dupCountLN0 = new DupCountLN((-1948));
      assertNotNull(dupCountLN0);
      
      dupCountLN0.copyData();
      assertEquals("<com.sleepycat.je.tree.DupCountLN/4294969471", dupCountLN0.shortDescription());
      assertEquals(4294969471L, dupCountLN0.getNodeId());
  }
}
