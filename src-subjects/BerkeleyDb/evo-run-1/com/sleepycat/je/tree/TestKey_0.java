/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.Key;

@RunWith(EvoSuiteRunner.class)
public class TestKey_0 {


  //Test case number: 0
  /*
   * 104 covered goals:
   * 1 Weak Mutation 14: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:53 - ReplaceComparisonOperator != null -> = null
   * 2 Weak Mutation 15: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 3 Weak Mutation 17: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteStatement: compareUnsignedBytes([B[B)I
   * 4 Weak Mutation 16: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 5 Weak Mutation 19: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - DeleteStatement: compareTo(Ljava/lang/Object;)I
   * 6 Weak Mutation 18: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 23: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 22: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 51: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 10 Weak Mutation 55: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 11 Weak Mutation 54: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 12 Weak Mutation 53: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 13 Weak Mutation 52: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 14 Weak Mutation 57: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - DeleteStatement: min(II)I
   * 15 Weak Mutation 56: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 59: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 17 Weak Mutation 58: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 63: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 62: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 20 Weak Mutation 61: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 60: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 64: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 66: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceComparisonOperator >= -> >
   * 24 Weak Mutation 67: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceComparisonOperator >= -> -1
   * 25 Weak Mutation 68: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp Negation
   * 26 Weak Mutation 69: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC 1
   * 27 Weak Mutation 70: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC -1
   * 28 Weak Mutation 71: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp Negation
   * 29 Weak Mutation 72: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC 1
   * 30 Weak Mutation 73: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC -1
   * 31 Weak Mutation 76: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 77: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 33 Weak Mutation 78: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 34 Weak Mutation 79: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 74: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 36 Weak Mutation 75: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 37 Weak Mutation 82: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> -1
   * 38 Weak Mutation 110: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp Negation
   * 39 Weak Mutation 111: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC 1
   * 40 Weak Mutation 108: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC 1
   * 41 Weak Mutation 109: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC -1
   * 42 Weak Mutation 107: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp Negation
   * 43 Weak Mutation 116: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> *
   * 44 Weak Mutation 115: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> /
   * 45 Weak Mutation 113: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> +
   * 46 Weak Mutation 112: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC -1
   * 47 com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I: I3 Branch 3 IFNONNULL L53 - true
   * 48 com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z: I4 Branch 4 IFEQ L63 - false
   * 49 com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z: I8 Branch 5 IFNE L63 - false
   * 50 com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I: I23 Branch 8 IF_ICMPGE L93 - true
   * 51 com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I: I23 Branch 8 IF_ICMPGE L93 - false
   * 52 com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I: I40 Branch 9 IF_ICMPNE L96 - false
   * 53 Weak Mutation 0: com.sleepycat.je.tree.Key.<init>([B)V:21 - ReplaceComparisonOperator != null -> = null
   * 54 Weak Mutation 1: com.sleepycat.je.tree.Key.<init>([B)V:26 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 2: com.sleepycat.je.tree.Key.<init>([B)V:26 - DeleteField: key[B
   * 56 Weak Mutation 3: com.sleepycat.je.tree.Key.<init>([B)V:26 - ReplaceConstant - 0 -> 1
   * 57 Weak Mutation 4: com.sleepycat.je.tree.Key.<init>([B)V:26 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 58 Weak Mutation 14: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:53 - ReplaceComparisonOperator != null -> = null
   * 59 Weak Mutation 15: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 60 Weak Mutation 17: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteStatement: compareUnsignedBytes([B[B)I
   * 61 Weak Mutation 16: com.sleepycat.je.tree.Key.compareTo(Ljava/lang/Object;)I:57 - DeleteField: key[B
   * 62 Weak Mutation 19: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - DeleteStatement: compareTo(Ljava/lang/Object;)I
   * 63 Weak Mutation 18: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator == -> !=
   * 64 Weak Mutation 23: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceConstant - 1 -> 0
   * 65 Weak Mutation 22: com.sleepycat.je.tree.Key.equals(Ljava/lang/Object;)Z:63 - ReplaceComparisonOperator != -> -1
   * 66 Weak Mutation 51: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 67 Weak Mutation 55: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 68 Weak Mutation 54: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 69 Weak Mutation 53: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 70 Weak Mutation 52: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 71 Weak Mutation 59: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 72 Weak Mutation 58: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceConstant - 0 -> 1
   * 73 Weak Mutation 57: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - DeleteStatement: min(II)I
   * 74 Weak Mutation 56: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 75 Weak Mutation 63: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 76 Weak Mutation 62: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 77 Weak Mutation 61: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 78 Weak Mutation 60: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 79 Weak Mutation 68: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp Negation
   * 80 Weak Mutation 69: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC 1
   * 81 Weak Mutation 70: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC -1
   * 82 Weak Mutation 71: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp Negation
   * 83 Weak Mutation 64: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 84 Weak Mutation 66: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceComparisonOperator >= -> >
   * 85 Weak Mutation 67: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceComparisonOperator >= -> -1
   * 86 Weak Mutation 76: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 87 Weak Mutation 77: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 88 Weak Mutation 78: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 89 Weak Mutation 79: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 90 Weak Mutation 72: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC 1
   * 91 Weak Mutation 73: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC -1
   * 92 Weak Mutation 74: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 93 Weak Mutation 75: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 94 Weak Mutation 82: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> -1
   * 95 Weak Mutation 110: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp Negation
   * 96 Weak Mutation 111: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC 1
   * 97 Weak Mutation 108: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC 1
   * 98 Weak Mutation 109: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC -1
   * 99 Weak Mutation 107: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp Negation
   * 100 Weak Mutation 116: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> *
   * 101 Weak Mutation 115: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> /
   * 102 Weak Mutation 113: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - ReplaceArithmeticOperator - -> +
   * 103 Weak Mutation 112: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:103 - InsertUnaryOp IINC -1
   * 104 com.sleepycat.je.tree.Key.<init>([B)V: I7 Branch 1 IFNONNULL L21 - true
   */
  @Test
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      Key key0 = new Key(byteArray0);
      assertNotNull(key0);
      
      boolean boolean0 = key0.equals((Object) key0);
      assertEquals(true, boolean0);
  }
}
