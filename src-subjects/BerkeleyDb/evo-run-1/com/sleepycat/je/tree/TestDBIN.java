/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestDBIN {


  //Test case number: 0
  /*
   * 28 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.tree.DBIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BI)V:34 - ReplaceVariable dupKey -> identifierKey
   * 2 Weak Mutation 29: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAX_LEVEL
   * 3 Weak Mutation 31: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MIN_LEVEL
   * 4 Weak Mutation 30: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> ACCUMULATED_LIMIT
   * 5 Weak Mutation 34: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> INSERT_SUCCESS
   * 6 Weak Mutation 35: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> DBMAP_LEVEL
   * 7 Weak Mutation 32: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAIN_LEVEL
   * 8 Weak Mutation 33: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> LEVEL_MASK
   * 9 Weak Mutation 38: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp Negation of newLevel
   * 10 Weak Mutation 39: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC 1 newLevel
   * 11 Weak Mutation 36: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> BIN_LEVEL
   * 12 Weak Mutation 37: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> EXACT_MATCH
   * 13 Weak Mutation 40: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC -1 newLevel
   * 14 com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I: root-Branch
   * 15 com.sleepycat.je.tree.DBIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BI)V: root-Branch
   * 16 Weak Mutation 0: com.sleepycat.je.tree.DBIN.<init>(Lcom/sleepycat/je/dbi/DatabaseImpl;[BI[BI)V:34 - ReplaceVariable dupKey -> identifierKey
   * 17 Weak Mutation 29: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAX_LEVEL
   * 18 Weak Mutation 31: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MIN_LEVEL
   * 19 Weak Mutation 30: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> ACCUMULATED_LIMIT
   * 20 Weak Mutation 34: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> INSERT_SUCCESS
   * 21 Weak Mutation 35: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> DBMAP_LEVEL
   * 22 Weak Mutation 32: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAIN_LEVEL
   * 23 Weak Mutation 33: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> LEVEL_MASK
   * 24 Weak Mutation 38: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp Negation of newLevel
   * 25 Weak Mutation 39: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC 1 newLevel
   * 26 Weak Mutation 36: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> BIN_LEVEL
   * 27 Weak Mutation 37: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> EXACT_MATCH
   * 28 Weak Mutation 40: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC -1 newLevel
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = new byte[8];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, 2046, byteArray1, (int) (byte)0);
      assertEquals(4294971569L, databaseImpl0.getEofNodeId());
      assertEquals(4294971571L, dBIN0.getLastId());
  }

  //Test case number: 1
  /*
   * 57 covered goals:
   * 1 Weak Mutation 1: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 2: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 3 Weak Mutation 3: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 4 Weak Mutation 4: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> level
   * 5 Weak Mutation 5: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 6 Weak Mutation 6: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 7 Weak Mutation 7: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 8 Weak Mutation 8: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 9 Weak Mutation 9: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 10 Weak Mutation 10: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 11 Weak Mutation 11: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 12 Weak Mutation 12: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp Negation of maxEntries
   * 13 Weak Mutation 13: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC 1 maxEntries
   * 14 Weak Mutation 14: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC -1 maxEntries
   * 15 Weak Mutation 15: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - DeleteField: dupKey[B
   * 16 Weak Mutation 17: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 17 Weak Mutation 16: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MAX_LEVEL
   * 18 Weak Mutation 19: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MAIN_LEVEL
   * 19 Weak Mutation 18: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MIN_LEVEL
   * 20 Weak Mutation 21: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> INSERT_SUCCESS
   * 21 Weak Mutation 20: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> LEVEL_MASK
   * 22 Weak Mutation 23: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> BIN_LEVEL
   * 23 Weak Mutation 22: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> DBMAP_LEVEL
   * 24 Weak Mutation 25: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> maxEntries
   * 25 Weak Mutation 24: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> EXACT_MATCH
   * 26 Weak Mutation 27: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC 1 level
   * 27 Weak Mutation 26: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp Negation of level
   * 28 Weak Mutation 28: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC -1 level
   * 29 com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;: root-Branch
   * 30 Weak Mutation 1: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 31 Weak Mutation 2: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MAX_LEVEL
   * 32 Weak Mutation 3: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> ACCUMULATED_LIMIT
   * 33 Weak Mutation 4: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> level
   * 34 Weak Mutation 5: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MIN_LEVEL
   * 35 Weak Mutation 6: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> MAIN_LEVEL
   * 36 Weak Mutation 7: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> LEVEL_MASK
   * 37 Weak Mutation 8: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> INSERT_SUCCESS
   * 38 Weak Mutation 9: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> DBMAP_LEVEL
   * 39 Weak Mutation 10: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> BIN_LEVEL
   * 40 Weak Mutation 11: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable maxEntries -> EXACT_MATCH
   * 41 Weak Mutation 12: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp Negation of maxEntries
   * 42 Weak Mutation 13: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC 1 maxEntries
   * 43 Weak Mutation 14: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC -1 maxEntries
   * 44 Weak Mutation 15: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - DeleteField: dupKey[B
   * 45 Weak Mutation 17: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> ACCUMULATED_LIMIT
   * 46 Weak Mutation 16: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MAX_LEVEL
   * 47 Weak Mutation 19: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MAIN_LEVEL
   * 48 Weak Mutation 18: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> MIN_LEVEL
   * 49 Weak Mutation 21: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> INSERT_SUCCESS
   * 50 Weak Mutation 20: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> LEVEL_MASK
   * 51 Weak Mutation 23: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> BIN_LEVEL
   * 52 Weak Mutation 22: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> DBMAP_LEVEL
   * 53 Weak Mutation 25: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> maxEntries
   * 54 Weak Mutation 24: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - ReplaceVariable level -> EXACT_MATCH
   * 55 Weak Mutation 27: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC 1 level
   * 56 Weak Mutation 26: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp Negation of level
   * 57 Weak Mutation 28: com.sleepycat.je.tree.DBIN.createNewInstance([BII)Lcom/sleepycat/je/tree/IN;:43 - InsertUnaryOp IINC -1 level
   */
  @Test
  public void test1()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[2];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)0, byteArray0, 1171);
      dBIN0.createNewInstance(byteArray0, 1171, 0);
      assertEquals(4294971611L, databaseImpl0.getEofNodeId());
      assertEquals("<dbin>\n  <dupkey><key v=\"0 0 \"/></dupkey>\n  <node>4294971612</node>\n  <idkey><key v=\"0 0 \"/></idkey>\n  <dirty val=\"false\"/>\n  <generation val=\"0\"/>\n  <level val=\"493\"/>\n  <isRoot val=\"false\"/>\n  <entries nEntries=\"0\">\n  </entries>\n</dbin>", dBIN0.toString());
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * 1 Weak Mutation 42: com.sleepycat.je.tree.DBIN.getKeyComparator()Ljava/util/Comparator;:55 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 2 Weak Mutation 41: com.sleepycat.je.tree.DBIN.getKeyComparator()Ljava/util/Comparator;:55 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 3 com.sleepycat.je.tree.DBIN.<init>()V: root-Branch
   * 4 com.sleepycat.je.tree.DBIN.getKeyComparator()Ljava/util/Comparator;: root-Branch
   * 5 Weak Mutation 42: com.sleepycat.je.tree.DBIN.getKeyComparator()Ljava/util/Comparator;:55 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 6 Weak Mutation 41: com.sleepycat.je.tree.DBIN.getKeyComparator()Ljava/util/Comparator;:55 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   */
  @Test
  public void test2()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.getKeyComparator();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 44: com.sleepycat.je.tree.DBIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:70 - DeleteStatement: getIdentifierKey()[B
   * 2 com.sleepycat.je.tree.DBIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B: root-Branch
   * 3 Weak Mutation 44: com.sleepycat.je.tree.DBIN.getChildKey(Lcom/sleepycat/je/tree/IN;)[B:70 - DeleteStatement: getIdentifierKey()[B
   */
  @Test
  public void test3()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = dBIN0.getChildKey((IN) dBIN0);
      assertNotNull(byteArray0);
      assertEquals(4294971866L, dBIN0.getNextNodeId());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 45: com.sleepycat.je.tree.DBIN.selectKey([B[B)[B:74 - ReplaceVariable dupTreeKey -> mainTreeKey
   * 2 com.sleepycat.je.tree.DBIN.selectKey([B[B)[B: root-Branch
   * 3 Weak Mutation 45: com.sleepycat.je.tree.DBIN.selectKey([B[B)[B:74 - ReplaceVariable dupTreeKey -> mainTreeKey
   */
  @Test
  public void test4()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = new byte[3];
      byte[] byteArray2 = dBIN0.selectKey(byteArray0, byteArray1);
      assertEquals(4294971870L, dBIN0.getNextNodeId());
      assertSame(byteArray1, byteArray2);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.tree.DBIN.getDupTreeKey()[B:81 - DeleteStatement: getIdentifierKey()[B
   * 2 com.sleepycat.je.tree.DBIN.getDupTreeKey()[B: root-Branch
   * 3 Weak Mutation 46: com.sleepycat.je.tree.DBIN.getDupTreeKey()[B:81 - DeleteStatement: getIdentifierKey()[B
   */
  @Test
  public void test5()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      byte[] byteArray0 = dBIN0.getDupTreeKey();
      assertNotNull(byteArray0);
      assertEquals(4294971874L, dBIN0.getLastId());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.tree.DBIN.getMainTreeKey()[B:88 - DeleteField: dupKey[B
   * 2 com.sleepycat.je.tree.DBIN.getMainTreeKey()[B: root-Branch
   * 3 Weak Mutation 47: com.sleepycat.je.tree.DBIN.getMainTreeKey()[B:88 - DeleteField: dupKey[B
   */
  @Test
  public void test6()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[8];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)25, byteArray0, (int) (byte)25);
      dBIN0.getMainTreeKey();
      assertEquals(4294971877L, databaseImpl0.getEofNodeId());
      assertEquals(4294971880L, dBIN0.getNextNodeId());
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Weak Mutation 48: com.sleepycat.je.tree.DBIN.containsDuplicates()Z:96 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.tree.DBIN.containsDuplicates()Z: root-Branch
   * 3 Weak Mutation 48: com.sleepycat.je.tree.DBIN.containsDuplicates()Z:96 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test7()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      boolean boolean0 = dBIN0.containsDuplicates();
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * 1 Weak Mutation 49: com.sleepycat.je.tree.DBIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;:103 - DeleteField: LOG_DUP_BIN_DELTALcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.DBIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 49: com.sleepycat.je.tree.DBIN.getBINDeltaType()Lcom/sleepycat/je/log/LogEntryType;:103 - DeleteField: LOG_DUP_BIN_DELTALcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test8()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      LogEntryType logEntryType0 = dBIN0.getBINDeltaType();
      assertNotNull(logEntryType0);
      assertEquals(4294971942L, dBIN0.getLastId());
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 50: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getNodeId()J
   * 3 Weak Mutation 52: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   * 4 com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;: root-Branch
   * 5 Weak Mutation 51: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getDatabase()Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 6 Weak Mutation 50: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getNodeId()J
   * 7 Weak Mutation 52: com.sleepycat.je.tree.DBIN.createReference()Lcom/sleepycat/je/tree/BINReference;:107 - DeleteStatement: getId()Lcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test9()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.createReference();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 55: com.sleepycat.je.tree.DBIN.canBeAncestor(Z)Z:136 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.DBIN.canBeAncestor(Z)Z: root-Branch
   * 3 Weak Mutation 55: com.sleepycat.je.tree.DBIN.canBeAncestor(Z)Z:136 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test10()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      boolean boolean0 = dBIN0.canBeAncestor(false);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 Weak Mutation 56: com.sleepycat.je.tree.DBIN.hasNonLNChildren()Z:143 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.tree.DBIN.hasNonLNChildren()Z: root-Branch
   * 3 Weak Mutation 56: com.sleepycat.je.tree.DBIN.hasNonLNChildren()Z:143 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test11()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      boolean boolean0 = dBIN0.hasNonLNChildren();
      assertEquals(false, boolean0);
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * 1 Weak Mutation 57: com.sleepycat.je.tree.DBIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:153 - DeleteStatement: getDupBIN()Lcom/sleepycat/je/tree/DBIN;
   * 2 com.sleepycat.je.tree.DBIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;: root-Branch
   * 3 Weak Mutation 57: com.sleepycat.je.tree.DBIN.getCursorBIN(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:153 - DeleteStatement: getDupBIN()Lcom/sleepycat/je/tree/DBIN;
   */
  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[2];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, 0, byteArray0, (int) (byte) (-78));
      // Undeclared exception!
      try {
        dBIN0.getCursorBIN((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * 1 Weak Mutation 58: com.sleepycat.je.tree.DBIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:157 - DeleteStatement: getDupBINToBeRemoved()Lcom/sleepycat/je/tree/DBIN;
   * 2 com.sleepycat.je.tree.DBIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;: root-Branch
   * 3 Weak Mutation 58: com.sleepycat.je.tree.DBIN.getCursorBINToBeRemoved(Lcom/sleepycat/je/dbi/CursorImpl;)Lcom/sleepycat/je/tree/BIN;:157 - DeleteStatement: getDupBINToBeRemoved()Lcom/sleepycat/je/tree/DBIN;
   */
  @Test
  public void test13()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.getCursorBINToBeRemoved((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.tree.DBIN.getCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;)I:161 - DeleteStatement: getDupIndex()I
   * 2 com.sleepycat.je.tree.DBIN.getCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;)I: root-Branch
   * 3 Weak Mutation 59: com.sleepycat.je.tree.DBIN.getCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;)I:161 - DeleteStatement: getDupIndex()I
   */
  @Test
  public void test14()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.getCursorIndex((CursorImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 15
  /*
   * 25 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MIN_LEVEL
   * 2 Weak Mutation 61: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MAX_LEVEL
   * 3 Weak Mutation 68: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> BIN_LEVEL
   * 4 Weak Mutation 69: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> EXACT_MATCH
   * 5 Weak Mutation 70: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp Negation of index
   * 6 Weak Mutation 71: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp IINC 1 index
   * 7 Weak Mutation 64: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MAIN_LEVEL
   * 8 Weak Mutation 65: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> LEVEL_MASK
   * 9 Weak Mutation 66: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> INSERT_SUCCESS
   * 10 Weak Mutation 67: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> DBMAP_LEVEL
   * 11 Weak Mutation 72: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp IINC -1 index
   * 12 Weak Mutation 73: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - DeleteStatement: setDupIndex(I)V
   * 13 com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V: root-Branch
   * 14 Weak Mutation 63: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MIN_LEVEL
   * 15 Weak Mutation 61: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MAX_LEVEL
   * 16 Weak Mutation 68: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> BIN_LEVEL
   * 17 Weak Mutation 69: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> EXACT_MATCH
   * 18 Weak Mutation 70: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp Negation of index
   * 19 Weak Mutation 71: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp IINC 1 index
   * 20 Weak Mutation 64: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> MAIN_LEVEL
   * 21 Weak Mutation 65: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> LEVEL_MASK
   * 22 Weak Mutation 66: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> INSERT_SUCCESS
   * 23 Weak Mutation 67: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - ReplaceVariable index -> DBMAP_LEVEL
   * 24 Weak Mutation 72: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - InsertUnaryOp IINC -1 index
   * 25 Weak Mutation 73: com.sleepycat.je.tree.DBIN.setCursorIndex(Lcom/sleepycat/je/dbi/CursorImpl;I)V:169 - DeleteStatement: setDupIndex(I)V
   */
  @Test
  public void test15()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      Txn txn0 = new Txn();
      CursorImpl cursorImpl0 = new CursorImpl((DatabaseImpl) null, (Locker) txn0, false);
      dBIN0.setCursorIndex(cursorImpl0, 77);
      assertEquals(77, cursorImpl0.getDupIndex());
      assertEquals(4294972030L, dBIN0.getNextNodeId());
  }

  //Test case number: 16
  /*
   * 33 covered goals:
   * 1 Weak Mutation 74: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 137: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MAIN_LEVEL
   * 3 Weak Mutation 136: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MIN_LEVEL
   * 4 Weak Mutation 139: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> INSERT_SUCCESS
   * 5 Weak Mutation 138: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> LEVEL_MASK
   * 6 Weak Mutation 141: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> BIN_LEVEL
   * 7 Weak Mutation 140: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> DBMAP_LEVEL
   * 8 Weak Mutation 143: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp Negation of i
   * 9 Weak Mutation 142: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> EXACT_MATCH
   * 10 Weak Mutation 135: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 11 Weak Mutation 134: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MAX_LEVEL
   * 12 Weak Mutation 144: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 145: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp IINC -1 i
   * 14 Weak Mutation 146: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - DeleteStatement: getNEntries()I
   * 15 Weak Mutation 149: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceComparisonOperator < -> <=
   * 16 Weak Mutation 150: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:186 - ReplaceConstant - 0 -> 1
   * 17 com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z: I59 Branch 3 IF_ICMPLT L174 - false
   * 18 Weak Mutation 74: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceConstant - 0 -> 1
   * 19 Weak Mutation 137: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MAIN_LEVEL
   * 20 Weak Mutation 136: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MIN_LEVEL
   * 21 Weak Mutation 139: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> INSERT_SUCCESS
   * 22 Weak Mutation 138: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> LEVEL_MASK
   * 23 Weak Mutation 141: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> BIN_LEVEL
   * 24 Weak Mutation 140: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> DBMAP_LEVEL
   * 25 Weak Mutation 143: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp Negation of i
   * 26 Weak Mutation 142: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> EXACT_MATCH
   * 27 Weak Mutation 135: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> ACCUMULATED_LIMIT
   * 28 Weak Mutation 134: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceVariable i -> MAX_LEVEL
   * 29 Weak Mutation 144: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp IINC 1 i
   * 30 Weak Mutation 145: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - InsertUnaryOp IINC -1 i
   * 31 Weak Mutation 146: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - DeleteStatement: getNEntries()I
   * 32 Weak Mutation 149: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:174 - ReplaceComparisonOperator < -> <=
   * 33 Weak Mutation 150: com.sleepycat.je.tree.DBIN.matchLNByNodeId(Lcom/sleepycat/je/tree/TreeLocation;J)Z:186 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test16()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      TreeLocation treeLocation0 = new TreeLocation();
      boolean boolean0 = dBIN0.matchLNByNodeId(treeLocation0, (long) 60);
      assertEquals(4294972058L, dBIN0.getNextNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 17
  /*
   * 7 covered goals:
   * 1 Weak Mutation 152: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: getLevel()I
   * 2 Weak Mutation 153: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: processDBIN(Lcom/sleepycat/je/tree/DBIN;Ljava/lang/Long;I)V
   * 3 Weak Mutation 151: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: getNodeId()J
   * 4 com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V: root-Branch
   * 5 Weak Mutation 152: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: getLevel()I
   * 6 Weak Mutation 153: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: processDBIN(Lcom/sleepycat/je/tree/DBIN;Ljava/lang/Long;I)V
   * 7 Weak Mutation 151: com.sleepycat.je.tree.DBIN.accumulateStats(Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;)V:190 - DeleteStatement: getNodeId()J
   */
  @Test
  public void test17()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.accumulateStats((TreeWalkerStatsAccumulator) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 181 covered goals:
   * 1 Weak Mutation 205: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 204: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteField: dupKey[B
   * 3 Weak Mutation 206: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 4 Weak Mutation 202: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteField: dupKey[B
   * 5 com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;: I46 Branch 4 IFNONNULL L213 - true
   * 6 Weak Mutation 156: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 7 Weak Mutation 157: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 8 Weak Mutation 158: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 9 Weak Mutation 159: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 10 Weak Mutation 171: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:209 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 170: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:209 - DeleteStatement: beginTag()Ljava/lang/String;
   * 12 Weak Mutation 169: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 168: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - DeleteStatement: indent(I)Ljava/lang/String;
   * 14 Weak Mutation 175: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 9
   * 15 Weak Mutation 174: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> -1
   * 16 Weak Mutation 173: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 1
   * 17 Weak Mutation 172: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 0
   * 18 Weak Mutation 163: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 19 Weak Mutation 162: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 20 Weak Mutation 161: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 21 Weak Mutation 160: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 22 Weak Mutation 167: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp IINC -1 nSpaces
   * 23 Weak Mutation 166: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp IINC 1 nSpaces
   * 24 Weak Mutation 165: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp Negation of nSpaces
   * 25 Weak Mutation 164: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 26 Weak Mutation 186: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 27 Weak Mutation 187: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp Negation of nSpaces
   * 28 Weak Mutation 184: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 29 Weak Mutation 185: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 30 Weak Mutation 190: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 0
   * 31 Weak Mutation 191: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 1
   * 32 Weak Mutation 188: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp IINC 1 nSpaces
   * 33 Weak Mutation 189: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp IINC -1 nSpaces
   * 34 Weak Mutation 178: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 35 Weak Mutation 179: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 36 Weak Mutation 176: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 11
   * 37 Weak Mutation 177: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 38 Weak Mutation 182: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 39 Weak Mutation 183: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 40 Weak Mutation 180: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 41 Weak Mutation 181: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 42 Weak Mutation 207: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 43 Weak Mutation 201: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:212 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 200: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:212 - ReplaceConstant - <dupkey> -> 
   * 45 Weak Mutation 203: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - ReplaceComparisonOperator != null -> = null
   * 46 Weak Mutation 197: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> *
   * 47 Weak Mutation 196: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> /
   * 48 Weak Mutation 199: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 49 Weak Mutation 198: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - DeleteStatement: indent(I)Ljava/lang/String;
   * 50 Weak Mutation 193: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 3
   * 51 Weak Mutation 192: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> -1
   * 52 Weak Mutation 195: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> %
   * 53 Weak Mutation 194: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> -
   * 54 Weak Mutation 220: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 55 Weak Mutation 221: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 56 Weak Mutation 222: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 57 Weak Mutation 223: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 58 Weak Mutation 216: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 59 Weak Mutation 217: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 60 Weak Mutation 218: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 61 Weak Mutation 219: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 62 Weak Mutation 212: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> -1
   * 63 Weak Mutation 213: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 9
   * 64 Weak Mutation 214: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 11
   * 65 Weak Mutation 215: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 66 Weak Mutation 208: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:214 - ReplaceConstant - </dupkey> -> 
   * 67 Weak Mutation 209: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:214 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 68 Weak Mutation 210: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 0
   * 69 Weak Mutation 211: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 1
   * 70 Weak Mutation 239: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp Negation of nSpaces
   * 71 Weak Mutation 238: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 72 Weak Mutation 237: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 73 Weak Mutation 236: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 74 Weak Mutation 235: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 75 Weak Mutation 234: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 76 Weak Mutation 233: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 77 Weak Mutation 232: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 78 Weak Mutation 231: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 79 Weak Mutation 230: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 80 Weak Mutation 229: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 81 Weak Mutation 228: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceConstant - 0 -> 1
   * 82 Weak Mutation 227: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp IINC -1 nSpaces
   * 83 Weak Mutation 226: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp IINC 1 nSpaces
   * 84 Weak Mutation 225: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp Negation of nSpaces
   * 85 Weak Mutation 224: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 86 Weak Mutation 242: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - DeleteStatement: indent(I)Ljava/lang/String;
   * 87 Weak Mutation 243: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 88 Weak Mutation 240: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp IINC 1 nSpaces
   * 89 Weak Mutation 241: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp IINC -1 nSpaces
   * 90 Weak Mutation 154: com.sleepycat.je.tree.DBIN.beginTag()Ljava/lang/String;:194 - ReplaceConstant - <dbin> -> 
   * 91 Weak Mutation 155: com.sleepycat.je.tree.DBIN.endTag()Ljava/lang/String;:198 - ReplaceConstant - </dbin> -> 
   * 92 Weak Mutation 156: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 93 Weak Mutation 157: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 94 Weak Mutation 158: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 95 Weak Mutation 159: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 96 Weak Mutation 171: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:209 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 97 Weak Mutation 170: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:209 - DeleteStatement: beginTag()Ljava/lang/String;
   * 98 Weak Mutation 169: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 99 Weak Mutation 168: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - DeleteStatement: indent(I)Ljava/lang/String;
   * 100 Weak Mutation 175: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 9
   * 101 Weak Mutation 174: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> -1
   * 102 Weak Mutation 173: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 1
   * 103 Weak Mutation 172: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 0
   * 104 Weak Mutation 163: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 105 Weak Mutation 162: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 106 Weak Mutation 161: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 107 Weak Mutation 160: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 108 Weak Mutation 167: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp IINC -1 nSpaces
   * 109 Weak Mutation 166: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp IINC 1 nSpaces
   * 110 Weak Mutation 165: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - InsertUnaryOp Negation of nSpaces
   * 111 Weak Mutation 164: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:208 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 112 Weak Mutation 186: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 113 Weak Mutation 187: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp Negation of nSpaces
   * 114 Weak Mutation 184: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 115 Weak Mutation 185: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 116 Weak Mutation 190: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 0
   * 117 Weak Mutation 191: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 1
   * 118 Weak Mutation 188: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp IINC 1 nSpaces
   * 119 Weak Mutation 189: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - InsertUnaryOp IINC -1 nSpaces
   * 120 Weak Mutation 178: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 121 Weak Mutation 179: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 122 Weak Mutation 176: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - ReplaceConstant - 10 -> 11
   * 123 Weak Mutation 177: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:210 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 124 Weak Mutation 182: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 125 Weak Mutation 183: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 126 Weak Mutation 180: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 127 Weak Mutation 181: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 128 Weak Mutation 205: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - ReplaceConstant - 0 -> 1
   * 129 Weak Mutation 204: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteField: dupKey[B
   * 130 Weak Mutation 207: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 131 Weak Mutation 206: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 132 Weak Mutation 201: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:212 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 133 Weak Mutation 200: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:212 - ReplaceConstant - <dupkey> -> 
   * 134 Weak Mutation 203: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - ReplaceComparisonOperator != null -> = null
   * 135 Weak Mutation 202: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:213 - DeleteField: dupKey[B
   * 136 Weak Mutation 197: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> *
   * 137 Weak Mutation 196: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> /
   * 138 Weak Mutation 199: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 139 Weak Mutation 198: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - DeleteStatement: indent(I)Ljava/lang/String;
   * 140 Weak Mutation 193: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> 3
   * 141 Weak Mutation 192: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceConstant - 2 -> -1
   * 142 Weak Mutation 195: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> %
   * 143 Weak Mutation 194: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:211 - ReplaceArithmeticOperator + -> -
   * 144 Weak Mutation 220: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 145 Weak Mutation 221: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 146 Weak Mutation 222: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 147 Weak Mutation 223: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 148 Weak Mutation 216: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 149 Weak Mutation 217: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 150 Weak Mutation 218: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 151 Weak Mutation 219: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 152 Weak Mutation 212: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> -1
   * 153 Weak Mutation 213: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 9
   * 154 Weak Mutation 214: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 11
   * 155 Weak Mutation 215: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 156 Weak Mutation 208: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:214 - ReplaceConstant - </dupkey> -> 
   * 157 Weak Mutation 209: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:214 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 158 Weak Mutation 210: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 0
   * 159 Weak Mutation 211: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:215 - ReplaceConstant - 10 -> 1
   * 160 Weak Mutation 239: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp Negation of nSpaces
   * 161 Weak Mutation 238: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 162 Weak Mutation 237: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> BIN_LEVEL
   * 163 Weak Mutation 236: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> DBMAP_LEVEL
   * 164 Weak Mutation 235: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> INSERT_SUCCESS
   * 165 Weak Mutation 234: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> LEVEL_MASK
   * 166 Weak Mutation 233: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MAIN_LEVEL
   * 167 Weak Mutation 232: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MIN_LEVEL
   * 168 Weak Mutation 231: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> ACCUMULATED_LIMIT
   * 169 Weak Mutation 230: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - ReplaceVariable nSpaces -> MAX_LEVEL
   * 170 Weak Mutation 229: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 171 Weak Mutation 228: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceConstant - 0 -> 1
   * 172 Weak Mutation 227: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp IINC -1 nSpaces
   * 173 Weak Mutation 226: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp IINC 1 nSpaces
   * 174 Weak Mutation 225: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - InsertUnaryOp Negation of nSpaces
   * 175 Weak Mutation 224: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:216 - ReplaceVariable nSpaces -> EXACT_MATCH
   * 176 Weak Mutation 242: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - DeleteStatement: indent(I)Ljava/lang/String;
   * 177 Weak Mutation 243: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 178 Weak Mutation 240: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp IINC 1 nSpaces
   * 179 Weak Mutation 241: com.sleepycat.je.tree.DBIN.dumpString(IZ)Ljava/lang/String;:217 - InsertUnaryOp IINC -1 nSpaces
   * 180 com.sleepycat.je.tree.DBIN.beginTag()Ljava/lang/String;: root-Branch
   * 181 com.sleepycat.je.tree.DBIN.endTag()Ljava/lang/String;: root-Branch
   */
  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[9];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, 0, byteArray0, 0);
      dBIN0.dump((int) (byte)18);
      assertEquals(4294972103L, databaseImpl0.getEofNodeId());
      assertEquals(4294972106L, dBIN0.getLastId());
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * 1 Weak Mutation 244: com.sleepycat.je.tree.DBIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:226 - DeleteField: LOG_DBINLcom/sleepycat/je/log/LogEntryType;
   * 2 com.sleepycat.je.tree.DBIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;: root-Branch
   * 3 Weak Mutation 244: com.sleepycat.je.tree.DBIN.getLogType()Lcom/sleepycat/je/log/LogEntryType;:226 - DeleteField: LOG_DBINLcom/sleepycat/je/log/LogEntryType;
   */
  @Test
  public void test19()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      LogEntryType logEntryType0 = dBIN0.getLogType();
      assertNotNull(logEntryType0);
      assertEquals(4294972508L, dBIN0.getNextNodeId());
  }

  //Test case number: 20
  /*
   * 61 covered goals:
   * 1 Weak Mutation 259: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 257: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - DeleteField: dupKey[B
   * 3 Weak Mutation 262: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> *
   * 4 Weak Mutation 260: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> %
   * 5 Weak Mutation 261: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> /
   * 6 Weak Mutation 274: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp IINC -1 size
   * 7 Weak Mutation 273: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp IINC 1 size
   * 8 Weak Mutation 272: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp Negation of size
   * 9 Weak Mutation 263: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MAX_LEVEL
   * 10 Weak Mutation 266: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MAIN_LEVEL
   * 11 Weak Mutation 267: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> LEVEL_MASK
   * 12 Weak Mutation 264: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 13 Weak Mutation 265: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MIN_LEVEL
   * 14 Weak Mutation 270: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> BIN_LEVEL
   * 15 Weak Mutation 271: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> EXACT_MATCH
   * 16 Weak Mutation 268: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> INSERT_SUCCESS
   * 17 Weak Mutation 269: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> DBMAP_LEVEL
   * 18 Weak Mutation 254: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp Negation of size
   * 19 Weak Mutation 255: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp IINC 1 size
   * 20 Weak Mutation 252: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> BIN_LEVEL
   * 21 Weak Mutation 253: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> EXACT_MATCH
   * 22 Weak Mutation 250: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> INSERT_SUCCESS
   * 23 Weak Mutation 251: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> DBMAP_LEVEL
   * 24 Weak Mutation 248: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MAIN_LEVEL
   * 25 Weak Mutation 249: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> LEVEL_MASK
   * 26 Weak Mutation 246: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 27 Weak Mutation 247: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MIN_LEVEL
   * 28 Weak Mutation 245: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MAX_LEVEL
   * 29 Weak Mutation 258: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - DeleteStatement: getByteArrayLogSize([B)I
   * 30 Weak Mutation 256: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp IINC -1 size
   * 31 Weak Mutation 254: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp Negation of size
   * 32 Weak Mutation 255: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp IINC 1 size
   * 33 Weak Mutation 252: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> BIN_LEVEL
   * 34 Weak Mutation 253: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> EXACT_MATCH
   * 35 Weak Mutation 250: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> INSERT_SUCCESS
   * 36 Weak Mutation 251: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> DBMAP_LEVEL
   * 37 Weak Mutation 248: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MAIN_LEVEL
   * 38 Weak Mutation 249: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> LEVEL_MASK
   * 39 Weak Mutation 246: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 40 Weak Mutation 247: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MIN_LEVEL
   * 41 Weak Mutation 245: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceVariable size -> MAX_LEVEL
   * 42 Weak Mutation 274: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp IINC -1 size
   * 43 Weak Mutation 273: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp IINC 1 size
   * 44 Weak Mutation 272: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - InsertUnaryOp Negation of size
   * 45 Weak Mutation 258: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - DeleteStatement: getByteArrayLogSize([B)I
   * 46 Weak Mutation 259: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> -
   * 47 Weak Mutation 256: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - InsertUnaryOp IINC -1 size
   * 48 Weak Mutation 257: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - DeleteField: dupKey[B
   * 49 Weak Mutation 262: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> *
   * 50 Weak Mutation 263: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MAX_LEVEL
   * 51 Weak Mutation 260: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> %
   * 52 Weak Mutation 261: com.sleepycat.je.tree.DBIN.getLogSize()I:234 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 266: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MAIN_LEVEL
   * 54 Weak Mutation 267: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> LEVEL_MASK
   * 55 Weak Mutation 264: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> ACCUMULATED_LIMIT
   * 56 Weak Mutation 265: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> MIN_LEVEL
   * 57 Weak Mutation 270: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> BIN_LEVEL
   * 58 Weak Mutation 271: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> EXACT_MATCH
   * 59 Weak Mutation 268: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> INSERT_SUCCESS
   * 60 Weak Mutation 269: com.sleepycat.je.tree.DBIN.getLogSize()I:235 - ReplaceVariable size -> DBMAP_LEVEL
   * 61 com.sleepycat.je.tree.DBIN.getLogSize()I: root-Branch
   */
  @Test
  public void test20()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[8];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)25, byteArray0, (int) (byte)25);
      int int0 = dBIN0.getLogSize();
      assertEquals(4294972512L, dBIN0.getNodeId());
      assertEquals(50, int0);
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * 1 Weak Mutation 279: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp IINC -1 entryTypeVersion
   * 2 Weak Mutation 278: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp IINC 1 entryTypeVersion
   * 3 Weak Mutation 277: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp Negation of entryTypeVersion
   * 4 com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V: root-Branch
   * 5 Weak Mutation 279: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp IINC -1 entryTypeVersion
   * 6 Weak Mutation 278: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp IINC 1 entryTypeVersion
   * 7 Weak Mutation 277: com.sleepycat.je.tree.DBIN.readFromLog(Ljava/nio/ByteBuffer;B)V:251 - InsertUnaryOp Negation of entryTypeVersion
   */
  @Test
  public void test21()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      // Undeclared exception!
      try {
        dBIN0.readFromLog((ByteBuffer) null, (byte)109);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 22
  /*
   * 23 covered goals:
   * 1 Weak Mutation 283: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 2 Weak Mutation 282: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 281: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteField: dupKey[B
   * 4 Weak Mutation 284: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 5 com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V: root-Branch
   * 6 Weak Mutation 29: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAX_LEVEL
   * 7 Weak Mutation 31: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MIN_LEVEL
   * 8 Weak Mutation 30: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 34: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> INSERT_SUCCESS
   * 10 Weak Mutation 35: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> DBMAP_LEVEL
   * 11 Weak Mutation 32: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> MAIN_LEVEL
   * 12 Weak Mutation 33: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> LEVEL_MASK
   * 13 Weak Mutation 38: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp Negation of newLevel
   * 14 Weak Mutation 39: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC 1 newLevel
   * 15 Weak Mutation 36: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> BIN_LEVEL
   * 16 Weak Mutation 37: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - ReplaceVariable newLevel -> EXACT_MATCH
   * 17 Weak Mutation 40: com.sleepycat.je.tree.DBIN.generateLevel(Lcom/sleepycat/je/dbi/DatabaseId;I)I:47 - InsertUnaryOp IINC -1 newLevel
   * 18 Weak Mutation 154: com.sleepycat.je.tree.DBIN.beginTag()Ljava/lang/String;:194 - ReplaceConstant - <dbin> -> 
   * 19 Weak Mutation 155: com.sleepycat.je.tree.DBIN.endTag()Ljava/lang/String;:198 - ReplaceConstant - </dbin> -> 
   * 20 Weak Mutation 283: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteStatement: dumpString([BI)Ljava/lang/String;
   * 21 Weak Mutation 282: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 281: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteField: dupKey[B
   * 23 Weak Mutation 284: com.sleepycat.je.tree.DBIN.dumpLogAdditional(Ljava/lang/StringBuffer;)V:260 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test22()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      byte[] byteArray0 = new byte[8];
      DBIN dBIN0 = new DBIN(databaseImpl0, byteArray0, (int) (byte)25, byteArray0, (int) (byte)25);
      StringBuffer stringBuffer0 = new StringBuffer("_=");
      dBIN0.dumpLog(stringBuffer0, true);
      assertEquals(4294972695L, databaseImpl0.getEofNodeId());
      assertEquals(4294972698L, dBIN0.getLastId());
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Weak Mutation 285: com.sleepycat.je.tree.DBIN.shortClassName()Ljava/lang/String;:264 - ReplaceConstant - DBIN -> 
   * 2 com.sleepycat.je.tree.DBIN.shortClassName()Ljava/lang/String;: root-Branch
   * 3 Weak Mutation 285: com.sleepycat.je.tree.DBIN.shortClassName()Ljava/lang/String;:264 - ReplaceConstant - DBIN -> 
   */
  @Test
  public void test23()  throws Throwable  {
      DBIN dBIN0 = new DBIN();
      String string0 = dBIN0.shortClassName();
      assertEquals("DBIN", string0);
  }
}
