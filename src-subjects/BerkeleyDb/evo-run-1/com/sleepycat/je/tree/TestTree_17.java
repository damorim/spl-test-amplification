/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.CursorsExistException;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.NodeNotEmptyException;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.tree.TreeStats;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.tree.WithRootLatched;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestTree_17 {


  //Test case number: 17
  /*
   * 36 covered goals:
   * 1 Weak Mutation 166: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:607 - DeleteStatement: getMainTreeKey()[B
   * 2 Weak Mutation 167: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:608 - DeleteStatement: getDupTreeKey()[B
   * 3 Weak Mutation 168: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:609 - DeleteStatement: isRoot()Z
   * 4 Weak Mutation 171: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 5 Weak Mutation 170: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: containsDuplicates()Z
   * 6 Weak Mutation 169: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: getNodeId()J
   * 7 Weak Mutation 175: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 8 Weak Mutation 174: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp IINC -1
   * 9 Weak Mutation 173: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp IINC 1
   * 10 Weak Mutation 172: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 11 Weak Mutation 178: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;
   * 12 Weak Mutation 176: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 13 Weak Mutation 177: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 179: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp Negation
   * 15 Weak Mutation 182: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - DeleteStatement: getRootIN(Z)Lcom/sleepycat/je/tree/IN;
   * 16 Weak Mutation 180: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 181: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp IINC -1
   * 18 com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;: I3 Branch 26 IFNONNULL L601 - true
   * 19 Weak Mutation 164: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:601 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 171: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 21 Weak Mutation 170: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: containsDuplicates()Z
   * 22 Weak Mutation 169: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: getNodeId()J
   * 23 Weak Mutation 168: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:609 - DeleteStatement: isRoot()Z
   * 24 Weak Mutation 175: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 25 Weak Mutation 174: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp IINC -1
   * 26 Weak Mutation 173: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp IINC 1
   * 27 Weak Mutation 172: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 28 Weak Mutation 167: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:608 - DeleteStatement: getDupTreeKey()[B
   * 29 Weak Mutation 166: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:607 - DeleteStatement: getMainTreeKey()[B
   * 30 Weak Mutation 178: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - DeleteStatement: getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;
   * 31 Weak Mutation 179: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp Negation
   * 32 Weak Mutation 176: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - InsertUnaryOp Negation
   * 33 Weak Mutation 177: com.sleepycat.je.tree.Tree.getParentINForChildIN(Lcom/sleepycat/je/tree/IN;ZZILjava/util/List;)Lcom/sleepycat/je/tree/SearchResult;:613 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 182: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - DeleteStatement: getRootIN(Z)Lcom/sleepycat/je/tree/IN;
   * 35 Weak Mutation 180: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 181: com.sleepycat.je.tree.Tree.getParentINForChildIN(JZZ[B[BZZILjava/util/List;Z)Lcom/sleepycat/je/tree/SearchResult;:638 - InsertUnaryOp IINC -1
   */
  @Test
  public void test17()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      // Undeclared exception!
      try {
        tree0.getParentINForChildIN((IN) dIN0, true, true, 8, (List) null);
        fail("Expecting exception: RuntimeException");
      } catch(RuntimeException e) {
        /*
         * TYPE ERROR?
         */
      }
  }
}
