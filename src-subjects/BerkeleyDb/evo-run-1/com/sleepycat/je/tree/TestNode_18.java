/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.TreeLocation;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestNode_18 {


  //Test case number: 18
  /*
   * 12 covered goals:
   * 1 com.sleepycat.je.tree.Node.postFetchInit(Lcom/sleepycat/je/dbi/DatabaseImpl;J)V: root-Branch
   * 2 Weak Mutation 8: com.sleepycat.je.tree.Node.<init>(Z)V:37 - InsertUnaryOp Negation
   * 3 Weak Mutation 9: com.sleepycat.je.tree.Node.<init>(Z)V:37 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 11: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - InsertUnaryOp Negation
   * 5 Weak Mutation 12: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - DeleteField: lastAllocatedIdJ
   * 6 Weak Mutation 13: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 14: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceConstant - 1 -> -1
   * 8 Weak Mutation 15: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceConstant - 1 -> 2
   * 9 Weak Mutation 17: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceArithmeticOperator + -> %
   * 10 Weak Mutation 16: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceArithmeticOperator + -> -
   * 11 Weak Mutation 19: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceArithmeticOperator + -> *
   * 12 Weak Mutation 18: com.sleepycat.je.tree.Node.getNextNodeId()J:45 - ReplaceArithmeticOperator + -> /
   */
  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DupCountLN dupCountLN0 = new DupCountLN();
      dupCountLN0.postFetchInit(databaseImpl0, (long) 44);
      assertEquals(1L, databaseImpl0.getEofNodeId());
      assertEquals(3L, dupCountLN0.getNextNodeId());
  }
}
