/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.tree.BIN;
import com.sleepycat.je.tree.BINBoundary;
import com.sleepycat.je.tree.ChildReference;
import com.sleepycat.je.tree.CursorsExistException;
import com.sleepycat.je.tree.DBIN;
import com.sleepycat.je.tree.DIN;
import com.sleepycat.je.tree.IN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Node;
import com.sleepycat.je.tree.NodeNotEmptyException;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.tree.TreeLocation;
import com.sleepycat.je.tree.TreeStats;
import com.sleepycat.je.tree.TreeWalkerStatsAccumulator;
import com.sleepycat.je.tree.WithRootLatched;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestTree_22 {


  //Test case number: 22
  /*
   * 14 covered goals:
   * 1 Weak Mutation 361: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1184 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 364: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1191 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 365: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1192 - ReplaceConstant - 1 -> 0
   * 4 com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;: I15 Branch 55 IF_ACMPNE L1178 - true
   * 5 com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;: I40 Branch 58 IFNULL L1190 - false
   * 6 Weak Mutation 23: com.sleepycat.je.tree.Tree.getTreeStatsAccumulator()Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;:220 - DeleteStatement: getThreadLocalReferenceCount()I
   * 7 Weak Mutation 25: com.sleepycat.je.tree.Tree.getTreeStatsAccumulator()Lcom/sleepycat/je/tree/TreeWalkerStatsAccumulator;:220 - ReplaceComparisonOperator <= -> <
   * 8 Weak Mutation 368: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1202 - DeleteStatement: getNEntries()I
   * 9 Weak Mutation 371: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1202 - ReplaceComparisonOperator != -> -1
   * 10 Weak Mutation 366: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1199 - ReplaceComparisonOperator = null -> != null
   * 11 Weak Mutation 363: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1190 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 364: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1191 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 365: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1192 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 361: com.sleepycat.je.tree.Tree.searchSubTree(Lcom/sleepycat/je/tree/IN;[BLcom/sleepycat/je/tree/Tree$SearchType;JLcom/sleepycat/je/tree/BINBoundary;Z)Lcom/sleepycat/je/tree/IN;:1184 - ReplaceComparisonOperator != -> >
   */
  @Test
  public void test22()  throws Throwable  {
      Tree tree0 = new Tree();
      DIN dIN0 = new DIN();
      byte[] byteArray0 = new byte[6];
      Tree.SearchType tree_SearchType0 = Tree.SearchType.NORMAL;
      BINBoundary bINBoundary0 = new BINBoundary();
      tree0.searchSubTree((IN) dIN0, byteArray0, tree_SearchType0, (long) (byte)22, bINBoundary0, true);
      assertEquals(true, bINBoundary0.isLastBin);
      assertEquals(101839L, dIN0.getNextNodeId());
  }
}
