/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.tree;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.tree.Key;
import java.util.Comparator;

@RunWith(EvoSuiteRunner.class)
public class TestKey_7 {


  //Test case number: 7
  /*
   * 61 covered goals:
   * 1 Weak Mutation 81: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 103: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> +
   * 3 Weak Mutation 106: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> *
   * 4 Weak Mutation 13: com.sleepycat.je.tree.Key.getKey()[B:44 - DeleteField: key[B
   * 5 Weak Mutation 51: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 6 Weak Mutation 50: com.sleepycat.je.tree.Key.compareKeys([B[BLjava/util/Comparator;)I:83 - DeleteStatement: compareUnsignedBytes([B[B)I
   * 7 Weak Mutation 48: com.sleepycat.je.tree.Key.compareKeys([B[BLjava/util/Comparator;)I:79 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 55: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 9 Weak Mutation 54: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp Negation
   * 10 Weak Mutation 53: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 52: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC 1
   * 12 Weak Mutation 59: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 13 Weak Mutation 58: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 57: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - DeleteStatement: min(II)I
   * 15 Weak Mutation 56: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:92 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 63: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 17 Weak Mutation 62: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp Negation
   * 18 Weak Mutation 61: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 19 Weak Mutation 60: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 68: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp Negation
   * 21 Weak Mutation 69: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC 1
   * 22 Weak Mutation 70: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:94 - InsertUnaryOp IINC -1
   * 23 Weak Mutation 71: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp Negation
   * 24 Weak Mutation 64: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - InsertUnaryOp IINC -1
   * 25 Weak Mutation 67: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:93 - ReplaceComparisonOperator >= -> -1
   * 26 Weak Mutation 76: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 27 Weak Mutation 77: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 28 Weak Mutation 78: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 29 Weak Mutation 79: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 72: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC 1
   * 31 Weak Mutation 73: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:95 - InsertUnaryOp IINC -1
   * 32 Weak Mutation 74: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp Negation
   * 33 Weak Mutation 75: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - InsertUnaryOp IINC 1
   * 34 Weak Mutation 85: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 35 Weak Mutation 84: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 36 Weak Mutation 87: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 37 Weak Mutation 86: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 38 Weak Mutation 83: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 39 Weak Mutation 82: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> -1
   * 40 Weak Mutation 93: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp Negation
   * 41 Weak Mutation 92: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 42 Weak Mutation 95: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 94: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - InsertUnaryOp IINC 1
   * 44 Weak Mutation 89: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 45 Weak Mutation 88: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 46 Weak Mutation 91: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 47 Weak Mutation 90: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 48 Weak Mutation 102: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> ^
   * 49 Weak Mutation 100: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 256
   * 50 Weak Mutation 101: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceBitwiseOperator & -> |
   * 51 Weak Mutation 98: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> -1
   * 52 Weak Mutation 99: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 254
   * 53 Weak Mutation 96: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 0
   * 54 Weak Mutation 97: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceConstant - 255 -> 1
   * 55 Weak Mutation 104: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> %
   * 56 Weak Mutation 105: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> /
   * 57 Weak Mutation 13: com.sleepycat.je.tree.Key.getKey()[B:44 - DeleteField: key[B
   * 58 Weak Mutation 81: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:96 - ReplaceComparisonOperator != -> <
   * 59 Weak Mutation 103: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> +
   * 60 Weak Mutation 106: com.sleepycat.je.tree.Key.compareUnsignedBytes([B[B)I:100 - ReplaceArithmeticOperator - -> *
   * 61 com.sleepycat.je.tree.Key.getKey()[B: root-Branch
   */
  @Test
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      Key key0 = new Key(byteArray0);
      assertNotNull(key0);
      
      byteArray0[3] = (byte) (-38);
      byte[] byteArray1 = key0.getKey();
      assertNotNull(byteArray1);
      
      int int0 = Key.compareKeys(byteArray1, byteArray0, (Comparator) null);
      assertEquals((-218), int0);
  }
}
