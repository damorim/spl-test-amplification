/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseEntry;

@RunWith(EvoSuiteRunner.class)
public class TestDatabaseEntry_13 {


  //Test case number: 13
  /*
   * 32 covered goals:
   * 1 Weak Mutation 124: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 2 Weak Mutation 126: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 3 Weak Mutation 129: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 4 Weak Mutation 128: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 5 Weak Mutation 130: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 153: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:178 - ReplaceConstant - 0 -> 1
   * 7 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I21 Branch 5 IFEQ L176 - false
   * 8 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I28 Branch 6 IF_ICMPNE L177 - true
   * 9 Weak Mutation 51: com.sleepycat.je.DatabaseEntry.<init>([BII)V:10 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 50: com.sleepycat.je.DatabaseEntry.<init>([BII)V:9 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 55: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp Negation
   * 12 Weak Mutation 54: com.sleepycat.je.DatabaseEntry.<init>([BII)V:13 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 53: com.sleepycat.je.DatabaseEntry.<init>([BII)V:12 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 52: com.sleepycat.je.DatabaseEntry.<init>([BII)V:11 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 59: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC 1
   * 16 Weak Mutation 58: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp Negation
   * 17 Weak Mutation 57: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 56: com.sleepycat.je.DatabaseEntry.<init>([BII)V:46 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 60: com.sleepycat.je.DatabaseEntry.<init>([BII)V:47 - InsertUnaryOp IINC -1
   * 20 Weak Mutation 126: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 21 Weak Mutation 125: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 124: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - DeleteField: partialZ
   * 23 Weak Mutation 123: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 24 Weak Mutation 122: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - ReplaceComparisonOperator != -> ==
   * 25 Weak Mutation 120: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:176 - InsertUnaryOp Negation
   * 26 Weak Mutation 129: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - DeleteField: partialZ
   * 27 Weak Mutation 128: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - InsertUnaryOp Negation
   * 28 Weak Mutation 130: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:177 - ReplaceComparisonOperator != -> ==
   * 29 Weak Mutation 153: com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z:178 - ReplaceConstant - 0 -> 1
   * 30 com.sleepycat.je.DatabaseEntry.<init>([BII)V: root-Branch
   * 31 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFNE L172 - true
   * 32 com.sleepycat.je.DatabaseEntry.equals(Ljava/lang/Object;)Z: I18 Branch 4 IFNE L176 - false
   */
  @Test
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      DatabaseEntry databaseEntry1 = new DatabaseEntry(byteArray0, (-137), (int) (byte) (-38));
      databaseEntry1.setPartial((-137), (-137), true);
      boolean boolean0 = databaseEntry0.equals((Object) databaseEntry1);
      assertEquals(-137, databaseEntry1.getPartialLength());
      assertEquals(false, boolean0);
  }
}
