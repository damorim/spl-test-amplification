/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Cursor;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseEntry;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.DatabaseTrigger;
import com.sleepycat.je.Environment;
import com.sleepycat.je.ForeignKeyTrigger;
import com.sleepycat.je.JoinConfig;
import com.sleepycat.je.LockMode;
import com.sleepycat.je.SecondaryDatabase;
import com.sleepycat.je.SequenceConfig;
import com.sleepycat.je.Transaction;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.PutMode;
import com.sleepycat.je.txn.Locker;
import java.io.File;

@RunWith(EvoSuiteRunner.class)
public class TestDatabase {


  //Test case number: 0
  /*
   * 44 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - ReplaceConstant - DbState. -> 
   * 2 Weak Mutation 1: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteField: stateNameLjava/lang/String;
   * 3 Weak Mutation 2: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 3: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: toString()Ljava/lang/String;
   * 5 Weak Mutation 265: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:437 - DeleteStatement: checkEnv()V
   * 6 Weak Mutation 266: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 7 Weak Mutation 267: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - ReplaceConstant - Can't call Database.join -> 
   * 8 Weak Mutation 268: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 9 Weak Mutation 354: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:740 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 356: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - ReplaceConstant -  Database state can't be  -> 
   * 11 Weak Mutation 357: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 355: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 13 Weak Mutation 359: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 360: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - ReplaceConstant -  must be  -> 
   * 15 Weak Mutation 361: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 16 Weak Mutation 362: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 17 Weak Mutation 363: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: toString()Ljava/lang/String;
   * 18 Weak Mutation 372: com.sleepycat.je.Database.checkEnv()V:763 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 19 Weak Mutation 371: com.sleepycat.je.Database.checkEnv()V:763 - DeleteField: envHandleLcom/sleepycat/je/Environment;
   * 20 Weak Mutation 373: com.sleepycat.je.Database.checkEnv()V:764 - ReplaceComparisonOperator = null -> != null
   * 21 com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;: root-Branch
   * 22 com.sleepycat.je.Database.<init>(Lcom/sleepycat/je/Environment;)V: root-Branch
   * 23 com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V: I5 Branch 51 IF_ACMPEQ L740 - false
   * 24 com.sleepycat.je.Database.checkEnv()V: I9 Branch 53 IFNULL L764 - true
   * 25 Weak Mutation 0: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - ReplaceConstant - DbState. -> 
   * 26 Weak Mutation 1: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteField: stateNameLjava/lang/String;
   * 27 Weak Mutation 2: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 28 Weak Mutation 3: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: toString()Ljava/lang/String;
   * 29 Weak Mutation 266: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 30 Weak Mutation 267: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - ReplaceConstant - Can't call Database.join -> 
   * 31 Weak Mutation 265: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:437 - DeleteStatement: checkEnv()V
   * 32 Weak Mutation 268: com.sleepycat.je.Database.join([Lcom/sleepycat/je/Cursor;Lcom/sleepycat/je/JoinConfig;)Lcom/sleepycat/je/JoinCursor;:438 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 33 Weak Mutation 373: com.sleepycat.je.Database.checkEnv()V:764 - ReplaceComparisonOperator = null -> != null
   * 34 Weak Mutation 372: com.sleepycat.je.Database.checkEnv()V:763 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 35 Weak Mutation 371: com.sleepycat.je.Database.checkEnv()V:763 - DeleteField: envHandleLcom/sleepycat/je/Environment;
   * 36 Weak Mutation 356: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - ReplaceConstant -  Database state can't be  -> 
   * 37 Weak Mutation 357: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 38 Weak Mutation 359: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 39 Weak Mutation 354: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:740 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 355: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 41 Weak Mutation 360: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - ReplaceConstant -  must be  -> 
   * 42 Weak Mutation 361: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 43 Weak Mutation 362: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 44 Weak Mutation 363: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test0()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      Cursor[] cursorArray0 = new Cursor[2];
      JoinConfig joinConfig0 = JoinConfig.DEFAULT;
      try {
        database0.join(cursorArray0, joinConfig0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Can't call Database.join Database state can't be null must be DbState.#Gf.\\Ix[~t mt0?*9
         */
      }
  }

  //Test case number: 1
  /*
   * 40 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:124 - ReplaceComparisonOperator != -> ==
   * 2 Weak Mutation 45: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:124 - DeleteStatement: getUseExistingConfig()Z
   * 3 Weak Mutation 47: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - DeleteStatement: getTransactional()Z
   * 4 Weak Mutation 49: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - ReplaceComparisonOperator == -> !=
   * 5 Weak Mutation 48: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - DeleteStatement: isTransactional()Z
   * 6 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I55 Branch 5 IFEQ L123 - false
   * 7 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I60 Branch 6 IFNE L124 - false
   * 8 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I67 Branch 7 IF_ICMPEQ L126 - true
   * 9 Weak Mutation 12: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:89 - DeleteStatement: addReferringHandle(Lcom/sleepycat/je/Database;)V
   * 10 Weak Mutation 13: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 11 Weak Mutation 14: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteStatement: getSortedDuplicates()Z
   * 12 Weak Mutation 15: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteStatement: setSortedDuplicates(Z)V
   * 13 Weak Mutation 17: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteStatement: isTransactional()Z
   * 14 Weak Mutation 16: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 15 Weak Mutation 19: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:100 - DeleteStatement: cloneConfig()Lcom/sleepycat/je/DatabaseConfig;
   * 16 Weak Mutation 18: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteStatement: setTransactional(Z)V
   * 17 Weak Mutation 21: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - DeleteStatement: getReadOnly()Z
   * 18 Weak Mutation 20: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 19 Weak Mutation 22: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - ReplaceComparisonOperator == -> !=
   * 20 Weak Mutation 25: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:102 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 21 Weak Mutation 24: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - ReplaceConstant - 1 -> 0
   * 22 Weak Mutation 27: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:111 - ReplaceComparisonOperator != -> ==
   * 23 Weak Mutation 26: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:111 - DeleteStatement: getUseExistingConfig()Z
   * 24 Weak Mutation 29: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:113 - DeleteStatement: getSortedDuplicates()Z
   * 25 Weak Mutation 28: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:112 - DeleteStatement: getSortedDuplicates()Z
   * 26 Weak Mutation 30: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:113 - ReplaceComparisonOperator == -> !=
   * 27 Weak Mutation 43: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:123 - DeleteStatement: hasOpenHandles()Z
   * 28 Weak Mutation 46: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:124 - ReplaceComparisonOperator != -> ==
   * 29 Weak Mutation 47: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - DeleteStatement: getTransactional()Z
   * 30 Weak Mutation 44: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:123 - ReplaceComparisonOperator == -> !=
   * 31 Weak Mutation 45: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:124 - DeleteStatement: getUseExistingConfig()Z
   * 32 Weak Mutation 49: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 48: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:126 - DeleteStatement: isTransactional()Z
   * 34 com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V: root-Branch
   * 35 com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V: I22 Branch 2 IFEQ L101 - true
   * 36 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I4 Branch 3 IFNE L111 - false
   * 37 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I13 Branch 4 IF_ICMPEQ L113 - true
   * 38 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I55 Branch 5 IFEQ L123 - true
   * 39 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I115 Branch 8 IFEQ L143 - true
   * 40 com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V: I126 Branch 9 IFEQ L146 - true
   */
  @Test
  public void test1()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      assertEquals(true, database0.isWritable());
      assertEquals(1194L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 2
  /*
   * 44 covered goals:
   * 1 Weak Mutation 58: com.sleepycat.je.Database.close()V:155 - DeleteStatement: checkProhibitedDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 2 Weak Mutation 57: com.sleepycat.je.Database.close()V:155 - ReplaceConstant - Can't close Database: -> 
   * 3 Weak Mutation 56: com.sleepycat.je.Database.close()V:155 - DeleteField: CLOSEDLcom/sleepycat/je/Database$DbState;
   * 4 Weak Mutation 59: com.sleepycat.je.Database.close()V:160 - DeleteField: envHandleLcom/sleepycat/je/Environment;
   * 5 Weak Mutation 60: com.sleepycat.je.Database.close()V:160 - DeleteStatement: removeReferringHandle(Lcom/sleepycat/je/Database;)V
   * 6 Weak Mutation 365: com.sleepycat.je.Database.checkProhibitedDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:752 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 395: com.sleepycat.je.Database.acquireTriggerListWriteLock()V:895 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 400: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> -1
   * 9 Weak Mutation 397: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteStatement: size()I
   * 10 Weak Mutation 396: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteField: triggerListLjava/util/List;
   * 11 Weak Mutation 414: com.sleepycat.je.Database.removeAllTriggers()V:959 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 425: com.sleepycat.je.Database.removeAllTriggers()V:959 - DeleteStatement: size()I
   * 13 Weak Mutation 424: com.sleepycat.je.Database.removeAllTriggers()V:959 - DeleteField: triggerListLjava/util/List;
   * 14 Weak Mutation 428: com.sleepycat.je.Database.removeAllTriggers()V:959 - ReplaceComparisonOperator < -> <=
   * 15 Weak Mutation 421: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp Negation of i
   * 16 Weak Mutation 423: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp IINC -1 i
   * 17 Weak Mutation 422: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp IINC 1 i
   * 18 Weak Mutation 429: com.sleepycat.je.Database.removeAllTriggers()V:963 - DeleteField: triggerListLjava/util/List;
   * 19 Weak Mutation 430: com.sleepycat.je.Database.removeAllTriggers()V:963 - DeleteStatement: clear()V
   * 20 com.sleepycat.je.Database.checkProhibitedDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V: I5 Branch 52 IF_ACMPNE L752 - true
   * 21 com.sleepycat.je.Database.acquireTriggerListWriteLock()V: I4 Branch 58 IFNONNULL L895 - false
   * 22 com.sleepycat.je.Database.releaseTriggerListWriteLock()V: I5 Branch 59 IFNE L906 - false
   * 23 com.sleepycat.je.Database.removeAllTriggers()V: I31 Branch 61 IF_ICMPLT L959 - false
   * 24 Weak Mutation 55: com.sleepycat.je.Database.close()V:154 - DeleteStatement: checkEnv()V
   * 25 Weak Mutation 55: com.sleepycat.je.Database.close()V:154 - DeleteStatement: checkEnv()V
   * 26 Weak Mutation 59: com.sleepycat.je.Database.close()V:160 - DeleteField: envHandleLcom/sleepycat/je/Environment;
   * 27 Weak Mutation 58: com.sleepycat.je.Database.close()V:155 - DeleteStatement: checkProhibitedDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 28 Weak Mutation 57: com.sleepycat.je.Database.close()V:155 - ReplaceConstant - Can't close Database: -> 
   * 29 Weak Mutation 56: com.sleepycat.je.Database.close()V:155 - DeleteField: CLOSEDLcom/sleepycat/je/Database$DbState;
   * 30 Weak Mutation 60: com.sleepycat.je.Database.close()V:160 - DeleteStatement: removeReferringHandle(Lcom/sleepycat/je/Database;)V
   * 31 Weak Mutation 365: com.sleepycat.je.Database.checkProhibitedDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:752 - ReplaceComparisonOperator != -> ==
   * 32 Weak Mutation 414: com.sleepycat.je.Database.removeAllTriggers()V:959 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 400: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> -1
   * 34 Weak Mutation 395: com.sleepycat.je.Database.acquireTriggerListWriteLock()V:895 - ReplaceComparisonOperator != null -> = null
   * 35 Weak Mutation 397: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteStatement: size()I
   * 36 Weak Mutation 396: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteField: triggerListLjava/util/List;
   * 37 Weak Mutation 425: com.sleepycat.je.Database.removeAllTriggers()V:959 - DeleteStatement: size()I
   * 38 Weak Mutation 424: com.sleepycat.je.Database.removeAllTriggers()V:959 - DeleteField: triggerListLjava/util/List;
   * 39 Weak Mutation 429: com.sleepycat.je.Database.removeAllTriggers()V:963 - DeleteField: triggerListLjava/util/List;
   * 40 Weak Mutation 428: com.sleepycat.je.Database.removeAllTriggers()V:959 - ReplaceComparisonOperator < -> <=
   * 41 Weak Mutation 430: com.sleepycat.je.Database.removeAllTriggers()V:963 - DeleteStatement: clear()V
   * 42 Weak Mutation 421: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp Negation of i
   * 43 Weak Mutation 423: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp IINC -1 i
   * 44 Weak Mutation 422: com.sleepycat.je.Database.removeAllTriggers()V:959 - InsertUnaryOp IINC 1 i
   */
  @Test
  public void test2()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      // Undeclared exception!
      try {
        database0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 15 covered goals:
   * 1 Weak Mutation 78: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:195 - DeleteStatement: checkEnv()V
   * 2 Weak Mutation 79: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - ReplaceConstant - key -> 
   * 3 Weak Mutation 81: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 4 Weak Mutation 80: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 84: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 6 Weak Mutation 83: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - ReplaceConstant - Can't call Database.openSequence: -> 
   * 7 Weak Mutation 82: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 8 com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;: root-Branch
   * 9 Weak Mutation 78: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:195 - DeleteStatement: checkEnv()V
   * 10 Weak Mutation 79: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - ReplaceConstant - key -> 
   * 11 Weak Mutation 84: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 12 Weak Mutation 81: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 13 Weak Mutation 80: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:196 - ReplaceConstant - 1 -> 0
   * 14 Weak Mutation 83: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - ReplaceConstant - Can't call Database.openSequence: -> 
   * 15 Weak Mutation 82: com.sleepycat.je.Database.openSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/SequenceConfig;)Lcom/sleepycat/je/Sequence;:197 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   */
  @Test
  public void test3()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      byte[] byteArray0 = new byte[10];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      try {
        database0.openSequence((Transaction) null, databaseEntry0, sequenceConfig0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Can't call Database.openSequence: Database state can't be null must be DbState.#Gf.\\Ix[~t mt0?*9
         */
      }
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * 1 Weak Mutation 86: com.sleepycat.je.Database.removeSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)V:212 - DeleteStatement: delete(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;
   * 2 Weak Mutation 102: com.sleepycat.je.Database.delete(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:244 - DeleteStatement: checkEnv()V
   * 3 com.sleepycat.je.Database.removeSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)V: root-Branch
   * 4 Weak Mutation 86: com.sleepycat.je.Database.removeSequence(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)V:212 - DeleteStatement: delete(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;
   * 5 Weak Mutation 102: com.sleepycat.je.Database.delete(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:244 - DeleteStatement: checkEnv()V
   */
  @Test
  public void test4()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      DatabaseEntry databaseEntry0 = new DatabaseEntry();
      // Undeclared exception!
      try {
        database0.removeSequence((Transaction) null, databaseEntry0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * 1 Weak Mutation 142: com.sleepycat.je.Database.get(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/LockMode;)Lcom/sleepycat/je/OperationStatus;:311 - DeleteStatement: checkEnv()V
   * 2 Weak Mutation 142: com.sleepycat.je.Database.get(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/LockMode;)Lcom/sleepycat/je/OperationStatus;:311 - DeleteStatement: checkEnv()V
   */
  @Test
  public void test5()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      byte[] byteArray0 = new byte[4];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      LockMode lockMode0 = LockMode.READ_COMMITTED;
      // Undeclared exception!
      try {
        database0.get((Transaction) null, databaseEntry0, databaseEntry0, lockMode0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 6
  /*
   * 23 covered goals:
   * 1 Weak Mutation 230: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:392 - DeleteStatement: checkEnv()V
   * 2 Weak Mutation 234: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 3 Weak Mutation 233: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - ReplaceConstant - 1 -> 0
   * 4 Weak Mutation 232: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - ReplaceConstant - key -> 
   * 5 Weak Mutation 238: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 6 Weak Mutation 237: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 236: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - ReplaceConstant - data -> 
   * 8 Weak Mutation 240: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:395 - DeleteStatement: checkForPartialKey(Lcom/sleepycat/je/DatabaseEntry;)V
   * 9 Weak Mutation 242: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - ReplaceConstant - Can't call Database.putNoDupData -> 
   * 10 Weak Mutation 243: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 11 Weak Mutation 241: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 12 com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;: root-Branch
   * 13 Weak Mutation 238: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 14 Weak Mutation 237: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 236: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:394 - ReplaceConstant - data -> 
   * 16 Weak Mutation 234: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - DeleteStatement: checkForNullDbt(Lcom/sleepycat/je/DatabaseEntry;Ljava/lang/String;Z)V
   * 17 Weak Mutation 233: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - ReplaceConstant - 1 -> 0
   * 18 Weak Mutation 232: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:393 - ReplaceConstant - key -> 
   * 19 Weak Mutation 230: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:392 - DeleteStatement: checkEnv()V
   * 20 Weak Mutation 242: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - ReplaceConstant - Can't call Database.putNoDupData -> 
   * 21 Weak Mutation 243: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 22 Weak Mutation 240: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:395 - DeleteStatement: checkForPartialKey(Lcom/sleepycat/je/DatabaseEntry;)V
   * 23 Weak Mutation 241: com.sleepycat.je.Database.putNoDupData(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)Lcom/sleepycat/je/OperationStatus;:396 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   */
  @Test
  public void test6()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      byte[] byteArray0 = new byte[5];
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0, (int) (byte)1, (-1155));
      try {
        database0.putNoDupData((Transaction) null, databaseEntry0, databaseEntry0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Can't call Database.putNoDupData Database state can't be null must be DbState.#Gf.\\Ix[~t mt0?*9
         */
      }
  }

  //Test case number: 7
  /*
   * 17 covered goals:
   * 1 Weak Mutation 252: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:415 - DeleteStatement: getWritableLocker(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/Transaction;Z)Lcom/sleepycat/je/txn/Locker;
   * 2 Weak Mutation 341: com.sleepycat.je.Database.isTransactional()Z:675 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 3 Weak Mutation 251: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:416 - DeleteStatement: isTransactional()Z
   * 4 Weak Mutation 249: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:412 - DeleteField: KEYEXISTLcom/sleepycat/je/OperationStatus;
   * 5 Weak Mutation 262: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:423 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 264: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:426 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 342: com.sleepycat.je.Database.isTransactional()Z:675 - DeleteStatement: isTransactional()Z
   * 8 Weak Mutation 252: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:415 - DeleteStatement: getWritableLocker(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/Transaction;Z)Lcom/sleepycat/je/txn/Locker;
   * 9 Weak Mutation 251: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:416 - DeleteStatement: isTransactional()Z
   * 10 Weak Mutation 249: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:412 - DeleteField: KEYEXISTLcom/sleepycat/je/OperationStatus;
   * 11 Weak Mutation 262: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:423 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 264: com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;:426 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 342: com.sleepycat.je.Database.isTransactional()Z:675 - DeleteStatement: isTransactional()Z
   * 14 Weak Mutation 341: com.sleepycat.je.Database.isTransactional()Z:675 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 15 com.sleepycat.je.Database.isTransactional()Z: root-Branch
   * 16 com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;: I78 Branch 35 IFNULL L423 - true
   * 17 com.sleepycat.je.Database.putInternal(Lcom/sleepycat/je/Transaction;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/dbi/PutMode;)Lcom/sleepycat/je/OperationStatus;: I86 Branch 36 IFNULL L426 - true
   */
  @Test
  public void test7()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      byte[] byteArray0 = new byte[4];
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      DatabaseEntry databaseEntry0 = new DatabaseEntry(byteArray0);
      PutMode putMode0 = PutMode.CURRENT;
      // Undeclared exception!
      try {
        database0.putInternal((Transaction) null, databaseEntry0, databaseEntry0, putMode0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 9 covered goals:
   * 1 Weak Mutation 296: com.sleepycat.je.Database.preload(J)V:567 - DeleteStatement: checkEnv()V
   * 2 Weak Mutation 297: com.sleepycat.je.Database.preload(J)V:568 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 3 Weak Mutation 298: com.sleepycat.je.Database.preload(J)V:568 - ReplaceConstant - Can't call Database.preload -> 
   * 4 Weak Mutation 299: com.sleepycat.je.Database.preload(J)V:568 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 5 com.sleepycat.je.Database.preload(J)V: root-Branch
   * 6 Weak Mutation 296: com.sleepycat.je.Database.preload(J)V:567 - DeleteStatement: checkEnv()V
   * 7 Weak Mutation 297: com.sleepycat.je.Database.preload(J)V:568 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 8 Weak Mutation 298: com.sleepycat.je.Database.preload(J)V:568 - ReplaceConstant - Can't call Database.preload -> 
   * 9 Weak Mutation 299: com.sleepycat.je.Database.preload(J)V:568 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   */
  @Test
  public void test8()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      try {
        database0.preload((-374L));
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Can't call Database.preload Database state can't be null must be DbState.#Gf.\\Ix[~t mt0?*9
         */
      }
  }

  //Test case number: 9
  /*
   * 25 covered goals:
   * 1 Weak Mutation 302: com.sleepycat.je.Database.preload(JJ)V:581 - DeleteStatement: checkEnv()V
   * 2 Weak Mutation 305: com.sleepycat.je.Database.preload(JJ)V:582 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 3 Weak Mutation 304: com.sleepycat.je.Database.preload(JJ)V:582 - ReplaceConstant - Can't call Database.preload -> 
   * 4 Weak Mutation 303: com.sleepycat.je.Database.preload(JJ)V:582 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 5 com.sleepycat.je.Database.preload(JJ)V: root-Branch
   * 6 Weak Mutation 0: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - ReplaceConstant - DbState. -> 
   * 7 Weak Mutation 1: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteField: stateNameLjava/lang/String;
   * 8 Weak Mutation 2: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 9 Weak Mutation 3: com.sleepycat.je.Database$DbState.toString()Ljava/lang/String;:31 - DeleteStatement: toString()Ljava/lang/String;
   * 10 Weak Mutation 373: com.sleepycat.je.Database.checkEnv()V:764 - ReplaceComparisonOperator = null -> != null
   * 11 Weak Mutation 372: com.sleepycat.je.Database.checkEnv()V:763 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 12 Weak Mutation 371: com.sleepycat.je.Database.checkEnv()V:763 - DeleteField: envHandleLcom/sleepycat/je/Environment;
   * 13 Weak Mutation 356: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - ReplaceConstant -  Database state can't be  -> 
   * 14 Weak Mutation 357: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 15 Weak Mutation 359: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 16 Weak Mutation 354: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:740 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 355: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:741 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 18 Weak Mutation 360: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - ReplaceConstant -  must be  -> 
   * 19 Weak Mutation 361: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 20 Weak Mutation 362: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 21 Weak Mutation 363: com.sleepycat.je.Database.checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V:742 - DeleteStatement: toString()Ljava/lang/String;
   * 22 Weak Mutation 305: com.sleepycat.je.Database.preload(JJ)V:582 - DeleteStatement: checkRequiredDbState(Lcom/sleepycat/je/Database$DbState;Ljava/lang/String;)V
   * 23 Weak Mutation 304: com.sleepycat.je.Database.preload(JJ)V:582 - ReplaceConstant - Can't call Database.preload -> 
   * 24 Weak Mutation 302: com.sleepycat.je.Database.preload(JJ)V:581 - DeleteStatement: checkEnv()V
   * 25 Weak Mutation 303: com.sleepycat.je.Database.preload(JJ)V:582 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   */
  @Test
  public void test9()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      try {
        database0.preload((-1898L), (-1898L));
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Can't call Database.preload Database state can't be null must be DbState.#Gf.\\Ix[~t mt0?*9
         */
      }
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Weak Mutation 317: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:650 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 318: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:650 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 319: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:651 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 4 Weak Mutation 320: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:651 - DeleteStatement: getDebugName()Ljava/lang/String;
   * 5 com.sleepycat.je.Database.getDebugName()Ljava/lang/String;: I4 Branch 45 IFNULL L650 - false
   * 6 Weak Mutation 317: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:650 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 7 Weak Mutation 319: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:651 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 8 Weak Mutation 318: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:650 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 320: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:651 - DeleteStatement: getDebugName()Ljava/lang/String;
   */
  @Test
  public void test10()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      database0.getDebugName();
      assertEquals(true, database0.isWritable());
  }

  //Test case number: 11
  /*
   * 32 covered goals:
   * 1 Weak Mutation 321: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:658 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 2 Weak Mutation 324: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 325: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 4 Weak Mutation 323: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 5 Weak Mutation 326: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:660 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 6 Weak Mutation 327: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 7 Weak Mutation 328: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 329: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 9 Weak Mutation 330: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:662 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 10 Weak Mutation 335: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:664 - DeleteStatement: setBtreeComparator(Ljava/lang/Class;)V
   * 11 Weak Mutation 332: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:664 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 340: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:665 - DeleteStatement: setDuplicateComparator(Ljava/lang/Class;)V
   * 13 Weak Mutation 337: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:665 - ReplaceComparisonOperator != null -> = null
   * 14 com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;: I10 Branch 46 IFNONNULL L659 - true
   * 15 com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;: I26 Branch 47 IFNONNULL L661 - true
   * 16 com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;: I44 Branch 48 IFNONNULL L664 - false
   * 17 com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;: I56 Branch 49 IFNONNULL L665 - false
   * 18 Weak Mutation 322: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:658 - DeleteStatement: cloneConfig()Lcom/sleepycat/je/DatabaseConfig;
   * 19 Weak Mutation 340: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:665 - DeleteStatement: setDuplicateComparator(Ljava/lang/Class;)V
   * 20 Weak Mutation 337: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:665 - ReplaceComparisonOperator != null -> = null
   * 21 Weak Mutation 326: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:660 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 22 Weak Mutation 327: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 23 Weak Mutation 324: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - ReplaceComparisonOperator != null -> = null
   * 24 Weak Mutation 325: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 25 Weak Mutation 322: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:658 - DeleteStatement: cloneConfig()Lcom/sleepycat/je/DatabaseConfig;
   * 26 Weak Mutation 323: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:659 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   * 27 Weak Mutation 321: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:658 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 28 Weak Mutation 335: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:664 - DeleteStatement: setBtreeComparator(Ljava/lang/Class;)V
   * 29 Weak Mutation 332: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:664 - ReplaceComparisonOperator != null -> = null
   * 30 Weak Mutation 330: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:662 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 31 Weak Mutation 328: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - ReplaceComparisonOperator != null -> = null
   * 32 Weak Mutation 329: com.sleepycat.je.Database.getConfig()Lcom/sleepycat/je/DatabaseConfig;:661 - DeleteField: databaseImplLcom/sleepycat/je/dbi/DatabaseImpl;
   */
  @Test
  public void test11()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      database0.getConfig();
      assertEquals(true, database0.isWritable());
  }

  //Test case number: 12
  /*
   * 10 covered goals:
   * 1 Weak Mutation 345: com.sleepycat.je.Database.getSecondaryDatabases()Ljava/util/List;:686 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 344: com.sleepycat.je.Database.getSecondaryDatabases()Ljava/util/List;:686 - DeleteStatement: hasTriggers()Z
   * 3 Weak Mutation 391: com.sleepycat.je.Database.hasTriggers()Z:857 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 389: com.sleepycat.je.Database.hasTriggers()Z:857 - ReplaceComparisonOperator = null -> != null
   * 5 com.sleepycat.je.Database.getSecondaryDatabases()Ljava/util/List;: I10 Branch 50 IFEQ L686 - true
   * 6 com.sleepycat.je.Database.hasTriggers()Z: I4 Branch 56 IFNULL L857 - true
   * 7 Weak Mutation 345: com.sleepycat.je.Database.getSecondaryDatabases()Ljava/util/List;:686 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 344: com.sleepycat.je.Database.getSecondaryDatabases()Ljava/util/List;:686 - DeleteStatement: hasTriggers()Z
   * 9 Weak Mutation 391: com.sleepycat.je.Database.hasTriggers()Z:857 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 389: com.sleepycat.je.Database.hasTriggers()Z:857 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test12()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      database0.getSecondaryDatabases();
      assertEquals(false, database0.hasTriggers());
  }

  //Test case number: 13
  /*
   * 25 covered goals:
   * 1 Weak Mutation 347: com.sleepycat.je.Database.isWritable()Z:709 - DeleteField: isWritableZ
   * 2 Weak Mutation 346: com.sleepycat.je.Database.isWritable()Z:709 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.Database.isWritable()Z: root-Branch
   * 4 Weak Mutation 12: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:89 - DeleteStatement: addReferringHandle(Lcom/sleepycat/je/Database;)V
   * 5 Weak Mutation 13: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 6 Weak Mutation 14: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteStatement: getSortedDuplicates()Z
   * 7 Weak Mutation 15: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:90 - DeleteStatement: setSortedDuplicates(Z)V
   * 8 Weak Mutation 17: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteStatement: isTransactional()Z
   * 9 Weak Mutation 16: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 10 Weak Mutation 19: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:100 - DeleteStatement: cloneConfig()Lcom/sleepycat/je/DatabaseConfig;
   * 11 Weak Mutation 18: com.sleepycat.je.Database.initExisting(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/dbi/DatabaseImpl;Lcom/sleepycat/je/DatabaseConfig;)V:92 - DeleteStatement: setTransactional(Z)V
   * 12 Weak Mutation 21: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - DeleteStatement: getReadOnly()Z
   * 13 Weak Mutation 20: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - DeleteField: configurationLcom/sleepycat/je/DatabaseConfig;
   * 14 Weak Mutation 22: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 25: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:102 - DeleteField: OPENLcom/sleepycat/je/Database$DbState;
   * 16 Weak Mutation 24: com.sleepycat.je.Database.init(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/DatabaseConfig;)V:101 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 27: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:111 - ReplaceComparisonOperator != -> ==
   * 18 Weak Mutation 26: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:111 - DeleteStatement: getUseExistingConfig()Z
   * 19 Weak Mutation 29: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:113 - DeleteStatement: getSortedDuplicates()Z
   * 20 Weak Mutation 28: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:112 - DeleteStatement: getSortedDuplicates()Z
   * 21 Weak Mutation 30: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:113 - ReplaceComparisonOperator == -> !=
   * 22 Weak Mutation 43: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:123 - DeleteStatement: hasOpenHandles()Z
   * 23 Weak Mutation 44: com.sleepycat.je.Database.validateConfigAgainstExistingDb(Lcom/sleepycat/je/DatabaseConfig;Lcom/sleepycat/je/dbi/DatabaseImpl;)V:123 - ReplaceComparisonOperator == -> !=
   * 24 Weak Mutation 347: com.sleepycat.je.Database.isWritable()Z:709 - DeleteField: isWritableZ
   * 25 Weak Mutation 346: com.sleepycat.je.Database.isWritable()Z:709 - InsertUnaryOp Negation
   */
  @Test
  public void test13()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      database0.initExisting((Environment) null, (Locker) null, databaseImpl0, databaseConfig0);
      boolean boolean0 = database0.isWritable();
      assertEquals(true, database0.isWritable());
      assertEquals(true, boolean0);
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * 1 Weak Mutation 350: com.sleepycat.je.Database.removeCursor(Lcom/sleepycat/je/Cursor;)V:727 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 2 Weak Mutation 349: com.sleepycat.je.Database.removeCursor(Lcom/sleepycat/je/Cursor;)V:727 - DeleteField: cursorsLcom/sleepycat/je/utilint/TinyHashSet;
   * 3 com.sleepycat.je.Database.removeCursor(Lcom/sleepycat/je/Cursor;)V: root-Branch
   * 4 Weak Mutation 350: com.sleepycat.je.Database.removeCursor(Lcom/sleepycat/je/Cursor;)V:727 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 5 Weak Mutation 349: com.sleepycat.je.Database.removeCursor(Lcom/sleepycat/je/Cursor;)V:727 - DeleteField: cursorsLcom/sleepycat/je/utilint/TinyHashSet;
   */
  @Test
  public void test14()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      database0.removeCursor((Cursor) null);
      assertEquals(false, database0.hasTriggers());
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 351: com.sleepycat.je.Database.addCursor(Lcom/sleepycat/je/Cursor;)V:731 - DeleteField: cursorsLcom/sleepycat/je/utilint/TinyHashSet;
   * 2 Weak Mutation 352: com.sleepycat.je.Database.addCursor(Lcom/sleepycat/je/Cursor;)V:731 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 3 com.sleepycat.je.Database.addCursor(Lcom/sleepycat/je/Cursor;)V: root-Branch
   * 4 Weak Mutation 351: com.sleepycat.je.Database.addCursor(Lcom/sleepycat/je/Cursor;)V:731 - DeleteField: cursorsLcom/sleepycat/je/utilint/TinyHashSet;
   * 5 Weak Mutation 352: com.sleepycat.je.Database.addCursor(Lcom/sleepycat/je/Cursor;)V:731 - DeleteStatement: add(Ljava/lang/Object;)Z
   */
  @Test
  public void test15()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      database0.addCursor((Cursor) null);
      assertNull(database0.getDatabaseName());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * 1 Weak Mutation 375: com.sleepycat.je.Database.invalidate()V:773 - DeleteField: INVALIDLcom/sleepycat/je/Database$DbState;
   * 2 Weak Mutation 377: com.sleepycat.je.Database.invalidate()V:774 - DeleteStatement: removeReferringHandle(Lcom/sleepycat/je/Database;)V
   * 3 Weak Mutation 375: com.sleepycat.je.Database.invalidate()V:773 - DeleteField: INVALIDLcom/sleepycat/je/Database$DbState;
   * 4 Weak Mutation 377: com.sleepycat.je.Database.invalidate()V:774 - DeleteStatement: removeReferringHandle(Lcom/sleepycat/je/Database;)V
   */
  @Test
  public void test16()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      // Undeclared exception!
      try {
        database0.invalidate();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 17
  /*
   * 15 covered goals:
   * 1 Weak Mutation 394: com.sleepycat.je.Database.acquireTriggerListWriteLock()V:895 - DeleteField: triggerListLjava/util/List;
   * 2 Weak Mutation 411: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:944 - DeleteField: triggerListLjava/util/List;
   * 3 Weak Mutation 412: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:944 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 4 Weak Mutation 413: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:945 - DeleteStatement: triggerRemoved(Lcom/sleepycat/je/Database;)V
   * 5 com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V: root-Branch
   * 6 com.sleepycat.je.Database.acquireTriggerListWriteLock()V: I4 Branch 58 IFNONNULL L895 - true
   * 7 Weak Mutation 400: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> -1
   * 8 Weak Mutation 393: com.sleepycat.je.Database.acquireTriggerListReadLock()V:870 - ReplaceComparisonOperator != null -> = null
   * 9 Weak Mutation 411: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:944 - DeleteField: triggerListLjava/util/List;
   * 10 Weak Mutation 412: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:944 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 11 Weak Mutation 413: com.sleepycat.je.Database.removeTrigger(Lcom/sleepycat/je/DatabaseTrigger;)V:945 - DeleteStatement: triggerRemoved(Lcom/sleepycat/je/Database;)V
   * 12 Weak Mutation 394: com.sleepycat.je.Database.acquireTriggerListWriteLock()V:895 - DeleteField: triggerListLjava/util/List;
   * 13 Weak Mutation 393: com.sleepycat.je.Database.acquireTriggerListReadLock()V:870 - ReplaceComparisonOperator != null -> = null
   * 14 com.sleepycat.je.Database.notifyTriggers(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;Lcom/sleepycat/je/DatabaseEntry;)V: root-Branch
   * 15 com.sleepycat.je.Database.acquireTriggerListReadLock()V: I4 Branch 57 IFNONNULL L870 - false
   */
  @Test
  public void test17()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      database0.notifyTriggers((Locker) null, (DatabaseEntry) null, (DatabaseEntry) null, (DatabaseEntry) null);
      assertEquals(true, database0.hasTriggers());
      
      ForeignKeyTrigger foreignKeyTrigger0 = new ForeignKeyTrigger((SecondaryDatabase) null);
      // Undeclared exception!
      try {
        database0.removeTrigger((DatabaseTrigger) foreignKeyTrigger0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 18 covered goals:
   * 1 Weak Mutation 398: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 402: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC 1 insertAtFront
   * 3 Weak Mutation 403: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC -1 insertAtFront
   * 4 Weak Mutation 401: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp Negation of insertAtFront
   * 5 Weak Mutation 404: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 408: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:929 - DeleteField: triggerListLjava/util/List;
   * 7 Weak Mutation 409: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:929 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 8 Weak Mutation 410: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:931 - DeleteStatement: triggerAdded(Lcom/sleepycat/je/Database;)V
   * 9 com.sleepycat.je.Database.releaseTriggerListWriteLock()V: I5 Branch 59 IFNE L906 - true
   * 10 com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V: I7 Branch 60 IFEQ L926 - true
   * 11 Weak Mutation 410: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:931 - DeleteStatement: triggerAdded(Lcom/sleepycat/je/Database;)V
   * 12 Weak Mutation 408: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:929 - DeleteField: triggerListLjava/util/List;
   * 13 Weak Mutation 409: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:929 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 14 Weak Mutation 402: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC 1 insertAtFront
   * 15 Weak Mutation 403: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC -1 insertAtFront
   * 16 Weak Mutation 401: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp Negation of insertAtFront
   * 17 Weak Mutation 404: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - ReplaceComparisonOperator == -> !=
   * 18 Weak Mutation 398: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> <
   */
  @Test
  public void test18()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      // Undeclared exception!
      try {
        database0.addTrigger((DatabaseTrigger) null, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 19
  /*
   * 16 covered goals:
   * 1 Weak Mutation 406: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 407: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - DeleteStatement: add(ILjava/lang/Object;)V
   * 3 Weak Mutation 405: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - DeleteField: triggerListLjava/util/List;
   * 4 com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V: I7 Branch 60 IFEQ L926 - false
   * 5 Weak Mutation 410: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:931 - DeleteStatement: triggerAdded(Lcom/sleepycat/je/Database;)V
   * 6 Weak Mutation 402: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC 1 insertAtFront
   * 7 Weak Mutation 403: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp IINC -1 insertAtFront
   * 8 Weak Mutation 401: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - InsertUnaryOp Negation of insertAtFront
   * 9 Weak Mutation 404: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:926 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 395: com.sleepycat.je.Database.acquireTriggerListWriteLock()V:895 - ReplaceComparisonOperator != null -> = null
   * 11 Weak Mutation 398: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - ReplaceComparisonOperator != -> <
   * 12 Weak Mutation 397: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteStatement: size()I
   * 13 Weak Mutation 396: com.sleepycat.je.Database.releaseTriggerListWriteLock()V:906 - DeleteField: triggerListLjava/util/List;
   * 14 Weak Mutation 406: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 407: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - DeleteStatement: add(ILjava/lang/Object;)V
   * 16 Weak Mutation 405: com.sleepycat.je.Database.addTrigger(Lcom/sleepycat/je/DatabaseTrigger;Z)V:927 - DeleteField: triggerListLjava/util/List;
   */
  @Test
  public void test19()  throws Throwable  {
      File file0 = new File("#Gf.Ix[~t mt0?*9");
      Environment environment0 = new Environment(file0);
      Database database0 = new Database(environment0);
      ForeignKeyTrigger foreignKeyTrigger0 = new ForeignKeyTrigger((SecondaryDatabase) null);
      database0.addTrigger((DatabaseTrigger) foreignKeyTrigger0, true);
      assertEquals(true, database0.hasTriggers());
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * 1 com.sleepycat.je.Database.getDebugName()Ljava/lang/String;: I4 Branch 45 IFNULL L650 - true
   * 2 Weak Mutation 318: com.sleepycat.je.Database.getDebugName()Ljava/lang/String;:650 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test20()  throws Throwable  {
      Database database0 = new Database((Environment) null);
      String string0 = database0.getDebugName();
      assertNull(string0);
  }
}
