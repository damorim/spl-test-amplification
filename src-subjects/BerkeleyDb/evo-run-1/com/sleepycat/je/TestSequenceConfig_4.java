/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.SequenceConfig;

@RunWith(EvoSuiteRunner.class)
public class TestSequenceConfig_4 {


  //Test case number: 4
  /*
   * 71 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - DeleteField: exclusiveCreateZ
   * 2 Weak Mutation 33: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - InsertUnaryOp Negation
   * 3 Weak Mutation 35: com.sleepycat.je.SequenceConfig.setInitialValue(J)V:86 - InsertUnaryOp Negation
   * 4 Weak Mutation 38: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - InsertUnaryOp Negation
   * 5 Weak Mutation 39: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - InsertUnaryOp Negation
   * 6 Weak Mutation 40: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - InsertUnaryOp Negation
   * 7 Weak Mutation 41: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - DeleteField: rangeMinJ
   * 8 Weak Mutation 42: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - InsertUnaryOp Negation
   * 9 Weak Mutation 43: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - DeleteField: rangeMaxJ
   * 10 Weak Mutation 46: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC -1
   * 11 Weak Mutation 44: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp Negation
   * 12 Weak Mutation 45: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC 1
   * 13 com.sleepycat.je.SequenceConfig.getRangeMax()J: root-Branch
   * 14 com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z: root-Branch
   * 15 com.sleepycat.je.SequenceConfig.setRange(JJ)V: root-Branch
   * 16 com.sleepycat.je.SequenceConfig.getRangeMin()J: root-Branch
   * 17 com.sleepycat.je.SequenceConfig.setInitialValue(J)V: root-Branch
   * 18 com.sleepycat.je.SequenceConfig.setWrap(Z)V: root-Branch
   * 19 Weak Mutation 0: com.sleepycat.je.SequenceConfig.<init>()V:8 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 1: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 0
   * 21 Weak Mutation 2: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 1
   * 22 Weak Mutation 3: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -1
   * 23 Weak Mutation 4: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 9223372036854775807
   * 24 Weak Mutation 5: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -9223372036854775807
   * 25 Weak Mutation 6: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 0
   * 26 Weak Mutation 7: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 1
   * 27 Weak Mutation 8: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -1
   * 28 Weak Mutation 9: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 9223372036854775806
   * 29 Weak Mutation 10: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -9223372036854775808
   * 30 Weak Mutation 11: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 12: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> -1
   * 32 Weak Mutation 17: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - DeleteField: allowCreateZ
   * 33 Weak Mutation 16: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - InsertUnaryOp Negation
   * 34 Weak Mutation 21: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp Negation
   * 35 Weak Mutation 23: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp -1
   * 36 Weak Mutation 22: com.sleepycat.je.SequenceConfig.getCacheSize()I:51 - InsertUnaryOp +1
   * 37 Weak Mutation 28: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - InsertUnaryOp Negation
   * 38 Weak Mutation 0: com.sleepycat.je.SequenceConfig.<init>()V:8 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 1: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 0
   * 40 Weak Mutation 2: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 1
   * 41 Weak Mutation 3: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -1
   * 42 Weak Mutation 4: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> 9223372036854775807
   * 43 Weak Mutation 5: com.sleepycat.je.SequenceConfig.<init>()V:9 - ReplaceConstant - -9223372036854775808 -> -9223372036854775807
   * 44 Weak Mutation 6: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 0
   * 45 Weak Mutation 7: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 1
   * 46 Weak Mutation 8: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -1
   * 47 Weak Mutation 9: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> 9223372036854775806
   * 48 Weak Mutation 10: com.sleepycat.je.SequenceConfig.<init>()V:10 - ReplaceConstant - 9223372036854775807 -> -9223372036854775808
   * 49 Weak Mutation 11: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 50 Weak Mutation 12: com.sleepycat.je.SequenceConfig.<init>()V:11 - ReplaceConstant - 0 -> -1
   * 51 Weak Mutation 17: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - DeleteField: allowCreateZ
   * 52 Weak Mutation 16: com.sleepycat.je.SequenceConfig.getAllowCreate()Z:37 - InsertUnaryOp Negation
   * 53 Weak Mutation 28: com.sleepycat.je.SequenceConfig.getDecrement()Z:65 - InsertUnaryOp Negation
   * 54 Weak Mutation 31: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC 1
   * 55 Weak Mutation 30: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp Negation
   * 56 Weak Mutation 34: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - DeleteField: exclusiveCreateZ
   * 57 Weak Mutation 35: com.sleepycat.je.SequenceConfig.setInitialValue(J)V:86 - InsertUnaryOp Negation
   * 58 Weak Mutation 32: com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V:72 - InsertUnaryOp IINC -1
   * 59 Weak Mutation 33: com.sleepycat.je.SequenceConfig.getExclusiveCreate()Z:79 - InsertUnaryOp Negation
   * 60 Weak Mutation 38: com.sleepycat.je.SequenceConfig.setRange(JJ)V:120 - InsertUnaryOp Negation
   * 61 Weak Mutation 39: com.sleepycat.je.SequenceConfig.setRange(JJ)V:121 - InsertUnaryOp Negation
   * 62 Weak Mutation 42: com.sleepycat.je.SequenceConfig.getRangeMax()J:135 - InsertUnaryOp Negation
   * 63 Weak Mutation 40: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - InsertUnaryOp Negation
   * 64 Weak Mutation 41: com.sleepycat.je.SequenceConfig.getRangeMin()J:128 - DeleteField: rangeMinJ
   * 65 Weak Mutation 46: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC -1
   * 66 Weak Mutation 44: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp Negation
   * 67 Weak Mutation 45: com.sleepycat.je.SequenceConfig.setWrap(Z)V:142 - InsertUnaryOp IINC 1
   * 68 com.sleepycat.je.SequenceConfig.getAllowCreate()Z: root-Branch
   * 69 com.sleepycat.je.SequenceConfig.getDecrement()Z: root-Branch
   * 70 com.sleepycat.je.SequenceConfig.<init>()V: root-Branch
   * 71 com.sleepycat.je.SequenceConfig.setExclusiveCreate(Z)V: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      SequenceConfig sequenceConfig0 = SequenceConfig.DEFAULT;
      sequenceConfig0.getDecrement();
      sequenceConfig0.setInitialValue(0L);
      SequenceConfig sequenceConfig1 = new SequenceConfig();
      sequenceConfig0.setWrap(true);
      SequenceConfig sequenceConfig2 = new SequenceConfig();
      sequenceConfig0.getRangeMin();
      sequenceConfig2.getRangeMin();
      sequenceConfig0.getExclusiveCreate();
      sequenceConfig0.getRangeMax();
      SequenceConfig sequenceConfig3 = new SequenceConfig();
      sequenceConfig2.getExclusiveCreate();
      sequenceConfig1.setWrap(false);
      sequenceConfig2.getAllowCreate();
      sequenceConfig2.getRangeMin();
      sequenceConfig2.getCacheSize();
      sequenceConfig0.getAllowCreate();
      sequenceConfig1.setRange(1086L, 0L);
      assertEquals(1086L, sequenceConfig1.getRangeMin());
      
      sequenceConfig0.setExclusiveCreate(false);
      assertEquals(-996, sequenceConfig0.getCacheSize());
  }
}
