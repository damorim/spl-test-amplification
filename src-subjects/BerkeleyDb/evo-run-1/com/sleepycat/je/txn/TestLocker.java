/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.DeadlockException;
import com.sleepycat.je.LockNotGrantedException;
import com.sleepycat.je.OperationStatus;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.txn.Lock;
import com.sleepycat.je.txn.LockType;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;

@RunWith(EvoSuiteRunner.class)
public class TestLocker {


  //Test case number: 0
  /*
   * 4 covered goals:
   * 1 Weak Mutation 25: com.sleepycat.je.txn.Locker.getId()J:102 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Locker.getId()J: root-Branch
   * 3 Weak Mutation 25: com.sleepycat.je.txn.Locker.getId()J:102 - InsertUnaryOp Negation
   * 4 com.sleepycat.je.txn.Locker.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getTransactionId();
      assertEquals(0L, long0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.je.txn.Locker.getDefaultNoWait()Z:109 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Locker.getDefaultNoWait()Z: root-Branch
   * 3 Weak Mutation 27: com.sleepycat.je.txn.Locker.getDefaultNoWait()Z:109 - InsertUnaryOp Negation
   */
  @Test
  public void test1()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.getDefaultNoWait();
      assertEquals(false, boolean0);
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * 1 Weak Mutation 30: com.sleepycat.je.txn.Locker.getLockTimeout()J:116 - DeleteField: lockTimeOutMillisJ
   * 2 Weak Mutation 31: com.sleepycat.je.txn.Locker.setLockTimeout(J)V:124 - InsertUnaryOp Negation of timeOutMillis
   * 3 com.sleepycat.je.txn.Locker.setLockTimeout(J)V: root-Branch
   * 4 Weak Mutation 29: com.sleepycat.je.txn.Locker.getLockTimeout()J:116 - InsertUnaryOp Negation
   * 5 Weak Mutation 29: com.sleepycat.je.txn.Locker.getLockTimeout()J:116 - InsertUnaryOp Negation
   * 6 Weak Mutation 31: com.sleepycat.je.txn.Locker.setLockTimeout(J)V:124 - InsertUnaryOp Negation of timeOutMillis
   * 7 Weak Mutation 30: com.sleepycat.je.txn.Locker.getLockTimeout()J:116 - DeleteField: lockTimeOutMillisJ
   * 8 com.sleepycat.je.txn.Locker.getLockTimeout()J: root-Branch
   */
  @Test
  public void test2()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setLockTimeout(328L);
      long long0 = txn0.getLockTimeout();
      assertEquals(328L, long0);
  }

  //Test case number: 3
  /*
   * 39 covered goals:
   * 1 Weak Mutation 69: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - DeleteField: txnStartMillisJ
   * 2 Weak Mutation 73: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceComparisonOperator == -> >=
   * 3 Weak Mutation 76: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - DeleteStatement: currentTimeMillis()J
   * 4 Weak Mutation 77: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - InsertUnaryOp Negation
   * 5 Weak Mutation 78: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - DeleteField: txnStartMillisJ
   * 6 Weak Mutation 81: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> /
   * 7 Weak Mutation 80: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> +
   * 8 Weak Mutation 82: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> *
   * 9 Weak Mutation 85: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - DeleteField: txnTimeOutMillisJ
   * 10 Weak Mutation 84: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - InsertUnaryOp Negation
   * 11 Weak Mutation 86: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - DeleteStatement: longSub(JJ)I
   * 12 Weak Mutation 83: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - InsertUnaryOp Negation of diff
   * 13 Weak Mutation 89: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - ReplaceComparisonOperator <= -> -1
   * 14 Weak Mutation 90: com.sleepycat.je.txn.Locker.isTimedOut()Z:441 - ReplaceConstant - 1 -> 0
   * 15 com.sleepycat.je.txn.Locker.isTimedOut()Z: I6 Branch 6 IFEQ L438 - false
   * 16 com.sleepycat.je.txn.Locker.isTimedOut()Z: I20 Branch 7 IFLE L440 - false
   * 17 Weak Mutation 32: com.sleepycat.je.txn.Locker.setTxnTimeout(J)V:131 - InsertUnaryOp Negation of timeOutMillis
   * 18 Weak Mutation 33: com.sleepycat.je.txn.Locker.setTxnTimeout(J)V:132 - DeleteStatement: currentTimeMillis()J
   * 19 Weak Mutation 32: com.sleepycat.je.txn.Locker.setTxnTimeout(J)V:131 - InsertUnaryOp Negation of timeOutMillis
   * 20 Weak Mutation 33: com.sleepycat.je.txn.Locker.setTxnTimeout(J)V:132 - DeleteStatement: currentTimeMillis()J
   * 21 Weak Mutation 68: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - InsertUnaryOp Negation
   * 22 Weak Mutation 69: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - DeleteField: txnStartMillisJ
   * 23 Weak Mutation 70: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceConstant - 0 -> 1
   * 24 Weak Mutation 71: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceConstant - 0 -> -1
   * 25 Weak Mutation 76: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - DeleteStatement: currentTimeMillis()J
   * 26 Weak Mutation 77: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - InsertUnaryOp Negation
   * 27 Weak Mutation 78: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - DeleteField: txnStartMillisJ
   * 28 Weak Mutation 72: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - DeleteStatement: longSub(JJ)I
   * 29 Weak Mutation 73: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceComparisonOperator == -> >=
   * 30 Weak Mutation 85: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - DeleteField: txnTimeOutMillisJ
   * 31 Weak Mutation 84: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - InsertUnaryOp Negation
   * 32 Weak Mutation 86: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - DeleteStatement: longSub(JJ)I
   * 33 Weak Mutation 81: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> /
   * 34 Weak Mutation 80: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> +
   * 35 Weak Mutation 83: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - InsertUnaryOp Negation of diff
   * 36 Weak Mutation 82: com.sleepycat.je.txn.Locker.isTimedOut()Z:439 - ReplaceArithmeticOperator - -> *
   * 37 Weak Mutation 89: com.sleepycat.je.txn.Locker.isTimedOut()Z:440 - ReplaceComparisonOperator <= -> -1
   * 38 Weak Mutation 90: com.sleepycat.je.txn.Locker.isTimedOut()Z:441 - ReplaceConstant - 1 -> 0
   * 39 com.sleepycat.je.txn.Locker.setTxnTimeout(J)V: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setTxnTimeout((long) (-1127));
      boolean boolean0 = txn0.isTimedOut();
      assertEquals((-1127L), txn0.getTxnTimeOut());
      assertEquals(true, boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.txn.Locker.isReadUncommittedDefault()Z:140 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Locker.isReadUncommittedDefault()Z: root-Branch
   * 3 Weak Mutation 34: com.sleepycat.je.txn.Locker.isReadUncommittedDefault()Z:140 - InsertUnaryOp Negation
   */
  @Test
  public void test4()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isReadUncommittedDefault();
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * 1 Weak Mutation 36: com.sleepycat.je.txn.Locker.getWaitingFor()Lcom/sleepycat/je/txn/Lock;:144 - DeleteField: waitingForLcom/sleepycat/je/txn/Lock;
   * 2 com.sleepycat.je.txn.Locker.getWaitingFor()Lcom/sleepycat/je/txn/Lock;: root-Branch
   * 3 com.sleepycat.je.txn.Locker.setWaitingFor(Lcom/sleepycat/je/txn/Lock;)V: root-Branch
   * 4 Weak Mutation 36: com.sleepycat.je.txn.Locker.getWaitingFor()Lcom/sleepycat/je/txn/Lock;:144 - DeleteField: waitingForLcom/sleepycat/je/txn/Lock;
   */
  @Test
  public void test5()  throws Throwable  {
      Txn txn0 = new Txn();
      Lock lock0 = new Lock((Long) 0L);
      txn0.setWaitingFor(lock0);
      Lock lock1 = txn0.getWaitingFor();
      assertSame(lock1, lock0);
  }

  //Test case number: 6
  /*
   * 10 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp Negation of noWait
   * 2 Weak Mutation 39: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp IINC 1 noWait
   * 3 Weak Mutation 37: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp Negation of nodeId
   * 4 Weak Mutation 40: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp IINC -1 noWait
   * 5 Weak Mutation 41: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - DeleteStatement: lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;
   * 6 Weak Mutation 38: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp Negation of noWait
   * 7 Weak Mutation 39: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp IINC 1 noWait
   * 8 Weak Mutation 37: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp Negation of nodeId
   * 9 Weak Mutation 40: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - InsertUnaryOp IINC -1 noWait
   * 10 Weak Mutation 41: com.sleepycat.je.txn.Locker.lock(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:205 - DeleteStatement: lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;
   */
  @Test
  public void test6()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.WRITE;
      // Undeclared exception!
      try {
        txn0.lock((long) (-1127), lockType0, true, (DatabaseImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - InsertUnaryOp Negation of nodeId
   * 2 Weak Mutation 47: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 48: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - DeleteStatement: lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;
   * 4 com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: root-Branch
   * 5 Weak Mutation 46: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - InsertUnaryOp Negation of nodeId
   * 6 Weak Mutation 47: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 48: com.sleepycat.je.txn.Locker.nonBlockingLock(JLcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:233 - DeleteStatement: lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;
   */
  @Test
  public void test7()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try {
        txn0.nonBlockingLock((long) (-1127), lockType0, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.txn.Locker.releaseLock(J)V:240 - DeleteStatement: release(JLcom/sleepycat/je/txn/Locker;)Z
   * 2 Weak Mutation 50: com.sleepycat.je.txn.Locker.releaseLock(J)V:240 - InsertUnaryOp Negation of nodeId
   * 3 com.sleepycat.je.txn.Locker.releaseLock(J)V: root-Branch
   * 4 Weak Mutation 51: com.sleepycat.je.txn.Locker.releaseLock(J)V:240 - DeleteStatement: release(JLcom/sleepycat/je/txn/Locker;)Z
   * 5 Weak Mutation 50: com.sleepycat.je.txn.Locker.releaseLock(J)V:240 - InsertUnaryOp Negation of nodeId
   */
  @Test
  public void test8()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.releaseLock((long) (-1127));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * 1 Weak Mutation 54: com.sleepycat.je.txn.Locker.demoteLock(J)V:247 - DeleteStatement: demote(JLcom/sleepycat/je/txn/Locker;)V
   * 2 Weak Mutation 53: com.sleepycat.je.txn.Locker.demoteLock(J)V:247 - InsertUnaryOp Negation of nodeId
   * 3 com.sleepycat.je.txn.Locker.demoteLock(J)V: root-Branch
   * 4 Weak Mutation 54: com.sleepycat.je.txn.Locker.demoteLock(J)V:247 - DeleteStatement: demote(JLcom/sleepycat/je/txn/Locker;)V
   * 5 Weak Mutation 53: com.sleepycat.je.txn.Locker.demoteLock(J)V:247 - InsertUnaryOp Negation of nodeId
   */
  @Test
  public void test9()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.demoteLock((long) (-1127));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 55: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:307 - ReplaceVariable other -> this
   * 2 Weak Mutation 56: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:307 - ReplaceComparisonOperator == -> !=
   * 3 Weak Mutation 62: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:311 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z: I4 Branch 3 IFEQ L307 - true
   * 5 Weak Mutation 55: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:307 - ReplaceVariable other -> this
   * 6 Weak Mutation 56: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:307 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 62: com.sleepycat.je.txn.Locker.sharesLocksWith(Lcom/sleepycat/je/txn/Locker;)Z:311 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test10()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.sharesLocksWith((Locker) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 9 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteField: SUCCESSLcom/sleepycat/je/OperationStatus;
   * 2 Weak Mutation 64: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 66: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 67: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteStatement: operationEnd(Z)V
   * 5 com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V: I5 Branch 5 IF_ACMPNE L343 - true
   * 6 Weak Mutation 63: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteField: SUCCESSLcom/sleepycat/je/OperationStatus;
   * 7 Weak Mutation 64: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 66: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 67: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteStatement: operationEnd(Z)V
   */
  @Test
  public void test11()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.operationEnd((OperationStatus) null);
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 12
  /*
   * 6 covered goals:
   * 1 Weak Mutation 65: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V: I5 Branch 5 IF_ACMPNE L343 - false
   * 3 Weak Mutation 63: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteField: SUCCESSLcom/sleepycat/je/OperationStatus;
   * 4 Weak Mutation 64: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 67: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - DeleteStatement: operationEnd(Z)V
   * 6 Weak Mutation 65: com.sleepycat.je.txn.Locker.operationEnd(Lcom/sleepycat/je/OperationStatus;)V:343 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test12()  throws Throwable  {
      Txn txn0 = new Txn();
      OperationStatus operationStatus0 = OperationStatus.SUCCESS;
      txn0.operationEnd(operationStatus0);
      assertEquals((-1127), txn0.ACCUMULATED_LIMIT);
  }

  //Test case number: 13
  /*
   * 9 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - InsertUnaryOp Negation
   * 2 Weak Mutation 70: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 71: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceConstant - 0 -> -1
   * 4 Weak Mutation 72: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - DeleteStatement: longSub(JJ)I
   * 5 Weak Mutation 75: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceComparisonOperator == -> -2
   * 6 Weak Mutation 91: com.sleepycat.je.txn.Locker.isTimedOut()Z:444 - ReplaceConstant - 0 -> 1
   * 7 com.sleepycat.je.txn.Locker.isTimedOut()Z: I6 Branch 6 IFEQ L438 - true
   * 8 Weak Mutation 75: com.sleepycat.je.txn.Locker.isTimedOut()Z:438 - ReplaceComparisonOperator == -> -2
   * 9 Weak Mutation 91: com.sleepycat.je.txn.Locker.isTimedOut()Z:444 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test13()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isTimedOut();
      assertEquals(false, boolean0);
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * 1 Weak Mutation 92: com.sleepycat.je.txn.Locker.getTxnTimeOut()J:448 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Locker.getTxnTimeOut()J: root-Branch
   * 3 Weak Mutation 92: com.sleepycat.je.txn.Locker.getTxnTimeOut()J:448 - InsertUnaryOp Negation
   */
  @Test
  public void test14()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getTxnTimeOut();
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Weak Mutation 94: com.sleepycat.je.txn.Locker.getTxnStartMillis()J:452 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Locker.getTxnStartMillis()J: root-Branch
   * 3 Weak Mutation 94: com.sleepycat.je.txn.Locker.getTxnStartMillis()J:452 - InsertUnaryOp Negation
   */
  @Test
  public void test15()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getTxnStartMillis();
      assertEquals(0L, long0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * 1 Weak Mutation 97: com.sleepycat.je.txn.Locker.unregisterHandle(Lcom/sleepycat/je/Database;)V:459 - ReplaceComparisonOperator = null -> != null
   * 2 com.sleepycat.je.txn.Locker.unregisterHandle(Lcom/sleepycat/je/Database;)V: I4 Branch 8 IFNULL L459 - true
   * 3 Weak Mutation 97: com.sleepycat.je.txn.Locker.unregisterHandle(Lcom/sleepycat/je/Database;)V:459 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test16()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.unregisterHandle((Database) null);
      assertEquals(false, txn0.isReadUncommittedDefault());
  }

  //Test case number: 17
  /*
   * 16 covered goals:
   * 1 Weak Mutation 101: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:469 - ReplaceComparisonOperator != null -> = null
   * 2 Weak Mutation 104: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:475 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 106: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:477 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 4 Weak Mutation 105: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:477 - DeleteField: handleLockToHandleMapLjava/util/Map;
   * 5 Weak Mutation 107: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:479 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 6 Weak Mutation 108: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:480 - DeleteField: handleToHandleLockMapLjava/util/Map;
   * 7 Weak Mutation 109: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:480 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 8 com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V: I8 Branch 9 IFNONNULL L469 - false
   * 9 com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V: I37 Branch 10 IFNONNULL L475 - false
   * 10 Weak Mutation 101: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:469 - ReplaceComparisonOperator != null -> = null
   * 11 Weak Mutation 108: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:480 - DeleteField: handleToHandleLockMapLjava/util/Map;
   * 12 Weak Mutation 109: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:480 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 13 Weak Mutation 106: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:477 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 14 Weak Mutation 107: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:479 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 15 Weak Mutation 104: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:475 - ReplaceComparisonOperator != null -> = null
   * 16 Weak Mutation 105: com.sleepycat.je.txn.Locker.addToHandleMaps(Ljava/lang/Long;Lcom/sleepycat/je/Database;)V:477 - DeleteField: handleLockToHandleMapLjava/util/Map;
   */
  @Test
  public void test17()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.addToHandleMaps((Long) 5L, (Database) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * 1 Weak Mutation 115: com.sleepycat.je.txn.Locker.transferHandleLock(Lcom/sleepycat/je/Database;Lcom/sleepycat/je/txn/Locker;Z)V:504 - DeleteStatement: dbGetDatabaseImpl(Lcom/sleepycat/je/Database;)Lcom/sleepycat/je/dbi/DatabaseImpl;
   * 2 Weak Mutation 115: com.sleepycat.je.txn.Locker.transferHandleLock(Lcom/sleepycat/je/Database;Lcom/sleepycat/je/txn/Locker;Z)V:504 - DeleteStatement: dbGetDatabaseImpl(Lcom/sleepycat/je/Database;)Lcom/sleepycat/je/dbi/DatabaseImpl;
   */
  @Test
  public void test18()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.transferHandleLock((Database) null, (Locker) txn0, false);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 19
  /*
   * 51 covered goals:
   * 1 Weak Mutation 145: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:534 - DeleteStatement: getClass()Ljava/lang/Class;
   * 2 Weak Mutation 146: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:534 - DeleteStatement: getName()Ljava/lang/String;
   * 3 Weak Mutation 152: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - DeleteStatement: lastIndexOf(I)I
   * 4 Weak Mutation 153: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 154: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> -
   * 6 Weak Mutation 155: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> %
   * 7 Weak Mutation 156: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> /
   * 8 Weak Mutation 157: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> *
   * 9 Weak Mutation 158: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - DeleteStatement: substring(I)Ljava/lang/String;
   * 10 Weak Mutation 147: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 0
   * 11 Weak Mutation 148: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 1
   * 12 Weak Mutation 149: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> -1
   * 13 Weak Mutation 150: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 45
   * 14 Weak Mutation 151: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 47
   * 15 Weak Mutation 159: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - InsertUnaryOp Negation
   * 16 Weak Mutation 173: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: toString()Ljava/lang/String;
   * 17 Weak Mutation 163: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - ReplaceConstant - _ -> 
   * 18 Weak Mutation 162: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 19 Weak Mutation 161: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: toString(J)Ljava/lang/String;
   * 20 Weak Mutation 164: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 21 Weak Mutation 171: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 22 Weak Mutation 170: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - ReplaceConstant - _ -> 
   * 23 Weak Mutation 169: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 24 Weak Mutation 172: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 25 Weak Mutation 166: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - ReplaceComparisonOperator != null -> = null
   * 26 com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;: I31 Branch 16 IFNONNULL L537 - false
   * 27 Weak Mutation 152: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - DeleteStatement: lastIndexOf(I)I
   * 28 Weak Mutation 153: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 154: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> -
   * 30 Weak Mutation 155: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> %
   * 31 Weak Mutation 156: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 157: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceArithmeticOperator + -> *
   * 33 Weak Mutation 158: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - DeleteStatement: substring(I)Ljava/lang/String;
   * 34 Weak Mutation 159: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - InsertUnaryOp Negation
   * 35 Weak Mutation 145: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:534 - DeleteStatement: getClass()Ljava/lang/Class;
   * 36 Weak Mutation 146: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:534 - DeleteStatement: getName()Ljava/lang/String;
   * 37 Weak Mutation 147: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 0
   * 38 Weak Mutation 148: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 1
   * 39 Weak Mutation 149: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> -1
   * 40 Weak Mutation 150: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 45
   * 41 Weak Mutation 151: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:535 - ReplaceConstant - 46 -> 47
   * 42 Weak Mutation 171: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 43 Weak Mutation 170: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - ReplaceConstant - _ -> 
   * 44 Weak Mutation 169: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 45 Weak Mutation 173: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: toString()Ljava/lang/String;
   * 46 Weak Mutation 172: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 47 Weak Mutation 163: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - ReplaceConstant - _ -> 
   * 48 Weak Mutation 162: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 49 Weak Mutation 161: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: toString(J)Ljava/lang/String;
   * 50 Weak Mutation 166: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:537 - ReplaceComparisonOperator != null -> = null
   * 51 Weak Mutation 164: com.sleepycat.je.txn.Locker.toString()Ljava/lang/String;:536 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   */
  @Test
  public void test19()  throws Throwable  {
      Txn txn0 = new Txn();
      String string0 = txn0.toString();
      assertEquals("0__Txn", string0);
      assertNotNull(string0);
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Weak Mutation 175: com.sleepycat.je.txn.Locker.dumpLockTable()V:544 - DeleteStatement: dump()V
   * 2 com.sleepycat.je.txn.Locker.dumpLockTable()V: root-Branch
   * 3 Weak Mutation 175: com.sleepycat.je.txn.Locker.dumpLockTable()V:544 - DeleteStatement: dump()V
   */
  @Test
  public void test20()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.dumpLockTable();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * 1 com.sleepycat.je.txn.Locker.transferHandleLockToHandle(Lcom/sleepycat/je/Database;)V: root-Branch
   * 2 Weak Mutation 0: com.sleepycat.je.txn.Locker.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;ZZ)V:68 - DeleteStatement: getTxnManager()Lcom/sleepycat/je/txn/TxnManager;
   * 3 Weak Mutation 0: com.sleepycat.je.txn.Locker.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;ZZ)V:68 - DeleteStatement: getTxnManager()Lcom/sleepycat/je/txn/TxnManager;
   */
  @Test
  public void test21()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.transferHandleLockToHandle((Database) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
