/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.txn.TxnAbort;
import com.sleepycat.je.txn.TxnCommit;

@RunWith(EvoSuiteRunner.class)
public class TestTxnEnd_1 {


  //Test case number: 1
  /*
   * 35 covered goals:
   * 1 Weak Mutation 12: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 0
   * 2 Weak Mutation 13: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 1
   * 3 Weak Mutation 14: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> -1
   * 4 Weak Mutation 15: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 7
   * 5 Weak Mutation 17: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - DeleteStatement: getTimestampLogSize()I
   * 6 Weak Mutation 16: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 9
   * 7 Weak Mutation 19: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 18: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 21: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> *
   * 10 Weak Mutation 20: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> /
   * 11 Weak Mutation 23: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> -
   * 12 Weak Mutation 22: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - DeleteStatement: getLongLogSize()I
   * 13 Weak Mutation 25: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> /
   * 14 Weak Mutation 24: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> %
   * 15 Weak Mutation 26: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> *
   * 16 com.sleepycat.je.txn.TxnEnd.getLogSize()I: root-Branch
   * 17 Weak Mutation 3: com.sleepycat.je.txn.TxnEnd.<init>()V:25 - ReplaceConstant - -1 -> 0
   * 18 Weak Mutation 4: com.sleepycat.je.txn.TxnEnd.<init>()V:25 - ReplaceConstant - -1 -> 1
   * 19 Weak Mutation 5: com.sleepycat.je.txn.TxnEnd.<init>()V:25 - ReplaceConstant - -1 -> -2
   * 20 Weak Mutation 12: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 0
   * 21 Weak Mutation 13: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 1
   * 22 Weak Mutation 14: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> -1
   * 23 Weak Mutation 15: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 7
   * 24 Weak Mutation 17: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - DeleteStatement: getTimestampLogSize()I
   * 25 Weak Mutation 16: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceConstant - 8 -> 9
   * 26 Weak Mutation 19: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> %
   * 27 Weak Mutation 18: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> -
   * 28 Weak Mutation 21: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> *
   * 29 Weak Mutation 20: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> /
   * 30 Weak Mutation 23: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> -
   * 31 Weak Mutation 22: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - DeleteStatement: getLongLogSize()I
   * 32 Weak Mutation 25: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> /
   * 33 Weak Mutation 24: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> %
   * 34 Weak Mutation 26: com.sleepycat.je.txn.TxnEnd.getLogSize()I:59 - ReplaceArithmeticOperator + -> *
   * 35 com.sleepycat.je.txn.TxnEnd.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      TxnAbort txnAbort0 = new TxnAbort();
      int int0 = txnAbort0.getLogSize();
      assertEquals(24, int0);
      assertEquals((-1L), txnAbort0.getLastLsn());
  }
}
