/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockResult;
import com.sleepycat.je.txn.WriteLockInfo;

@RunWith(EvoSuiteRunner.class)
public class TestLockResult_2 {


  //Test case number: 2
  /*
   * 29 covered goals:
   * 1 com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V: I8 Branch 2 IFEQ L32 - true
   * 2 Weak Mutation 25: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - ReplaceComparisonOperator == -> -2
   * 3 Weak Mutation 2: com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V:26 - InsertUnaryOp Negation
   * 4 Weak Mutation 3: com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V:26 - InsertUnaryOp Negation
   * 5 Weak Mutation 4: com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V:26 - InsertUnaryOp IINC 1
   * 6 Weak Mutation 5: com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V:26 - InsertUnaryOp IINC -1
   * 7 Weak Mutation 6: com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V:26 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 12: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - DeleteField: infoLcom/sleepycat/je/txn/WriteLockInfo;
   * 9 Weak Mutation 13: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - ReplaceComparisonOperator = null -> != null
   * 10 Weak Mutation 14: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - DeleteField: infoLcom/sleepycat/je/txn/WriteLockInfo;
   * 11 Weak Mutation 15: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - InsertUnaryOp Negation
   * 12 Weak Mutation 17: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 16: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:32 - DeleteField: neverLockedZ
   * 14 Weak Mutation 19: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - ReplaceConstant - -1 -> 0
   * 15 Weak Mutation 18: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - InsertUnaryOp Negation
   * 16 Weak Mutation 21: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - ReplaceConstant - -1 -> -2
   * 17 Weak Mutation 20: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - ReplaceConstant - -1 -> 1
   * 18 Weak Mutation 22: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - DeleteStatement: longSub(JJ)I
   * 19 Weak Mutation 25: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:33 - ReplaceComparisonOperator == -> -2
   * 20 Weak Mutation 34: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:37 - InsertUnaryOp IINC 1
   * 21 Weak Mutation 35: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:37 - InsertUnaryOp IINC -1
   * 22 Weak Mutation 32: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:37 - DeleteField: infoLcom/sleepycat/je/txn/WriteLockInfo;
   * 23 Weak Mutation 33: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:37 - InsertUnaryOp Negation
   * 24 Weak Mutation 36: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:38 - DeleteField: infoLcom/sleepycat/je/txn/WriteLockInfo;
   * 25 Weak Mutation 37: com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V:38 - ReplaceConstant - 0 -> 1
   * 26 com.sleepycat.je.txn.LockResult.setAbortLsn(JZ)V: root-Branch
   * 27 com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V: I4 Branch 1 IFNULL L32 - false
   * 28 com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V: I8 Branch 2 IFEQ L32 - false
   * 29 com.sleepycat.je.txn.LockResult.setAbortLsnInternal(JZZ)V: I14 Branch 3 IFEQ L33 - true
   */
  @Test
  public void test2()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      LockResult lockResult0 = new LockResult(lockGrantType0, writeLockInfo0);
      lockResult0.setAbortLsn((-1L), false);
      lockResult0.setAbortLsn((-1L), false);
      assertEquals(false, writeLockInfo0.neverLocked);
  }
}
