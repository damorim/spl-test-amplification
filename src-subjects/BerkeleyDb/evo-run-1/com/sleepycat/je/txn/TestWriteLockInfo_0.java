/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.txn.WriteLockInfo;

@RunWith(EvoSuiteRunner.class)
public class TestWriteLockInfo_0 {


  //Test case number: 0
  /*
   * 15 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.je.txn.WriteLockInfo.getAbortKnownDeleted()Z:25 - DeleteField: abortKnownDeletedZ
   * 2 Weak Mutation 18: com.sleepycat.je.txn.WriteLockInfo.getAbortKnownDeleted()Z:25 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.txn.WriteLockInfo.getAbortKnownDeleted()Z: root-Branch
   * 4 Weak Mutation 9: com.sleepycat.je.txn.WriteLockInfo.<init>()V:5 - ReplaceConstant - -1 -> 0
   * 5 Weak Mutation 10: com.sleepycat.je.txn.WriteLockInfo.<init>()V:5 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 11: com.sleepycat.je.txn.WriteLockInfo.<init>()V:5 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 12: com.sleepycat.je.txn.WriteLockInfo.<init>()V:19 - ReplaceConstant - -1 -> 0
   * 8 Weak Mutation 13: com.sleepycat.je.txn.WriteLockInfo.<init>()V:19 - ReplaceConstant - -1 -> 1
   * 9 Weak Mutation 14: com.sleepycat.je.txn.WriteLockInfo.<init>()V:19 - ReplaceConstant - -1 -> -2
   * 10 Weak Mutation 15: com.sleepycat.je.txn.WriteLockInfo.<init>()V:20 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 17: com.sleepycat.je.txn.WriteLockInfo.<init>()V:22 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 16: com.sleepycat.je.txn.WriteLockInfo.<init>()V:21 - ReplaceConstant - 1 -> 0
   * 13 Weak Mutation 19: com.sleepycat.je.txn.WriteLockInfo.getAbortKnownDeleted()Z:25 - DeleteField: abortKnownDeletedZ
   * 14 Weak Mutation 18: com.sleepycat.je.txn.WriteLockInfo.getAbortKnownDeleted()Z:25 - InsertUnaryOp Negation
   * 15 com.sleepycat.je.txn.WriteLockInfo.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      WriteLockInfo writeLockInfo0 = new WriteLockInfo();
      boolean boolean0 = writeLockInfo0.getAbortKnownDeleted();
      assertEquals(false, writeLockInfo0.createdThisTxn);
      assertEquals(true, writeLockInfo0.neverLocked);
      assertEquals(true, boolean0);
      assertEquals((-1L), writeLockInfo0.abortLsn);
  }
}
