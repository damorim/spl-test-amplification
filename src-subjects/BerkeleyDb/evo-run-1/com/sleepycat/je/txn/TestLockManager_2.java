/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.txn.DummyLockManager;
import com.sleepycat.je.txn.Lock;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockManager;

@RunWith(EvoSuiteRunner.class)
public class TestLockManager_2 {


  //Test case number: 2
  /*
   * 7 covered goals:
   * 1 Weak Mutation 0: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp Negation
   * 2 Weak Mutation 1: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp IINC 1
   * 3 Weak Mutation 2: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp IINC -1
   * 4 com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V: root-Branch
   * 5 Weak Mutation 0: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp Negation
   * 6 Weak Mutation 1: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp IINC 1
   * 7 Weak Mutation 2: com.sleepycat.je.txn.LockManager$LockAttemptResult.<init>(Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockGrantType;Z)V:701 - InsertUnaryOp IINC -1
   */
  @Test
  public void test2()  throws Throwable  {
      LockGrantType lockGrantType0 = LockGrantType.WAIT_PROMOTION;
      LockManager.LockAttemptResult lockManager_LockAttemptResult0 = new LockManager.LockAttemptResult((Lock) null, lockGrantType0, true);
      assertEquals(true, lockManager_LockAttemptResult0.success);
  }
}
