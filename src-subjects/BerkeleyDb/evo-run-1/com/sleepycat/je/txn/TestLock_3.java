/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.dbi.MemoryBudget;
import com.sleepycat.je.txn.Lock;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockType;
import com.sleepycat.je.txn.Locker;
import java.util.List;

@RunWith(EvoSuiteRunner.class)
public class TestLock_3 {


  //Test case number: 3
  /*
   * 61 covered goals:
   * 1 Weak Mutation 49: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:153 - DeleteField: firstOwnerLcom/sleepycat/je/txn/LockInfo;
   * 2 Weak Mutation 51: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:154 - DeleteField: firstOwnerLcom/sleepycat/je/txn/LockInfo;
   * 3 Weak Mutation 52: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:154 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 4 com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;: I24 Branch 15 IFNULL L153 - false
   * 5 Weak Mutation 41: com.sleepycat.je.txn.Lock.addOwner(Lcom/sleepycat/je/txn/LockInfo;Lcom/sleepycat/je/dbi/MemoryBudget;I)V:129 - ReplaceComparisonOperator != null -> = null
   * 6 Weak Mutation 47: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:147 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 51: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:154 - DeleteField: firstOwnerLcom/sleepycat/je/txn/LockInfo;
   * 8 Weak Mutation 50: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:153 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 49: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:153 - DeleteField: firstOwnerLcom/sleepycat/je/txn/LockInfo;
   * 10 Weak Mutation 52: com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;:154 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 11 Weak Mutation 126: com.sleepycat.je.txn.Lock.nWaiters()I:279 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 141: com.sleepycat.je.txn.Lock.nWaiters()I:286 - InsertUnaryOp IINC 1
   * 13 Weak Mutation 140: com.sleepycat.je.txn.Lock.nWaiters()I:286 - InsertUnaryOp Negation
   * 14 Weak Mutation 143: com.sleepycat.je.txn.Lock.nOwners()I:289 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 142: com.sleepycat.je.txn.Lock.nWaiters()I:286 - InsertUnaryOp IINC -1
   * 16 Weak Mutation 128: com.sleepycat.je.txn.Lock.nWaiters()I:280 - ReplaceComparisonOperator = null -> != null
   * 17 Weak Mutation 130: com.sleepycat.je.txn.Lock.nWaiters()I:283 - ReplaceComparisonOperator = null -> != null
   * 18 Weak Mutation 157: com.sleepycat.je.txn.Lock.nOwners()I:296 - InsertUnaryOp Negation
   * 19 Weak Mutation 158: com.sleepycat.je.txn.Lock.nOwners()I:296 - InsertUnaryOp IINC 1
   * 20 Weak Mutation 159: com.sleepycat.je.txn.Lock.nOwners()I:296 - InsertUnaryOp IINC -1
   * 21 Weak Mutation 145: com.sleepycat.je.txn.Lock.nOwners()I:290 - ReplaceComparisonOperator = null -> != null
   * 22 Weak Mutation 147: com.sleepycat.je.txn.Lock.nOwners()I:293 - ReplaceComparisonOperator = null -> != null
   * 23 Weak Mutation 171: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - InsertUnaryOp IINC 1
   * 24 Weak Mutation 170: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - InsertUnaryOp Negation
   * 25 Weak Mutation 168: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 175: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - DeleteField: WAIT_PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 27 Weak Mutation 174: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - ReplaceComparisonOperator == -> !=
   * 28 Weak Mutation 173: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - DeleteField: WAIT_NEWLcom/sleepycat/je/txn/LockGrantType;
   * 29 Weak Mutation 172: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - InsertUnaryOp IINC -1
   * 30 Weak Mutation 163: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:303 - ReplaceComparisonOperator != -> ==
   * 31 Weak Mutation 162: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:303 - ReplaceComparisonOperator != -> ==
   * 32 Weak Mutation 160: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:303 - InsertUnaryOp Negation
   * 33 Weak Mutation 167: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - ReplaceComparisonOperator != -> -1
   * 34 Weak Mutation 164: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:305 - DeleteStatement: nWaiters()I
   * 35 Weak Mutation 178: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - ReplaceComparisonOperator != -> ==
   * 36 Weak Mutation 176: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - ReplaceComparisonOperator == -> !=
   * 37 Weak Mutation 177: com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:306 - DeleteField: WAIT_RESTARTLcom/sleepycat/je/txn/LockGrantType;
   * 38 Weak Mutation 220: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:438 - DeleteField: NEWLcom/sleepycat/je/txn/LockGrantType;
   * 39 Weak Mutation 216: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:436 - ReplaceComparisonOperator != -> -1
   * 40 Weak Mutation 217: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:437 - InsertUnaryOp Negation
   * 41 Weak Mutation 218: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:437 - InsertUnaryOp IINC 1
   * 42 Weak Mutation 219: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:437 - InsertUnaryOp IINC -1
   * 43 Weak Mutation 213: com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;:436 - DeleteStatement: nOwners()I
   * 44 Weak Mutation 372: com.sleepycat.je.txn.Lock.validateRequest(Lcom/sleepycat/je/txn/Locker;)Z:735 - ReplaceComparisonOperator = null -> != null
   * 45 Weak Mutation 403: com.sleepycat.je.txn.Lock.validateRequest(Lcom/sleepycat/je/txn/Locker;)Z:749 - ReplaceConstant - 1 -> 0
   * 46 Weak Mutation 386: com.sleepycat.je.txn.Lock.validateRequest(Lcom/sleepycat/je/txn/Locker;)Z:740 - ReplaceComparisonOperator = null -> != null
   * 47 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I3 Branch 43 IFNE L303 - false
   * 48 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I7 Branch 44 IFNE L303 - true
   * 49 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I26 Branch 45 IFNE L305 - false
   * 50 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I40 Branch 46 IF_ACMPEQ L306 - false
   * 51 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I43 Branch 47 IF_ACMPEQ L306 - false
   * 52 com.sleepycat.je.txn.Lock.lock(Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/Locker;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I46 Branch 48 IF_ACMPNE L306 - true
   * 53 com.sleepycat.je.txn.Lock.tryLock(Lcom/sleepycat/je/txn/LockInfo;ZLcom/sleepycat/je/dbi/MemoryBudget;I)Lcom/sleepycat/je/txn/LockGrantType;: I4 Branch 88 IFNE L436 - false
   * 54 com.sleepycat.je.txn.Lock.validateRequest(Lcom/sleepycat/je/txn/Locker;)Z: I4 Branch 168 IFNULL L735 - true
   * 55 com.sleepycat.je.txn.Lock.validateRequest(Lcom/sleepycat/je/txn/Locker;)Z: I34 Branch 171 IFNULL L740 - true
   * 56 com.sleepycat.je.txn.Lock.nOwners()I: I8 Branch 41 IFNULL L290 - true
   * 57 com.sleepycat.je.txn.Lock.nOwners()I: I16 Branch 42 IFNULL L293 - true
   * 58 com.sleepycat.je.txn.Lock.addOwner(Lcom/sleepycat/je/txn/LockInfo;Lcom/sleepycat/je/dbi/MemoryBudget;I)V: I4 Branch 12 IFNONNULL L129 - false
   * 59 com.sleepycat.je.txn.Lock.nWaiters()I: I8 Branch 39 IFNULL L280 - true
   * 60 com.sleepycat.je.txn.Lock.nWaiters()I: I16 Branch 40 IFNULL L283 - true
   * 61 com.sleepycat.je.txn.Lock.getOwnersClone()Ljava/util/Set;: I4 Branch 14 IFNULL L147 - true
   */
  @Test
  public void test3()  throws Throwable  {
      Lock lock0 = new Lock((Long) (-308L));
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = lock0.lock(lockType0, (Locker) null, false, (MemoryBudget) null, 0);
      assertNotNull(lockGrantType0);
      
      lock0.getOwnersClone();
      assertEquals(1, lock0.nOwners());
      assertEquals(0, lock0.nWaiters());
  }
}
