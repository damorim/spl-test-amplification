/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogUtils;
import com.sleepycat.je.txn.TxnPrepare;
import javax.transaction.xa.Xid;

@RunWith(EvoSuiteRunner.class)
public class TestTxnPrepare_3 {


  //Test case number: 3
  /*
   * 33 covered goals:
   * 1 Weak Mutation 3: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 0
   * 2 Weak Mutation 4: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 1
   * 3 Weak Mutation 5: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> -1
   * 4 Weak Mutation 6: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 7
   * 5 Weak Mutation 7: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 9
   * 6 Weak Mutation 8: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteStatement: getTimestampLogSize()I
   * 7 Weak Mutation 9: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> -
   * 8 Weak Mutation 10: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> %
   * 9 Weak Mutation 11: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> /
   * 10 Weak Mutation 12: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> *
   * 11 Weak Mutation 13: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteField: xidLjavax/transaction/xa/Xid;
   * 12 Weak Mutation 14: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteStatement: getXidSize(Ljavax/transaction/xa/Xid;)I
   * 13 Weak Mutation 15: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> -
   * 14 Weak Mutation 17: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 16: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> %
   * 16 Weak Mutation 18: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> *
   * 17 com.sleepycat.je.txn.TxnPrepare.getLogSize()I: root-Branch
   * 18 Weak Mutation 3: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 0
   * 19 Weak Mutation 4: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 1
   * 20 Weak Mutation 5: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> -1
   * 21 Weak Mutation 6: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 7
   * 22 Weak Mutation 7: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceConstant - 8 -> 9
   * 23 Weak Mutation 8: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteStatement: getTimestampLogSize()I
   * 24 Weak Mutation 9: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> -
   * 25 Weak Mutation 10: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 11: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> /
   * 27 Weak Mutation 12: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 13: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteField: xidLjavax/transaction/xa/Xid;
   * 29 Weak Mutation 14: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - DeleteStatement: getXidSize(Ljavax/transaction/xa/Xid;)I
   * 30 Weak Mutation 15: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> -
   * 31 Weak Mutation 17: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> /
   * 32 Weak Mutation 16: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> %
   * 33 Weak Mutation 18: com.sleepycat.je.txn.TxnPrepare.getLogSize()I:39 - ReplaceArithmeticOperator + -> *
   */
  @Test
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl((-6), byteArray0, byteArray0);
      TxnPrepare txnPrepare0 = new TxnPrepare((-45L), (Xid) logUtils_XidImpl0);
      int int0 = txnPrepare0.getLogSize();
      assertEquals(48, int0);
  }
}
