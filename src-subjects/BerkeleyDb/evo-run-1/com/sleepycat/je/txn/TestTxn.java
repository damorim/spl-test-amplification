/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.CursorImpl;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogUtils;
import com.sleepycat.je.log.entry.LNLogEntry;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.txn.Lock;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockType;
import com.sleepycat.je.txn.Locker;
import com.sleepycat.je.txn.Txn;
import com.sleepycat.je.txn.TxnManager;
import com.sleepycat.je.txn.WriteLockInfo;
import java.nio.ByteBuffer;
import javax.transaction.xa.Xid;

@RunWith(EvoSuiteRunner.class)
public class TestTxn {


  //Test case number: 0
  /*
   * 13 covered goals:
   * 1 Weak Mutation 50: com.sleepycat.je.txn.Txn.generateId(Lcom/sleepycat/je/txn/TxnManager;)J:130 - DeleteStatement: incTxnId()J
   * 2 com.sleepycat.je.txn.Txn.generateId(Lcom/sleepycat/je/txn/TxnManager;)J: root-Branch
   * 3 Weak Mutation 42: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 43: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 41: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 46: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 47: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> 0
   * 8 Weak Mutation 44: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> 0
   * 9 Weak Mutation 45: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 50: com.sleepycat.je.txn.Txn.generateId(Lcom/sleepycat/je/txn/TxnManager;)J:130 - DeleteStatement: incTxnId()J
   * 11 Weak Mutation 49: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> -2
   * 12 Weak Mutation 48: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> 1
   * 13 com.sleepycat.je.txn.Txn.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Txn txn0 = new Txn();
      TxnManager txnManager0 = new TxnManager((EnvironmentImpl) null);
      long long0 = txn0.generateId(txnManager0);
      assertEquals(3L, txnManager0.incTxnId());
      assertEquals(2L, long0);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * 1 Weak Mutation 51: com.sleepycat.je.txn.Txn.getLastLsn()J:137 - InsertUnaryOp Negation
   * 2 Weak Mutation 52: com.sleepycat.je.txn.Txn.getLastLsn()J:137 - DeleteField: lastLoggedLsnJ
   * 3 com.sleepycat.je.txn.Txn.getLastLsn()J: root-Branch
   * 4 Weak Mutation 51: com.sleepycat.je.txn.Txn.getLastLsn()J:137 - InsertUnaryOp Negation
   * 5 Weak Mutation 52: com.sleepycat.je.txn.Txn.getLastLsn()J:137 - DeleteField: lastLoggedLsnJ
   */
  @Test
  public void test1()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getLastLsn();
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), long0);
  }

  //Test case number: 2
  /*
   * 25 covered goals:
   * 1 Weak Mutation 54: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 53: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - InsertUnaryOp Negation of prepared
   * 3 Weak Mutation 68: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceVariable txnState -> TXN_SYNC
   * 4 Weak Mutation 69: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 5 Weak Mutation 70: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - InsertUnaryOp Negation
   * 6 Weak Mutation 76: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -4
   * 7 Weak Mutation 77: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceBitwiseOperator & -> |
   * 8 Weak Mutation 78: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceBitwiseOperator & -> ^
   * 9 Weak Mutation 72: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> 0
   * 10 Weak Mutation 73: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> 1
   * 11 Weak Mutation 74: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -1
   * 12 Weak Mutation 75: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -6
   * 13 com.sleepycat.je.txn.Txn.setPrepared(Z)V: I3 Branch 5 IFEQ L141 - true
   * 14 Weak Mutation 54: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 53: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - InsertUnaryOp Negation of prepared
   * 16 Weak Mutation 68: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceVariable txnState -> TXN_SYNC
   * 17 Weak Mutation 69: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 18 Weak Mutation 70: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - InsertUnaryOp Negation
   * 19 Weak Mutation 76: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -4
   * 20 Weak Mutation 77: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceBitwiseOperator & -> |
   * 21 Weak Mutation 78: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceBitwiseOperator & -> ^
   * 22 Weak Mutation 72: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> 0
   * 23 Weak Mutation 73: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> 1
   * 24 Weak Mutation 74: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -1
   * 25 Weak Mutation 75: com.sleepycat.je.txn.Txn.setPrepared(Z)V:144 - ReplaceConstant - -5 -> -6
   */
  @Test
  public void test2()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(false);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals(false, txn0.isSuspended());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 3
  /*
   * 21 covered goals:
   * 1 Weak Mutation 58: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - InsertUnaryOp Negation
   * 2 Weak Mutation 57: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 3 Weak Mutation 56: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceVariable txnState -> TXN_SYNC
   * 4 Weak Mutation 63: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 3
   * 5 Weak Mutation 62: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> -1
   * 6 Weak Mutation 61: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 1
   * 7 Weak Mutation 60: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 0
   * 8 Weak Mutation 64: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 5
   * 9 Weak Mutation 65: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceBitwiseOperator | -> &
   * 10 com.sleepycat.je.txn.Txn.setPrepared(Z)V: I3 Branch 5 IFEQ L141 - false
   * 11 Weak Mutation 54: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 53: com.sleepycat.je.txn.Txn.setPrepared(Z)V:141 - InsertUnaryOp Negation of prepared
   * 13 Weak Mutation 58: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - InsertUnaryOp Negation
   * 14 Weak Mutation 57: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 15 Weak Mutation 56: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceVariable txnState -> TXN_SYNC
   * 16 Weak Mutation 63: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 3
   * 17 Weak Mutation 62: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> -1
   * 18 Weak Mutation 61: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 1
   * 19 Weak Mutation 60: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 0
   * 20 Weak Mutation 64: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceConstant - 4 -> 5
   * 21 Weak Mutation 65: com.sleepycat.je.txn.Txn.setPrepared(Z)V:142 - ReplaceBitwiseOperator | -> &
   */
  @Test
  public void test3()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setPrepared(true);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals(false, txn0.isSuspended());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 4
  /*
   * 30 covered goals:
   * 1 Weak Mutation 109: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - DeleteField: txnStateB
   * 2 Weak Mutation 105: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_NOSYNC
   * 3 Weak Mutation 117: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceComparisonOperator == -> >=
   * 4 Weak Mutation 120: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 1 -> 0
   * 5 com.sleepycat.je.txn.Txn.isSuspended()Z: I6 Branch 7 IFEQ L157 - false
   * 6 Weak Mutation 79: com.sleepycat.je.txn.Txn.setSuspended(Z)V:149 - InsertUnaryOp Negation of suspended
   * 7 Weak Mutation 84: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - InsertUnaryOp Negation
   * 8 Weak Mutation 87: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 1
   * 9 Weak Mutation 86: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 0
   * 10 Weak Mutation 80: com.sleepycat.je.txn.Txn.setSuspended(Z)V:149 - ReplaceComparisonOperator == -> !=
   * 11 Weak Mutation 83: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 12 Weak Mutation 82: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceVariable txnState -> TXN_SYNC
   * 13 Weak Mutation 89: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 7
   * 14 Weak Mutation 88: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> -1
   * 15 Weak Mutation 91: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceBitwiseOperator | -> &
   * 16 Weak Mutation 90: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 9
   * 17 Weak Mutation 110: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 0
   * 18 Weak Mutation 111: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 1
   * 19 Weak Mutation 108: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - InsertUnaryOp Negation
   * 20 Weak Mutation 109: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - DeleteField: txnStateB
   * 21 Weak Mutation 106: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_SYNC
   * 22 Weak Mutation 107: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 23 Weak Mutation 105: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_NOSYNC
   * 24 Weak Mutation 117: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceComparisonOperator == -> >=
   * 25 Weak Mutation 116: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceBitwiseOperator & -> ^
   * 26 Weak Mutation 114: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 9
   * 27 Weak Mutation 113: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 7
   * 28 Weak Mutation 112: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> -1
   * 29 Weak Mutation 120: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 1 -> 0
   * 30 com.sleepycat.je.txn.Txn.setSuspended(Z)V: I3 Branch 6 IFEQ L149 - false
   */
  @Test
  public void test4()  throws Throwable  {
      Txn txn0 = new Txn();
      assertEquals(false, txn0.isSuspended());
      
      txn0.setSuspended(true);
      boolean boolean0 = txn0.isSuspended();
      assertEquals(true, txn0.isSuspended());
      assertEquals(true, boolean0);
  }

  //Test case number: 5
  /*
   * 25 covered goals:
   * 1 Weak Mutation 93: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_NOSYNC
   * 2 Weak Mutation 95: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 3 Weak Mutation 94: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_SYNC
   * 4 Weak Mutation 102: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -8
   * 5 Weak Mutation 103: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceBitwiseOperator & -> |
   * 6 Weak Mutation 100: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -1
   * 7 Weak Mutation 101: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -10
   * 8 Weak Mutation 98: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> 0
   * 9 Weak Mutation 99: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> 1
   * 10 Weak Mutation 96: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - InsertUnaryOp Negation
   * 11 Weak Mutation 97: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - DeleteField: txnStateB
   * 12 Weak Mutation 104: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceBitwiseOperator & -> ^
   * 13 com.sleepycat.je.txn.Txn.setSuspended(Z)V: I3 Branch 6 IFEQ L149 - true
   * 14 Weak Mutation 93: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_NOSYNC
   * 15 Weak Mutation 95: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 16 Weak Mutation 94: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceVariable txnState -> TXN_SYNC
   * 17 Weak Mutation 102: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -8
   * 18 Weak Mutation 103: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceBitwiseOperator & -> |
   * 19 Weak Mutation 100: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -1
   * 20 Weak Mutation 101: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> -10
   * 21 Weak Mutation 98: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> 0
   * 22 Weak Mutation 99: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceConstant - -9 -> 1
   * 23 Weak Mutation 96: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - InsertUnaryOp Negation
   * 24 Weak Mutation 97: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - DeleteField: txnStateB
   * 25 Weak Mutation 104: com.sleepycat.je.txn.Txn.setSuspended(Z)V:152 - ReplaceBitwiseOperator & -> ^
   */
  @Test
  public void test5()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      assertEquals(true, txn0.isSuspended());
      
      txn0.setSuspended(false);
      assertEquals(false, txn0.isSuspended());
  }

  //Test case number: 6
  /*
   * 16 covered goals:
   * 1 Weak Mutation 110: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 0
   * 2 Weak Mutation 111: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 1
   * 3 Weak Mutation 108: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - InsertUnaryOp Negation
   * 4 Weak Mutation 106: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_SYNC
   * 5 Weak Mutation 107: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 6 Weak Mutation 119: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceComparisonOperator == -> -2
   * 7 Weak Mutation 116: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceBitwiseOperator & -> ^
   * 8 Weak Mutation 115: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceBitwiseOperator & -> |
   * 9 Weak Mutation 114: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 9
   * 10 Weak Mutation 113: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> 7
   * 11 Weak Mutation 112: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 8 -> -1
   * 12 Weak Mutation 121: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 0 -> 1
   * 13 com.sleepycat.je.txn.Txn.isSuspended()Z: I6 Branch 7 IFEQ L157 - true
   * 14 Weak Mutation 119: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceComparisonOperator == -> -2
   * 15 Weak Mutation 115: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceBitwiseOperator & -> |
   * 16 Weak Mutation 121: com.sleepycat.je.txn.Txn.isSuspended()Z:157 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test6()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isSuspended();
      assertEquals(false, boolean0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 7
  /*
   * 137 covered goals:
   * 1 Weak Mutation 123: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> -1
   * 2 Weak Mutation 122: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 127: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceComparisonOperator != -> ==
   * 4 Weak Mutation 126: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC -1 noWait
   * 5 Weak Mutation 125: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC 1 noWait
   * 6 Weak Mutation 124: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp Negation of noWait
   * 7 Weak Mutation 132: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceConstant - 1 -> 0
   * 8 Weak Mutation 133: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 134: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - DeleteStatement: checkState(Z)V
   * 10 Weak Mutation 137: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC 1 useNoWait
   * 11 Weak Mutation 136: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp Negation of useNoWait
   * 12 Weak Mutation 139: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 138: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC -1 useNoWait
   * 14 Weak Mutation 144: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of nodeId
   * 15 Weak Mutation 146: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of timeout
   * 16 Weak Mutation 151: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - DeleteStatement: lock(JLcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;JZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockGrantType;
   * 17 Weak Mutation 148: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp Negation of useNoWait
   * 18 Weak Mutation 149: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC 1 useNoWait
   * 19 Weak Mutation 150: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC -1 useNoWait
   * 20 Weak Mutation 541: com.sleepycat.je.txn.Txn.checkState(Z)V:940 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 542: com.sleepycat.je.txn.Txn.checkState(Z)V:941 - ReplaceConstant - 0 -> 1
   * 22 Weak Mutation 550: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> -1
   * 23 Weak Mutation 551: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 2
   * 24 Weak Mutation 548: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 0
   * 25 Weak Mutation 549: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 1
   * 26 Weak Mutation 546: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - InsertUnaryOp Negation
   * 27 Weak Mutation 544: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_SYNC
   * 28 Weak Mutation 545: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 29 Weak Mutation 554: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> ^
   * 30 Weak Mutation 552: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 4
   * 31 Weak Mutation 553: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> |
   * 32 Weak Mutation 558: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp Negation of state
   * 33 Weak Mutation 559: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC 1 state
   * 34 Weak Mutation 556: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_SYNC
   * 35 Weak Mutation 557: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 36 Weak Mutation 564: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 563: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> -1
   * 38 Weak Mutation 560: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC -1 state
   * 39 Weak Mutation 567: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_SYNC
   * 40 Weak Mutation 575: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 3
   * 41 Weak Mutation 574: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> -1
   * 42 Weak Mutation 573: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 1
   * 43 Weak Mutation 572: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 0
   * 44 Weak Mutation 571: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC -1 state
   * 45 Weak Mutation 570: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC 1 state
   * 46 Weak Mutation 569: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp Negation of state
   * 47 Weak Mutation 568: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 48 Weak Mutation 576: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> >
   * 49 Weak Mutation 580: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 0 -> 1
   * 50 Weak Mutation 582: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> ok
   * 51 Weak Mutation 583: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of calledByAbort
   * 52 Weak Mutation 584: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 calledByAbort
   * 53 Weak Mutation 585: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 calledByAbort
   * 54 Weak Mutation 586: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator != -> ==
   * 55 Weak Mutation 587: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable onlyAbortable -> ok
   * 56 Weak Mutation 589: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of onlyAbortable
   * 57 Weak Mutation 590: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 onlyAbortable
   * 58 Weak Mutation 591: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 onlyAbortable
   * 59 Weak Mutation 592: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator == -> !=
   * 60 Weak Mutation 601: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> calledByAbort
   * 61 Weak Mutation 600: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> onlyAbortable
   * 62 Weak Mutation 603: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 ok
   * 63 Weak Mutation 602: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of ok
   * 64 Weak Mutation 605: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator != -> ==
   * 65 Weak Mutation 604: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 ok
   * 66 com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: I7 Branch 8 IFNE L171 - true
   * 67 com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: I31 Branch 10 IFNE L174 - true
   * 68 com.sleepycat.je.txn.Txn.checkState(Z)V: I19 Branch 74 IFNE L943 - false
   * 69 com.sleepycat.je.txn.Txn.checkState(Z)V: I30 Branch 75 IF_ICMPNE L944 - true
   * 70 com.sleepycat.je.txn.Txn.checkState(Z)V: I40 Branch 76 IFNE L945 - false
   * 71 com.sleepycat.je.txn.Txn.checkState(Z)V: I42 Branch 77 IFEQ L945 - true
   * 72 com.sleepycat.je.txn.Txn.checkState(Z)V: I66 Branch 78 IFNE L949 - true
   * 73 Weak Mutation 127: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceComparisonOperator != -> ==
   * 74 Weak Mutation 126: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC -1 noWait
   * 75 Weak Mutation 125: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC 1 noWait
   * 76 Weak Mutation 124: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp Negation of noWait
   * 77 Weak Mutation 123: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> -1
   * 78 Weak Mutation 122: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> 1
   * 79 Weak Mutation 137: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC 1 useNoWait
   * 80 Weak Mutation 136: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp Negation of useNoWait
   * 81 Weak Mutation 139: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - ReplaceComparisonOperator != -> ==
   * 82 Weak Mutation 138: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC -1 useNoWait
   * 83 Weak Mutation 133: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - ReplaceConstant - 0 -> 1
   * 84 Weak Mutation 132: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceConstant - 1 -> 0
   * 85 Weak Mutation 134: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - DeleteStatement: checkState(Z)V
   * 86 Weak Mutation 144: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of nodeId
   * 87 Weak Mutation 146: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of timeout
   * 88 Weak Mutation 148: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp Negation of useNoWait
   * 89 Weak Mutation 149: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC 1 useNoWait
   * 90 Weak Mutation 150: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC -1 useNoWait
   * 91 Weak Mutation 151: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - DeleteStatement: lock(JLcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;JZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockGrantType;
   * 92 Weak Mutation 550: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> -1
   * 93 Weak Mutation 551: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 2
   * 94 Weak Mutation 548: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 0
   * 95 Weak Mutation 549: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 1
   * 96 Weak Mutation 546: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - InsertUnaryOp Negation
   * 97 Weak Mutation 544: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_SYNC
   * 98 Weak Mutation 545: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 99 Weak Mutation 558: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp Negation of state
   * 100 Weak Mutation 559: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC 1 state
   * 101 Weak Mutation 556: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_SYNC
   * 102 Weak Mutation 557: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 103 Weak Mutation 554: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> ^
   * 104 Weak Mutation 552: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 4
   * 105 Weak Mutation 553: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> |
   * 106 Weak Mutation 567: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_SYNC
   * 107 Weak Mutation 564: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 1 -> 0
   * 108 Weak Mutation 563: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> -1
   * 109 Weak Mutation 560: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC -1 state
   * 110 Weak Mutation 575: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 3
   * 111 Weak Mutation 574: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> -1
   * 112 Weak Mutation 573: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 1
   * 113 Weak Mutation 572: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 0
   * 114 Weak Mutation 571: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC -1 state
   * 115 Weak Mutation 570: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC 1 state
   * 116 Weak Mutation 569: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp Negation of state
   * 117 Weak Mutation 568: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 118 Weak Mutation 541: com.sleepycat.je.txn.Txn.checkState(Z)V:940 - ReplaceConstant - 0 -> 1
   * 119 Weak Mutation 542: com.sleepycat.je.txn.Txn.checkState(Z)V:941 - ReplaceConstant - 0 -> 1
   * 120 Weak Mutation 576: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> >
   * 121 Weak Mutation 580: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 0 -> 1
   * 122 Weak Mutation 582: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> ok
   * 123 Weak Mutation 583: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of calledByAbort
   * 124 Weak Mutation 584: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 calledByAbort
   * 125 Weak Mutation 585: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 calledByAbort
   * 126 Weak Mutation 586: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator != -> ==
   * 127 Weak Mutation 587: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable onlyAbortable -> ok
   * 128 Weak Mutation 589: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of onlyAbortable
   * 129 Weak Mutation 590: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 onlyAbortable
   * 130 Weak Mutation 591: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 onlyAbortable
   * 131 Weak Mutation 592: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator == -> !=
   * 132 Weak Mutation 601: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> calledByAbort
   * 133 Weak Mutation 600: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> onlyAbortable
   * 134 Weak Mutation 603: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 ok
   * 135 Weak Mutation 602: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of ok
   * 136 Weak Mutation 605: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator != -> ==
   * 137 Weak Mutation 604: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 ok
   */
  @Test
  public void test7()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.READ;
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      // Undeclared exception!
      try {
        txn0.nonBlockingLock(0L, lockType0, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 35 covered goals:
   * 1 Weak Mutation 141: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:175 - DeleteField: lockTimeOutMillisJ
   * 2 Weak Mutation 127: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 126: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC -1 noWait
   * 4 Weak Mutation 125: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp IINC 1 noWait
   * 5 Weak Mutation 124: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp Negation of noWait
   * 6 Weak Mutation 123: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> -1
   * 7 Weak Mutation 122: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:170 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 137: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC 1 useNoWait
   * 9 Weak Mutation 136: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp Negation of useNoWait
   * 10 Weak Mutation 139: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - ReplaceComparisonOperator != -> ==
   * 11 Weak Mutation 138: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:174 - InsertUnaryOp IINC -1 useNoWait
   * 12 Weak Mutation 140: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:175 - InsertUnaryOp Negation
   * 13 Weak Mutation 143: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - ReplaceVariable nodeId -> timeout
   * 14 Weak Mutation 128: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp Negation
   * 15 Weak Mutation 131: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 130: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceComparisonOperator != -> ==
   * 17 Weak Mutation 133: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 134: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:173 - DeleteStatement: checkState(Z)V
   * 19 Weak Mutation 144: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of nodeId
   * 20 Weak Mutation 145: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - ReplaceVariable timeout -> nodeId
   * 21 Weak Mutation 146: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - InsertUnaryOp Negation of timeout
   * 22 Weak Mutation 148: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp Negation of useNoWait
   * 23 Weak Mutation 149: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC 1 useNoWait
   * 24 Weak Mutation 150: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:179 - InsertUnaryOp IINC -1 useNoWait
   * 25 Weak Mutation 151: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - DeleteStatement: lock(JLcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;JZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockGrantType;
   * 26 Weak Mutation 141: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:175 - DeleteField: lockTimeOutMillisJ
   * 27 Weak Mutation 140: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:175 - InsertUnaryOp Negation
   * 28 Weak Mutation 143: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - ReplaceVariable nodeId -> timeout
   * 29 Weak Mutation 128: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - InsertUnaryOp Negation
   * 30 Weak Mutation 131: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 130: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:171 - ReplaceComparisonOperator != -> ==
   * 32 Weak Mutation 145: com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;:178 - ReplaceVariable timeout -> nodeId
   * 33 com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: I7 Branch 8 IFNE L171 - false
   * 34 com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: I10 Branch 9 IFNE L171 - false
   * 35 com.sleepycat.je.txn.Txn.lockInternal(JLcom/sleepycat/je/txn/LockType;ZLcom/sleepycat/je/dbi/DatabaseImpl;)Lcom/sleepycat/je/txn/LockResult;: I31 Branch 10 IFNE L174 - false
   */
  @Test
  public void test8()  throws Throwable  {
      Txn txn0 = new Txn();
      LockType lockType0 = LockType.RANGE_WRITE;
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      txn0.setLockTimeout((-1936L));
      // Undeclared exception!
      try {
        txn0.lockInternal((-1241L), lockType0, false, databaseImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 9
  /*
   * 39 covered goals:
   * 1 Weak Mutation 159: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_SYNC
   * 2 Weak Mutation 169: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> ^
   * 3 Weak Mutation 168: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> |
   * 4 Weak Mutation 172: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceComparisonOperator == -> -2
   * 5 Weak Mutation 163: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 0
   * 6 Weak Mutation 161: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - InsertUnaryOp Negation
   * 7 Weak Mutation 160: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 8 Weak Mutation 167: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 5
   * 9 Weak Mutation 166: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 3
   * 10 Weak Mutation 165: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> -1
   * 11 Weak Mutation 164: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 1
   * 12 Weak Mutation 180: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 181: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - DeleteStatement: checkState(Z)V
   * 14 Weak Mutation 182: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:200 - ReplaceComparisonOperator == -> !=
   * 15 Weak Mutation 190: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:204 - InsertUnaryOp Negation
   * 16 Weak Mutation 193: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:205 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 17 Weak Mutation 500: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:895 - ReplaceComparisonOperator != null -> = null
   * 18 Weak Mutation 501: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:901 - ReplaceConstant - 0 -> 1
   * 19 com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I: I6 Branch 14 IFEQ L193 - true
   * 20 com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I: I46 Branch 15 IFEQ L200 - true
   * 21 com.sleepycat.je.txn.Txn.checkCursorsForClose()Z: I25 Branch 72 IFNONNULL L895 - false
   * 22 Weak Mutation 159: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_SYNC
   * 23 Weak Mutation 169: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> ^
   * 24 Weak Mutation 168: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> |
   * 25 Weak Mutation 172: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceComparisonOperator == -> -2
   * 26 Weak Mutation 163: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 0
   * 27 Weak Mutation 161: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - InsertUnaryOp Negation
   * 28 Weak Mutation 160: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 29 Weak Mutation 167: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 5
   * 30 Weak Mutation 166: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 3
   * 31 Weak Mutation 165: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> -1
   * 32 Weak Mutation 164: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 1
   * 33 Weak Mutation 190: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:204 - InsertUnaryOp Negation
   * 34 Weak Mutation 182: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:200 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 180: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - ReplaceConstant - 0 -> 1
   * 36 Weak Mutation 181: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - DeleteStatement: checkState(Z)V
   * 37 Weak Mutation 193: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:205 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 38 Weak Mutation 500: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:895 - ReplaceComparisonOperator != null -> = null
   * 39 Weak Mutation 501: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:901 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test9()  throws Throwable  {
      Txn txn0 = new Txn();
      byte[] byteArray0 = new byte[10];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(311, byteArray0, byteArray0);
      // Undeclared exception!
      try {
        txn0.prepare((Xid) logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 10
  /*
   * 42 covered goals:
   * 1 Weak Mutation 186: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 2 Weak Mutation 184: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - InsertUnaryOp Negation
   * 3 Weak Mutation 183: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - ReplaceConstant - Transaction  -> 
   * 4 Weak Mutation 187: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - ReplaceConstant -  prepare failed because there were open cursors. -> 
   * 5 Weak Mutation 188: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 6 Weak Mutation 189: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - DeleteStatement: toString()Ljava/lang/String;
   * 7 Weak Mutation 462: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:851 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 8 Weak Mutation 464: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:852 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 495: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:894 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 10 Weak Mutation 496: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - DeleteStatement: isClosed()Z
   * 11 Weak Mutation 497: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - ReplaceComparisonOperator != -> ==
   * 12 Weak Mutation 498: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:897 - ReplaceConstant - 1 -> 0
   * 13 com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I: I46 Branch 15 IFEQ L200 - false
   * 14 com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I16 Branch 68 IFNULL L852 - true
   * 15 com.sleepycat.je.txn.Txn.checkCursorsForClose()Z: I25 Branch 72 IFNONNULL L895 - true
   * 16 com.sleepycat.je.txn.Txn.checkCursorsForClose()Z: I12 Branch 71 IFNE L896 - false
   * 17 Weak Mutation 159: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_SYNC
   * 18 Weak Mutation 169: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> ^
   * 19 Weak Mutation 168: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceBitwiseOperator & -> |
   * 20 Weak Mutation 172: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceComparisonOperator == -> -2
   * 21 Weak Mutation 163: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 0
   * 22 Weak Mutation 161: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - InsertUnaryOp Negation
   * 23 Weak Mutation 160: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 24 Weak Mutation 167: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 5
   * 25 Weak Mutation 166: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 3
   * 26 Weak Mutation 165: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> -1
   * 27 Weak Mutation 164: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:193 - ReplaceConstant - 4 -> 1
   * 28 Weak Mutation 182: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:200 - ReplaceComparisonOperator == -> !=
   * 29 Weak Mutation 180: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 181: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:199 - DeleteStatement: checkState(Z)V
   * 31 Weak Mutation 186: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 32 Weak Mutation 187: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - ReplaceConstant -  prepare failed because there were open cursors. -> 
   * 33 Weak Mutation 184: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - InsertUnaryOp Negation
   * 34 Weak Mutation 188: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 35 Weak Mutation 189: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:202 - DeleteStatement: toString()Ljava/lang/String;
   * 36 Weak Mutation 183: com.sleepycat.je.txn.Txn.prepare(Ljavax/transaction/xa/Xid;)I:201 - ReplaceConstant - Transaction  -> 
   * 37 Weak Mutation 464: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:852 - ReplaceComparisonOperator = null -> != null
   * 38 Weak Mutation 462: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:851 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 39 Weak Mutation 496: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - DeleteStatement: isClosed()Z
   * 40 Weak Mutation 497: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 498: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:897 - ReplaceConstant - 1 -> 0
   * 42 Weak Mutation 495: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:894 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   */
  @Test
  public void test10()  throws Throwable  {
      Txn txn0 = new Txn();
      CursorImpl cursorImpl0 = new CursorImpl((DatabaseImpl) null, (Locker) txn0, true);
      assertNotNull(cursorImpl0);
      
      byte[] byteArray0 = new byte[10];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(311, byteArray0, byteArray0);
      try {
        txn0.prepare((Xid) logUtils_XidImpl0);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Transaction 0 prepare failed because there were open cursors.
         */
      }
  }

  //Test case number: 11
  /*
   * 90 covered goals:
   * 1 Weak Mutation 197: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> -1
   * 2 Weak Mutation 196: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 1
   * 3 Weak Mutation 199: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - DeleteStatement: commit(B)J
   * 4 Weak Mutation 198: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 3
   * 5 Weak Mutation 195: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 0
   * 6 Weak Mutation 216: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 0
   * 7 Weak Mutation 217: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 1
   * 8 Weak Mutation 218: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> -2
   * 9 Weak Mutation 220: com.sleepycat.je.txn.Txn.commit(B)J:241 - DeleteStatement: checkState(Z)V
   * 10 Weak Mutation 219: com.sleepycat.je.txn.Txn.commit(B)J:241 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 221: com.sleepycat.je.txn.Txn.commit(B)J:242 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 230: com.sleepycat.je.txn.Txn.commit(B)J:246 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 244: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - DeleteStatement: checkState(Z)V
   * 14 Weak Mutation 243: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 248: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - DeleteField: lastLoggedLsnJ
   * 16 Weak Mutation 247: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 17 Weak Mutation 245: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 18 Weak Mutation 250: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 1
   * 19 Weak Mutation 251: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> -2
   * 20 Weak Mutation 249: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 0
   * 21 Weak Mutation 253: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - ReplaceComparisonOperator = null -> != null
   * 22 Weak Mutation 278: com.sleepycat.je.txn.Txn.undo()V:422 - DeleteField: lastLoggedLsnJ
   * 23 Weak Mutation 277: com.sleepycat.je.txn.Txn.undo()V:422 - InsertUnaryOp Negation
   * 24 Weak Mutation 280: com.sleepycat.je.txn.Txn.undo()V:423 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 25 Weak Mutation 581: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> onlyAbortable
   * 26 Weak Mutation 627: com.sleepycat.je.txn.Txn.close(Z)V:959 - InsertUnaryOp Negation
   * 27 Weak Mutation 626: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 28 Weak Mutation 625: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_SYNC
   * 29 Weak Mutation 631: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -1
   * 30 Weak Mutation 630: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 1
   * 31 Weak Mutation 629: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 0
   * 32 Weak Mutation 635: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> ^
   * 33 Weak Mutation 634: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> |
   * 34 Weak Mutation 633: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -3
   * 35 Weak Mutation 632: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -5
   * 36 Weak Mutation 639: com.sleepycat.je.txn.Txn.close(Z)V:960 - InsertUnaryOp Negation
   * 37 Weak Mutation 638: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 38 Weak Mutation 637: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_SYNC
   * 39 Weak Mutation 641: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 642: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceBitwiseOperator | -> &
   * 41 Weak Mutation 645: com.sleepycat.je.txn.Txn.close(Z)V:962 - DeleteStatement: getTxnManager()Lcom/sleepycat/je/txn/TxnManager;
   * 42 com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V: root-Branch
   * 43 com.sleepycat.je.txn.Txn.close(Z)V: root-Branch
   * 44 com.sleepycat.je.txn.Txn.commit(B)J: I19 Branch 16 IFEQ L242 - true
   * 45 com.sleepycat.je.txn.Txn.commit(B)J: I44 Branch 17 IFNULL L246 - true
   * 46 com.sleepycat.je.txn.Txn.commit(B)J: I281 Branch 26 IF_ICMPNE L317 - false
   * 47 com.sleepycat.je.txn.Txn.commit(B)J: I290 Branch 27 IFEQ L318 - true
   * 48 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I29 Branch 28 IFNULL L367 - true
   * 49 com.sleepycat.je.txn.Txn.checkState(Z)V: I40 Branch 76 IFNE L945 - true
   * 50 Weak Mutation 197: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> -1
   * 51 Weak Mutation 196: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 1
   * 52 Weak Mutation 199: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - DeleteStatement: commit(B)J
   * 53 Weak Mutation 198: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 3
   * 54 Weak Mutation 195: com.sleepycat.je.txn.Txn.commit(Ljavax/transaction/xa/Xid;)V:213 - ReplaceConstant - 2 -> 0
   * 55 Weak Mutation 220: com.sleepycat.je.txn.Txn.commit(B)J:241 - DeleteStatement: checkState(Z)V
   * 56 Weak Mutation 221: com.sleepycat.je.txn.Txn.commit(B)J:242 - ReplaceComparisonOperator == -> !=
   * 57 Weak Mutation 216: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 0
   * 58 Weak Mutation 217: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 1
   * 59 Weak Mutation 218: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> -2
   * 60 Weak Mutation 219: com.sleepycat.je.txn.Txn.commit(B)J:241 - ReplaceConstant - 0 -> 1
   * 61 Weak Mutation 230: com.sleepycat.je.txn.Txn.commit(B)J:246 - ReplaceComparisonOperator = null -> != null
   * 62 Weak Mutation 253: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - ReplaceComparisonOperator = null -> != null
   * 63 Weak Mutation 250: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 1
   * 64 Weak Mutation 251: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> -2
   * 65 Weak Mutation 248: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - DeleteField: lastLoggedLsnJ
   * 66 Weak Mutation 249: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 0
   * 67 Weak Mutation 247: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 68 Weak Mutation 244: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - DeleteStatement: checkState(Z)V
   * 69 Weak Mutation 245: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 70 Weak Mutation 243: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - ReplaceConstant - 1 -> 0
   * 71 Weak Mutation 278: com.sleepycat.je.txn.Txn.undo()V:422 - DeleteField: lastLoggedLsnJ
   * 72 Weak Mutation 277: com.sleepycat.je.txn.Txn.undo()V:422 - InsertUnaryOp Negation
   * 73 Weak Mutation 280: com.sleepycat.je.txn.Txn.undo()V:423 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 74 Weak Mutation 627: com.sleepycat.je.txn.Txn.close(Z)V:959 - InsertUnaryOp Negation
   * 75 Weak Mutation 626: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 76 Weak Mutation 625: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_SYNC
   * 77 Weak Mutation 631: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -1
   * 78 Weak Mutation 630: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 1
   * 79 Weak Mutation 629: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 0
   * 80 Weak Mutation 635: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> ^
   * 81 Weak Mutation 634: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> |
   * 82 Weak Mutation 633: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -3
   * 83 Weak Mutation 632: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -5
   * 84 Weak Mutation 639: com.sleepycat.je.txn.Txn.close(Z)V:960 - InsertUnaryOp Negation
   * 85 Weak Mutation 638: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 86 Weak Mutation 637: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_SYNC
   * 87 Weak Mutation 581: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> onlyAbortable
   * 88 Weak Mutation 645: com.sleepycat.je.txn.Txn.close(Z)V:962 - DeleteStatement: getTxnManager()Lcom/sleepycat/je/txn/TxnManager;
   * 89 Weak Mutation 641: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceConstant - 1 -> 0
   * 90 Weak Mutation 642: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceBitwiseOperator | -> &
   */
  @Test
  public void test11()  throws Throwable  {
      Txn txn0 = new Txn();
      try {
        txn0.commit((Xid) null);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         */
      }
  }

  //Test case number: 12
  /*
   * 53 covered goals:
   * 1 Weak Mutation 252: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - DeleteField: writeInfoLjava/util/Map;
   * 2 Weak Mutation 255: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp Negation of writeAbortRecord
   * 3 Weak Mutation 258: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 256: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC 1 writeAbortRecord
   * 5 Weak Mutation 257: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC -1 writeAbortRecord
   * 6 Weak Mutation 262: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC -1 forceFlush
   * 7 Weak Mutation 263: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 260: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp Negation of forceFlush
   * 9 Weak Mutation 261: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC 1 forceFlush
   * 10 Weak Mutation 265: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:370 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 11 Weak Mutation 340: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 339: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - DeleteStatement: isWriteLock()Z
   * 13 Weak Mutation 342: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:613 - ReplaceComparisonOperator != null -> = null
   * 14 Weak Mutation 343: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteField: writeInfoLjava/util/Map;
   * 15 Weak Mutation 344: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 16 Weak Mutation 346: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - ReplaceComparisonOperator == -> !=
   * 17 Weak Mutation 345: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - DeleteField: PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 18 Weak Mutation 348: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - ReplaceComparisonOperator != -> ==
   * 19 Weak Mutation 347: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - DeleteField: WAIT_PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 20 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I29 Branch 28 IFNULL L367 - false
   * 21 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I33 Branch 29 IFEQ L368 - false
   * 22 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I37 Branch 30 IFEQ L369 - false
   * 23 com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V: I10 Branch 43 IFEQ L612 - false
   * 24 com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V: I15 Branch 44 IFNONNULL L613 - false
   * 25 com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V: I45 Branch 45 IF_ACMPEQ L624 - false
   * 26 com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V: I50 Branch 46 IF_ACMPNE L625 - true
   * 27 Weak Mutation 205: com.sleepycat.je.txn.Txn.abort(Ljavax/transaction/xa/Xid;)V:219 - DeleteStatement: abort(Z)J
   * 28 Weak Mutation 204: com.sleepycat.je.txn.Txn.abort(Ljavax/transaction/xa/Xid;)V:219 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 239: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp Negation of forceFlush
   * 30 Weak Mutation 255: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp Negation of writeAbortRecord
   * 31 Weak Mutation 252: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - DeleteField: writeInfoLjava/util/Map;
   * 32 Weak Mutation 242: com.sleepycat.je.txn.Txn.abort(Z)J:354 - ReplaceConstant - 1 -> 0
   * 33 Weak Mutation 240: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp IINC 1 forceFlush
   * 34 Weak Mutation 241: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp IINC -1 forceFlush
   * 35 Weak Mutation 258: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - ReplaceComparisonOperator == -> !=
   * 36 Weak Mutation 256: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC 1 writeAbortRecord
   * 37 Weak Mutation 257: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC -1 writeAbortRecord
   * 38 Weak Mutation 262: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC -1 forceFlush
   * 39 Weak Mutation 263: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 260: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp Negation of forceFlush
   * 41 Weak Mutation 261: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC 1 forceFlush
   * 42 Weak Mutation 265: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:370 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 43 Weak Mutation 343: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteField: writeInfoLjava/util/Map;
   * 44 Weak Mutation 342: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:613 - ReplaceComparisonOperator != null -> = null
   * 45 Weak Mutation 340: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - ReplaceComparisonOperator == -> !=
   * 46 Weak Mutation 339: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - DeleteStatement: isWriteLock()Z
   * 47 Weak Mutation 348: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - ReplaceComparisonOperator != -> ==
   * 48 Weak Mutation 347: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - DeleteField: WAIT_PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 49 Weak Mutation 346: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - ReplaceComparisonOperator == -> !=
   * 50 Weak Mutation 345: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - DeleteField: PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 51 Weak Mutation 344: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 52 com.sleepycat.je.txn.Txn.abort(Ljavax/transaction/xa/Xid;)V: root-Branch
   * 53 com.sleepycat.je.txn.Txn.abort(Z)J: root-Branch
   */
  @Test
  public void test12()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 0);
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      // Undeclared exception!
      try {
        txn0.abort((Xid) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 13
  /*
   * 19 covered goals:
   * 1 Weak Mutation 254: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - ReplaceVariable writeAbortRecord -> forceFlush
   * 2 Weak Mutation 259: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - ReplaceVariable forceFlush -> writeAbortRecord
   * 3 Weak Mutation 269: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:373 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 4 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I37 Branch 30 IFEQ L369 - true
   * 5 Weak Mutation 230: com.sleepycat.je.txn.Txn.commit(B)J:246 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 262: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC -1 forceFlush
   * 7 Weak Mutation 263: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - ReplaceComparisonOperator == -> !=
   * 8 Weak Mutation 260: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp Negation of forceFlush
   * 9 Weak Mutation 261: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - InsertUnaryOp IINC 1 forceFlush
   * 10 Weak Mutation 501: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:901 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 212: com.sleepycat.je.txn.Txn.commit()J:228 - ReplaceVariable defaultFlushSyncBehavior -> TXN_WRITE_NOSYNC
   * 12 Weak Mutation 213: com.sleepycat.je.txn.Txn.commit()J:228 - InsertUnaryOp Negation
   * 13 Weak Mutation 215: com.sleepycat.je.txn.Txn.commit()J:228 - DeleteStatement: commit(B)J
   * 14 Weak Mutation 211: com.sleepycat.je.txn.Txn.commit()J:228 - ReplaceVariable defaultFlushSyncBehavior -> TXN_SYNC
   * 15 Weak Mutation 254: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - ReplaceVariable writeAbortRecord -> forceFlush
   * 16 Weak Mutation 259: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:369 - ReplaceVariable forceFlush -> writeAbortRecord
   * 17 Weak Mutation 269: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:373 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 18 com.sleepycat.je.txn.Txn.commit()J: root-Branch
   * 19 com.sleepycat.je.txn.Txn.commit(B)J: I281 Branch 26 IF_ICMPNE L317 - true
   */
  @Test
  public void test13()  throws Throwable  {
      Txn txn0 = new Txn();
      LogEntryType logEntryType0 = LogEntryType.LOG_TXN_COMMIT;
      MapLN mapLN0 = new MapLN();
      DatabaseId databaseId0 = new DatabaseId(0);
      byte[] byteArray0 = new byte[4];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN0, databaseId0, byteArray0, (-378L), true, txn0);
      Long long0 = lNLogEntry0.getTxnId();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.EXISTING;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      assertEquals(6500L, mapLN0.getLastId());
      
      try {
        txn0.commit();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = null The exception from the cleanup = null
         */
      }
  }

  //Test case number: 14
  /*
   * 22 covered goals:
   * 1 Weak Mutation 334: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceComparisonOperator != -> >
   * 2 com.sleepycat.je.txn.Txn.addLogInfo(J)V: I17 Branch 42 IFNE L509 - true
   * 3 Weak Mutation 336: com.sleepycat.je.txn.Txn.addLogInfo(J)V:510 - InsertUnaryOp Negation of lastLsn
   * 4 Weak Mutation 326: com.sleepycat.je.txn.Txn.addLogInfo(J)V:507 - InsertUnaryOp Negation of lastLsn
   * 5 Weak Mutation 327: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - InsertUnaryOp Negation
   * 6 Weak Mutation 335: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceComparisonOperator != -> -1
   * 7 Weak Mutation 332: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - DeleteStatement: longSub(JJ)I
   * 8 Weak Mutation 330: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> 1
   * 9 Weak Mutation 331: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> -2
   * 10 Weak Mutation 328: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - DeleteField: firstLoggedLsnJ
   * 11 Weak Mutation 329: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> 0
   * 12 Weak Mutation 336: com.sleepycat.je.txn.Txn.addLogInfo(J)V:510 - InsertUnaryOp Negation of lastLsn
   * 13 Weak Mutation 326: com.sleepycat.je.txn.Txn.addLogInfo(J)V:507 - InsertUnaryOp Negation of lastLsn
   * 14 Weak Mutation 327: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - InsertUnaryOp Negation
   * 15 Weak Mutation 334: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceComparisonOperator != -> >
   * 16 Weak Mutation 335: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceComparisonOperator != -> -1
   * 17 Weak Mutation 332: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - DeleteStatement: longSub(JJ)I
   * 18 Weak Mutation 330: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> 1
   * 19 Weak Mutation 331: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> -2
   * 20 Weak Mutation 328: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - DeleteField: firstLoggedLsnJ
   * 21 Weak Mutation 329: com.sleepycat.je.txn.Txn.addLogInfo(J)V:509 - ReplaceConstant - -1 -> 0
   * 22 com.sleepycat.je.txn.Txn.addLogInfo(J)V: I17 Branch 42 IFNE L509 - false
   */
  @Test
  public void test14()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.addLogInfo((-1406L));
      txn0.addLogInfo((-1291L));
      assertEquals((-1291L), txn0.getLastLsn());
      assertEquals((-1406L), txn0.getFirstActiveLsn());
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 338: com.sleepycat.je.txn.Txn.getFirstActiveLsn()J:520 - DeleteField: firstLoggedLsnJ
   * 2 Weak Mutation 337: com.sleepycat.je.txn.Txn.getFirstActiveLsn()J:520 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.txn.Txn.getFirstActiveLsn()J: root-Branch
   * 4 Weak Mutation 338: com.sleepycat.je.txn.Txn.getFirstActiveLsn()J:520 - DeleteField: firstLoggedLsnJ
   * 5 Weak Mutation 337: com.sleepycat.je.txn.Txn.getFirstActiveLsn()J:520 - InsertUnaryOp Negation
   */
  @Test
  public void test15()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getFirstActiveLsn();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), long0);
  }

  //Test case number: 16
  /*
   * 15 covered goals:
   * 1 Weak Mutation 351: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:641 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 353: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:642 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 354: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:648 - DeleteField: readLocksLjava/util/Set;
   * 4 Weak Mutation 355: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:648 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 5 Weak Mutation 410: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:759 - DeleteField: basicWriteLockInfoLcom/sleepycat/je/txn/WriteLockInfo;
   * 6 Weak Mutation 412: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:761 - ReplaceComparisonOperator = null -> != null
   * 7 com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V: I10 Branch 43 IFEQ L612 - true
   * 8 com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V: I8 Branch 47 IFNONNULL L642 - false
   * 9 com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;: I14 Branch 59 IFNULL L761 - true
   * 10 Weak Mutation 351: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:641 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 353: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:642 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 354: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:648 - DeleteField: readLocksLjava/util/Set;
   * 13 Weak Mutation 355: com.sleepycat.je.txn.Txn.addReadLock(Lcom/sleepycat/je/txn/Lock;)V:648 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 14 Weak Mutation 410: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:759 - DeleteField: basicWriteLockInfoLcom/sleepycat/je/txn/WriteLockInfo;
   * 15 Weak Mutation 412: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:761 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test16()  throws Throwable  {
      Txn txn0 = new Txn();
      WriteLockInfo writeLockInfo0 = txn0.getWriteLockInfo((long) (-15));
      assertNotNull(writeLockInfo0);
      
      LockType lockType0 = LockType.RESTART;
      LockGrantType lockGrantType0 = LockGrantType.PROMOTION;
      txn0.addLock((Long) 0L, writeLockInfo0.lock, lockType0, lockGrantType0);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 17
  /*
   * 14 covered goals:
   * 1 Weak Mutation 361: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:669 - DeleteField: writeInfoLjava/util/Map;
   * 2 Weak Mutation 364: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - InsertUnaryOp Negation of nodeId
   * 3 Weak Mutation 365: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   * 4 Weak Mutation 363: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - DeleteField: writeInfoLjava/util/Map;
   * 5 com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V: I20 Branch 50 IFNULL L669 - false
   * 6 Weak Mutation 357: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:665 - ReplaceComparisonOperator = null -> != null
   * 7 Weak Mutation 362: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:669 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 357: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:665 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 364: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - InsertUnaryOp Negation of nodeId
   * 10 Weak Mutation 365: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   * 11 Weak Mutation 361: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:669 - DeleteField: writeInfoLjava/util/Map;
   * 12 Weak Mutation 362: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:669 - ReplaceComparisonOperator = null -> != null
   * 13 Weak Mutation 363: com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V:670 - DeleteField: writeInfoLjava/util/Map;
   * 14 com.sleepycat.je.txn.Txn.removeLock(JLcom/sleepycat/je/txn/Lock;)V: I10 Branch 48 IFNULL L665 - true
   */
  @Test
  public void test17()  throws Throwable  {
      Txn txn0 = new Txn();
      LogEntryType logEntryType0 = LogEntryType.LOG_TXN_COMMIT;
      MapLN mapLN0 = new MapLN();
      DatabaseId databaseId0 = new DatabaseId(0);
      byte[] byteArray0 = new byte[4];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN0, databaseId0, byteArray0, (-378L), true, txn0);
      Long long0 = lNLogEntry0.getTxnId();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.EXISTING;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      assertEquals(7005L, mapLN0.getNextNodeId());
      
      txn0.removeLock((long) (byte) (-119), (Lock) null);
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 18
  /*
   * 31 covered goals:
   * 1 Weak Mutation 366: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:683 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 368: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:685 - ReplaceComparisonOperator = null -> != null
   * 3 Weak Mutation 374: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation
   * 4 Weak Mutation 381: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceConstant - Couldn't find lock for Node  -> 
   * 5 Weak Mutation 380: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceComparisonOperator != -> ==
   * 6 Weak Mutation 383: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 382: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation of nodeId
   * 8 Weak Mutation 377: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation of found
   * 9 Weak Mutation 376: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 379: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp IINC -1 found
   * 11 Weak Mutation 378: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp IINC 1 found
   * 12 Weak Mutation 386: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - DeleteStatement: toString()Ljava/lang/String;
   * 13 Weak Mutation 385: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 384: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - ReplaceConstant -  in writeInfo Map. -> 
   * 15 com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V: I14 Branch 51 IFNULL L685 - true
   * 16 com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V: I32 Branch 53 IFNE L692 - false
   * 17 com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V: I36 Branch 54 IFNE L692 - false
   * 18 Weak Mutation 374: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation
   * 19 Weak Mutation 368: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:685 - ReplaceComparisonOperator = null -> != null
   * 20 Weak Mutation 381: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceConstant - Couldn't find lock for Node  -> 
   * 21 Weak Mutation 380: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 383: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 23 Weak Mutation 382: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation of nodeId
   * 24 Weak Mutation 377: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp Negation of found
   * 25 Weak Mutation 376: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - ReplaceComparisonOperator != -> ==
   * 26 Weak Mutation 379: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp IINC -1 found
   * 27 Weak Mutation 378: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:692 - InsertUnaryOp IINC 1 found
   * 28 Weak Mutation 366: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:683 - ReplaceConstant - 0 -> 1
   * 29 Weak Mutation 386: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - DeleteStatement: toString()Ljava/lang/String;
   * 30 Weak Mutation 385: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 31 Weak Mutation 384: com.sleepycat.je.txn.Txn.moveWriteToReadLock(JLcom/sleepycat/je/txn/Lock;)V:693 - ReplaceConstant -  in writeInfo Map. -> 
   */
  @Test
  public void test18()  throws Throwable  {
      Txn txn0 = new Txn();
      Lock lock0 = txn0.getWaitingFor();
      // Undeclared exception!
      try {
        txn0.moveWriteToReadLock(1061L, lock0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
        /*
         * Couldn't find lock for Node 1061 in writeInfo Map.
         */
      }
  }

  //Test case number: 19
  /*
   * 24 covered goals:
   * 1 Weak Mutation 388: com.sleepycat.je.txn.Txn.createdNode(J)Z:727 - DeleteField: writeInfoLjava/util/Map;
   * 2 Weak Mutation 392: com.sleepycat.je.txn.Txn.createdNode(J)Z:728 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 3 Weak Mutation 390: com.sleepycat.je.txn.Txn.createdNode(J)Z:728 - DeleteField: writeInfoLjava/util/Map;
   * 4 Weak Mutation 391: com.sleepycat.je.txn.Txn.createdNode(J)Z:729 - InsertUnaryOp Negation of nodeId
   * 5 Weak Mutation 393: com.sleepycat.je.txn.Txn.createdNode(J)Z:730 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 394: com.sleepycat.je.txn.Txn.createdNode(J)Z:731 - InsertUnaryOp Negation
   * 7 com.sleepycat.je.txn.Txn.createdNode(J)Z: I14 Branch 55 IFNULL L727 - false
   * 8 com.sleepycat.je.txn.Txn.createdNode(J)Z: I33 Branch 56 IFNULL L730 - false
   * 9 Weak Mutation 398: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp IINC -1 created
   * 10 Weak Mutation 397: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp IINC 1 created
   * 11 Weak Mutation 396: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp Negation of created
   * 12 Weak Mutation 387: com.sleepycat.je.txn.Txn.createdNode(J)Z:725 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 389: com.sleepycat.je.txn.Txn.createdNode(J)Z:727 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 394: com.sleepycat.je.txn.Txn.createdNode(J)Z:731 - InsertUnaryOp Negation
   * 15 Weak Mutation 393: com.sleepycat.je.txn.Txn.createdNode(J)Z:730 - ReplaceComparisonOperator = null -> != null
   * 16 Weak Mutation 392: com.sleepycat.je.txn.Txn.createdNode(J)Z:728 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 17 Weak Mutation 398: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp IINC -1 created
   * 18 Weak Mutation 397: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp IINC 1 created
   * 19 Weak Mutation 396: com.sleepycat.je.txn.Txn.createdNode(J)Z:735 - InsertUnaryOp Negation of created
   * 20 Weak Mutation 387: com.sleepycat.je.txn.Txn.createdNode(J)Z:725 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 391: com.sleepycat.je.txn.Txn.createdNode(J)Z:729 - InsertUnaryOp Negation of nodeId
   * 22 Weak Mutation 390: com.sleepycat.je.txn.Txn.createdNode(J)Z:728 - DeleteField: writeInfoLjava/util/Map;
   * 23 Weak Mutation 389: com.sleepycat.je.txn.Txn.createdNode(J)Z:727 - ReplaceComparisonOperator = null -> != null
   * 24 Weak Mutation 388: com.sleepycat.je.txn.Txn.createdNode(J)Z:727 - DeleteField: writeInfoLjava/util/Map;
   */
  @Test
  public void test19()  throws Throwable  {
      Txn txn0 = new Txn();
      LogEntryType logEntryType0 = LogEntryType.LOG_TXN_COMMIT;
      MapLN mapLN0 = new MapLN();
      DatabaseId databaseId0 = new DatabaseId(0);
      byte[] byteArray0 = new byte[4];
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN0, databaseId0, byteArray0, (-378L), true, txn0);
      Long long0 = lNLogEntry0.getTxnId();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.EXISTING;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      assertEquals(7140L, mapLN0.getNextNodeId());
      
      boolean boolean0 = txn0.createdNode((long) (byte)0);
      assertEquals(false, boolean0);
  }

  //Test case number: 20
  /*
   * 12 covered goals:
   * 1 Weak Mutation 400: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:744 - ReplaceComparisonOperator = null -> != null
   * 2 Weak Mutation 404: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:748 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 406: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 407: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 405: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> 0
   * 6 com.sleepycat.je.txn.Txn.getAbortLsn(J)J: I14 Branch 57 IFNULL L744 - true
   * 7 com.sleepycat.je.txn.Txn.getAbortLsn(J)J: I40 Branch 58 IFNONNULL L748 - false
   * 8 Weak Mutation 400: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:744 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 406: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 407: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> -2
   * 11 Weak Mutation 404: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:748 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 405: com.sleepycat.je.txn.Txn.getAbortLsn(J)J:749 - ReplaceConstant - -1 -> 0
   */
  @Test
  public void test20()  throws Throwable  {
      Txn txn0 = new Txn();
      long long0 = txn0.getAbortLsn(1389L);
      assertEquals((-1L), long0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 21
  /*
   * 11 covered goals:
   * 1 Weak Mutation 411: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:761 - DeleteField: writeInfoLjava/util/Map;
   * 2 Weak Mutation 414: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - InsertUnaryOp Negation of nodeId
   * 3 Weak Mutation 415: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 4 Weak Mutation 413: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - DeleteField: writeInfoLjava/util/Map;
   * 5 com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;: I14 Branch 59 IFNULL L761 - false
   * 6 Weak Mutation 410: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:759 - DeleteField: basicWriteLockInfoLcom/sleepycat/je/txn/WriteLockInfo;
   * 7 Weak Mutation 412: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:761 - ReplaceComparisonOperator = null -> != null
   * 8 Weak Mutation 411: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:761 - DeleteField: writeInfoLjava/util/Map;
   * 9 Weak Mutation 414: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - InsertUnaryOp Negation of nodeId
   * 10 Weak Mutation 415: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 11 Weak Mutation 413: com.sleepycat.je.txn.Txn.getWriteLockInfo(J)Lcom/sleepycat/je/txn/WriteLockInfo;:762 - DeleteField: writeInfoLjava/util/Map;
   */
  @Test
  public void test21()  throws Throwable  {
      Txn txn0 = new Txn();
      Long long0 = new Long((long) 0);
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.NONE_NEEDED;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      WriteLockInfo writeLockInfo0 = txn0.getWriteLockInfo((long) (byte)0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), writeLockInfo0.abortLsn);
      assertNotNull(writeLockInfo0);
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * 1 Weak Mutation 416: com.sleepycat.je.txn.Txn.isTransactional()Z:772 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.txn.Txn.isTransactional()Z: root-Branch
   * 3 Weak Mutation 416: com.sleepycat.je.txn.Txn.isTransactional()Z:772 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test22()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isTransactional();
      assertEquals(true, boolean0);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 23
  /*
   * 3 covered goals:
   * 1 Weak Mutation 417: com.sleepycat.je.txn.Txn.isSerializableIsolation()Z:779 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Txn.isSerializableIsolation()Z: root-Branch
   * 3 Weak Mutation 417: com.sleepycat.je.txn.Txn.isSerializableIsolation()Z:779 - InsertUnaryOp Negation
   */
  @Test
  public void test23()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.isSerializableIsolation();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 24
  /*
   * 3 covered goals:
   * 1 Weak Mutation 419: com.sleepycat.je.txn.Txn.isReadCommittedIsolation()Z:786 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.txn.Txn.isReadCommittedIsolation()Z: root-Branch
   * 3 Weak Mutation 419: com.sleepycat.je.txn.Txn.isReadCommittedIsolation()Z:786 - InsertUnaryOp Negation
   */
  @Test
  public void test24()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.isReadCommittedIsolation();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 25
  /*
   * 13 covered goals:
   * 1 Weak Mutation 425: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - ReplaceComparisonOperator == -> !=
   * 2 Weak Mutation 424: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC -1 dbIsClosing
   * 3 Weak Mutation 421: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - ReplaceVariable dbIsClosing -> ignore
   * 4 Weak Mutation 423: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC 1 dbIsClosing
   * 5 Weak Mutation 422: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp Negation of dbIsClosing
   * 6 Weak Mutation 427: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:827 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 7 com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V: I3 Branch 60 IFEQ L826 - false
   * 8 Weak Mutation 425: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 424: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC -1 dbIsClosing
   * 10 Weak Mutation 427: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:827 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 11 Weak Mutation 421: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - ReplaceVariable dbIsClosing -> ignore
   * 12 Weak Mutation 423: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC 1 dbIsClosing
   * 13 Weak Mutation 422: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp Negation of dbIsClosing
   */
  @Test
  public void test25()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.setHandleLockOwner(false, (Database) null, true);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 26
  /*
   * 37 covered goals:
   * 1 Weak Mutation 471: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> next
   * 2 Weak Mutation 474: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:867 - ReplaceVariable next -> prev
   * 3 Weak Mutation 481: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> prev
   * 4 Weak Mutation 485: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable prev -> cursor
   * 5 Weak Mutation 484: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable next -> prev
   * 6 Weak Mutation 487: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 7 Weak Mutation 486: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable prev -> next
   * 8 Weak Mutation 483: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable next -> cursor
   * 9 com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I36 Branch 70 IFNULL L871 - false
   * 10 Weak Mutation 474: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:867 - ReplaceVariable next -> prev
   * 11 Weak Mutation 472: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceComparisonOperator != null -> = null
   * 12 Weak Mutation 473: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:867 - ReplaceVariable next -> cursor
   * 13 Weak Mutation 470: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> cursor
   * 14 Weak Mutation 471: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> next
   * 15 Weak Mutation 468: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - ReplaceVariable cursor -> prev
   * 16 Weak Mutation 469: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - DeleteStatement: getLockerNext()Lcom/sleepycat/je/dbi/CursorImpl;
   * 17 Weak Mutation 466: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:853 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 18 Weak Mutation 467: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:864 - DeleteStatement: getLockerPrev()Lcom/sleepycat/je/dbi/CursorImpl;
   * 19 Weak Mutation 465: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:853 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 20 Weak Mutation 463: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:852 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 21 Weak Mutation 461: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:851 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 22 Weak Mutation 493: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 23 Weak Mutation 492: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> prev
   * 24 Weak Mutation 489: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> prev
   * 25 Weak Mutation 488: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> next
   * 26 Weak Mutation 491: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> next
   * 27 Weak Mutation 490: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 28 Weak Mutation 485: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable prev -> cursor
   * 29 Weak Mutation 484: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable next -> prev
   * 30 Weak Mutation 487: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 31 Weak Mutation 486: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable prev -> next
   * 32 Weak Mutation 481: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> prev
   * 33 Weak Mutation 480: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> cursor
   * 34 Weak Mutation 483: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:872 - ReplaceVariable next -> cursor
   * 35 Weak Mutation 482: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceComparisonOperator = null -> != null
   * 36 com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I19 Branch 69 IFNONNULL L866 - false
   * 37 com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I16 Branch 68 IFNULL L852 - false
   */
  @Test
  public void test26()  throws Throwable  {
      Txn txn0 = new Txn();
      CursorImpl cursorImpl0 = new CursorImpl((DatabaseImpl) null, (Locker) txn0, true);
      assertNotNull(cursorImpl0);
      
      CursorImpl cursorImpl1 = cursorImpl0.cloneCursor(true);
      assertNotNull(cursorImpl1);
      
      txn0.unRegisterCursor(cursorImpl1);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 27
  /*
   * 16 covered goals:
   * 1 Weak Mutation 467: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:864 - DeleteStatement: getLockerPrev()Lcom/sleepycat/je/dbi/CursorImpl;
   * 2 Weak Mutation 468: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - ReplaceVariable cursor -> prev
   * 3 Weak Mutation 469: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - DeleteStatement: getLockerNext()Lcom/sleepycat/je/dbi/CursorImpl;
   * 4 Weak Mutation 472: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 470: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> cursor
   * 6 Weak Mutation 473: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:867 - ReplaceVariable next -> cursor
   * 7 Weak Mutation 480: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> cursor
   * 8 Weak Mutation 482: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 489: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> prev
   * 10 Weak Mutation 488: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> next
   * 11 Weak Mutation 490: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 12 Weak Mutation 493: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 13 Weak Mutation 492: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> prev
   * 14 Weak Mutation 491: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> next
   * 15 com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I19 Branch 69 IFNONNULL L866 - false
   * 16 com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I36 Branch 70 IFNULL L871 - true
   */
  @Test
  public void test27()  throws Throwable  {
      Txn txn0 = new Txn();
      CursorImpl cursorImpl0 = new CursorImpl((DatabaseImpl) null, (Locker) txn0, true);
      assertNotNull(cursorImpl0);
      
      txn0.unRegisterCursor(cursorImpl0);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 28
  /*
   * 30 covered goals:
   * 1 Weak Mutation 478: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable next -> prev
   * 2 Weak Mutation 479: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 3 Weak Mutation 476: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable prev -> next
   * 4 Weak Mutation 477: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable next -> cursor
   * 5 Weak Mutation 475: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable prev -> cursor
   * 6 com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V: I19 Branch 69 IFNONNULL L866 - true
   * 7 Weak Mutation 472: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 470: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> cursor
   * 9 Weak Mutation 471: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:866 - ReplaceVariable prev -> next
   * 10 Weak Mutation 468: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - ReplaceVariable cursor -> prev
   * 11 Weak Mutation 469: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:865 - DeleteStatement: getLockerNext()Lcom/sleepycat/je/dbi/CursorImpl;
   * 12 Weak Mutation 466: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:853 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 13 Weak Mutation 467: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:864 - DeleteStatement: getLockerPrev()Lcom/sleepycat/je/dbi/CursorImpl;
   * 14 Weak Mutation 465: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:853 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 15 Weak Mutation 463: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:852 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 16 Weak Mutation 461: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:851 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 17 Weak Mutation 493: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 18 Weak Mutation 492: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> prev
   * 19 Weak Mutation 489: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> prev
   * 20 Weak Mutation 488: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - ReplaceVariable cursor -> next
   * 21 Weak Mutation 491: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:875 - ReplaceVariable cursor -> next
   * 22 Weak Mutation 490: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:874 - DeleteStatement: setLockerPrev(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 23 Weak Mutation 481: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> prev
   * 24 Weak Mutation 480: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceVariable next -> cursor
   * 25 Weak Mutation 482: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:871 - ReplaceComparisonOperator = null -> != null
   * 26 Weak Mutation 478: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable next -> prev
   * 27 Weak Mutation 479: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 28 Weak Mutation 476: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable prev -> next
   * 29 Weak Mutation 477: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable next -> cursor
   * 30 Weak Mutation 475: com.sleepycat.je.txn.Txn.unRegisterCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:869 - ReplaceVariable prev -> cursor
   */
  @Test
  public void test28()  throws Throwable  {
      Txn txn0 = new Txn();
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      CursorImpl cursorImpl0 = new CursorImpl(databaseImpl0, (Locker) txn0);
      cursorImpl0.dup(false);
      txn0.unRegisterCursor(cursorImpl0);
      assertEquals(7296L, databaseImpl0.getEofNodeId());
      assertEquals(7301L, mapLN0.getLastId());
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * 1 Weak Mutation 494: com.sleepycat.je.txn.Txn.isHandleLockTransferrable()Z:884 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.txn.Txn.isHandleLockTransferrable()Z: root-Branch
   * 3 Weak Mutation 494: com.sleepycat.je.txn.Txn.isHandleLockTransferrable()Z:884 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test29()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.isHandleLockTransferrable();
      assertEquals(false, boolean0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 30
  /*
   * 23 covered goals:
   * 1 Weak Mutation 506: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - DeleteField: txnStateB
   * 2 Weak Mutation 502: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_NOSYNC
   * 3 Weak Mutation 508: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> 1
   * 4 Weak Mutation 509: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -1
   * 5 Weak Mutation 510: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -5
   * 6 Weak Mutation 511: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -3
   * 7 Weak Mutation 504: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 8 Weak Mutation 505: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - InsertUnaryOp Negation
   * 9 Weak Mutation 506: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - DeleteField: txnStateB
   * 10 Weak Mutation 507: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> 0
   * 11 Weak Mutation 502: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_NOSYNC
   * 12 Weak Mutation 503: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_SYNC
   * 13 Weak Mutation 516: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 14 Weak Mutation 517: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - InsertUnaryOp Negation
   * 15 Weak Mutation 519: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 0
   * 16 Weak Mutation 512: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceBitwiseOperator & -> |
   * 17 Weak Mutation 513: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceBitwiseOperator & -> ^
   * 18 Weak Mutation 515: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceVariable txnState -> TXN_SYNC
   * 19 Weak Mutation 520: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 1
   * 20 Weak Mutation 521: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> -1
   * 21 Weak Mutation 522: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 3
   * 22 Weak Mutation 523: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceBitwiseOperator | -> &
   * 23 com.sleepycat.je.txn.Txn.setOnlyAbortable()V: root-Branch
   */
  @Test
  public void test30()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      txn0.setOnlyAbortable();
      assertEquals(false, txn0.isSuspended());
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 31
  /*
   * 23 covered goals:
   * 1 Weak Mutation 525: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_NOSYNC
   * 2 Weak Mutation 527: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 3 Weak Mutation 533: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 3
   * 4 Weak Mutation 532: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> -1
   * 5 Weak Mutation 535: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceBitwiseOperator & -> ^
   * 6 Weak Mutation 529: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - DeleteField: txnStateB
   * 7 Weak Mutation 528: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - InsertUnaryOp Negation
   * 8 Weak Mutation 531: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 1
   * 9 Weak Mutation 530: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 0
   * 10 Weak Mutation 536: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 539: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 1 -> 0
   * 12 com.sleepycat.je.txn.Txn.getOnlyAbortable()Z: I6 Branch 73 IFEQ L931 - false
   * 13 Weak Mutation 525: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_NOSYNC
   * 14 Weak Mutation 527: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 15 Weak Mutation 533: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 3
   * 16 Weak Mutation 532: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> -1
   * 17 Weak Mutation 535: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceBitwiseOperator & -> ^
   * 18 Weak Mutation 529: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - DeleteField: txnStateB
   * 19 Weak Mutation 528: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - InsertUnaryOp Negation
   * 20 Weak Mutation 531: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 1
   * 21 Weak Mutation 530: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 0
   * 22 Weak Mutation 536: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceComparisonOperator == -> >=
   * 23 Weak Mutation 539: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test31()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      boolean boolean0 = txn0.getOnlyAbortable();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals(false, txn0.isSuspended());
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals(false, boolean0);
  }

  //Test case number: 32
  /*
   * 16 covered goals:
   * 1 Weak Mutation 526: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_SYNC
   * 2 Weak Mutation 534: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceBitwiseOperator & -> |
   * 3 Weak Mutation 540: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 538: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceComparisonOperator == -> -2
   * 5 com.sleepycat.je.txn.Txn.getOnlyAbortable()Z: I6 Branch 73 IFEQ L931 - true
   * 6 Weak Mutation 527: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 7 Weak Mutation 533: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 3
   * 8 Weak Mutation 532: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> -1
   * 9 Weak Mutation 535: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceBitwiseOperator & -> ^
   * 10 Weak Mutation 528: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - InsertUnaryOp Negation
   * 11 Weak Mutation 531: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 1
   * 12 Weak Mutation 530: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 2 -> 0
   * 13 Weak Mutation 526: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceVariable txnState -> TXN_SYNC
   * 14 Weak Mutation 534: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceBitwiseOperator & -> |
   * 15 Weak Mutation 540: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceConstant - 0 -> 1
   * 16 Weak Mutation 538: com.sleepycat.je.txn.Txn.getOnlyAbortable()Z:931 - ReplaceComparisonOperator == -> -2
   */
  @Test
  public void test32()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.getOnlyAbortable();
      assertEquals(false, boolean0);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 33
  /*
   * 23 covered goals:
   * 1 Weak Mutation 547: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - DeleteField: txnStateB
   * 2 Weak Mutation 543: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_NOSYNC
   * 3 Weak Mutation 624: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_NOSYNC
   * 4 Weak Mutation 628: com.sleepycat.je.txn.Txn.close(Z)V:959 - DeleteField: txnStateB
   * 5 Weak Mutation 636: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_NOSYNC
   * 6 Weak Mutation 640: com.sleepycat.je.txn.Txn.close(Z)V:960 - DeleteField: txnStateB
   * 7 Weak Mutation 79: com.sleepycat.je.txn.Txn.setSuspended(Z)V:149 - InsertUnaryOp Negation of suspended
   * 8 Weak Mutation 84: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - InsertUnaryOp Negation
   * 9 Weak Mutation 87: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 1
   * 10 Weak Mutation 86: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 0
   * 11 Weak Mutation 80: com.sleepycat.je.txn.Txn.setSuspended(Z)V:149 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 83: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 13 Weak Mutation 82: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceVariable txnState -> TXN_SYNC
   * 14 Weak Mutation 89: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 7
   * 15 Weak Mutation 88: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> -1
   * 16 Weak Mutation 91: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceBitwiseOperator | -> &
   * 17 Weak Mutation 90: com.sleepycat.je.txn.Txn.setSuspended(Z)V:150 - ReplaceConstant - 8 -> 9
   * 18 Weak Mutation 547: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - DeleteField: txnStateB
   * 19 Weak Mutation 543: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_NOSYNC
   * 20 Weak Mutation 624: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_NOSYNC
   * 21 Weak Mutation 628: com.sleepycat.je.txn.Txn.close(Z)V:959 - DeleteField: txnStateB
   * 22 Weak Mutation 636: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_NOSYNC
   * 23 Weak Mutation 640: com.sleepycat.je.txn.Txn.close(Z)V:960 - DeleteField: txnStateB
   */
  @Test
  public void test33()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setSuspended(true);
      byte[] byteArray0 = new byte[3];
      LogUtils.XidImpl logUtils_XidImpl0 = new LogUtils.XidImpl(311, byteArray0, byteArray0);
      // Undeclared exception!
      try {
        txn0.abort((Xid) logUtils_XidImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 34
  /*
   * 43 covered goals:
   * 1 Weak Mutation 555: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_NOSYNC
   * 2 Weak Mutation 565: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 561: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> <
   * 4 Weak Mutation 566: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_NOSYNC
   * 5 Weak Mutation 578: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> -1
   * 6 Weak Mutation 579: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 610: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 calledByAbort
   * 8 Weak Mutation 611: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 9 Weak Mutation 608: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of calledByAbort
   * 10 Weak Mutation 609: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 calledByAbort
   * 11 Weak Mutation 614: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of onlyAbortable
   * 12 Weak Mutation 615: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 onlyAbortable
   * 13 Weak Mutation 612: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable onlyAbortable -> ok
   * 14 Weak Mutation 616: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 onlyAbortable
   * 15 Weak Mutation 617: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 16 Weak Mutation 607: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable calledByAbort -> ok
   * 17 com.sleepycat.je.txn.Txn.checkState(Z)V: I19 Branch 74 IFNE L943 - true
   * 18 com.sleepycat.je.txn.Txn.checkState(Z)V: I30 Branch 75 IF_ICMPNE L944 - false
   * 19 com.sleepycat.je.txn.Txn.checkState(Z)V: I66 Branch 78 IFNE L949 - false
   * 20 com.sleepycat.je.txn.Txn.checkState(Z)V: I68 Branch 79 IFEQ L949 - false
   * 21 com.sleepycat.je.txn.Txn.checkState(Z)V: I70 Branch 80 IFEQ L949 - false
   * 22 Weak Mutation 205: com.sleepycat.je.txn.Txn.abort(Ljavax/transaction/xa/Xid;)V:219 - DeleteStatement: abort(Z)J
   * 23 Weak Mutation 204: com.sleepycat.je.txn.Txn.abort(Ljavax/transaction/xa/Xid;)V:219 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 239: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp Negation of forceFlush
   * 25 Weak Mutation 242: com.sleepycat.je.txn.Txn.abort(Z)J:354 - ReplaceConstant - 1 -> 0
   * 26 Weak Mutation 240: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp IINC 1 forceFlush
   * 27 Weak Mutation 241: com.sleepycat.je.txn.Txn.abort(Z)J:354 - InsertUnaryOp IINC -1 forceFlush
   * 28 Weak Mutation 555: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_NOSYNC
   * 29 Weak Mutation 566: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_NOSYNC
   * 30 Weak Mutation 565: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 0 -> 1
   * 31 Weak Mutation 561: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> <
   * 32 Weak Mutation 610: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 calledByAbort
   * 33 Weak Mutation 611: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 34 Weak Mutation 608: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of calledByAbort
   * 35 Weak Mutation 609: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 calledByAbort
   * 36 Weak Mutation 614: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of onlyAbortable
   * 37 Weak Mutation 615: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 onlyAbortable
   * 38 Weak Mutation 612: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable onlyAbortable -> ok
   * 39 Weak Mutation 616: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 onlyAbortable
   * 40 Weak Mutation 617: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 41 Weak Mutation 578: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> -1
   * 42 Weak Mutation 579: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 1 -> 0
   * 43 Weak Mutation 607: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable calledByAbort -> ok
   */
  @Test
  public void test34()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      // Undeclared exception!
      try {
        txn0.abort((Xid) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 35
  /*
   * 54 covered goals:
   * 1 Weak Mutation 588: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable onlyAbortable -> calledByAbort
   * 2 Weak Mutation 593: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - ReplaceConstant - Transaction  -> 
   * 3 Weak Mutation 594: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - InsertUnaryOp Negation
   * 4 Weak Mutation 596: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 597: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - ReplaceConstant -  must be aborted. -> 
   * 6 Weak Mutation 599: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - DeleteStatement: toString()Ljava/lang/String;
   * 7 Weak Mutation 598: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 com.sleepycat.je.txn.Txn.checkState(Z)V: I42 Branch 77 IFEQ L945 - false
   * 9 Weak Mutation 508: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> 1
   * 10 Weak Mutation 509: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -1
   * 11 Weak Mutation 510: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -5
   * 12 Weak Mutation 511: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> -3
   * 13 Weak Mutation 504: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 14 Weak Mutation 505: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - InsertUnaryOp Negation
   * 15 Weak Mutation 507: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceConstant - -4 -> 0
   * 16 Weak Mutation 503: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceVariable txnState -> TXN_SYNC
   * 17 Weak Mutation 547: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - DeleteField: txnStateB
   * 18 Weak Mutation 555: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_NOSYNC
   * 19 Weak Mutation 566: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_NOSYNC
   * 20 Weak Mutation 565: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 561: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> <
   * 22 Weak Mutation 516: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 23 Weak Mutation 517: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - InsertUnaryOp Negation
   * 24 Weak Mutation 519: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 0
   * 25 Weak Mutation 512: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceBitwiseOperator & -> |
   * 26 Weak Mutation 513: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:923 - ReplaceBitwiseOperator & -> ^
   * 27 Weak Mutation 515: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceVariable txnState -> TXN_SYNC
   * 28 Weak Mutation 520: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 1
   * 29 Weak Mutation 521: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> -1
   * 30 Weak Mutation 522: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceConstant - 2 -> 3
   * 31 Weak Mutation 523: com.sleepycat.je.txn.Txn.setOnlyAbortable()V:924 - ReplaceBitwiseOperator | -> &
   * 32 Weak Mutation 543: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_NOSYNC
   * 33 Weak Mutation 610: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 calledByAbort
   * 34 Weak Mutation 611: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 608: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of calledByAbort
   * 36 Weak Mutation 609: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 calledByAbort
   * 37 Weak Mutation 614: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of onlyAbortable
   * 38 Weak Mutation 615: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 onlyAbortable
   * 39 Weak Mutation 612: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable onlyAbortable -> ok
   * 40 Weak Mutation 616: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 onlyAbortable
   * 41 Weak Mutation 617: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator == -> !=
   * 42 Weak Mutation 624: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_NOSYNC
   * 43 Weak Mutation 628: com.sleepycat.je.txn.Txn.close(Z)V:959 - DeleteField: txnStateB
   * 44 Weak Mutation 578: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> -1
   * 45 Weak Mutation 579: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 1 -> 0
   * 46 Weak Mutation 607: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable calledByAbort -> ok
   * 47 Weak Mutation 588: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable onlyAbortable -> calledByAbort
   * 48 Weak Mutation 593: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - ReplaceConstant - Transaction  -> 
   * 49 Weak Mutation 594: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - InsertUnaryOp Negation
   * 50 Weak Mutation 597: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - ReplaceConstant -  must be aborted. -> 
   * 51 Weak Mutation 596: com.sleepycat.je.txn.Txn.checkState(Z)V:946 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 52 Weak Mutation 599: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - DeleteStatement: toString()Ljava/lang/String;
   * 53 Weak Mutation 598: com.sleepycat.je.txn.Txn.checkState(Z)V:947 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 54 com.sleepycat.je.txn.Txn.commit(B)J: I290 Branch 27 IFEQ L318 - false
   */
  @Test
  public void test35()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setOnlyAbortable();
      try {
        txn0.commit();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = Transaction 0 must be aborted. The exception from the cleanup = null
         */
      }
  }

  //Test case number: 36
  /*
   * 11 covered goals:
   * 1 Weak Mutation 653: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 15
   * 2 Weak Mutation 652: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> -1
   * 3 Weak Mutation 654: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 17
   * 4 Weak Mutation 651: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 1
   * 5 Weak Mutation 650: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 0
   * 6 com.sleepycat.je.txn.Txn.getLogSize()I: root-Branch
   * 7 Weak Mutation 653: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 15
   * 8 Weak Mutation 652: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> -1
   * 9 Weak Mutation 654: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 17
   * 10 Weak Mutation 651: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 1
   * 11 Weak Mutation 650: com.sleepycat.je.txn.Txn.getLogSize()I:969 - ReplaceConstant - 16 -> 0
   */
  @Test
  public void test36()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getLogSize();
      assertEquals(16, int0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }

  //Test case number: 37
  /*
   * 5 covered goals:
   * 1 Weak Mutation 655: com.sleepycat.je.txn.Txn.writeToLog(Ljava/nio/ByteBuffer;)V:976 - InsertUnaryOp Negation
   * 2 Weak Mutation 657: com.sleepycat.je.txn.Txn.writeToLog(Ljava/nio/ByteBuffer;)V:976 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   * 3 com.sleepycat.je.txn.Txn.writeToLog(Ljava/nio/ByteBuffer;)V: root-Branch
   * 4 Weak Mutation 655: com.sleepycat.je.txn.Txn.writeToLog(Ljava/nio/ByteBuffer;)V:976 - InsertUnaryOp Negation
   * 5 Weak Mutation 657: com.sleepycat.je.txn.Txn.writeToLog(Ljava/nio/ByteBuffer;)V:976 - DeleteStatement: writeLong(Ljava/nio/ByteBuffer;J)V
   */
  @Test
  public void test37()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 38
  /*
   * 3 covered goals:
   * 1 Weak Mutation 661: com.sleepycat.je.txn.Txn.readFromLog(Ljava/nio/ByteBuffer;B)V:985 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   * 2 com.sleepycat.je.txn.Txn.readFromLog(Ljava/nio/ByteBuffer;B)V: root-Branch
   * 3 Weak Mutation 661: com.sleepycat.je.txn.Txn.readFromLog(Ljava/nio/ByteBuffer;B)V:985 - DeleteStatement: readLong(Ljava/nio/ByteBuffer;)J
   */
  @Test
  public void test38()  throws Throwable  {
      Txn txn0 = new Txn();
      // Undeclared exception!
      try {
        txn0.readFromLog((ByteBuffer) null, (byte)78);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 39
  /*
   * 23 covered goals:
   * 1 Weak Mutation 664: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:993 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 2 Weak Mutation 663: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:993 - ReplaceConstant - <txn id=" -> 
   * 3 Weak Mutation 665: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:994 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 666: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:995 - ReplaceConstant - "> -> 
   * 5 Weak Mutation 667: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:995 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 6 Weak Mutation 668: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - InsertUnaryOp Negation
   * 7 Weak Mutation 669: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteField: lastLoggedLsnJ
   * 8 Weak Mutation 670: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteStatement: toString(J)Ljava/lang/String;
   * 9 Weak Mutation 671: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 10 Weak Mutation 673: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:997 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 672: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:997 - ReplaceConstant - </txn> -> 
   * 12 com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V: root-Branch
   * 13 Weak Mutation 673: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:997 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 672: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:997 - ReplaceConstant - </txn> -> 
   * 15 Weak Mutation 668: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - InsertUnaryOp Negation
   * 16 Weak Mutation 669: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteField: lastLoggedLsnJ
   * 17 Weak Mutation 670: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteStatement: toString(J)Ljava/lang/String;
   * 18 Weak Mutation 671: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:996 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 664: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:993 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 665: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:994 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 666: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:995 - ReplaceConstant - "> -> 
   * 22 Weak Mutation 667: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:995 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 23 Weak Mutation 663: com.sleepycat.je.txn.Txn.dumpLog(Ljava/lang/StringBuffer;Z)V:993 - ReplaceConstant - <txn id=" -> 
   */
  @Test
  public void test39()  throws Throwable  {
      Txn txn0 = new Txn();
      StringBuffer stringBuffer0 = new StringBuffer("");
      txn0.dumpLog(stringBuffer0, false);
      assertEquals(70, stringBuffer0.capacity());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 40
  /*
   * 3 covered goals:
   * 1 Weak Mutation 674: com.sleepycat.je.txn.Txn.getTransactionId()J:1004 - DeleteStatement: getId()J
   * 2 com.sleepycat.je.txn.Txn.getTransactionId()J: root-Branch
   * 3 Weak Mutation 674: com.sleepycat.je.txn.Txn.getTransactionId()J:1004 - DeleteStatement: getId()J
   */
  @Test
  public void test40()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.getTransactionId();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 41
  /*
   * 3 covered goals:
   * 1 Weak Mutation 675: com.sleepycat.je.txn.Txn.logEntryIsTransactional()Z:1011 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.txn.Txn.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 675: com.sleepycat.je.txn.Txn.logEntryIsTransactional()Z:1011 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test41()  throws Throwable  {
      Txn txn0 = new Txn();
      boolean boolean0 = txn0.logEntryIsTransactional();
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals(true, boolean0);
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 42
  /*
   * 9 covered goals:
   * 1 Weak Mutation 739: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp +1
   * 2 Weak Mutation 738: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp Negation
   * 3 Weak Mutation 737: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - ReplaceVariable inMemorySize -> ACCUMULATED_LIMIT
   * 4 Weak Mutation 740: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp -1
   * 5 com.sleepycat.je.txn.Txn.getInMemorySize()I: root-Branch
   * 6 Weak Mutation 739: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp +1
   * 7 Weak Mutation 738: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp Negation
   * 8 Weak Mutation 737: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - ReplaceVariable inMemorySize -> ACCUMULATED_LIMIT
   * 9 Weak Mutation 740: com.sleepycat.je.txn.Txn.getInMemorySize()I:1064 - InsertUnaryOp -1
   */
  @Test
  public void test42()  throws Throwable  {
      Txn txn0 = new Txn();
      int int0 = txn0.getInMemorySize();
      assertEquals(0, int0);
      assertEquals((-1L), txn0.getLastLsn());
      assertEquals((-1L), txn0.getFirstActiveLsn());
  }

  //Test case number: 43
  /*
   * 120 covered goals:
   * 1 com.sleepycat.je.txn.Txn.abortInternal(ZZ)J: I33 Branch 29 IFEQ L368 - true
   * 2 Weak Mutation 220: com.sleepycat.je.txn.Txn.commit(B)J:241 - DeleteStatement: checkState(Z)V
   * 3 Weak Mutation 221: com.sleepycat.je.txn.Txn.commit(B)J:242 - ReplaceComparisonOperator == -> !=
   * 4 Weak Mutation 222: com.sleepycat.je.txn.Txn.commit(B)J:243 - ReplaceConstant - Transaction  -> 
   * 5 Weak Mutation 223: com.sleepycat.je.txn.Txn.commit(B)J:243 - InsertUnaryOp Negation
   * 6 Weak Mutation 216: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 0
   * 7 Weak Mutation 217: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> 1
   * 8 Weak Mutation 218: com.sleepycat.je.txn.Txn.commit(B)J:239 - ReplaceConstant - -1 -> -2
   * 9 Weak Mutation 219: com.sleepycat.je.txn.Txn.commit(B)J:241 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 212: com.sleepycat.je.txn.Txn.commit()J:228 - ReplaceVariable defaultFlushSyncBehavior -> TXN_WRITE_NOSYNC
   * 11 Weak Mutation 213: com.sleepycat.je.txn.Txn.commit()J:228 - InsertUnaryOp Negation
   * 12 Weak Mutation 215: com.sleepycat.je.txn.Txn.commit()J:228 - DeleteStatement: commit(B)J
   * 13 Weak Mutation 211: com.sleepycat.je.txn.Txn.commit()J:228 - ReplaceVariable defaultFlushSyncBehavior -> TXN_SYNC
   * 14 Weak Mutation 228: com.sleepycat.je.txn.Txn.commit(B)J:244 - DeleteStatement: toString()Ljava/lang/String;
   * 15 Weak Mutation 227: com.sleepycat.je.txn.Txn.commit(B)J:244 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 16 Weak Mutation 226: com.sleepycat.je.txn.Txn.commit(B)J:244 - ReplaceConstant -  commit failed because there were open cursors. -> 
   * 17 Weak Mutation 225: com.sleepycat.je.txn.Txn.commit(B)J:243 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 18 Weak Mutation 255: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp Negation of writeAbortRecord
   * 19 Weak Mutation 252: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - DeleteField: writeInfoLjava/util/Map;
   * 20 Weak Mutation 253: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:367 - ReplaceComparisonOperator = null -> != null
   * 21 Weak Mutation 250: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 1
   * 22 Weak Mutation 251: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> -2
   * 23 Weak Mutation 248: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - DeleteField: lastLoggedLsnJ
   * 24 Weak Mutation 249: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:366 - ReplaceConstant - -1 -> 0
   * 25 Weak Mutation 247: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 26 Weak Mutation 244: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - DeleteStatement: checkState(Z)V
   * 27 Weak Mutation 245: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:365 - InsertUnaryOp Negation
   * 28 Weak Mutation 243: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:364 - ReplaceConstant - 1 -> 0
   * 29 Weak Mutation 278: com.sleepycat.je.txn.Txn.undo()V:422 - DeleteField: lastLoggedLsnJ
   * 30 Weak Mutation 277: com.sleepycat.je.txn.Txn.undo()V:422 - InsertUnaryOp Negation
   * 31 Weak Mutation 280: com.sleepycat.je.txn.Txn.undo()V:423 - DeleteStatement: getLogManager()Lcom/sleepycat/je/log/LogManager;
   * 32 Weak Mutation 258: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - ReplaceComparisonOperator == -> !=
   * 33 Weak Mutation 256: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC 1 writeAbortRecord
   * 34 Weak Mutation 257: com.sleepycat.je.txn.Txn.abortInternal(ZZ)J:368 - InsertUnaryOp IINC -1 writeAbortRecord
   * 35 Weak Mutation 343: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteField: writeInfoLjava/util/Map;
   * 36 Weak Mutation 342: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:613 - ReplaceComparisonOperator != null -> = null
   * 37 Weak Mutation 340: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - ReplaceComparisonOperator == -> !=
   * 38 Weak Mutation 339: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:612 - DeleteStatement: isWriteLock()Z
   * 39 Weak Mutation 348: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - ReplaceComparisonOperator != -> ==
   * 40 Weak Mutation 347: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:625 - DeleteField: WAIT_PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 41 Weak Mutation 346: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - ReplaceComparisonOperator == -> !=
   * 42 Weak Mutation 345: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:624 - DeleteField: PROMOTIONLcom/sleepycat/je/txn/LockGrantType;
   * 43 Weak Mutation 344: com.sleepycat.je.txn.Txn.addLock(Ljava/lang/Long;Lcom/sleepycat/je/txn/Lock;Lcom/sleepycat/je/txn/LockType;Lcom/sleepycat/je/txn/LockGrantType;)V:620 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 44 Weak Mutation 464: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:852 - ReplaceComparisonOperator = null -> != null
   * 45 Weak Mutation 462: com.sleepycat.je.txn.Txn.registerCursor(Lcom/sleepycat/je/dbi/CursorImpl;)V:851 - DeleteStatement: setLockerNext(Lcom/sleepycat/je/dbi/CursorImpl;)V
   * 46 Weak Mutation 500: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:895 - ReplaceComparisonOperator != null -> = null
   * 47 Weak Mutation 496: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - DeleteStatement: isClosed()Z
   * 48 Weak Mutation 497: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:896 - ReplaceComparisonOperator != -> ==
   * 49 Weak Mutation 498: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:897 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 495: com.sleepycat.je.txn.Txn.checkCursorsForClose()Z:894 - DeleteField: cursorSetLcom/sleepycat/je/dbi/CursorImpl;
   * 51 Weak Mutation 550: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> -1
   * 52 Weak Mutation 551: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 2
   * 53 Weak Mutation 548: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 0
   * 54 Weak Mutation 549: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 1
   * 55 Weak Mutation 546: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - InsertUnaryOp Negation
   * 56 Weak Mutation 544: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_SYNC
   * 57 Weak Mutation 545: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 58 Weak Mutation 558: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp Negation of state
   * 59 Weak Mutation 559: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC 1 state
   * 60 Weak Mutation 556: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_SYNC
   * 61 Weak Mutation 557: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 62 Weak Mutation 554: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> ^
   * 63 Weak Mutation 552: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceConstant - 3 -> 4
   * 64 Weak Mutation 553: com.sleepycat.je.txn.Txn.checkState(Z)V:942 - ReplaceBitwiseOperator & -> |
   * 65 Weak Mutation 567: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_SYNC
   * 66 Weak Mutation 564: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceConstant - 1 -> 0
   * 67 Weak Mutation 563: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - ReplaceComparisonOperator != -> -1
   * 68 Weak Mutation 560: com.sleepycat.je.txn.Txn.checkState(Z)V:943 - InsertUnaryOp IINC -1 state
   * 69 Weak Mutation 575: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 3
   * 70 Weak Mutation 574: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> -1
   * 71 Weak Mutation 573: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 1
   * 72 Weak Mutation 572: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 2 -> 0
   * 73 Weak Mutation 571: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC -1 state
   * 74 Weak Mutation 570: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp IINC 1 state
   * 75 Weak Mutation 569: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - InsertUnaryOp Negation of state
   * 76 Weak Mutation 568: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceVariable state -> TXN_WRITE_NOSYNC
   * 77 Weak Mutation 541: com.sleepycat.je.txn.Txn.checkState(Z)V:940 - ReplaceConstant - 0 -> 1
   * 78 Weak Mutation 542: com.sleepycat.je.txn.Txn.checkState(Z)V:941 - ReplaceConstant - 0 -> 1
   * 79 Weak Mutation 627: com.sleepycat.je.txn.Txn.close(Z)V:959 - InsertUnaryOp Negation
   * 80 Weak Mutation 626: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 81 Weak Mutation 625: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceVariable txnState -> TXN_SYNC
   * 82 Weak Mutation 631: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -1
   * 83 Weak Mutation 630: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 1
   * 84 Weak Mutation 629: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> 0
   * 85 Weak Mutation 635: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> ^
   * 86 Weak Mutation 634: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceBitwiseOperator & -> |
   * 87 Weak Mutation 633: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -3
   * 88 Weak Mutation 632: com.sleepycat.je.txn.Txn.close(Z)V:959 - ReplaceConstant - -4 -> -5
   * 89 Weak Mutation 639: com.sleepycat.je.txn.Txn.close(Z)V:960 - InsertUnaryOp Negation
   * 90 Weak Mutation 638: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_WRITE_NOSYNC
   * 91 Weak Mutation 637: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceVariable txnState -> TXN_SYNC
   * 92 Weak Mutation 576: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceComparisonOperator != -> >
   * 93 Weak Mutation 580: com.sleepycat.je.txn.Txn.checkState(Z)V:944 - ReplaceConstant - 0 -> 1
   * 94 Weak Mutation 581: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> onlyAbortable
   * 95 Weak Mutation 582: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable calledByAbort -> ok
   * 96 Weak Mutation 583: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of calledByAbort
   * 97 Weak Mutation 584: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 calledByAbort
   * 98 Weak Mutation 585: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 calledByAbort
   * 99 Weak Mutation 586: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator != -> ==
   * 100 Weak Mutation 587: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceVariable onlyAbortable -> ok
   * 101 Weak Mutation 589: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp Negation of onlyAbortable
   * 102 Weak Mutation 590: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC 1 onlyAbortable
   * 103 Weak Mutation 591: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - InsertUnaryOp IINC -1 onlyAbortable
   * 104 Weak Mutation 592: com.sleepycat.je.txn.Txn.checkState(Z)V:945 - ReplaceComparisonOperator == -> !=
   * 105 Weak Mutation 601: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> calledByAbort
   * 106 Weak Mutation 600: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceVariable ok -> onlyAbortable
   * 107 Weak Mutation 603: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC 1 ok
   * 108 Weak Mutation 602: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp Negation of ok
   * 109 Weak Mutation 605: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - ReplaceComparisonOperator != -> ==
   * 110 Weak Mutation 604: com.sleepycat.je.txn.Txn.checkState(Z)V:949 - InsertUnaryOp IINC -1 ok
   * 111 Weak Mutation 645: com.sleepycat.je.txn.Txn.close(Z)V:962 - DeleteStatement: getTxnManager()Lcom/sleepycat/je/txn/TxnManager;
   * 112 Weak Mutation 641: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceConstant - 1 -> 0
   * 113 Weak Mutation 642: com.sleepycat.je.txn.Txn.close(Z)V:960 - ReplaceBitwiseOperator | -> &
   * 114 Weak Mutation 222: com.sleepycat.je.txn.Txn.commit(B)J:243 - ReplaceConstant - Transaction  -> 
   * 115 Weak Mutation 223: com.sleepycat.je.txn.Txn.commit(B)J:243 - InsertUnaryOp Negation
   * 116 Weak Mutation 228: com.sleepycat.je.txn.Txn.commit(B)J:244 - DeleteStatement: toString()Ljava/lang/String;
   * 117 Weak Mutation 227: com.sleepycat.je.txn.Txn.commit(B)J:244 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 118 Weak Mutation 226: com.sleepycat.je.txn.Txn.commit(B)J:244 - ReplaceConstant -  commit failed because there were open cursors. -> 
   * 119 Weak Mutation 225: com.sleepycat.je.txn.Txn.commit(B)J:243 - DeleteStatement: append(J)Ljava/lang/StringBuilder;
   * 120 com.sleepycat.je.txn.Txn.commit(B)J: I19 Branch 16 IFEQ L242 - false
   */
  @Test
  public void test43()  throws Throwable  {
      Txn txn0 = new Txn();
      LogEntryType logEntryType0 = LogEntryType.LOG_TXN_COMMIT;
      MapLN mapLN0 = new MapLN();
      DatabaseId databaseId0 = new DatabaseId(0);
      byte[] byteArray0 = new byte[4];
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      CursorImpl cursorImpl0 = new CursorImpl(databaseImpl0, (Locker) txn0, true);
      LNLogEntry lNLogEntry0 = new LNLogEntry(logEntryType0, (LN) mapLN0, databaseId0, byteArray0, (-378L), true, txn0);
      Long long0 = lNLogEntry0.getTxnId();
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = LockGrantType.EXISTING;
      txn0.addLock(long0, (Lock) null, lockType0, lockGrantType0);
      assertEquals(7514L, mapLN0.getLastId());
      
      try {
        txn0.commit();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * Failed while attempting to commit transaction 0. The attempt to abort and clean up also failed. The original exception seen from commit = Transaction 0 commit failed because there were open cursors. The exception from the cleanup = null
         */
      }
  }

  //Test case number: 44
  /*
   * 15 covered goals:
   * 1 com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V: I3 Branch 60 IFEQ L826 - true
   * 2 com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V: I95 Branch 67 IFNULL L840 - true
   * 3 Weak Mutation 42: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> 1
   * 4 Weak Mutation 43: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> -2
   * 5 Weak Mutation 41: com.sleepycat.je.txn.Txn.<init>()V:70 - ReplaceConstant - -1 -> 0
   * 6 Weak Mutation 46: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> -2
   * 7 Weak Mutation 47: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> 0
   * 8 Weak Mutation 44: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> 0
   * 9 Weak Mutation 45: com.sleepycat.je.txn.Txn.<init>()V:71 - ReplaceConstant - -1 -> 1
   * 10 Weak Mutation 49: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> -2
   * 11 Weak Mutation 48: com.sleepycat.je.txn.Txn.<init>()V:123 - ReplaceConstant - -1 -> 1
   * 12 Weak Mutation 425: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 424: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC -1 dbIsClosing
   * 14 Weak Mutation 423: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp IINC 1 dbIsClosing
   * 15 Weak Mutation 422: com.sleepycat.je.txn.Txn.setHandleLockOwner(ZLcom/sleepycat/je/Database;Z)V:826 - InsertUnaryOp Negation of dbIsClosing
   */
  @Test
  public void test44()  throws Throwable  {
      Txn txn0 = new Txn();
      txn0.setHandleLockOwner(false, (Database) null, false);
      assertEquals((-1L), txn0.getFirstActiveLsn());
      assertEquals((-1L), txn0.getLastLsn());
  }
}
