/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.txn;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.dbi.MemoryBudget;
import com.sleepycat.je.txn.Lock;
import com.sleepycat.je.txn.LockGrantType;
import com.sleepycat.je.txn.LockType;
import com.sleepycat.je.txn.Locker;
import java.util.List;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestLock_8 {


  //Test case number: 8
  /*
   * 12 covered goals:
   * 1 Weak Mutation 98: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:242 - DeleteStatement: getUpgrade(Lcom/sleepycat/je/txn/LockType;)Lcom/sleepycat/je/txn/LockUpgrade;
   * 2 Weak Mutation 100: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:243 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 99: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:243 - DeleteStatement: getPromotion()Z
   * 4 Weak Mutation 101: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:244 - ReplaceConstant - 1 -> 0
   * 5 com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z: I19 Branch 30 IF_ACMPNE L239 - true
   * 6 com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z: I34 Branch 31 IFNE L243 - false
   * 7 Weak Mutation 95: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:238 - DeleteStatement: getLockType()Lcom/sleepycat/je/txn/LockType;
   * 8 Weak Mutation 96: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:239 - ReplaceComparisonOperator != -> ==
   * 9 Weak Mutation 100: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:243 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 101: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:244 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 98: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:242 - DeleteStatement: getUpgrade(Lcom/sleepycat/je/txn/LockType;)Lcom/sleepycat/je/txn/LockUpgrade;
   * 12 Weak Mutation 99: com.sleepycat.je.txn.Lock.isOwner(Lcom/sleepycat/je/txn/Locker;Lcom/sleepycat/je/txn/LockType;)Z:243 - DeleteStatement: getPromotion()Z
   */
  @Test
  public void test8()  throws Throwable  {
      Lock lock0 = new Lock((Long) (-308L));
      LockType lockType0 = LockType.RANGE_WRITE;
      LockGrantType lockGrantType0 = lock0.lock(lockType0, (Locker) null, false, (MemoryBudget) null, 0);
      assertNotNull(lockGrantType0);
      
      LockType lockType1 = LockType.RANGE_READ;
      boolean boolean0 = lock0.isOwner((Locker) null, lockType1);
      assertEquals(1, lock0.nOwners());
      assertEquals(true, boolean0);
  }
}
