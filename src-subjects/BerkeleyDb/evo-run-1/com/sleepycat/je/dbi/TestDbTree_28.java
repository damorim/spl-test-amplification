/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.DbTree;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.NameLN;
import com.sleepycat.je.txn.Locker;
import java.io.StringWriter;
import java.nio.ByteBuffer;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;

@RunWith(EvoSuiteRunner.class)
public class TestDbTree_28 {


  //Test case number: 28
  /*
   * 8 covered goals:
   * 1 com.sleepycat.je.dbi.DbTree.getDbNames()Ljava/util/List;: I138 Branch 66 IFNULL L808 - true
   * 2 com.sleepycat.je.dbi.DbTree.getDbNames()Ljava/util/List;: I146 Branch 67 IFNULL L811 - true
   * 3 Weak Mutation 11: com.sleepycat.je.dbi.DbTree.<init>()V:61 - DeleteField: idDatabaseLcom/sleepycat/je/dbi/DatabaseImpl;
   * 4 Weak Mutation 12: com.sleepycat.je.dbi.DbTree.<init>()V:61 - ReplaceConstant - _jeIdMap -> 
   * 5 Weak Mutation 13: com.sleepycat.je.dbi.DbTree.<init>()V:61 - DeleteStatement: setDebugDatabaseName(Ljava/lang/String;)V
   * 6 Weak Mutation 14: com.sleepycat.je.dbi.DbTree.<init>()V:63 - DeleteField: nameDatabaseLcom/sleepycat/je/dbi/DatabaseImpl;
   * 7 Weak Mutation 15: com.sleepycat.je.dbi.DbTree.<init>()V:63 - ReplaceConstant - _jeNameMap -> 
   * 8 Weak Mutation 16: com.sleepycat.je.dbi.DbTree.<init>()V:63 - DeleteStatement: setDebugDatabaseName(Ljava/lang/String;)V
   */
  @Test
  public void test28()  throws Throwable  {
      DbTree dbTree0 = new DbTree();
      // Undeclared exception!
      try {
        dbTree0.getDbNames();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
