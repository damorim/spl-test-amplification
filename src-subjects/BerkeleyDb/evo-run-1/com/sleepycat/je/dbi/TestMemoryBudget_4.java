/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogException;
import java.io.File;
import java.util.Properties;

@RunWith(EvoSuiteRunner.class)
public class TestMemoryBudget_4 {


  //Test case number: 4
  /*
   * 36 covered goals:
   * 1 Weak Mutation 50: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 0: com.sleepycat.je.dbi.MemoryBudget.<init>(Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/dbi/DbConfigManager;)V:436 - DeleteStatement: addConfigObserver(Lcom/sleepycat/je/dbi/EnvConfigObserver;)V
   * 3 Weak Mutation 13: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:465 - DeleteField: MAX_MEMORYLcom/sleepycat/je/config/LongConfigParam;
   * 4 Weak Mutation 14: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:465 - DeleteStatement: getLong(Lcom/sleepycat/je/config/LongConfigParam;)J
   * 5 Weak Mutation 15: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:466 - DeleteStatement: getRuntimeMaxMemory()J
   * 6 Weak Mutation 17: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:467 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 16: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:467 - InsertUnaryOp Negation
   * 8 Weak Mutation 19: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:467 - DeleteStatement: longSub(JJ)I
   * 9 Weak Mutation 18: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:467 - ReplaceConstant - 0 -> -1
   * 10 Weak Mutation 20: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:467 - ReplaceComparisonOperator == -> >=
   * 11 Weak Mutation 23: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:468 - InsertUnaryOp Negation
   * 12 Weak Mutation 25: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:468 - DeleteStatement: longSub(JJ)I
   * 13 Weak Mutation 24: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:468 - InsertUnaryOp Negation
   * 14 Weak Mutation 26: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:468 - ReplaceComparisonOperator >= -> ==
   * 15 Weak Mutation 43: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - InsertUnaryOp Negation
   * 16 Weak Mutation 46: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceConstant - 98304 -> -1
   * 17 Weak Mutation 47: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceConstant - 98304 -> 98303
   * 18 Weak Mutation 44: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceConstant - 98304 -> 0
   * 19 Weak Mutation 45: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceConstant - 98304 -> 1
   * 20 Weak Mutation 49: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - DeleteStatement: longSub(JJ)I
   * 21 Weak Mutation 48: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceConstant - 98304 -> 98305
   * 22 Weak Mutation 87: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:540 - ReplaceConstant - os.name -> 
   * 23 Weak Mutation 86: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:540 - ReplaceConstant - Mac OS X -> 
   * 24 Weak Mutation 93: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:541 - ReplaceConstant - java.version -> 
   * 25 Weak Mutation 92: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:540 - ReplaceComparisonOperator <= -> -1
   * 26 Weak Mutation 95: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:542 - ReplaceComparisonOperator = null -> != null
   * 27 Weak Mutation 94: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:541 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 28 Weak Mutation 89: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:540 - DeleteStatement: StringEquals(Ljava/lang/String;Ljava/lang/Object;)I
   * 29 Weak Mutation 88: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:540 - DeleteStatement: getProperty(Ljava/lang/String;)Ljava/lang/String;
   * 30 Weak Mutation 98: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:542 - DeleteStatement: StringStartsWith(Ljava/lang/String;Ljava/lang/String;I)I
   * 31 Weak Mutation 99: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:542 - ReplaceComparisonOperator <= -> ==
   * 32 Weak Mutation 96: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:542 - ReplaceConstant - 1.4.2 -> 
   * 33 Weak Mutation 97: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:542 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 108: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:546 - DeleteStatement: maxMemory()J
   * 35 Weak Mutation 107: com.sleepycat.je.dbi.MemoryBudget.getRuntimeMaxMemory()J:546 - DeleteStatement: getRuntime()Ljava/lang/Runtime;
   * 36 Weak Mutation 50: com.sleepycat.je.dbi.MemoryBudget.reset(Lcom/sleepycat/je/dbi/DbConfigManager;)V:471 - ReplaceComparisonOperator >= -> ==
   */
  @Test
  public void test4()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setCacheSize(500000L);
      EnvironmentImpl environmentImpl0 = null;
      try {
        environmentImpl0 = new EnvironmentImpl((File) null, environmentConfig0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
