/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.dbi;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.Database;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.dbi.DatabaseImpl;
import com.sleepycat.je.dbi.EnvironmentImpl;
import com.sleepycat.je.log.LogException;
import com.sleepycat.je.tree.MapLN;
import com.sleepycat.je.tree.Tree;
import com.sleepycat.je.utilint.TestHook;
import java.net.URI;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestDatabaseImpl {


  //Test case number: 0
  /*
   * 15 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:113 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 2 Weak Mutation 30: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:114 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 3 Weak Mutation 31: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:115 - DeleteStatement: getSortedDuplicates()Z
   * 4 Weak Mutation 32: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:117 - DeleteStatement: getTransactional()Z
   * 5 Weak Mutation 33: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:119 - DeleteStatement: getNodeMaxEntries()I
   * 6 Weak Mutation 34: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:120 - DeleteStatement: getNodeMaxDupTreeEntries()I
   * 7 Weak Mutation 40: com.sleepycat.je.dbi.DatabaseImpl.initDefaultSettings()V:160 - DeleteStatement: getConfigManager()Lcom/sleepycat/je/dbi/DbConfigManager;
   * 8 com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V: root-Branch
   * 9 Weak Mutation 29: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:113 - DeleteStatement: getBtreeComparator()Ljava/util/Comparator;
   * 10 Weak Mutation 31: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:115 - DeleteStatement: getSortedDuplicates()Z
   * 11 Weak Mutation 30: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:114 - DeleteStatement: getDuplicateComparator()Ljava/util/Comparator;
   * 12 Weak Mutation 34: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:120 - DeleteStatement: getNodeMaxDupTreeEntries()I
   * 13 Weak Mutation 32: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:117 - DeleteStatement: getTransactional()Z
   * 14 Weak Mutation 33: com.sleepycat.je.dbi.DatabaseImpl.<init>(Ljava/lang/String;Lcom/sleepycat/je/dbi/DatabaseId;Lcom/sleepycat/je/dbi/EnvironmentImpl;Lcom/sleepycat/je/DatabaseConfig;)V:119 - DeleteStatement: getNodeMaxEntries()I
   * 15 Weak Mutation 40: com.sleepycat.je.dbi.DatabaseImpl.initDefaultSettings()V:160 - DeleteStatement: getConfigManager()Lcom/sleepycat/je/dbi/DbConfigManager;
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseId databaseId0 = new DatabaseId();
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      DatabaseImpl databaseImpl0 = null;
      try {
        databaseImpl0 = new DatabaseImpl("w", databaseId0, (EnvironmentImpl) null, databaseConfig0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 35 covered goals:
   * 1 Weak Mutation 171: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 2 Weak Mutation 170: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - DeleteStatement: indent(I)Ljava/lang/String;
   * 3 Weak Mutation 169: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp IINC -1 nSpaces
   * 4 Weak Mutation 168: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp IINC 1 nSpaces
   * 5 Weak Mutation 167: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp Negation of nSpaces
   * 6 Weak Mutation 173: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:984 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 7 Weak Mutation 172: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:984 - ReplaceConstant - <database id=" -> 
   * 8 Weak Mutation 175: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteStatement: toString()Ljava/lang/String;
   * 9 Weak Mutation 174: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 10 Weak Mutation 176: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 11 Weak Mutation 178: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:986 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 12 Weak Mutation 177: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:986 - ReplaceConstant - " -> 
   * 13 Weak Mutation 180: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:987 - ReplaceComparisonOperator = null -> != null
   * 14 Weak Mutation 189: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:992 - ReplaceComparisonOperator = null -> != null
   * 15 Weak Mutation 197: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:997 - ReplaceConstant - /> -> 
   * 16 com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;: I37 Branch 20 IFNULL L987 - true
   * 17 com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;: I62 Branch 21 IFNULL L992 - true
   * 18 Weak Mutation 36: com.sleepycat.je.dbi.DatabaseImpl.<init>()V:142 - DeleteStatement: synchronizedSet(Ljava/util/Set;)Ljava/util/Set;
   * 19 Weak Mutation 37: com.sleepycat.je.dbi.DatabaseImpl.<init>()V:143 - DeleteStatement: getNextNodeId()J
   * 20 Weak Mutation 171: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 170: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - DeleteStatement: indent(I)Ljava/lang/String;
   * 22 Weak Mutation 169: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp IINC -1 nSpaces
   * 23 Weak Mutation 168: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp IINC 1 nSpaces
   * 24 Weak Mutation 175: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteStatement: toString()Ljava/lang/String;
   * 25 Weak Mutation 174: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 26 Weak Mutation 173: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:984 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 27 Weak Mutation 172: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:984 - ReplaceConstant - <database id=" -> 
   * 28 Weak Mutation 167: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:983 - InsertUnaryOp Negation of nSpaces
   * 29 Weak Mutation 189: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:992 - ReplaceComparisonOperator = null -> != null
   * 30 Weak Mutation 178: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:986 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 31 Weak Mutation 176: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:985 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 32 Weak Mutation 177: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:986 - ReplaceConstant - " -> 
   * 33 Weak Mutation 180: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:987 - ReplaceComparisonOperator = null -> != null
   * 34 Weak Mutation 197: com.sleepycat.je.dbi.DatabaseImpl.dumpString(I)Ljava/lang/String;:997 - ReplaceConstant - /> -> 
   * 35 com.sleepycat.je.dbi.DatabaseImpl.<init>()V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      String string0 = mapLN0.toString();
      assertEquals(10003617L, mapLN0.getLastId());
      assertEquals("<mapLN>\n  <node>0</node>\n</mapLN>\n<deleted val=\"false\">\n<database id=\"0\"/>", string0);
  }

  //Test case number: 2
  /*
   * 14 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.dbi.DatabaseImpl.getDebugName()Ljava/lang/String;:149 - DeleteField: debugDatabaseNameLjava/lang/String;
   * 2 Weak Mutation 111: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 114: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - DeleteStatement: getRootLsn()J
   * 4 Weak Mutation 113: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 5 Weak Mutation 112: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - ReplaceConstant - 0 -> 1
   * 6 com.sleepycat.je.dbi.DatabaseImpl.setDebugDatabaseName(Ljava/lang/String;)V: root-Branch
   * 7 com.sleepycat.je.dbi.DatabaseImpl.countRecords()J: root-Branch
   * 8 com.sleepycat.je.dbi.DatabaseImpl.getDebugName()Ljava/lang/String;: root-Branch
   * 9 com.sleepycat.je.dbi.DatabaseImpl.getDbEnvironment()Lcom/sleepycat/je/dbi/EnvironmentImpl;: root-Branch
   * 10 Weak Mutation 38: com.sleepycat.je.dbi.DatabaseImpl.getDebugName()Ljava/lang/String;:149 - DeleteField: debugDatabaseNameLjava/lang/String;
   * 11 Weak Mutation 111: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 114: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - DeleteStatement: getRootLsn()J
   * 13 Weak Mutation 113: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 14 Weak Mutation 112: com.sleepycat.je.dbi.DatabaseImpl.countRecords()J:445 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test2()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setDebugDatabaseName("");
      try {
        databaseImpl0.countRecords();
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * environmentImpl is null for target db 
         */
      }
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 com.sleepycat.je.dbi.DatabaseImpl.setTree(Lcom/sleepycat/je/tree/Tree;)V: root-Branch
   * 2 Weak Mutation 63: com.sleepycat.je.dbi.DatabaseImpl.getTree()Lcom/sleepycat/je/tree/Tree;:181 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 3 Weak Mutation 63: com.sleepycat.je.dbi.DatabaseImpl.getTree()Lcom/sleepycat/je/tree/Tree;:181 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getTree()Lcom/sleepycat/je/tree/Tree;: root-Branch
   */
  @Test
  public void test3()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      Tree tree0 = databaseImpl0.getTree();
      databaseImpl0.setTree(tree0);
      assertEquals(10003682L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 com.sleepycat.je.dbi.DatabaseImpl.setId(Lcom/sleepycat/je/dbi/DatabaseId;)V: root-Branch
   * 2 Weak Mutation 64: com.sleepycat.je.dbi.DatabaseImpl.getId()Lcom/sleepycat/je/dbi/DatabaseId;:190 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 3 Weak Mutation 64: com.sleepycat.je.dbi.DatabaseImpl.getId()Lcom/sleepycat/je/dbi/DatabaseId;:190 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getId()Lcom/sleepycat/je/dbi/DatabaseId;: root-Branch
   */
  @Test
  public void test4()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      DatabaseId databaseId0 = databaseImpl0.getId();
      databaseImpl0.setId(databaseId0);
      assertEquals(10003685L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * 1 Weak Mutation 65: com.sleepycat.je.dbi.DatabaseImpl.getEofNodeId()J:196 - InsertUnaryOp Negation
   * 2 Weak Mutation 66: com.sleepycat.je.dbi.DatabaseImpl.getEofNodeId()J:196 - DeleteField: eofNodeIdJ
   * 3 com.sleepycat.je.dbi.DatabaseImpl.getEofNodeId()J: root-Branch
   * 4 Weak Mutation 65: com.sleepycat.je.dbi.DatabaseImpl.getEofNodeId()J:196 - InsertUnaryOp Negation
   * 5 Weak Mutation 66: com.sleepycat.je.dbi.DatabaseImpl.getEofNodeId()J:196 - DeleteField: eofNodeIdJ
   */
  @Test
  public void test5()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getEofNodeId();
      assertEquals(10003688L, long0);
  }

  //Test case number: 6
  /*
   * 12 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.dbi.DatabaseImpl.isTransactional()Z:217 - DeleteField: transactionalZ
   * 2 Weak Mutation 67: com.sleepycat.je.dbi.DatabaseImpl.isTransactional()Z:217 - InsertUnaryOp Negation
   * 3 Weak Mutation 69: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp Negation of transactional
   * 4 Weak Mutation 70: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp IINC 1 transactional
   * 5 Weak Mutation 71: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp IINC -1 transactional
   * 6 com.sleepycat.je.dbi.DatabaseImpl.isTransactional()Z: root-Branch
   * 7 com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V: root-Branch
   * 8 Weak Mutation 68: com.sleepycat.je.dbi.DatabaseImpl.isTransactional()Z:217 - DeleteField: transactionalZ
   * 9 Weak Mutation 69: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp Negation of transactional
   * 10 Weak Mutation 70: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp IINC 1 transactional
   * 11 Weak Mutation 71: com.sleepycat.je.dbi.DatabaseImpl.setTransactional(Z)V:244 - InsertUnaryOp IINC -1 transactional
   * 12 Weak Mutation 67: com.sleepycat.je.dbi.DatabaseImpl.isTransactional()Z:217 - InsertUnaryOp Negation
   */
  @Test
  public void test6()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setTransactional(true);
      boolean boolean0 = databaseImpl0.isTransactional();
      assertEquals(true, databaseImpl0.isTransactional());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * 1 Weak Mutation 72: com.sleepycat.je.dbi.DatabaseImpl.getSortedDuplicates()Z:252 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.dbi.DatabaseImpl.getSortedDuplicates()Z: root-Branch
   * 3 Weak Mutation 72: com.sleepycat.je.dbi.DatabaseImpl.getSortedDuplicates()Z:252 - InsertUnaryOp Negation
   */
  @Test
  public void test7()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.getSortedDuplicates();
      assertEquals(10003699L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * 1 Weak Mutation 76: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp -1
   * 2 Weak Mutation 74: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp Negation
   * 3 Weak Mutation 75: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp +1
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I: root-Branch
   * 5 Weak Mutation 76: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp -1
   * 6 Weak Mutation 74: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp Negation
   * 7 Weak Mutation 75: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxEntries()I:255 - InsertUnaryOp +1
   */
  @Test
  public void test8()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxEntries();
      assertEquals(10003703L, databaseImpl0.getEofNodeId());
      assertEquals(0, int0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 78: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp Negation
   * 2 Weak Mutation 79: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp +1
   * 3 Weak Mutation 80: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp -1
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I: root-Branch
   * 5 Weak Mutation 78: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp Negation
   * 6 Weak Mutation 79: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp +1
   * 7 Weak Mutation 80: com.sleepycat.je.dbi.DatabaseImpl.getNodeMaxDupTreeEntries()I:258 - InsertUnaryOp -1
   */
  @Test
  public void test9()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getNodeMaxDupTreeEntries();
      assertEquals(10003709L, databaseImpl0.getEofNodeId());
      assertEquals(0, int0);
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Weak Mutation 87: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteField: referringHandlesLjava/util/Set;
   * 2 Weak Mutation 93: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 88: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteStatement: size()I
   * 4 Weak Mutation 90: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceComparisonOperator <= -> <
   * 5 com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z: I5 Branch 8 IFLE L305 - true
   * 6 Weak Mutation 87: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteField: referringHandlesLjava/util/Set;
   * 7 Weak Mutation 93: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 88: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteStatement: size()I
   * 9 Weak Mutation 90: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceComparisonOperator <= -> <
   */
  @Test
  public void test10()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      boolean boolean0 = databaseImpl0.hasOpenHandles();
      assertEquals(10003715L, databaseImpl0.getEofNodeId());
      assertEquals(false, boolean0);
  }

  //Test case number: 11
  /*
   * 12 covered goals:
   * 1 Weak Mutation 92: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceConstant - 1 -> 0
   * 2 Weak Mutation 91: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 95: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 4 Weak Mutation 94: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteField: referringHandlesLjava/util/Set;
   * 5 com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V: root-Branch
   * 6 com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z: I5 Branch 8 IFLE L305 - false
   * 7 Weak Mutation 87: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteField: referringHandlesLjava/util/Set;
   * 8 Weak Mutation 88: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - DeleteStatement: size()I
   * 9 Weak Mutation 92: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 95: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 11 Weak Mutation 94: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteField: referringHandlesLjava/util/Set;
   * 12 Weak Mutation 91: com.sleepycat.je.dbi.DatabaseImpl.hasOpenHandles()Z:305 - ReplaceComparisonOperator <= -> -1
   */
  @Test
  public void test11()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.addReferringHandle((Database) null);
      boolean boolean0 = databaseImpl0.hasOpenHandles();
      assertEquals(10003723L, databaseImpl0.getEofNodeId());
      assertEquals(true, boolean0);
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * 1 Weak Mutation 96: com.sleepycat.je.dbi.DatabaseImpl.removeReferringHandle(Lcom/sleepycat/je/Database;)V:317 - DeleteField: referringHandlesLjava/util/Set;
   * 2 Weak Mutation 97: com.sleepycat.je.dbi.DatabaseImpl.removeReferringHandle(Lcom/sleepycat/je/Database;)V:317 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 3 com.sleepycat.je.dbi.DatabaseImpl.removeReferringHandle(Lcom/sleepycat/je/Database;)V: root-Branch
   * 4 Weak Mutation 96: com.sleepycat.je.dbi.DatabaseImpl.removeReferringHandle(Lcom/sleepycat/je/Database;)V:317 - DeleteField: referringHandlesLjava/util/Set;
   * 5 Weak Mutation 97: com.sleepycat.je.dbi.DatabaseImpl.removeReferringHandle(Lcom/sleepycat/je/Database;)V:317 - DeleteStatement: remove(Ljava/lang/Object;)Z
   */
  @Test
  public void test12()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.removeReferringHandle((Database) null);
      assertEquals(10003733L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * 1 Weak Mutation 98: com.sleepycat.je.dbi.DatabaseImpl.getReferringHandleCount()I:323 - DeleteField: referringHandlesLjava/util/Set;
   * 2 Weak Mutation 99: com.sleepycat.je.dbi.DatabaseImpl.getReferringHandleCount()I:323 - DeleteStatement: size()I
   * 3 com.sleepycat.je.dbi.DatabaseImpl.getReferringHandleCount()I: root-Branch
   * 4 Weak Mutation 98: com.sleepycat.je.dbi.DatabaseImpl.getReferringHandleCount()I:323 - DeleteField: referringHandlesLjava/util/Set;
   * 5 Weak Mutation 99: com.sleepycat.je.dbi.DatabaseImpl.getReferringHandleCount()I:323 - DeleteStatement: size()I
   */
  @Test
  public void test13()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.getReferringHandleCount();
      assertEquals(10003737L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 14
  /*
   * 17 covered goals:
   * 1 Weak Mutation 102: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:332 - DeleteStatement: next()Ljava/lang/Object;
   * 2 Weak Mutation 103: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:333 - ReplaceComparisonOperator == -> !=
   * 3 com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;: I28 Branch 10 IFNE L331 - true
   * 4 com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;: I17 Branch 9 IFEQ L333 - true
   * 5 Weak Mutation 95: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 6 Weak Mutation 94: com.sleepycat.je.dbi.DatabaseImpl.addReferringHandle(Lcom/sleepycat/je/Database;)V:311 - DeleteField: referringHandlesLjava/util/Set;
   * 7 Weak Mutation 100: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteField: referringHandlesLjava/util/Set;
   * 8 Weak Mutation 101: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 9 Weak Mutation 106: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - ReplaceComparisonOperator != -> ==
   * 10 Weak Mutation 105: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteStatement: hasNext()Z
   * 11 Weak Mutation 102: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:332 - DeleteStatement: next()Ljava/lang/Object;
   * 12 Weak Mutation 103: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:333 - ReplaceComparisonOperator == -> !=
   * 13 Weak Mutation 100: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteField: referringHandlesLjava/util/Set;
   * 14 Weak Mutation 101: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteStatement: iterator()Ljava/util/Iterator;
   * 15 Weak Mutation 106: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 105: com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;:331 - DeleteStatement: hasNext()Z
   * 17 com.sleepycat.je.dbi.DatabaseImpl.findPrimaryDatabase()Lcom/sleepycat/je/Database;: I28 Branch 10 IFNE L331 - false
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.addReferringHandle((Database) null);
      databaseImpl0.findPrimaryDatabase();
      assertEquals(10003741L, databaseImpl0.getEofNodeId());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Weak Mutation 108: com.sleepycat.je.dbi.DatabaseImpl.getName()Ljava/lang/String;:340 - DeleteStatement: getDbMapTree()Lcom/sleepycat/je/dbi/DbTree;
   * 2 com.sleepycat.je.dbi.DatabaseImpl.getName()Ljava/lang/String;: root-Branch
   * 3 Weak Mutation 108: com.sleepycat.je.dbi.DatabaseImpl.getName()Ljava/lang/String;:340 - DeleteStatement: getDbMapTree()Lcom/sleepycat/je/dbi/DbTree;
   */
  @Test
  public void test15()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try {
        databaseImpl0.getName();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 16
  /*
   * 80 covered goals:
   * 1 Weak Mutation 205: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 2 Weak Mutation 204: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 3 Weak Mutation 207: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 4 Weak Mutation 206: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getBooleanLogSize()I
   * 5 Weak Mutation 201: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getLogSize()I
   * 6 Weak Mutation 200: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 7 Weak Mutation 203: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 8 Weak Mutation 202: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 9 Weak Mutation 199: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getLogSize()I
   * 10 Weak Mutation 198: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 11 Weak Mutation 220: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getStringLogSize(Ljava/lang/String;)I
   * 12 Weak Mutation 221: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 13 Weak Mutation 222: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 14 Weak Mutation 223: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 15 Weak Mutation 216: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 16 Weak Mutation 217: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 17 Weak Mutation 219: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;
   * 18 Weak Mutation 212: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;
   * 19 Weak Mutation 213: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getStringLogSize(Ljava/lang/String;)I
   * 20 Weak Mutation 214: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 21 Weak Mutation 215: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 22 Weak Mutation 208: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 23 Weak Mutation 209: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 210: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 25 Weak Mutation 237: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 26 Weak Mutation 236: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 27 Weak Mutation 235: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 28 Weak Mutation 234: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 29 Weak Mutation 233: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> /
   * 30 Weak Mutation 232: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> %
   * 31 Weak Mutation 231: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> +
   * 32 Weak Mutation 230: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> -
   * 33 Weak Mutation 229: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 3
   * 34 Weak Mutation 228: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> -1
   * 35 Weak Mutation 227: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 1
   * 36 Weak Mutation 226: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 0
   * 37 Weak Mutation 225: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getIntLogSize()I
   * 38 Weak Mutation 224: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 39 Weak Mutation 331: com.sleepycat.je.dbi.DatabaseImpl.serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;:1081 - ReplaceComparisonOperator = null -> != null
   * 40 com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I: root-Branch
   * 41 com.sleepycat.je.dbi.DatabaseImpl.serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;: I3 Branch 26 IFNULL L1081 - true
   * 42 Weak Mutation 205: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 43 Weak Mutation 204: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 44 Weak Mutation 207: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 45 Weak Mutation 206: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getBooleanLogSize()I
   * 46 Weak Mutation 201: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getLogSize()I
   * 47 Weak Mutation 200: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 48 Weak Mutation 203: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 49 Weak Mutation 202: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 50 Weak Mutation 199: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getLogSize()I
   * 51 Weak Mutation 198: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 52 Weak Mutation 220: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getStringLogSize(Ljava/lang/String;)I
   * 53 Weak Mutation 221: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 54 Weak Mutation 222: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 55 Weak Mutation 223: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 56 Weak Mutation 216: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 57 Weak Mutation 217: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 58 Weak Mutation 219: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;
   * 59 Weak Mutation 212: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;
   * 60 Weak Mutation 213: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getStringLogSize(Ljava/lang/String;)I
   * 61 Weak Mutation 214: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 62 Weak Mutation 215: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 63 Weak Mutation 208: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 64 Weak Mutation 209: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 65 Weak Mutation 210: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 66 Weak Mutation 237: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 67 Weak Mutation 236: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> /
   * 68 Weak Mutation 235: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> %
   * 69 Weak Mutation 234: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> -
   * 70 Weak Mutation 233: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> /
   * 71 Weak Mutation 232: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> %
   * 72 Weak Mutation 231: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> +
   * 73 Weak Mutation 230: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator * -> -
   * 74 Weak Mutation 229: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 3
   * 75 Weak Mutation 228: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> -1
   * 76 Weak Mutation 227: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 1
   * 77 Weak Mutation 226: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceConstant - 2 -> 0
   * 78 Weak Mutation 225: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - DeleteStatement: getIntLogSize()I
   * 79 Weak Mutation 224: com.sleepycat.je.dbi.DatabaseImpl.getLogSize()I:1004 - ReplaceArithmeticOperator + -> *
   * 80 Weak Mutation 331: com.sleepycat.je.dbi.DatabaseImpl.serializeComparator(Ljava/util/Comparator;)Ljava/lang/String;:1081 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test16()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getLogSize();
      assertEquals(10003755L, databaseImpl0.getEofNodeId());
      assertEquals(22, int0);
  }

  //Test case number: 17
  /*
   * 5 covered goals:
   * 1 Weak Mutation 239: com.sleepycat.je.dbi.DatabaseImpl.writeToLog(Ljava/nio/ByteBuffer;)V:1010 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 2 Weak Mutation 238: com.sleepycat.je.dbi.DatabaseImpl.writeToLog(Ljava/nio/ByteBuffer;)V:1010 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 3 com.sleepycat.je.dbi.DatabaseImpl.writeToLog(Ljava/nio/ByteBuffer;)V: root-Branch
   * 4 Weak Mutation 239: com.sleepycat.je.dbi.DatabaseImpl.writeToLog(Ljava/nio/ByteBuffer;)V:1010 - DeleteStatement: writeToLog(Ljava/nio/ByteBuffer;)V
   * 5 Weak Mutation 238: com.sleepycat.je.dbi.DatabaseImpl.writeToLog(Ljava/nio/ByteBuffer;)V:1010 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   */
  @Test
  public void test17()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try {
        databaseImpl0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 18
  /*
   * 10 covered goals:
   * 1 Weak Mutation 262: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp Negation of entryTypeVersion
   * 2 Weak Mutation 263: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp IINC 1 entryTypeVersion
   * 3 Weak Mutation 261: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 4 Weak Mutation 264: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp IINC -1 entryTypeVersion
   * 5 Weak Mutation 265: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   * 6 Weak Mutation 262: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp Negation of entryTypeVersion
   * 7 Weak Mutation 263: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp IINC 1 entryTypeVersion
   * 8 Weak Mutation 261: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 9 Weak Mutation 264: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - InsertUnaryOp IINC -1 entryTypeVersion
   * 10 Weak Mutation 265: com.sleepycat.je.dbi.DatabaseImpl.readFromLog(Ljava/nio/ByteBuffer;B)V:1022 - DeleteStatement: readFromLog(Ljava/nio/ByteBuffer;B)V
   */
  @Test
  public void test18()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try {
        databaseImpl0.readFromLog((ByteBuffer) null, (byte)40);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 19
  /*
   * 65 covered goals:
   * 1 Weak Mutation 295: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1051 - ReplaceConstant - <database> -> 
   * 2 Weak Mutation 296: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1051 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 297: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 4 Weak Mutation 298: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp Negation of verbose
   * 5 Weak Mutation 299: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp IINC 1 verbose
   * 6 Weak Mutation 300: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp IINC -1 verbose
   * 7 Weak Mutation 301: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 8 Weak Mutation 305: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp IINC -1 verbose
   * 9 Weak Mutation 304: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp IINC 1 verbose
   * 10 Weak Mutation 306: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 11 Weak Mutation 302: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 12 Weak Mutation 303: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp Negation of verbose
   * 13 Weak Mutation 307: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - ReplaceConstant - <dupsort v=" -> 
   * 14 Weak Mutation 309: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - InsertUnaryOp Negation
   * 15 Weak Mutation 308: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 16 Weak Mutation 311: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - DeleteStatement: append(Z)Ljava/lang/StringBuffer;
   * 17 Weak Mutation 313: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1055 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 312: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1055 - ReplaceConstant - "/> -> 
   * 19 Weak Mutation 315: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1056 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 20 Weak Mutation 314: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1056 - ReplaceConstant - <btcf name=" -> 
   * 21 Weak Mutation 317: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1057 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 22 Weak Mutation 316: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1057 - DeleteField: btreeComparatorNameLjava/lang/String;
   * 23 Weak Mutation 319: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1058 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 318: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1058 - ReplaceConstant - "/> -> 
   * 25 Weak Mutation 320: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1059 - ReplaceConstant - <dupcf name=" -> 
   * 26 Weak Mutation 321: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1059 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 27 Weak Mutation 322: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1060 - DeleteField: duplicateComparatorNameLjava/lang/String;
   * 28 Weak Mutation 323: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1060 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 29 Weak Mutation 324: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1061 - ReplaceConstant - "/> -> 
   * 30 Weak Mutation 325: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1061 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 31 Weak Mutation 326: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1062 - ReplaceConstant - </database> -> 
   * 32 Weak Mutation 327: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1062 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 33 com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V: root-Branch
   * 34 Weak Mutation 305: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp IINC -1 verbose
   * 35 Weak Mutation 304: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp IINC 1 verbose
   * 36 Weak Mutation 307: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - ReplaceConstant - <dupsort v=" -> 
   * 37 Weak Mutation 306: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 38 Weak Mutation 309: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - InsertUnaryOp Negation
   * 39 Weak Mutation 308: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 40 Weak Mutation 311: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1054 - DeleteStatement: append(Z)Ljava/lang/StringBuffer;
   * 41 Weak Mutation 313: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1055 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 42 Weak Mutation 312: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1055 - ReplaceConstant - "/> -> 
   * 43 Weak Mutation 315: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1056 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 44 Weak Mutation 314: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1056 - ReplaceConstant - <btcf name=" -> 
   * 45 Weak Mutation 317: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1057 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 46 Weak Mutation 316: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1057 - DeleteField: btreeComparatorNameLjava/lang/String;
   * 47 Weak Mutation 319: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1058 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 48 Weak Mutation 318: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1058 - ReplaceConstant - "/> -> 
   * 49 Weak Mutation 295: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1051 - ReplaceConstant - <database> -> 
   * 50 Weak Mutation 296: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1051 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 51 Weak Mutation 297: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - DeleteField: idLcom/sleepycat/je/dbi/DatabaseId;
   * 52 Weak Mutation 298: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp Negation of verbose
   * 53 Weak Mutation 299: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp IINC 1 verbose
   * 54 Weak Mutation 300: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - InsertUnaryOp IINC -1 verbose
   * 55 Weak Mutation 301: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1052 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 56 Weak Mutation 302: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - DeleteField: treeLcom/sleepycat/je/tree/Tree;
   * 57 Weak Mutation 303: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1053 - InsertUnaryOp Negation of verbose
   * 58 Weak Mutation 326: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1062 - ReplaceConstant - </database> -> 
   * 59 Weak Mutation 327: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1062 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 60 Weak Mutation 324: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1061 - ReplaceConstant - "/> -> 
   * 61 Weak Mutation 325: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1061 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 62 Weak Mutation 322: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1060 - DeleteField: duplicateComparatorNameLjava/lang/String;
   * 63 Weak Mutation 323: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1060 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 64 Weak Mutation 320: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1059 - ReplaceConstant - <dupcf name=" -> 
   * 65 Weak Mutation 321: com.sleepycat.je.dbi.DatabaseImpl.dumpLog(Ljava/lang/StringBuffer;Z)V:1059 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   */
  @Test
  public void test19()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      StringBuffer stringBuffer0 = new StringBuffer();
      databaseImpl0.dumpLog(stringBuffer0, false);
      assertEquals(142, stringBuffer0.capacity());
      assertEquals(10003812L, mapLN0.getNextNodeId());
  }

  //Test case number: 20
  /*
   * 3 covered goals:
   * 1 Weak Mutation 328: com.sleepycat.je.dbi.DatabaseImpl.logEntryIsTransactional()Z:1068 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.dbi.DatabaseImpl.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 328: com.sleepycat.je.dbi.DatabaseImpl.logEntryIsTransactional()Z:1068 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test20()  throws Throwable  {
      MapLN mapLN0 = new MapLN();
      DatabaseImpl databaseImpl0 = mapLN0.getDatabase();
      boolean boolean0 = databaseImpl0.logEntryIsTransactional();
      assertEquals(10003955L, mapLN0.getLastId());
      assertEquals(false, boolean0);
  }

  //Test case number: 21
  /*
   * 5 covered goals:
   * 1 Weak Mutation 330: com.sleepycat.je.dbi.DatabaseImpl.getTransactionId()J:1074 - ReplaceConstant - 0 -> -1
   * 2 Weak Mutation 329: com.sleepycat.je.dbi.DatabaseImpl.getTransactionId()J:1074 - ReplaceConstant - 0 -> 1
   * 3 com.sleepycat.je.dbi.DatabaseImpl.getTransactionId()J: root-Branch
   * 4 Weak Mutation 330: com.sleepycat.je.dbi.DatabaseImpl.getTransactionId()J:1074 - ReplaceConstant - 0 -> -1
   * 5 Weak Mutation 329: com.sleepycat.je.dbi.DatabaseImpl.getTransactionId()J:1074 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test21()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      long long0 = databaseImpl0.getTransactionId();
      assertEquals(10003967L, databaseImpl0.getEofNodeId());
      assertEquals(0L, long0);
  }

  //Test case number: 22
  /*
   * 17 covered goals:
   * 1 Weak Mutation 334: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1093 - ReplaceComparisonOperator != null -> = null
   * 2 Weak Mutation 335: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1097 - DeleteStatement: newInstance()Ljava/lang/Object;
   * 3 Weak Mutation 343: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 342: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - ReplaceConstant - Exception while trying to load  -> 
   * 5 Weak Mutation 347: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 346: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 345: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 344: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - ReplaceConstant -  Comparator class:  -> 
   * 9 com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;: I3 Branch 27 IFNONNULL L1093 - true
   * 10 Weak Mutation 343: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 11 Weak Mutation 342: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - ReplaceConstant - Exception while trying to load  -> 
   * 12 Weak Mutation 347: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: toString()Ljava/lang/String;
   * 13 Weak Mutation 346: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 345: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 15 Weak Mutation 344: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1103 - ReplaceConstant -  Comparator class:  -> 
   * 16 Weak Mutation 334: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1093 - ReplaceComparisonOperator != null -> = null
   * 17 Weak Mutation 335: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1097 - DeleteStatement: newInstance()Ljava/lang/Object;
   */
  @Test
  public void test22()  throws Throwable  {
      Class<?> class0 = URI.class;
      try {
        DatabaseImpl.instantiateComparator((Class) class0, "# miPxUnimum = ");
        fail("Expecting exception: LogException");
      } catch(LogException e) {
        /*
         * Exception while trying to load # miPxUnimum =  Comparator class: java.lang.IllegalAccessException: Class com.sleepycat.je.dbi.DatabaseImpl can not access a member of class java.net.URI with modifiers \"private\"
         */
      }
  }

  //Test case number: 23
  /*
   * 14 covered goals:
   * 1 Weak Mutation 341: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: toString()Ljava/lang/String;
   * 2 Weak Mutation 340: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 3 Weak Mutation 339: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 4 Weak Mutation 338: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - ReplaceConstant -  Comparator class:  -> 
   * 5 Weak Mutation 337: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 6 Weak Mutation 336: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - ReplaceConstant - Exception while trying to load  -> 
   * 7 Weak Mutation 334: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1093 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 335: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1097 - DeleteStatement: newInstance()Ljava/lang/Object;
   * 9 Weak Mutation 341: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: toString()Ljava/lang/String;
   * 10 Weak Mutation 340: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
   * 11 Weak Mutation 339: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 338: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - ReplaceConstant -  Comparator class:  -> 
   * 13 Weak Mutation 337: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 336: com.sleepycat.je.dbi.DatabaseImpl.instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:1100 - ReplaceConstant - Exception while trying to load  -> 
   */
  @Test
  public void test23()  throws Throwable  {
      Class<?> class0 = EnvironmentImpl.class;
      try {
        DatabaseImpl.instantiateComparator((Class) class0, "");
        fail("Expecting exception: LogException");
      } catch(LogException e) {
        /*
         * Exception while trying to load  Comparator class: java.lang.InstantiationException: com.sleepycat.je.dbi.EnvironmentImpl
         */
      }
  }

  //Test case number: 24
  /*
   * 7 covered goals:
   * 1 Weak Mutation 350: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp -1
   * 2 Weak Mutation 349: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp +1
   * 3 Weak Mutation 348: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp Negation
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I: root-Branch
   * 5 Weak Mutation 350: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp -1
   * 6 Weak Mutation 349: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp +1
   * 7 Weak Mutation 348: com.sleepycat.je.dbi.DatabaseImpl.getBinDeltaPercent()I:1107 - InsertUnaryOp Negation
   */
  @Test
  public void test24()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinDeltaPercent();
      assertEquals(10003971L, databaseImpl0.getEofNodeId());
      assertEquals(0, int0);
  }

  //Test case number: 25
  /*
   * 7 covered goals:
   * 1 Weak Mutation 352: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp Negation
   * 2 Weak Mutation 353: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp +1
   * 3 Weak Mutation 354: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp -1
   * 4 com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I: root-Branch
   * 5 Weak Mutation 352: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp Negation
   * 6 Weak Mutation 353: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp +1
   * 7 Weak Mutation 354: com.sleepycat.je.dbi.DatabaseImpl.getBinMaxDeltas()I:1110 - InsertUnaryOp -1
   */
  @Test
  public void test25()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      int int0 = databaseImpl0.getBinMaxDeltas();
      assertEquals(10003977L, databaseImpl0.getEofNodeId());
      assertEquals(0, int0);
  }

  //Test case number: 26
  /*
   * 2 covered goals:
   * 1 com.sleepycat.je.dbi.DatabaseImpl.setEnvironmentImpl(Lcom/sleepycat/je/dbi/EnvironmentImpl;)V: root-Branch
   * 2 Weak Mutation 40: com.sleepycat.je.dbi.DatabaseImpl.initDefaultSettings()V:160 - DeleteStatement: getConfigManager()Lcom/sleepycat/je/dbi/DbConfigManager;
   */
  @Test
  public void test26()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      // Undeclared exception!
      try {
        databaseImpl0.setEnvironmentImpl((EnvironmentImpl) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 27
  /*
   * 3 covered goals:
   * 1 com.sleepycat.je.dbi.DatabaseImpl.setPendingDeletedHook(Lcom/sleepycat/je/utilint/TestHook;)V: root-Branch
   * 2 Weak Mutation 36: com.sleepycat.je.dbi.DatabaseImpl.<init>()V:142 - DeleteStatement: synchronizedSet(Ljava/util/Set;)Ljava/util/Set;
   * 3 Weak Mutation 37: com.sleepycat.je.dbi.DatabaseImpl.<init>()V:143 - DeleteStatement: getNextNodeId()J
   */
  @Test
  public void test27()  throws Throwable  {
      DatabaseImpl databaseImpl0 = new DatabaseImpl();
      databaseImpl0.setPendingDeletedHook((TestHook) null);
      assertEquals(10003987L, databaseImpl0.getEofNodeId());
  }
}
