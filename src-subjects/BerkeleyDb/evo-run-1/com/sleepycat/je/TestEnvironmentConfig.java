/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Environment;
import com.sleepycat.je.EnvironmentConfig;
import com.sleepycat.je.log.LogException;
import java.io.File;
import java.util.Properties;

@RunWith(EvoSuiteRunner.class)
public class TestEnvironmentConfig {


  //Test case number: 0
  /*
   * 12 covered goals:
   * 1 Weak Mutation 8: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp Negation of allowCreate
   * 2 Weak Mutation 9: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp IINC 1 allowCreate
   * 3 Weak Mutation 10: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp IINC -1 allowCreate
   * 4 com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V: root-Branch
   * 5 Weak Mutation 0: com.sleepycat.je.EnvironmentConfig.<init>()V:14 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 1: com.sleepycat.je.EnvironmentConfig.<init>()V:18 - ReplaceConstant - 1 -> 0
   * 7 Weak Mutation 2: com.sleepycat.je.EnvironmentConfig.<init>()V:19 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 3: com.sleepycat.je.EnvironmentConfig.<init>()V:23 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 8: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp Negation of allowCreate
   * 10 Weak Mutation 9: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp IINC 1 allowCreate
   * 11 Weak Mutation 10: com.sleepycat.je.EnvironmentConfig.setAllowCreate(Z)V:43 - InsertUnaryOp IINC -1 allowCreate
   * 12 com.sleepycat.je.EnvironmentConfig.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setAllowCreate(false);
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals(false, environmentConfig0.getAllowCreate());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * 1 Weak Mutation 27: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteField: ENV_RDONLYLcom/sleepycat/je/config/BooleanConfigParam;
   * 2 Weak Mutation 29: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp IINC 1 readOnly
   * 3 Weak Mutation 28: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp Negation of readOnly
   * 4 Weak Mutation 31: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 5 Weak Mutation 30: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp IINC -1 readOnly
   * 6 Weak Mutation 32: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 7 com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V: root-Branch
   * 8 Weak Mutation 4: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:14 - ReplaceConstant - 1 -> 0
   * 9 Weak Mutation 5: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:18 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 6: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:19 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 7: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:23 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 27: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteField: ENV_RDONLYLcom/sleepycat/je/config/BooleanConfigParam;
   * 13 Weak Mutation 29: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp IINC 1 readOnly
   * 14 Weak Mutation 28: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp Negation of readOnly
   * 15 Weak Mutation 31: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 16 Weak Mutation 30: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - InsertUnaryOp IINC -1 readOnly
   * 17 Weak Mutation 32: com.sleepycat.je.EnvironmentConfig.setReadOnly(Z)V:79 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 18 com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V: root-Branch
   */
  @Test
  public void test1()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setReadOnly(true);
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
      assertEquals("allowCreate=false\n{je.env.isReadOnly=true}", environmentConfig0.toString());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.EnvironmentConfig.getAllowCreate()Z:50 - InsertUnaryOp Negation
   * 2 Weak Mutation 12: com.sleepycat.je.EnvironmentConfig.getAllowCreate()Z:50 - DeleteField: allowCreateZ
   * 3 com.sleepycat.je.EnvironmentConfig.getAllowCreate()Z: root-Branch
   * 4 Weak Mutation 11: com.sleepycat.je.EnvironmentConfig.getAllowCreate()Z:50 - InsertUnaryOp Negation
   * 5 Weak Mutation 12: com.sleepycat.je.EnvironmentConfig.getAllowCreate()Z:50 - DeleteField: allowCreateZ
   */
  @Test
  public void test2()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      boolean boolean0 = environmentConfig0.getAllowCreate();
      assertEquals(true, boolean0);
  }

  //Test case number: 3
  /*
   * 9 covered goals:
   * 1 Weak Mutation 13: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteField: LOCK_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 2 Weak Mutation 14: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - InsertUnaryOp Negation of timeout
   * 3 Weak Mutation 15: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteStatement: toString(J)Ljava/lang/String;
   * 4 Weak Mutation 16: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 5 com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V: root-Branch
   * 6 Weak Mutation 13: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteField: LOCK_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 7 Weak Mutation 14: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - InsertUnaryOp Negation of timeout
   * 8 Weak Mutation 15: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteStatement: toString(J)Ljava/lang/String;
   * 9 Weak Mutation 16: com.sleepycat.je.EnvironmentConfig.setLockTimeout(J)V:57 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   */
  @Test
  public void test3()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setLockTimeout(4L);
      assertEquals("allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isLocking=false, je.txn.serializableIsolation=false, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=-1427, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=4}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=4}", environmentConfig0.toString());
      assertEquals(4L, environmentConfig0.getLockTimeout());
  }

  //Test case number: 4
  /*
   * 13 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:64 - DeleteField: LOCK_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 2 Weak Mutation 18: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:64 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 3 Weak Mutation 19: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:65 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 20: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:65 - ReplaceConstant - 0 -> -1
   * 5 Weak Mutation 21: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:67 - DeleteStatement: parseLong(Ljava/lang/String;)J
   * 6 Weak Mutation 26: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:72 - InsertUnaryOp Negation of timeout
   * 7 com.sleepycat.je.EnvironmentConfig.getLockTimeout()J: root-Branch
   * 8 Weak Mutation 17: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:64 - DeleteField: LOCK_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 9 Weak Mutation 19: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:65 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 18: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:64 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 11 Weak Mutation 21: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:67 - DeleteStatement: parseLong(Ljava/lang/String;)J
   * 12 Weak Mutation 20: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:65 - ReplaceConstant - 0 -> -1
   * 13 Weak Mutation 26: com.sleepycat.je.EnvironmentConfig.getLockTimeout()J:72 - InsertUnaryOp Negation of timeout
   */
  @Test
  public void test4()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      long long0 = environmentConfig0.getLockTimeout();
      assertEquals((-4L), long0);
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:86 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 2 Weak Mutation 33: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:86 - DeleteField: ENV_RDONLYLcom/sleepycat/je/config/BooleanConfigParam;
   * 3 Weak Mutation 35: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:87 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 4 Weak Mutation 36: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:87 - DeleteStatement: booleanValue()Z
   * 5 com.sleepycat.je.EnvironmentConfig.getReadOnly()Z: root-Branch
   * 6 Weak Mutation 34: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:86 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 7 Weak Mutation 35: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:87 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 8 Weak Mutation 33: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:86 - DeleteField: ENV_RDONLYLcom/sleepycat/je/config/BooleanConfigParam;
   * 9 Weak Mutation 36: com.sleepycat.je.EnvironmentConfig.getReadOnly()Z:87 - DeleteStatement: booleanValue()Z
   */
  @Test
  public void test5()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.getReadOnly();
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals(false, environmentConfig0.getAllowCreate());
  }

  //Test case number: 6
  /*
   * 13 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp Negation of transactional
   * 2 Weak Mutation 39: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp IINC 1 transactional
   * 3 Weak Mutation 37: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteField: ENV_INIT_TXNLcom/sleepycat/je/config/BooleanConfigParam;
   * 4 Weak Mutation 42: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 5 Weak Mutation 40: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp IINC -1 transactional
   * 6 Weak Mutation 41: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 7 com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V: root-Branch
   * 8 Weak Mutation 38: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp Negation of transactional
   * 9 Weak Mutation 39: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp IINC 1 transactional
   * 10 Weak Mutation 37: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteField: ENV_INIT_TXNLcom/sleepycat/je/config/BooleanConfigParam;
   * 11 Weak Mutation 42: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 12 Weak Mutation 40: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - InsertUnaryOp IINC -1 transactional
   * 13 Weak Mutation 41: com.sleepycat.je.EnvironmentConfig.setTransactional(Z)V:96 - DeleteStatement: toString(Z)Ljava/lang/String;
   */
  @Test
  public void test6()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setTransactional(true);
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
      assertEquals(true, environmentConfig0.getCheckpointUP());
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * 1 Weak Mutation 43: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:105 - DeleteField: ENV_INIT_TXNLcom/sleepycat/je/config/BooleanConfigParam;
   * 2 Weak Mutation 44: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:105 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 3 Weak Mutation 46: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:106 - DeleteStatement: booleanValue()Z
   * 4 Weak Mutation 45: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:106 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 5 com.sleepycat.je.EnvironmentConfig.getTransactional()Z: root-Branch
   * 6 Weak Mutation 43: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:105 - DeleteField: ENV_INIT_TXNLcom/sleepycat/je/config/BooleanConfigParam;
   * 7 Weak Mutation 46: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:106 - DeleteStatement: booleanValue()Z
   * 8 Weak Mutation 44: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:105 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 9 Weak Mutation 45: com.sleepycat.je.EnvironmentConfig.getTransactional()Z:106 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   */
  @Test
  public void test7()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.getTransactional();
      assertEquals(false, environmentConfig0.getAllowCreate());
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteField: ENV_INIT_LOCKINGLcom/sleepycat/je/config/BooleanConfigParam;
   * 2 Weak Mutation 51: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 3 Weak Mutation 50: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp IINC -1 locking
   * 4 Weak Mutation 49: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp IINC 1 locking
   * 5 Weak Mutation 48: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp Negation of locking
   * 6 Weak Mutation 52: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 7 com.sleepycat.je.EnvironmentConfig.setLocking(Z)V: root-Branch
   * 8 Weak Mutation 47: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteField: ENV_INIT_LOCKINGLcom/sleepycat/je/config/BooleanConfigParam;
   * 9 Weak Mutation 51: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 10 Weak Mutation 50: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp IINC -1 locking
   * 11 Weak Mutation 49: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp IINC 1 locking
   * 12 Weak Mutation 48: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - InsertUnaryOp Negation of locking
   * 13 Weak Mutation 52: com.sleepycat.je.EnvironmentConfig.setLocking(Z)V:114 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   */
  @Test
  public void test8()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setLocking(true);
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
      assertEquals(true, environmentConfig0.getLocking());
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * 1 Weak Mutation 54: com.sleepycat.je.EnvironmentConfig.getLocking()Z:121 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 2 Weak Mutation 53: com.sleepycat.je.EnvironmentConfig.getLocking()Z:121 - DeleteField: ENV_INIT_LOCKINGLcom/sleepycat/je/config/BooleanConfigParam;
   * 3 Weak Mutation 55: com.sleepycat.je.EnvironmentConfig.getLocking()Z:122 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 4 Weak Mutation 56: com.sleepycat.je.EnvironmentConfig.getLocking()Z:122 - DeleteStatement: booleanValue()Z
   * 5 com.sleepycat.je.EnvironmentConfig.getLocking()Z: root-Branch
   * 6 Weak Mutation 55: com.sleepycat.je.EnvironmentConfig.getLocking()Z:122 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 7 Weak Mutation 54: com.sleepycat.je.EnvironmentConfig.getLocking()Z:121 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 8 Weak Mutation 53: com.sleepycat.je.EnvironmentConfig.getLocking()Z:121 - DeleteField: ENV_INIT_LOCKINGLcom/sleepycat/je/config/BooleanConfigParam;
   * 9 Weak Mutation 56: com.sleepycat.je.EnvironmentConfig.getLocking()Z:122 - DeleteStatement: booleanValue()Z
   */
  @Test
  public void test9()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      boolean boolean0 = environmentConfig0.getLocking();
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals(true, boolean0);
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
  }

  //Test case number: 10
  /*
   * 9 covered goals:
   * 1 Weak Mutation 59: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteStatement: toString(J)Ljava/lang/String;
   * 2 Weak Mutation 58: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - InsertUnaryOp Negation of timeout
   * 3 Weak Mutation 57: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteField: TXN_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 4 Weak Mutation 60: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 5 com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V: root-Branch
   * 6 Weak Mutation 59: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteStatement: toString(J)Ljava/lang/String;
   * 7 Weak Mutation 58: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - InsertUnaryOp Negation of timeout
   * 8 Weak Mutation 57: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteField: TXN_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 9 Weak Mutation 60: com.sleepycat.je.EnvironmentConfig.setTxnTimeout(J)V:129 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   */
  @Test
  public void test10()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setTxnTimeout(7L);
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
      assertEquals("allowCreate=false\n{je.txn.timeout=7}", environmentConfig0.toString());
  }

  //Test case number: 11
  /*
   * 13 covered goals:
   * 1 Weak Mutation 62: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:136 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 2 Weak Mutation 61: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:136 - DeleteField: TXN_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 3 Weak Mutation 63: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:137 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 64: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:137 - ReplaceConstant - 0 -> -1
   * 5 Weak Mutation 65: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:139 - DeleteStatement: parseLong(Ljava/lang/String;)J
   * 6 Weak Mutation 70: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:144 - InsertUnaryOp Negation of timeout
   * 7 com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J: root-Branch
   * 8 Weak Mutation 63: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:137 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 62: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:136 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 10 Weak Mutation 61: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:136 - DeleteField: TXN_TIMEOUTLcom/sleepycat/je/config/LongConfigParam;
   * 11 Weak Mutation 70: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:144 - InsertUnaryOp Negation of timeout
   * 12 Weak Mutation 64: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:137 - ReplaceConstant - 0 -> -1
   * 13 Weak Mutation 65: com.sleepycat.je.EnvironmentConfig.getTxnTimeout()J:139 - DeleteStatement: parseLong(Ljava/lang/String;)J
   */
  @Test
  public void test11()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      long long0 = environmentConfig0.getTxnTimeout();
      assertEquals(4L, long0);
  }

  //Test case number: 12
  /*
   * 13 covered goals:
   * 1 Weak Mutation 71: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteField: TXN_SERIALIZABLE_ISOLATIONLcom/sleepycat/je/config/BooleanConfigParam;
   * 2 Weak Mutation 76: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 3 Weak Mutation 72: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp Negation of txnSerializableIsolation
   * 4 Weak Mutation 73: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp IINC 1 txnSerializableIsolation
   * 5 Weak Mutation 74: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp IINC -1 txnSerializableIsolation
   * 6 Weak Mutation 75: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteStatement: toString(Z)Ljava/lang/String;
   * 7 com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V: root-Branch
   * 8 Weak Mutation 71: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteField: TXN_SERIALIZABLE_ISOLATIONLcom/sleepycat/je/config/BooleanConfigParam;
   * 9 Weak Mutation 76: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 10 Weak Mutation 72: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp Negation of txnSerializableIsolation
   * 11 Weak Mutation 73: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp IINC 1 txnSerializableIsolation
   * 12 Weak Mutation 74: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - InsertUnaryOp IINC -1 txnSerializableIsolation
   * 13 Weak Mutation 75: com.sleepycat.je.EnvironmentConfig.setTxnSerializableIsolation(Z)V:151 - DeleteStatement: toString(Z)Ljava/lang/String;
   */
  @Test
  public void test12()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      environmentConfig0.setTxnSerializableIsolation(false);
      assertEquals(1, environmentConfig0.getNumExplicitlySetParams());
      assertEquals("allowCreate=false\n{je.txn.serializableIsolation=false}", environmentConfig0.toString());
  }

  //Test case number: 13
  /*
   * 15 covered goals:
   * 1 Weak Mutation 77: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:158 - DeleteField: TXN_SERIALIZABLE_ISOLATIONLcom/sleepycat/je/config/BooleanConfigParam;
   * 2 Weak Mutation 78: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:158 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 3 Weak Mutation 79: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:159 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 4 Weak Mutation 80: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:159 - DeleteStatement: booleanValue()Z
   * 5 Weak Mutation 84: com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z:171 - InsertUnaryOp Negation
   * 6 Weak Mutation 107: com.sleepycat.je.EnvironmentConfig.cloneConfig()Lcom/sleepycat/je/EnvironmentConfig;:214 - DeleteStatement: clone()Ljava/lang/Object;
   * 7 com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z: root-Branch
   * 8 com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z: root-Branch
   * 9 com.sleepycat.je.EnvironmentConfig.cloneConfig()Lcom/sleepycat/je/EnvironmentConfig;: root-Branch
   * 10 Weak Mutation 77: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:158 - DeleteField: TXN_SERIALIZABLE_ISOLATIONLcom/sleepycat/je/config/BooleanConfigParam;
   * 11 Weak Mutation 78: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:158 - DeleteStatement: getVal(Lcom/sleepycat/je/config/ConfigParam;)Ljava/lang/String;
   * 12 Weak Mutation 79: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:159 - DeleteStatement: valueOf(Ljava/lang/String;)Ljava/lang/Boolean;
   * 13 Weak Mutation 84: com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z:171 - InsertUnaryOp Negation
   * 14 Weak Mutation 80: com.sleepycat.je.EnvironmentConfig.getTxnSerializableIsolation()Z:159 - DeleteStatement: booleanValue()Z
   * 15 Weak Mutation 107: com.sleepycat.je.EnvironmentConfig.cloneConfig()Lcom/sleepycat/je/EnvironmentConfig;:214 - DeleteStatement: clone()Ljava/lang/Object;
   */
  @Test
  public void test13()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      File file0 = new File("allowCreate=false\n{}", "allowCreate=false\n{}");
      Environment environment0 = null;
      try {
        environment0 = new Environment(file0, environmentConfig0);
        fail("Expecting exception: LogException");
      } catch(LogException e) {
        /*
         * Environment home allowCreate=false
         * {}/allowCreate=false
         * {} doesn't exist
         */
      }
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * 1 Weak Mutation 81: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp Negation of txnReadCommitted
   * 2 Weak Mutation 83: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp IINC -1 txnReadCommitted
   * 3 Weak Mutation 82: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp IINC 1 txnReadCommitted
   * 4 com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V: root-Branch
   * 5 Weak Mutation 81: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp Negation of txnReadCommitted
   * 6 Weak Mutation 83: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp IINC -1 txnReadCommitted
   * 7 Weak Mutation 82: com.sleepycat.je.EnvironmentConfig.setTxnReadCommitted(Z)V:165 - InsertUnaryOp IINC 1 txnReadCommitted
   */
  @Test
  public void test14()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setTxnReadCommitted(true);
      assertEquals(true, environmentConfig0.getTxnReadCommitted());
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z:171 - DeleteField: txnReadCommittedZ
   * 2 Weak Mutation 84: com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z:171 - InsertUnaryOp Negation
   * 3 Weak Mutation 85: com.sleepycat.je.EnvironmentConfig.getTxnReadCommitted()Z:171 - DeleteField: txnReadCommittedZ
   */
  @Test
  public void test15()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      boolean boolean0 = environmentConfig0.getTxnReadCommitted();
      assertEquals(false, boolean0);
  }

  //Test case number: 16
  /*
   * 19 covered goals:
   * 1 Weak Mutation 87: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - ReplaceVariable paramName -> value
   * 2 Weak Mutation 86: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 3 Weak Mutation 88: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 4 Weak Mutation 89: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:179 - ReplaceComparisonOperator != null -> = null
   * 5 Weak Mutation 93: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 6 Weak Mutation 92: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 7 Weak Mutation 94: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: toString()Ljava/lang/String;
   * 8 Weak Mutation 91: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 9 Weak Mutation 90: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - ReplaceVariable paramName -> value
   * 10 com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V: I10 Branch 1 IFNONNULL L179 - false
   * 11 Weak Mutation 87: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - ReplaceVariable paramName -> value
   * 12 Weak Mutation 86: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 13 Weak Mutation 93: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 14 Weak Mutation 92: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - ReplaceConstant -  is not a valid BDBJE environment configuration -> 
   * 15 Weak Mutation 94: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: toString()Ljava/lang/String;
   * 16 Weak Mutation 89: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:179 - ReplaceComparisonOperator != null -> = null
   * 17 Weak Mutation 88: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 18 Weak Mutation 91: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 19 Weak Mutation 90: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:180 - ReplaceVariable paramName -> value
   */
  @Test
  public void test16()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      try {
        environmentConfig0.setConfigParam("", "\u0001+`Q");
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         *  is not a valid BDBJE environment configuration
         */
      }
  }

  //Test case number: 17
  /*
   * 9 covered goals:
   * 1 Weak Mutation 95: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:182 - ReplaceVariable value -> paramName
   * 2 Weak Mutation 96: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:182 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   * 3 com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V: I10 Branch 1 IFNONNULL L179 - true
   * 4 Weak Mutation 87: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - ReplaceVariable paramName -> value
   * 5 Weak Mutation 86: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteField: SUPPORTED_PARAMSLjava/util/Map;
   * 6 Weak Mutation 89: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:179 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 88: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:178 - DeleteStatement: get(Ljava/lang/Object;)Ljava/lang/Object;
   * 8 Weak Mutation 95: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:182 - ReplaceVariable value -> paramName
   * 9 Weak Mutation 96: com.sleepycat.je.EnvironmentConfig.setConfigParam(Ljava/lang/String;Ljava/lang/String;)V:182 - DeleteStatement: setVal(Lcom/sleepycat/je/config/ConfigParam;Ljava/lang/String;)V
   */
  @Test
  public void test17()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      environmentConfig0.setConfigParam("je.cleaner.minFileUtilization", "allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isLocking=false, je.txn.serializableIsolation=false, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=-1427, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=4}");
      assertEquals("allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=true\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.cleaner.minFileUtilization=allowCreate=false\n{je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isTransactional=false, je.maxMemory=0, je.txn.serializableIsolation=false, je.maxMemoryPercent=-1427, je.env.isReadOnly=true, je.txn.timeout=-1457, je.lock.timeout=0}, je.env.isLocking=false, je.txn.serializableIsolation=false, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=-1427, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=true, je.maxMemoryPercent=6, je.maxMemory=-1, je.txn.timeout=-1457, je.lock.timeout=-1457}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=-1457, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=1}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=4}, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=-4}", environmentConfig0.toString());
  }

  //Test case number: 18
  /*
   * 7 covered goals:
   * 1 Weak Mutation 98: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp IINC 1 createUP
   * 2 Weak Mutation 99: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp IINC -1 createUP
   * 3 Weak Mutation 97: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp Negation of createUP
   * 4 com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V: root-Branch
   * 5 Weak Mutation 98: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp IINC 1 createUP
   * 6 Weak Mutation 99: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp IINC -1 createUP
   * 7 Weak Mutation 97: com.sleepycat.je.EnvironmentConfig.setCreateUP(Z)V:188 - InsertUnaryOp Negation of createUP
   */
  @Test
  public void test18()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      assertEquals(true, environmentConfig0.getCreateUP());
      
      environmentConfig0.setCreateUP(false);
      assertEquals(false, environmentConfig0.getCreateUP());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * 1 Weak Mutation 100: com.sleepycat.je.EnvironmentConfig.getCreateUP()Z:194 - InsertUnaryOp Negation
   * 2 Weak Mutation 101: com.sleepycat.je.EnvironmentConfig.getCreateUP()Z:194 - DeleteField: createUPZ
   * 3 com.sleepycat.je.EnvironmentConfig.getCreateUP()Z: root-Branch
   * 4 Weak Mutation 0: com.sleepycat.je.EnvironmentConfig.<init>()V:14 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 1: com.sleepycat.je.EnvironmentConfig.<init>()V:18 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 2: com.sleepycat.je.EnvironmentConfig.<init>()V:19 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 3: com.sleepycat.je.EnvironmentConfig.<init>()V:23 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 100: com.sleepycat.je.EnvironmentConfig.getCreateUP()Z:194 - InsertUnaryOp Negation
   * 9 Weak Mutation 101: com.sleepycat.je.EnvironmentConfig.getCreateUP()Z:194 - DeleteField: createUPZ
   */
  @Test
  public void test19()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig();
      boolean boolean0 = environmentConfig0.getCreateUP();
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
      assertEquals(true, boolean0);
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
  }

  //Test case number: 20
  /*
   * 7 covered goals:
   * 1 Weak Mutation 102: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp Negation of checkpointUP
   * 2 Weak Mutation 103: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp IINC 1 checkpointUP
   * 3 Weak Mutation 104: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp IINC -1 checkpointUP
   * 4 com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V: root-Branch
   * 5 Weak Mutation 102: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp Negation of checkpointUP
   * 6 Weak Mutation 103: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp IINC 1 checkpointUP
   * 7 Weak Mutation 104: com.sleepycat.je.EnvironmentConfig.setCheckpointUP(Z)V:200 - InsertUnaryOp IINC -1 checkpointUP
   */
  @Test
  public void test20()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      environmentConfig0.setCheckpointUP(true);
      assertEquals(true, environmentConfig0.getCheckpointUP());
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals("allowCreate=false\n{}", environmentConfig0.toString());
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
  }

  //Test case number: 21
  /*
   * 9 covered goals:
   * 1 Weak Mutation 106: com.sleepycat.je.EnvironmentConfig.getCheckpointUP()Z:206 - DeleteField: checkpointUPZ
   * 2 Weak Mutation 105: com.sleepycat.je.EnvironmentConfig.getCheckpointUP()Z:206 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.EnvironmentConfig.getCheckpointUP()Z: root-Branch
   * 4 Weak Mutation 4: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:14 - ReplaceConstant - 1 -> 0
   * 5 Weak Mutation 5: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:18 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 6: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:19 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 7: com.sleepycat.je.EnvironmentConfig.<init>(Ljava/util/Properties;)V:23 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 106: com.sleepycat.je.EnvironmentConfig.getCheckpointUP()Z:206 - DeleteField: checkpointUPZ
   * 9 Weak Mutation 105: com.sleepycat.je.EnvironmentConfig.getCheckpointUP()Z:206 - InsertUnaryOp Negation
   */
  @Test
  public void test21()  throws Throwable  {
      Properties properties0 = new Properties();
      EnvironmentConfig environmentConfig0 = new EnvironmentConfig(properties0);
      boolean boolean0 = environmentConfig0.getCheckpointUP();
      assertEquals(false, environmentConfig0.getTxnReadCommitted());
      assertEquals(true, environmentConfig0.getCreateUP());
      assertEquals(false, environmentConfig0.getAllowCreate());
      assertEquals(true, boolean0);
  }

  //Test case number: 22
  /*
   * 17 covered goals:
   * 1 Weak Mutation 110: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteField: allowCreateZ
   * 2 Weak Mutation 111: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Z)Ljava/lang/StringBuilder;
   * 3 Weak Mutation 108: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - ReplaceConstant - allowCreate= -> 
   * 4 Weak Mutation 109: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - InsertUnaryOp Negation
   * 5 Weak Mutation 115: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 114: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 7 Weak Mutation 113: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 112: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - ReplaceConstant - 
 -> 
   * 9 com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;: root-Branch
   * 10 Weak Mutation 110: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteField: allowCreateZ
   * 11 Weak Mutation 111: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Z)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 108: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - ReplaceConstant - allowCreate= -> 
   * 13 Weak Mutation 109: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - InsertUnaryOp Negation
   * 14 Weak Mutation 115: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: toString()Ljava/lang/String;
   * 15 Weak Mutation 114: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 16 Weak Mutation 113: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 17 Weak Mutation 112: com.sleepycat.je.EnvironmentConfig.toString()Ljava/lang/String;:221 - ReplaceConstant - 
 -> 
   */
  @Test
  public void test22()  throws Throwable  {
      EnvironmentConfig environmentConfig0 = EnvironmentConfig.DEFAULT;
      String string0 = environmentConfig0.toString();
      assertNotNull(string0);
      assertEquals("allowCreate=true\n{je.cleaner.minFileUtilization=je.cleaner.minFileUtilization, je.env.isLocking=true, je.txn.serializableIsolation=true, je.env.isTransactional=true, je.env.isReadOnly=false, je.maxMemoryPercent=0, je.maxMemory=0, je.txn.timeout=4, je.lock.timeout=-4}", string0);
  }
}
