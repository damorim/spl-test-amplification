/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseConfig;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.txn.Locker;

@RunWith(EvoSuiteRunner.class)
public class TestDatabaseConfig {


  //Test case number: 0
  /*
   * 16 covered goals:
   * 1 Weak Mutation 23: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp Negation of transactional
   * 2 Weak Mutation 25: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp IINC -1 transactional
   * 3 Weak Mutation 24: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp IINC 1 transactional
   * 4 com.sleepycat.je.DatabaseConfig.setTransactional(Z)V: root-Branch
   * 5 Weak Mutation 0: com.sleepycat.je.DatabaseConfig.<init>()V:10 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 1: com.sleepycat.je.DatabaseConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 2: com.sleepycat.je.DatabaseConfig.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 3: com.sleepycat.je.DatabaseConfig.<init>()V:15 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 4: com.sleepycat.je.DatabaseConfig.<init>()V:16 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 5: com.sleepycat.je.DatabaseConfig.<init>()V:21 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 6: com.sleepycat.je.DatabaseConfig.<init>()V:22 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 7: com.sleepycat.je.DatabaseConfig.<init>()V:23 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 23: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp Negation of transactional
   * 14 Weak Mutation 25: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp IINC -1 transactional
   * 15 Weak Mutation 24: com.sleepycat.je.DatabaseConfig.setTransactional(Z)V:78 - InsertUnaryOp IINC 1 transactional
   * 16 com.sleepycat.je.DatabaseConfig.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      databaseConfig0.setTransactional(false);
      assertEquals(false, databaseConfig0.getTransactional());
      assertEquals(false, databaseConfig0.getReadOnly());
      assertEquals(false, databaseConfig0.getUseExistingConfig());
      assertEquals(false, databaseConfig0.getOverrideBtreeComparator());
      assertEquals(false, databaseConfig0.getSortedDuplicates());
      assertEquals(false, databaseConfig0.getAllowCreate());
      assertEquals(false, databaseConfig0.getOverrideDuplicateComparator());
      assertEquals(false, databaseConfig0.getExclusiveCreate());
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 8: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp Negation of allowCreate
   * 2 Weak Mutation 9: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp IINC 1 allowCreate
   * 3 Weak Mutation 10: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp IINC -1 allowCreate
   * 4 com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V: root-Branch
   * 5 Weak Mutation 8: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp Negation of allowCreate
   * 6 Weak Mutation 9: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp IINC 1 allowCreate
   * 7 Weak Mutation 10: com.sleepycat.je.DatabaseConfig.setAllowCreate(Z)V:35 - InsertUnaryOp IINC -1 allowCreate
   */
  @Test
  public void test1()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      databaseConfig0.setAllowCreate(true);
      assertEquals(true, databaseConfig0.getAllowCreate());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.DatabaseConfig.getAllowCreate()Z:42 - InsertUnaryOp Negation
   * 2 Weak Mutation 12: com.sleepycat.je.DatabaseConfig.getAllowCreate()Z:42 - DeleteField: allowCreateZ
   * 3 com.sleepycat.je.DatabaseConfig.getAllowCreate()Z: root-Branch
   * 4 Weak Mutation 11: com.sleepycat.je.DatabaseConfig.getAllowCreate()Z:42 - InsertUnaryOp Negation
   * 5 Weak Mutation 12: com.sleepycat.je.DatabaseConfig.getAllowCreate()Z:42 - DeleteField: allowCreateZ
   */
  @Test
  public void test2()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      boolean boolean0 = databaseConfig0.getAllowCreate();
      assertEquals(false, boolean0);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp IINC 1 duplicatesAllowed
   * 2 Weak Mutation 18: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp Negation of duplicatesAllowed
   * 3 Weak Mutation 20: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp IINC -1 duplicatesAllowed
   * 4 com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V: root-Branch
   * 5 Weak Mutation 19: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp IINC 1 duplicatesAllowed
   * 6 Weak Mutation 18: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp Negation of duplicatesAllowed
   * 7 Weak Mutation 20: com.sleepycat.je.DatabaseConfig.setSortedDuplicates(Z)V:63 - InsertUnaryOp IINC -1 duplicatesAllowed
   */
  @Test
  public void test3()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      databaseConfig0.setSortedDuplicates(true);
      assertEquals(true, databaseConfig0.getSortedDuplicates());
  }

  //Test case number: 4
  /*
   * 7 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp IINC 1 nodeMaxEntries
   * 2 Weak Mutation 35: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp IINC -1 nodeMaxEntries
   * 3 Weak Mutation 33: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp Negation of nodeMaxEntries
   * 4 com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V: root-Branch
   * 5 Weak Mutation 34: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp IINC 1 nodeMaxEntries
   * 6 Weak Mutation 35: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp IINC -1 nodeMaxEntries
   * 7 Weak Mutation 33: com.sleepycat.je.DatabaseConfig.setNodeMaxEntries(I)V:110 - InsertUnaryOp Negation of nodeMaxEntries
   */
  @Test
  public void test4()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      databaseConfig0.setNodeMaxEntries(0);
      assertEquals(0, databaseConfig0.getNodeMaxEntries());
  }

  //Test case number: 5
  /*
   * 7 covered goals:
   * 1 Weak Mutation 38: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp IINC -1 nodeMaxDupTreeEntries
   * 2 Weak Mutation 36: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp Negation of nodeMaxDupTreeEntries
   * 3 Weak Mutation 37: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp IINC 1 nodeMaxDupTreeEntries
   * 4 com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V: root-Branch
   * 5 Weak Mutation 38: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp IINC -1 nodeMaxDupTreeEntries
   * 6 Weak Mutation 36: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp Negation of nodeMaxDupTreeEntries
   * 7 Weak Mutation 37: com.sleepycat.je.DatabaseConfig.setNodeMaxDupTreeEntries(I)V:117 - InsertUnaryOp IINC 1 nodeMaxDupTreeEntries
   */
  @Test
  public void test5()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      databaseConfig0.setNodeMaxDupTreeEntries(1225);
      assertEquals(1225, databaseConfig0.getNodeMaxDupTreeEntries());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * 1 Weak Mutation 43: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp Negation
   * 2 Weak Mutation 44: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp +1
   * 3 Weak Mutation 45: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp -1
   * 4 com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I: root-Branch
   * 5 Weak Mutation 43: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp Negation
   * 6 Weak Mutation 44: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp +1
   * 7 Weak Mutation 45: com.sleepycat.je.DatabaseConfig.getNodeMaxDupTreeEntries()I:131 - InsertUnaryOp -1
   */
  @Test
  public void test6()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      int int0 = databaseConfig0.getNodeMaxDupTreeEntries();
      assertEquals(0, int0);
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * 1 Weak Mutation 47: com.sleepycat.je.DatabaseConfig.setBtreeComparator(Ljava/lang/Class;)V:138 - ReplaceConstant - Btree -> 
   * 2 Weak Mutation 175: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:263 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 176: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:267 - DeleteStatement: instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;
   * 4 com.sleepycat.je.DatabaseConfig.setBtreeComparator(Ljava/lang/Class;)V: root-Branch
   * 5 com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;: I3 Branch 19 IFNONNULL L263 - true
   * 6 Weak Mutation 47: com.sleepycat.je.DatabaseConfig.setBtreeComparator(Ljava/lang/Class;)V:138 - ReplaceConstant - Btree -> 
   * 7 Weak Mutation 175: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:263 - ReplaceComparisonOperator != null -> = null
   * 8 Weak Mutation 176: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:267 - DeleteStatement: instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;
   */
  @Test
  public void test7()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      Class<?> class0 = DatabaseConfig.class;
      // Undeclared exception!
      try {
        databaseConfig0.setBtreeComparator(class0);
        fail("Expecting exception: ClassCastException");
      } catch(ClassCastException e) {
        /*
         * com.sleepycat.je.DatabaseConfig cannot be cast to java.util.Comparator
         */
      }
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * 1 Weak Mutation 53: com.sleepycat.je.DatabaseConfig.getOverrideBtreeComparator()Z:159 - DeleteField: overrideBtreeComparatorZ
   * 2 Weak Mutation 52: com.sleepycat.je.DatabaseConfig.getOverrideBtreeComparator()Z:159 - InsertUnaryOp Negation
   * 3 com.sleepycat.je.DatabaseConfig.getOverrideBtreeComparator()Z: root-Branch
   * 4 Weak Mutation 52: com.sleepycat.je.DatabaseConfig.getOverrideBtreeComparator()Z:159 - InsertUnaryOp Negation
   */
  @Test
  public void test8()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      boolean boolean0 = databaseConfig0.getOverrideBtreeComparator();
      assertEquals(false, boolean0);
  }

  //Test case number: 9
  /*
   * 29 covered goals:
   * 1 Weak Mutation 54: com.sleepycat.je.DatabaseConfig.setDuplicateComparator(Ljava/lang/Class;)V:166 - ReplaceConstant - Duplicate -> 
   * 2 Weak Mutation 190: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 3 Weak Mutation 191: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: getMessage()Ljava/lang/String;
   * 4 Weak Mutation 188: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 5 Weak Mutation 189: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant -  comparator is not valid:  -> 
   * 6 Weak Mutation 197: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - cannot be found. -> 
   * 7 Weak Mutation 196: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 8 Weak Mutation 199: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: toString()Ljava/lang/String;
   * 9 Weak Mutation 198: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 10 Weak Mutation 193: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - 
Perhaps you have not implemented a zero-parameter  -> 
   * 11 Weak Mutation 192: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 12 Weak Mutation 195: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - constructor for the comparator or the comparator class  -> 
   * 13 Weak Mutation 194: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 14 com.sleepycat.je.DatabaseConfig.setDuplicateComparator(Ljava/lang/Class;)V: root-Branch
   * 15 Weak Mutation 175: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:263 - ReplaceComparisonOperator != null -> = null
   * 16 Weak Mutation 176: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:267 - DeleteStatement: instantiateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;
   * 17 Weak Mutation 54: com.sleepycat.je.DatabaseConfig.setDuplicateComparator(Ljava/lang/Class;)V:166 - ReplaceConstant - Duplicate -> 
   * 18 Weak Mutation 190: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 19 Weak Mutation 191: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: getMessage()Ljava/lang/String;
   * 20 Weak Mutation 188: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: valueOf(Ljava/lang/Object;)Ljava/lang/String;
   * 21 Weak Mutation 189: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant -  comparator is not valid:  -> 
   * 22 Weak Mutation 197: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - cannot be found. -> 
   * 23 Weak Mutation 196: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 24 Weak Mutation 199: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: toString()Ljava/lang/String;
   * 25 Weak Mutation 198: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 26 Weak Mutation 193: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - 
Perhaps you have not implemented a zero-parameter  -> 
   * 27 Weak Mutation 192: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 28 Weak Mutation 195: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - ReplaceConstant - constructor for the comparator or the comparator class  -> 
   * 29 Weak Mutation 194: com.sleepycat.je.DatabaseConfig.validateComparator(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Comparator;:276 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   */
  @Test
  public void test9()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      Class<?> class0 = Locker.class;
      // Undeclared exception!
      try {
        databaseConfig0.setDuplicateComparator(class0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * Duplicate comparator is not valid: Exception while trying to load Duplicate Comparator class: java.lang.IllegalAccessException: Class com.sleepycat.je.dbi.DatabaseImpl can not access a member of class com.sleepycat.je.txn.Locker with modifiers \"\"
         * Perhaps you have not implemented a zero-parameter constructor for the comparator or the comparator class cannot be found.
         */
      }
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 58: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp IINC -1 override
   * 2 Weak Mutation 57: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp IINC 1 override
   * 3 Weak Mutation 56: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp Negation of override
   * 4 com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V: root-Branch
   * 5 Weak Mutation 58: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp IINC -1 override
   * 6 Weak Mutation 57: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp IINC 1 override
   * 7 Weak Mutation 56: com.sleepycat.je.DatabaseConfig.setOverrideDuplicateComparator(Z)V:180 - InsertUnaryOp Negation of override
   */
  @Test
  public void test10()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      databaseConfig0.setOverrideDuplicateComparator(false);
      assertEquals(false, databaseConfig0.getOverrideBtreeComparator());
      assertEquals(false, databaseConfig0.getOverrideDuplicateComparator());
      assertEquals(false, databaseConfig0.getReadOnly());
      assertEquals(false, databaseConfig0.getExclusiveCreate());
      assertEquals(false, databaseConfig0.getAllowCreate());
      assertEquals(false, databaseConfig0.getUseExistingConfig());
      assertEquals(false, databaseConfig0.getSortedDuplicates());
      assertEquals(false, databaseConfig0.getTransactional());
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp IINC -1 useExistingConfig
   * 2 Weak Mutation 62: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp IINC 1 useExistingConfig
   * 3 Weak Mutation 61: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp Negation of useExistingConfig
   * 4 com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V: root-Branch
   * 5 Weak Mutation 63: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp IINC -1 useExistingConfig
   * 6 Weak Mutation 62: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp IINC 1 useExistingConfig
   * 7 Weak Mutation 61: com.sleepycat.je.DatabaseConfig.setUseExistingConfig(Z)V:193 - InsertUnaryOp Negation of useExistingConfig
   */
  @Test
  public void test11()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      databaseConfig0.setUseExistingConfig(true);
      assertEquals(true, databaseConfig0.getUseExistingConfig());
  }

  //Test case number: 12
  /*
   * 93 covered goals:
   * 1 Weak Mutation 69: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:215 - DeleteField: DEFAULTLcom/sleepycat/je/DatabaseConfig;
   * 2 Weak Mutation 77: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceConstant - 0 -> 1
   * 3 Weak Mutation 93: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I3 Branch 1 IFNONNULL L214 - false
   * 5 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I14 Branch 2 IF_ICMPNE L218 - true
   * 6 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I40 Branch 4 IF_ICMPNE L221 - true
   * 7 Weak Mutation 21: com.sleepycat.je.DatabaseConfig.getSortedDuplicates()Z:70 - InsertUnaryOp Negation
   * 8 Weak Mutation 22: com.sleepycat.je.DatabaseConfig.getSortedDuplicates()Z:70 - DeleteField: duplicatesAllowedZ
   * 9 Weak Mutation 27: com.sleepycat.je.DatabaseConfig.getTransactional()Z:88 - DeleteField: transactionalZ
   * 10 Weak Mutation 26: com.sleepycat.je.DatabaseConfig.getTransactional()Z:88 - InsertUnaryOp Negation
   * 11 Weak Mutation 31: com.sleepycat.je.DatabaseConfig.getReadOnly()Z:103 - InsertUnaryOp Negation
   * 12 Weak Mutation 32: com.sleepycat.je.DatabaseConfig.getReadOnly()Z:103 - DeleteField: readOnlyZ
   * 13 Weak Mutation 59: com.sleepycat.je.DatabaseConfig.getOverrideDuplicateComparator()Z:187 - InsertUnaryOp Negation
   * 14 Weak Mutation 68: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceComparisonOperator != null -> = null
   * 15 Weak Mutation 69: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:215 - DeleteField: DEFAULTLcom/sleepycat/je/DatabaseConfig;
   * 16 Weak Mutation 70: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceVariable config -> this
   * 17 Weak Mutation 66: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceVariable config -> this
   * 18 Weak Mutation 67: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceVariable config -> DEFAULT
   * 19 Weak Mutation 77: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceConstant - 0 -> 1
   * 20 Weak Mutation 78: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceVariable config -> this
   * 21 Weak Mutation 72: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - DeleteStatement: getTransactional()Z
   * 22 Weak Mutation 73: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - InsertUnaryOp Negation
   * 23 Weak Mutation 75: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 85: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceConstant - 0 -> 1
   * 25 Weak Mutation 86: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceVariable config -> this
   * 26 Weak Mutation 81: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - InsertUnaryOp Negation
   * 27 Weak Mutation 80: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - DeleteStatement: getReadOnly()Z
   * 28 Weak Mutation 83: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceComparisonOperator != -> ==
   * 29 Weak Mutation 93: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceConstant - 0 -> 1
   * 30 Weak Mutation 94: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceVariable config -> this
   * 31 Weak Mutation 89: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - InsertUnaryOp Negation
   * 32 Weak Mutation 88: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - DeleteStatement: getSortedDuplicates()Z
   * 33 Weak Mutation 91: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 98: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceComparisonOperator == -> !=
   * 35 Weak Mutation 96: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - InsertUnaryOp Negation
   * 36 Weak Mutation 111: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - DeleteStatement: getOverrideDuplicateComparator()Z
   * 37 Weak Mutation 108: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceConstant - 1 -> 0
   * 38 Weak Mutation 109: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceVariable config -> this
   * 39 Weak Mutation 112: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceComparisonOperator == -> !=
   * 40 Weak Mutation 125: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> dtCmpMatch
   * 41 Weak Mutation 124: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> btCmpMatch
   * 42 Weak Mutation 123: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:239 - ReplaceConstant - The following DatabaseConfig parameters for the
cached Database do not match the parameters for the
requested Database:
 -> 
   * 43 Weak Mutation 122: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceConstant - 1 -> 0
   * 44 Weak Mutation 136: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> dtCmpMatch
   * 45 Weak Mutation 139: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC 1 roMatch
   * 46 Weak Mutation 138: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp Negation of roMatch
   * 47 Weak Mutation 141: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceComparisonOperator != -> ==
   * 48 Weak Mutation 140: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC -1 roMatch
   * 49 Weak Mutation 143: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 50 Weak Mutation 142: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - ReplaceConstant -  Read-Only
 -> 
   * 51 Weak Mutation 129: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC 1 txnMatch
   * 52 Weak Mutation 128: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp Negation of txnMatch
   * 53 Weak Mutation 131: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceComparisonOperator != -> ==
   * 54 Weak Mutation 130: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC -1 txnMatch
   * 55 Weak Mutation 133: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 56 Weak Mutation 132: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - ReplaceConstant -  Transactional
 -> 
   * 57 Weak Mutation 135: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> btCmpMatch
   * 58 Weak Mutation 152: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - ReplaceConstant -  Sorted Duplicates
 -> 
   * 59 Weak Mutation 153: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 60 Weak Mutation 154: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> txnMatch
   * 61 Weak Mutation 156: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> sdMatch
   * 62 Weak Mutation 157: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> roMatch
   * 63 Weak Mutation 158: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp Negation of btCmpMatch
   * 64 Weak Mutation 159: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC 1 btCmpMatch
   * 65 Weak Mutation 145: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> btCmpMatch
   * 66 Weak Mutation 146: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> dtCmpMatch
   * 67 Weak Mutation 148: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp Negation of sdMatch
   * 68 Weak Mutation 149: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC 1 sdMatch
   * 69 Weak Mutation 150: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC -1 sdMatch
   * 70 Weak Mutation 151: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceComparisonOperator != -> ==
   * 71 Weak Mutation 171: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceComparisonOperator != -> ==
   * 72 Weak Mutation 170: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC -1 dtCmpMatch
   * 73 Weak Mutation 169: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC 1 dtCmpMatch
   * 74 Weak Mutation 168: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp Negation of dtCmpMatch
   * 75 Weak Mutation 174: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:257 - DeleteStatement: toString()Ljava/lang/String;
   * 76 Weak Mutation 161: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceComparisonOperator != -> ==
   * 77 Weak Mutation 160: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC -1 btCmpMatch
   * 78 Weak Mutation 167: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> roMatch
   * 79 Weak Mutation 166: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> sdMatch
   * 80 Weak Mutation 164: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> txnMatch
   * 81 com.sleepycat.je.DatabaseConfig.getTransactional()Z: root-Branch
   * 82 com.sleepycat.je.DatabaseConfig.getOverrideDuplicateComparator()Z: root-Branch
   * 83 com.sleepycat.je.DatabaseConfig.getReadOnly()Z: root-Branch
   * 84 com.sleepycat.je.DatabaseConfig.getSortedDuplicates()Z: root-Branch
   * 85 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I10 Branch 14 IFNE L241 - false
   * 86 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I20 Branch 15 IFNE L245 - false
   * 87 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I30 Branch 16 IFNE L248 - false
   * 88 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I40 Branch 17 IFNE L251 - true
   * 89 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I50 Branch 18 IFNE L254 - true
   * 90 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I27 Branch 3 IF_ICMPNE L220 - true
   * 91 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I51 Branch 5 IFEQ L222 - true
   * 92 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I72 Branch 7 IFEQ L223 - true
   * 93 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I92 Branch 9 IFEQ L226 - true
   */
  @Test
  public void test12()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      try {
        databaseConfig0.validate((DatabaseConfig) null);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * The following DatabaseConfig parameters for the
         * cached Database do not match the parameters for the
         * requested Database:
         *  Transactional
         *  Read-Only
         *  Sorted Duplicates
         */
      }
  }

  //Test case number: 13
  /*
   * 107 covered goals:
   * 1 Weak Mutation 85: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceConstant - 0 -> 1
   * 2 Weak Mutation 123: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:239 - ReplaceConstant - The following DatabaseConfig parameters for the
cached Database do not match the parameters for the
requested Database:
 -> 
   * 3 Weak Mutation 127: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> roMatch
   * 4 Weak Mutation 129: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC 1 txnMatch
   * 5 Weak Mutation 128: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp Negation of txnMatch
   * 6 Weak Mutation 131: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 130: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC -1 txnMatch
   * 8 Weak Mutation 137: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> sdMatch
   * 9 Weak Mutation 136: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> dtCmpMatch
   * 10 Weak Mutation 139: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC 1 roMatch
   * 11 Weak Mutation 138: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp Negation of roMatch
   * 12 Weak Mutation 141: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceComparisonOperator != -> ==
   * 13 Weak Mutation 140: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC -1 roMatch
   * 14 Weak Mutation 135: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> btCmpMatch
   * 15 Weak Mutation 134: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> txnMatch
   * 16 Weak Mutation 143: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 17 Weak Mutation 142: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - ReplaceConstant -  Read-Only
 -> 
   * 18 Weak Mutation 147: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> roMatch
   * 19 Weak Mutation 148: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp Negation of sdMatch
   * 20 Weak Mutation 149: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC 1 sdMatch
   * 21 Weak Mutation 150: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC -1 sdMatch
   * 22 Weak Mutation 151: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceComparisonOperator != -> ==
   * 23 Weak Mutation 157: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> roMatch
   * 24 Weak Mutation 158: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp Negation of btCmpMatch
   * 25 Weak Mutation 159: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC 1 btCmpMatch
   * 26 Weak Mutation 161: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceComparisonOperator != -> ==
   * 27 Weak Mutation 160: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC -1 btCmpMatch
   * 28 Weak Mutation 171: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceComparisonOperator != -> ==
   * 29 Weak Mutation 170: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC -1 dtCmpMatch
   * 30 Weak Mutation 169: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC 1 dtCmpMatch
   * 31 Weak Mutation 168: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp Negation of dtCmpMatch
   * 32 Weak Mutation 167: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> roMatch
   * 33 Weak Mutation 174: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:257 - DeleteStatement: toString()Ljava/lang/String;
   * 34 com.sleepycat.je.DatabaseConfig.getBtreeComparator()Ljava/util/Comparator;: root-Branch
   * 35 com.sleepycat.je.DatabaseConfig.getDuplicateComparator()Ljava/util/Comparator;: root-Branch
   * 36 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I27 Branch 3 IF_ICMPNE L220 - true
   * 37 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I96 Branch 10 IFEQ L228 - true
   * 38 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I10 Branch 14 IFNE L241 - true
   * 39 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I20 Branch 15 IFNE L245 - false
   * 40 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I30 Branch 16 IFNE L248 - true
   * 41 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I40 Branch 17 IFNE L251 - true
   * 42 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I50 Branch 18 IFNE L254 - true
   * 43 Weak Mutation 13: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp Negation of exclusiveCreate
   * 44 Weak Mutation 14: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp IINC 1 exclusiveCreate
   * 45 Weak Mutation 15: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp IINC -1 exclusiveCreate
   * 46 Weak Mutation 17: com.sleepycat.je.DatabaseConfig.getExclusiveCreate()Z:56 - DeleteField: exclusiveCreateZ
   * 47 Weak Mutation 16: com.sleepycat.je.DatabaseConfig.getExclusiveCreate()Z:56 - InsertUnaryOp Negation
   * 48 Weak Mutation 22: com.sleepycat.je.DatabaseConfig.getSortedDuplicates()Z:70 - DeleteField: duplicatesAllowedZ
   * 49 Weak Mutation 27: com.sleepycat.je.DatabaseConfig.getTransactional()Z:88 - DeleteField: transactionalZ
   * 50 Weak Mutation 29: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp IINC 1 readOnly
   * 51 Weak Mutation 28: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp Negation of readOnly
   * 52 Weak Mutation 30: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp IINC -1 readOnly
   * 53 Weak Mutation 32: com.sleepycat.je.DatabaseConfig.getReadOnly()Z:103 - DeleteField: readOnlyZ
   * 54 Weak Mutation 39: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp Negation
   * 55 Weak Mutation 40: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp +1
   * 56 Weak Mutation 41: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp -1
   * 57 Weak Mutation 51: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp IINC -1 override
   * 58 Weak Mutation 50: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp IINC 1 override
   * 59 Weak Mutation 49: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp Negation of override
   * 60 Weak Mutation 64: com.sleepycat.je.DatabaseConfig.getUseExistingConfig()Z:199 - InsertUnaryOp Negation
   * 61 Weak Mutation 65: com.sleepycat.je.DatabaseConfig.getUseExistingConfig()Z:199 - DeleteField: useExistingConfigZ
   * 62 Weak Mutation 76: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceConstant - 1 -> 0
   * 63 Weak Mutation 84: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceConstant - 1 -> 0
   * 64 Weak Mutation 92: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceConstant - 1 -> 0
   * 65 Weak Mutation 13: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp Negation of exclusiveCreate
   * 66 Weak Mutation 14: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp IINC 1 exclusiveCreate
   * 67 Weak Mutation 15: com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V:49 - InsertUnaryOp IINC -1 exclusiveCreate
   * 68 Weak Mutation 17: com.sleepycat.je.DatabaseConfig.getExclusiveCreate()Z:56 - DeleteField: exclusiveCreateZ
   * 69 Weak Mutation 16: com.sleepycat.je.DatabaseConfig.getExclusiveCreate()Z:56 - InsertUnaryOp Negation
   * 70 Weak Mutation 29: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp IINC 1 readOnly
   * 71 Weak Mutation 28: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp Negation of readOnly
   * 72 Weak Mutation 30: com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V:96 - InsertUnaryOp IINC -1 readOnly
   * 73 Weak Mutation 39: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp Negation
   * 74 Weak Mutation 40: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp +1
   * 75 Weak Mutation 41: com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I:124 - InsertUnaryOp -1
   * 76 Weak Mutation 51: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp IINC -1 override
   * 77 Weak Mutation 50: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp IINC 1 override
   * 78 Weak Mutation 49: com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V:152 - InsertUnaryOp Negation of override
   * 79 Weak Mutation 71: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceVariable config -> DEFAULT
   * 80 Weak Mutation 64: com.sleepycat.je.DatabaseConfig.getUseExistingConfig()Z:199 - InsertUnaryOp Negation
   * 81 Weak Mutation 65: com.sleepycat.je.DatabaseConfig.getUseExistingConfig()Z:199 - DeleteField: useExistingConfigZ
   * 82 Weak Mutation 76: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceConstant - 1 -> 0
   * 83 Weak Mutation 79: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceVariable config -> DEFAULT
   * 84 Weak Mutation 74: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - DeleteField: transactionalZ
   * 85 Weak Mutation 84: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceConstant - 1 -> 0
   * 86 Weak Mutation 87: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceVariable config -> DEFAULT
   * 87 Weak Mutation 82: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - DeleteField: readOnlyZ
   * 88 Weak Mutation 92: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceConstant - 1 -> 0
   * 89 Weak Mutation 95: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceVariable config -> DEFAULT
   * 90 Weak Mutation 90: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - DeleteField: duplicatesAllowedZ
   * 91 Weak Mutation 110: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceVariable config -> DEFAULT
   * 92 com.sleepycat.je.DatabaseConfig.getNodeMaxEntries()I: root-Branch
   * 93 com.sleepycat.je.DatabaseConfig.getExclusiveCreate()Z: root-Branch
   * 94 com.sleepycat.je.DatabaseConfig.setReadOnly(Z)V: root-Branch
   * 95 com.sleepycat.je.DatabaseConfig.getUseExistingConfig()Z: root-Branch
   * 96 com.sleepycat.je.DatabaseConfig.setOverrideBtreeComparator(Z)V: root-Branch
   * 97 com.sleepycat.je.DatabaseConfig.cloneConfig()Lcom/sleepycat/je/DatabaseConfig;: root-Branch
   * 98 com.sleepycat.je.DatabaseConfig.setExclusiveCreate(Z)V: root-Branch
   * 99 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I3 Branch 1 IFNONNULL L214 - true
   * 100 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I14 Branch 2 IF_ICMPNE L218 - false
   * 101 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I27 Branch 3 IF_ICMPNE L220 - false
   * 102 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I40 Branch 4 IF_ICMPNE L221 - false
   * 103 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I92 Branch 9 IFEQ L226 - false
   * 104 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I96 Branch 10 IFEQ L228 - false
   * 105 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I98 Branch 11 IFEQ L228 - false
   * 106 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I100 Branch 12 IFEQ L228 - false
   * 107 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I102 Branch 13 IFEQ L228 - false
   */
  @Test
  public void test13()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      DatabaseConfig databaseConfig1 = databaseConfig0.cloneConfig();
      databaseConfig1.setOverrideBtreeComparator(false);
      DatabaseConfig databaseConfig2 = DatabaseConfig.DEFAULT;
      int int0 = databaseConfig0.getNodeMaxEntries();
      assertEquals(0, int0);
      
      databaseConfig0.getUseExistingConfig();
      databaseConfig2.getExclusiveCreate();
      databaseConfig2.setExclusiveCreate(true);
      databaseConfig2.getBtreeComparator();
      databaseConfig0.getDuplicateComparator();
      databaseConfig1.setReadOnly(true);
      databaseConfig0.validate(databaseConfig1);
      assertEquals(true, databaseConfig1.getReadOnly());
      assertEquals(true, databaseConfig1.getTransactional());
      assertEquals(false, databaseConfig1.getOverrideBtreeComparator());
      assertEquals(true, databaseConfig1.getSortedDuplicates());
      assertEquals(true, databaseConfig0.getExclusiveCreate());
  }

  //Test case number: 14
  /*
   * 56 covered goals:
   * 1 Weak Mutation 125: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> dtCmpMatch
   * 2 Weak Mutation 124: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> btCmpMatch
   * 3 Weak Mutation 133: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 132: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - ReplaceConstant -  Transactional
 -> 
   * 5 Weak Mutation 145: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> btCmpMatch
   * 6 Weak Mutation 146: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> dtCmpMatch
   * 7 Weak Mutation 152: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - ReplaceConstant -  Sorted Duplicates
 -> 
   * 8 Weak Mutation 153: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 9 Weak Mutation 154: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> txnMatch
   * 10 Weak Mutation 156: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> sdMatch
   * 11 Weak Mutation 166: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> sdMatch
   * 12 Weak Mutation 164: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> txnMatch
   * 13 com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V: I92 Branch 9 IFEQ L226 - true
   * 14 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I10 Branch 14 IFNE L241 - false
   * 15 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I20 Branch 15 IFNE L245 - true
   * 16 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I30 Branch 16 IFNE L248 - false
   * 17 Weak Mutation 21: com.sleepycat.je.DatabaseConfig.getSortedDuplicates()Z:70 - InsertUnaryOp Negation
   * 18 Weak Mutation 26: com.sleepycat.je.DatabaseConfig.getTransactional()Z:88 - InsertUnaryOp Negation
   * 19 Weak Mutation 31: com.sleepycat.je.DatabaseConfig.getReadOnly()Z:103 - InsertUnaryOp Negation
   * 20 Weak Mutation 59: com.sleepycat.je.DatabaseConfig.getOverrideDuplicateComparator()Z:187 - InsertUnaryOp Negation
   * 21 Weak Mutation 68: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceComparisonOperator != null -> = null
   * 22 Weak Mutation 70: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceVariable config -> this
   * 23 Weak Mutation 71: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceVariable config -> DEFAULT
   * 24 Weak Mutation 66: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceVariable config -> this
   * 25 Weak Mutation 67: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:214 - ReplaceVariable config -> DEFAULT
   * 26 Weak Mutation 77: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 78: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceVariable config -> this
   * 28 Weak Mutation 79: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceVariable config -> DEFAULT
   * 29 Weak Mutation 72: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - DeleteStatement: getTransactional()Z
   * 30 Weak Mutation 73: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - InsertUnaryOp Negation
   * 31 Weak Mutation 74: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - DeleteField: transactionalZ
   * 32 Weak Mutation 75: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:218 - ReplaceComparisonOperator != -> ==
   * 33 Weak Mutation 85: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceConstant - 0 -> 1
   * 34 Weak Mutation 87: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceVariable config -> DEFAULT
   * 35 Weak Mutation 86: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceVariable config -> this
   * 36 Weak Mutation 81: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - InsertUnaryOp Negation
   * 37 Weak Mutation 80: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - DeleteStatement: getReadOnly()Z
   * 38 Weak Mutation 83: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - ReplaceComparisonOperator != -> ==
   * 39 Weak Mutation 82: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:220 - DeleteField: readOnlyZ
   * 40 Weak Mutation 93: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 95: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceVariable config -> DEFAULT
   * 42 Weak Mutation 94: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceVariable config -> this
   * 43 Weak Mutation 89: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - InsertUnaryOp Negation
   * 44 Weak Mutation 88: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - DeleteStatement: getSortedDuplicates()Z
   * 45 Weak Mutation 91: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - ReplaceComparisonOperator != -> ==
   * 46 Weak Mutation 90: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:221 - DeleteField: duplicatesAllowedZ
   * 47 Weak Mutation 98: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceComparisonOperator == -> !=
   * 48 Weak Mutation 96: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - InsertUnaryOp Negation
   * 49 Weak Mutation 110: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceVariable config -> DEFAULT
   * 50 Weak Mutation 111: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - DeleteStatement: getOverrideDuplicateComparator()Z
   * 51 Weak Mutation 108: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:222 - ReplaceConstant - 1 -> 0
   * 52 Weak Mutation 109: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceVariable config -> this
   * 53 Weak Mutation 112: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceComparisonOperator == -> !=
   * 54 Weak Mutation 122: com.sleepycat.je.DatabaseConfig.validate(Lcom/sleepycat/je/DatabaseConfig;)V:223 - ReplaceConstant - 1 -> 0
   * 55 Weak Mutation 136: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> dtCmpMatch
   * 56 Weak Mutation 167: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> roMatch
   */
  @Test
  public void test14()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      DatabaseConfig databaseConfig1 = new DatabaseConfig();
      try {
        databaseConfig0.validate(databaseConfig1);
        fail("Expecting exception: DatabaseException");
      } catch(DatabaseException e) {
        /*
         * The following DatabaseConfig parameters for the
         * cached Database do not match the parameters for the
         * requested Database:
         *  Transactional
         *  Read-Only
         *  Sorted Duplicates
         */
      }
  }

  //Test case number: 15
  /*
   * 18 covered goals:
   * 1 Weak Mutation 155: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> dtCmpMatch
   * 2 Weak Mutation 163: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 162: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - ReplaceConstant -  Btree Comparator
 -> 
   * 4 Weak Mutation 165: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> btCmpMatch
   * 5 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I40 Branch 17 IFNE L251 - false
   * 6 Weak Mutation 124: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceVariable txnMatch -> btCmpMatch
   * 7 Weak Mutation 135: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceVariable roMatch -> btCmpMatch
   * 8 Weak Mutation 154: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> txnMatch
   * 9 Weak Mutation 156: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> sdMatch
   * 10 Weak Mutation 157: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> roMatch
   * 11 Weak Mutation 145: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceVariable sdMatch -> btCmpMatch
   * 12 Weak Mutation 155: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceVariable btCmpMatch -> dtCmpMatch
   * 13 Weak Mutation 163: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 14 Weak Mutation 162: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - ReplaceConstant -  Btree Comparator
 -> 
   * 15 Weak Mutation 165: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceVariable dtCmpMatch -> btCmpMatch
   * 16 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I10 Branch 14 IFNE L241 - true
   * 17 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I20 Branch 15 IFNE L245 - true
   * 18 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I30 Branch 16 IFNE L248 - true
   */
  @Test
  public void test15()  throws Throwable  {
      DatabaseConfig databaseConfig0 = DatabaseConfig.DEFAULT;
      String string0 = databaseConfig0.genDatabaseConfigMismatchMessage(databaseConfig0, true, true, true, false, true);
      assertNotNull(string0);
      assertEquals("The following DatabaseConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n Btree Comparator\n", string0);
  }

  //Test case number: 16
  /*
   * 43 covered goals:
   * 1 Weak Mutation 173: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:255 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 2 Weak Mutation 172: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:255 - ReplaceConstant -  Duplicate Comparator
 -> 
   * 3 com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;: I50 Branch 18 IFNE L254 - false
   * 4 Weak Mutation 0: com.sleepycat.je.DatabaseConfig.<init>()V:10 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 1: com.sleepycat.je.DatabaseConfig.<init>()V:11 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 2: com.sleepycat.je.DatabaseConfig.<init>()V:13 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 3: com.sleepycat.je.DatabaseConfig.<init>()V:15 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 4: com.sleepycat.je.DatabaseConfig.<init>()V:16 - ReplaceConstant - 0 -> 1
   * 9 Weak Mutation 5: com.sleepycat.je.DatabaseConfig.<init>()V:21 - ReplaceConstant - 0 -> 1
   * 10 Weak Mutation 6: com.sleepycat.je.DatabaseConfig.<init>()V:22 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 7: com.sleepycat.je.DatabaseConfig.<init>()V:23 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 123: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:239 - ReplaceConstant - The following DatabaseConfig parameters for the
cached Database do not match the parameters for the
requested Database:
 -> 
   * 13 Weak Mutation 139: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC 1 roMatch
   * 14 Weak Mutation 138: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp Negation of roMatch
   * 15 Weak Mutation 141: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - ReplaceComparisonOperator != -> ==
   * 16 Weak Mutation 140: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:245 - InsertUnaryOp IINC -1 roMatch
   * 17 Weak Mutation 143: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 18 Weak Mutation 142: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:246 - ReplaceConstant -  Read-Only
 -> 
   * 19 Weak Mutation 129: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC 1 txnMatch
   * 20 Weak Mutation 128: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp Negation of txnMatch
   * 21 Weak Mutation 131: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - ReplaceComparisonOperator != -> ==
   * 22 Weak Mutation 130: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:241 - InsertUnaryOp IINC -1 txnMatch
   * 23 Weak Mutation 133: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 132: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:242 - ReplaceConstant -  Transactional
 -> 
   * 25 Weak Mutation 152: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - ReplaceConstant -  Sorted Duplicates
 -> 
   * 26 Weak Mutation 153: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:249 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 27 Weak Mutation 158: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp Negation of btCmpMatch
   * 28 Weak Mutation 159: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC 1 btCmpMatch
   * 29 Weak Mutation 148: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp Negation of sdMatch
   * 30 Weak Mutation 149: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC 1 sdMatch
   * 31 Weak Mutation 150: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - InsertUnaryOp IINC -1 sdMatch
   * 32 Weak Mutation 151: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:248 - ReplaceComparisonOperator != -> ==
   * 33 Weak Mutation 171: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - ReplaceComparisonOperator != -> ==
   * 34 Weak Mutation 170: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC -1 dtCmpMatch
   * 35 Weak Mutation 169: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp IINC 1 dtCmpMatch
   * 36 Weak Mutation 168: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:254 - InsertUnaryOp Negation of dtCmpMatch
   * 37 Weak Mutation 174: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:257 - DeleteStatement: toString()Ljava/lang/String;
   * 38 Weak Mutation 163: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 39 Weak Mutation 162: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:252 - ReplaceConstant -  Btree Comparator
 -> 
   * 40 Weak Mutation 161: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - ReplaceComparisonOperator != -> ==
   * 41 Weak Mutation 160: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:251 - InsertUnaryOp IINC -1 btCmpMatch
   * 42 Weak Mutation 173: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:255 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 43 Weak Mutation 172: com.sleepycat.je.DatabaseConfig.genDatabaseConfigMismatchMessage(Lcom/sleepycat/je/DatabaseConfig;ZZZZZ)Ljava/lang/String;:255 - ReplaceConstant -  Duplicate Comparator
 -> 
   */
  @Test
  public void test16()  throws Throwable  {
      DatabaseConfig databaseConfig0 = new DatabaseConfig();
      String string0 = databaseConfig0.genDatabaseConfigMismatchMessage(databaseConfig0, false, false, false, false, false);
      assertEquals(false, databaseConfig0.getAllowCreate());
      assertNotNull(string0);
      assertEquals("The following DatabaseConfig parameters for the\ncached Database do not match the parameters for the\nrequested Database:\n Transactional\n Read-Only\n Sorted Duplicates\n Btree Comparator\n Duplicate Comparator\n", string0);
      assertEquals(false, databaseConfig0.getTransactional());
      assertEquals(false, databaseConfig0.getSortedDuplicates());
      assertEquals(false, databaseConfig0.getOverrideDuplicateComparator());
      assertEquals(false, databaseConfig0.getExclusiveCreate());
      assertEquals(false, databaseConfig0.getOverrideBtreeComparator());
      assertEquals(false, databaseConfig0.getReadOnly());
      assertEquals(false, databaseConfig0.getUseExistingConfig());
  }
}
