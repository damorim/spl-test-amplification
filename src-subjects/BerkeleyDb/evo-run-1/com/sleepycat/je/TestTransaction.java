/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.Environment;
import com.sleepycat.je.Transaction;
import com.sleepycat.je.txn.Txn;

@RunWith(EvoSuiteRunner.class)
public class TestTransaction {


  //Test case number: 0
  /*
   * 5 covered goals:
   * 1 Weak Mutation 6: com.sleepycat.je.Transaction.getId()J:40 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.Transaction.getId()J: root-Branch
   * 3 Weak Mutation 0: com.sleepycat.je.Transaction.<init>(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Txn;)V:23 - DeleteStatement: getId()J
   * 4 Weak Mutation 6: com.sleepycat.je.Transaction.getId()J:40 - InsertUnaryOp Negation
   * 5 com.sleepycat.je.Transaction.<init>(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Txn;)V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      long long0 = transaction0.getId();
      assertEquals(0L, long0);
  }

  //Test case number: 1
  /*
   * 13 covered goals:
   * 1 Weak Mutation 12: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 0
   * 2 Weak Mutation 13: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 1
   * 3 Weak Mutation 14: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> -1
   * 4 Weak Mutation 15: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 3
   * 5 Weak Mutation 82: com.sleepycat.je.Transaction.checkEnv()V:155 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   * 6 com.sleepycat.je.Transaction.checkEnv()V: root-Branch
   * 7 com.sleepycat.je.Transaction.doCommit(B)V: root-Branch
   * 8 com.sleepycat.je.Transaction.commitSync()V: root-Branch
   * 9 Weak Mutation 12: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 0
   * 10 Weak Mutation 13: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 1
   * 11 Weak Mutation 14: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> -1
   * 12 Weak Mutation 15: com.sleepycat.je.Transaction.commitSync()V:57 - ReplaceConstant - 2 -> 3
   * 13 Weak Mutation 82: com.sleepycat.je.Transaction.checkEnv()V:155 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   */
  @Test
  public void test1()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      // Undeclared exception!
      try {
        transaction0.commitSync();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * 1 Weak Mutation 16: com.sleepycat.je.Transaction.commitNoSync()V:64 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.Transaction.commitNoSync()V: root-Branch
   * 3 Weak Mutation 16: com.sleepycat.je.Transaction.commitNoSync()V:64 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test2()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      // Undeclared exception!
      try {
        transaction0.commitNoSync();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.Transaction.commitWriteNoSync()V:71 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.Transaction.commitWriteNoSync()V: root-Branch
   * 3 Weak Mutation 17: com.sleepycat.je.Transaction.commitWriteNoSync()V:71 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test3()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      // Undeclared exception!
      try {
        transaction0.commitWriteNoSync();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * 1 Weak Mutation 33: com.sleepycat.je.Transaction.getName()Ljava/lang/String;:107 - DeleteField: nameLjava/lang/String;
   * 2 com.sleepycat.je.Transaction.setName(Ljava/lang/String;)V: root-Branch
   * 3 com.sleepycat.je.Transaction.getName()Ljava/lang/String;: root-Branch
   * 4 Weak Mutation 33: com.sleepycat.je.Transaction.getName()Ljava/lang/String;:107 - DeleteField: nameLjava/lang/String;
   */
  @Test
  public void test4()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      transaction0.setName("EXISTING");
      String string0 = transaction0.getName();
      assertEquals("EXISTING", string0);
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * 1 Weak Mutation 34: com.sleepycat.je.Transaction.hashCode()I:110 - InsertUnaryOp Negation
   * 2 com.sleepycat.je.Transaction.hashCode()I: root-Branch
   * 3 Weak Mutation 34: com.sleepycat.je.Transaction.hashCode()I:110 - InsertUnaryOp Negation
   */
  @Test
  public void test5()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      int int0 = transaction0.hashCode();
      assertEquals(0, int0);
  }

  //Test case number: 6
  /*
   * 8 covered goals:
   * 1 Weak Mutation 36: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:113 - ReplaceComparisonOperator != null -> = null
   * 2 Weak Mutation 38: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:116 - ReplaceComparisonOperator != -> ==
   * 3 Weak Mutation 39: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:117 - ReplaceConstant - 0 -> 1
   * 4 com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L113 - true
   * 5 com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z: I12 Branch 2 IFNE L116 - false
   * 6 Weak Mutation 38: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:116 - ReplaceComparisonOperator != -> ==
   * 7 Weak Mutation 39: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:117 - ReplaceConstant - 0 -> 1
   * 8 Weak Mutation 36: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:113 - ReplaceComparisonOperator != null -> = null
   */
  @Test
  public void test6()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      boolean boolean0 = transaction0.equals((Object) "EXISTING");
      assertEquals(false, boolean0);
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * 1 Weak Mutation 37: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:114 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L113 - false
   * 3 Weak Mutation 36: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:113 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 37: com.sleepycat.je.Transaction.equals(Ljava/lang/Object;)Z:114 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test7()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      boolean boolean0 = transaction0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  //Test case number: 8
  /*
   * 37 covered goals:
   * 1 Weak Mutation 57: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:128 - DeleteField: nameLjava/lang/String;
   * 2 Weak Mutation 59: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:129 - ReplaceConstant -  name=" -> 
   * 3 Weak Mutation 60: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:129 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 4 Weak Mutation 63: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - ReplaceConstant - " -> 
   * 5 Weak Mutation 62: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 6 Weak Mutation 61: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteField: nameLjava/lang/String;
   * 7 Weak Mutation 64: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 8 com.sleepycat.je.Transaction.toString()Ljava/lang/String;: I26 Branch 4 IFNULL L128 - false
   * 9 Weak Mutation 51: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:126 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 10 Weak Mutation 50: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:126 - ReplaceConstant - <Transaction id=" -> 
   * 11 Weak Mutation 55: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - ReplaceConstant - " -> 
   * 12 Weak Mutation 54: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 53: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: getId()J
   * 14 Weak Mutation 52: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 15 Weak Mutation 58: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:128 - ReplaceComparisonOperator = null -> != null
   * 16 Weak Mutation 56: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 17 Weak Mutation 65: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:132 - ReplaceConstant - > -> 
   * 18 Weak Mutation 66: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:132 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 19 Weak Mutation 67: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:133 - DeleteStatement: toString()Ljava/lang/String;
   * 20 Weak Mutation 51: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:126 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 50: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:126 - ReplaceConstant - <Transaction id=" -> 
   * 22 Weak Mutation 55: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - ReplaceConstant - " -> 
   * 23 Weak Mutation 54: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: append(J)Ljava/lang/StringBuffer;
   * 24 Weak Mutation 53: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: getId()J
   * 25 Weak Mutation 52: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 26 Weak Mutation 59: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:129 - ReplaceConstant -  name=" -> 
   * 27 Weak Mutation 58: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:128 - ReplaceComparisonOperator = null -> != null
   * 28 Weak Mutation 57: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:128 - DeleteField: nameLjava/lang/String;
   * 29 Weak Mutation 56: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:127 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 30 Weak Mutation 63: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - ReplaceConstant - " -> 
   * 31 Weak Mutation 62: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 32 Weak Mutation 61: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteField: nameLjava/lang/String;
   * 33 Weak Mutation 60: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:129 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 34 Weak Mutation 64: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:130 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 35 Weak Mutation 65: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:132 - ReplaceConstant - > -> 
   * 36 Weak Mutation 66: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:132 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 37 Weak Mutation 67: com.sleepycat.je.Transaction.toString()Ljava/lang/String;:133 - DeleteStatement: toString()Ljava/lang/String;
   */
  @Test
  public void test8()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      transaction0.setName("EXISTING");
      String string0 = transaction0.toString();
      assertEquals("<Transaction id=\"0\" name=\"EXISTING\">", transaction0.toString());
      assertNotNull(string0);
      assertEquals("<Transaction id=\"0\" name=\"EXISTING\">", string0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:141 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 2 Weak Mutation 69: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:141 - ReplaceComparisonOperator != null -> = null
   * 3 Weak Mutation 79: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:145 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 4 com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;: I4 Branch 5 IFNONNULL L141 - true
   * 5 Weak Mutation 68: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:141 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 6 Weak Mutation 69: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:141 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 79: com.sleepycat.je.Transaction.getLocker()Lcom/sleepycat/je/txn/Locker;:145 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   */
  @Test
  public void test9()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      Txn txn1 = (Txn)transaction0.getLocker();
      assertEquals(false, txn1.isReadCommittedIsolation());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 80: com.sleepycat.je.Transaction.getTxn()Lcom/sleepycat/je/txn/Txn;:149 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   * 2 com.sleepycat.je.Transaction.getTxn()Lcom/sleepycat/je/txn/Txn;: root-Branch
   * 3 Weak Mutation 80: com.sleepycat.je.Transaction.getTxn()Lcom/sleepycat/je/txn/Txn;:149 - DeleteField: txnLcom/sleepycat/je/txn/Txn;
   */
  @Test
  public void test10()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      Txn txn1 = transaction0.getTxn();
      assertEquals(true, txn1.logEntryIsTransactional());
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * 1 com.sleepycat.je.Transaction.setLockTimeout(J)V: root-Branch
   * 2 Weak Mutation 0: com.sleepycat.je.Transaction.<init>(Lcom/sleepycat/je/Environment;Lcom/sleepycat/je/txn/Txn;)V:23 - DeleteStatement: getId()J
   * 3 Weak Mutation 82: com.sleepycat.je.Transaction.checkEnv()V:155 - DeleteStatement: getEnvironmentImpl()Lcom/sleepycat/je/dbi/EnvironmentImpl;
   */
  @Test
  public void test11()  throws Throwable  {
      Txn txn0 = new Txn();
      Transaction transaction0 = new Transaction((Environment) null, txn0);
      // Undeclared exception!
      try {
        transaction0.setLockTimeout((long) (-349));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
