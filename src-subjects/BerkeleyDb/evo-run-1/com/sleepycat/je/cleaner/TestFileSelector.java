/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.cleaner;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.DatabaseException;
import com.sleepycat.je.cleaner.FileSelector;
import com.sleepycat.je.cleaner.LNInfo;
import com.sleepycat.je.cleaner.UtilizationProfile;
import com.sleepycat.je.dbi.DatabaseId;
import com.sleepycat.je.log.LogEntryType;
import com.sleepycat.je.tree.DupCountLN;
import com.sleepycat.je.tree.LN;
import com.sleepycat.je.tree.MapLN;
import java.lang.reflect.Array;
import java.util.Set;

@RunWith(EvoSuiteRunner.class)
public class TestFileSelector {


  //Test case number: 0
  /*
   * 32 covered goals:
   * 1 Weak Mutation 1: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - ReplaceVariable calcLowUtilizationFiles -> forceCleaning
   * 2 Weak Mutation 2: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp Negation of calcLowUtilizationFiles
   * 3 Weak Mutation 3: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC 1 calcLowUtilizationFiles
   * 4 Weak Mutation 4: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC -1 calcLowUtilizationFiles
   * 5 Weak Mutation 5: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - ReplaceComparisonOperator == -> !=
   * 6 Weak Mutation 6: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp Negation of maxBatchFiles
   * 7 Weak Mutation 7: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC 1 maxBatchFiles
   * 8 Weak Mutation 8: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC -1 maxBatchFiles
   * 9 Weak Mutation 10: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> <
   * 10 Weak Mutation 21: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp Negation of forceCleaning
   * 11 Weak Mutation 20: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - ReplaceVariable forceCleaning -> calcLowUtilizationFiles
   * 12 Weak Mutation 23: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC -1 forceCleaning
   * 13 Weak Mutation 22: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC 1 forceCleaning
   * 14 Weak Mutation 24: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - DeleteStatement: getBestFileForCleaning(Lcom/sleepycat/je/cleaner/FileSelector;ZLjava/util/Set;)Ljava/lang/Long;
   * 15 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I3 Branch 2 IFEQ L55 - false
   * 16 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I15 Branch 3 IFLE L57 - true
   * 17 Weak Mutation 0: com.sleepycat.je.cleaner.FileSelector.<init>()V:39 - DeleteField: EMPTY_SETLjava/util/Set;
   * 18 Weak Mutation 1: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - ReplaceVariable calcLowUtilizationFiles -> forceCleaning
   * 19 Weak Mutation 2: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp Negation of calcLowUtilizationFiles
   * 20 Weak Mutation 3: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC 1 calcLowUtilizationFiles
   * 21 Weak Mutation 4: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC -1 calcLowUtilizationFiles
   * 22 Weak Mutation 5: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - ReplaceComparisonOperator == -> !=
   * 23 Weak Mutation 6: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp Negation of maxBatchFiles
   * 24 Weak Mutation 7: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC 1 maxBatchFiles
   * 25 Weak Mutation 8: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC -1 maxBatchFiles
   * 26 Weak Mutation 10: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> <
   * 27 Weak Mutation 21: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp Negation of forceCleaning
   * 28 Weak Mutation 20: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - ReplaceVariable forceCleaning -> calcLowUtilizationFiles
   * 29 Weak Mutation 23: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC -1 forceCleaning
   * 30 Weak Mutation 22: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC 1 forceCleaning
   * 31 Weak Mutation 24: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - DeleteStatement: getBestFileForCleaning(Lcom/sleepycat/je/cleaner/FileSelector;ZLjava/util/Set;)Ljava/lang/Long;
   * 32 com.sleepycat.je.cleaner.FileSelector.<init>()V: root-Branch
   */
  @Test
  public void test0()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      // Undeclared exception!
      try {
        fileSelector0.selectFileForCleaning((UtilizationProfile) null, false, true, (int) (byte)0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * 1 Weak Mutation 9: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 9: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> ==
   */
  @Test
  public void test1()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      // Undeclared exception!
      try {
        fileSelector0.selectFileForCleaning((UtilizationProfile) null, true, true, (-1740));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 2
  /*
   * 21 covered goals:
   * 1 Weak Mutation 11: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 12: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 3 Weak Mutation 13: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteStatement: size()I
   * 4 Weak Mutation 14: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp Negation of maxBatchFiles
   * 5 Weak Mutation 15: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC 1 maxBatchFiles
   * 6 Weak Mutation 16: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC -1 maxBatchFiles
   * 7 Weak Mutation 18: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> -2
   * 8 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I3 Branch 2 IFEQ L55 - true
   * 9 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I15 Branch 3 IFLE L57 - false
   * 10 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I28 Branch 4 IF_ICMPLT L59 - true
   * 11 Weak Mutation 21: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp Negation of forceCleaning
   * 12 Weak Mutation 23: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC -1 forceCleaning
   * 13 Weak Mutation 22: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - InsertUnaryOp IINC 1 forceCleaning
   * 14 Weak Mutation 24: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:64 - DeleteStatement: getBestFileForCleaning(Lcom/sleepycat/je/cleaner/FileSelector;ZLjava/util/Set;)Ljava/lang/Long;
   * 15 Weak Mutation 11: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> -1
   * 16 Weak Mutation 12: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 17 Weak Mutation 13: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteStatement: size()I
   * 18 Weak Mutation 14: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp Negation of maxBatchFiles
   * 19 Weak Mutation 15: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC 1 maxBatchFiles
   * 20 Weak Mutation 16: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC -1 maxBatchFiles
   * 21 Weak Mutation 18: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> -2
   */
  @Test
  public void test2()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      // Undeclared exception!
      try {
        fileSelector0.selectFileForCleaning((UtilizationProfile) null, false, false, 228);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 3
  /*
   * 13 covered goals:
   * 1 Weak Mutation 17: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> !=
   * 2 Weak Mutation 61: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 3 Weak Mutation 60: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 4 Weak Mutation 63: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 5 Weak Mutation 62: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 6 com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V: root-Branch
   * 7 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I28 Branch 4 IF_ICMPLT L59 - false
   * 8 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I88 Branch 6 IFNULL L72 - false
   * 9 Weak Mutation 17: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> !=
   * 10 Weak Mutation 63: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 11 Weak Mutation 62: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 12 Weak Mutation 61: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 13 Weak Mutation 60: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   */
  @Test
  public void test3()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Long long0 = new Long(850L);
      fileSelector0.putBackFileForCleaning(long0);
      fileSelector0.putBackFileForCleaning((Long) 512L);
      // Undeclared exception!
      try {
        fileSelector0.selectFileForCleaning((UtilizationProfile) null, true, true, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 4
  /*
   * 16 covered goals:
   * 1 Weak Mutation 19: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> <=
   * 2 com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;: I88 Branch 6 IFNULL L72 - true
   * 3 Weak Mutation 2: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp Negation of calcLowUtilizationFiles
   * 4 Weak Mutation 3: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC 1 calcLowUtilizationFiles
   * 5 Weak Mutation 4: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - InsertUnaryOp IINC -1 calcLowUtilizationFiles
   * 6 Weak Mutation 5: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:55 - ReplaceComparisonOperator == -> !=
   * 7 Weak Mutation 6: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp Negation of maxBatchFiles
   * 8 Weak Mutation 7: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC 1 maxBatchFiles
   * 9 Weak Mutation 8: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - InsertUnaryOp IINC -1 maxBatchFiles
   * 10 Weak Mutation 11: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:57 - ReplaceComparisonOperator <= -> -1
   * 11 Weak Mutation 12: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 12 Weak Mutation 13: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - DeleteStatement: size()I
   * 13 Weak Mutation 14: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp Negation of maxBatchFiles
   * 14 Weak Mutation 15: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC 1 maxBatchFiles
   * 15 Weak Mutation 16: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - InsertUnaryOp IINC -1 maxBatchFiles
   * 16 Weak Mutation 19: com.sleepycat.je.cleaner.FileSelector.selectFileForCleaning(Lcom/sleepycat/je/cleaner/UtilizationProfile;ZZI)Ljava/lang/Long;:59 - ReplaceComparisonOperator < -> <=
   */
  @Test
  public void test4()  throws Throwable  {
      Long long0 = new Long((-1293L));
      FileSelector fileSelector0 = new FileSelector();
      fileSelector0.putBackFileForCleaning(long0);
      // Undeclared exception!
      try {
        fileSelector0.selectFileForCleaning((UtilizationProfile) null, false, false, 1);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 5
  /*
   * 44 covered goals:
   * 1 Weak Mutation 29: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 2 Weak Mutation 28: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 3 Weak Mutation 30: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 4 Weak Mutation 34: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 5 Weak Mutation 35: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 6 Weak Mutation 33: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 7 Weak Mutation 38: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: cleanedFilesLjava/util/Set;
   * 8 Weak Mutation 39: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 9 Weak Mutation 43: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: checkpointedFilesLjava/util/Set;
   * 10 Weak Mutation 40: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 11 Weak Mutation 44: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 12 Weak Mutation 45: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 13 Weak Mutation 50: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 14 Weak Mutation 49: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 15 Weak Mutation 48: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 16 Weak Mutation 55: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 17 Weak Mutation 54: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 18 Weak Mutation 53: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 19 Weak Mutation 58: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceConstant - 0 -> 1
   * 20 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I6 Branch 7 IFGT L90 - false
   * 21 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I11 Branch 8 IFGT L90 - false
   * 22 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I16 Branch 9 IFGT L90 - false
   * 23 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I21 Branch 10 IFGT L90 - false
   * 24 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I26 Branch 11 IFGT L90 - false
   * 25 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I31 Branch 12 IFGT L90 - false
   * 26 Weak Mutation 29: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 27 Weak Mutation 28: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 28 Weak Mutation 30: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 29 Weak Mutation 34: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 30 Weak Mutation 35: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 31 Weak Mutation 33: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 32 Weak Mutation 38: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: cleanedFilesLjava/util/Set;
   * 33 Weak Mutation 39: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 34 Weak Mutation 43: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: checkpointedFilesLjava/util/Set;
   * 35 Weak Mutation 40: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 36 Weak Mutation 44: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 37 Weak Mutation 45: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 38 Weak Mutation 50: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 39 Weak Mutation 49: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 40 Weak Mutation 48: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 41 Weak Mutation 55: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 42 Weak Mutation 54: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 43 Weak Mutation 53: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 44 Weak Mutation 58: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test5()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      boolean boolean0 = fileSelector0.isFileCleaningInProgress((Long) 4L);
      assertEquals(false, boolean0);
  }

  //Test case number: 6
  /*
   * 9 covered goals:
   * 1 Weak Mutation 32: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 2 Weak Mutation 59: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceConstant - 1 -> 0
   * 3 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I6 Branch 7 IFGT L90 - true
   * 4 Weak Mutation 63: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 5 Weak Mutation 62: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:98 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 6 Weak Mutation 61: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 7 Weak Mutation 60: com.sleepycat.je.cleaner.FileSelector.putBackFileForCleaning(Ljava/lang/Long;)V:97 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 8 Weak Mutation 32: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 9 Weak Mutation 59: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test6()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Long long0 = new Long(850L);
      fileSelector0.putBackFileForCleaning(long0);
      boolean boolean0 = fileSelector0.isFileCleaningInProgress(long0);
      assertEquals(1, fileSelector0.getBacklog());
      assertEquals(true, boolean0);
  }

  //Test case number: 7
  /*
   * 12 covered goals:
   * 1 Weak Mutation 42: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 2 Weak Mutation 64: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteField: cleanedFilesLjava/util/Set;
   * 3 Weak Mutation 65: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 4 Weak Mutation 66: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 5 Weak Mutation 67: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 6 com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V: root-Branch
   * 7 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I16 Branch 9 IFGT L90 - true
   * 8 Weak Mutation 42: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 9 Weak Mutation 64: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteField: cleanedFilesLjava/util/Set;
   * 10 Weak Mutation 65: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 11 Weak Mutation 66: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 12 Weak Mutation 67: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteStatement: remove(Ljava/lang/Object;)Z
   */
  @Test
  public void test7()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      fileSelector0.addCleanedFile((Long) 4L);
      boolean boolean0 = fileSelector0.isFileCleaningInProgress((Long) 4L);
      assertEquals(true, boolean0);
  }

  //Test case number: 8
  /*
   * 112 covered goals:
   * 1 Weak Mutation 57: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 2 Weak Mutation 78: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceComparisonOperator <= -> -1
   * 3 Weak Mutation 79: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceConstant - 0 -> 1
   * 4 Weak Mutation 74: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteField: pendingLNsLjava/util/Map;
   * 5 Weak Mutation 75: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 6 Weak Mutation 84: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 3
   * 7 Weak Mutation 81: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 0
   * 8 Weak Mutation 83: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> -1
   * 9 Weak Mutation 82: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 1
   * 10 Weak Mutation 85: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceConstant - 0 -> 1
   * 11 Weak Mutation 87: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteStatement: size()I
   * 12 Weak Mutation 86: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteField: cleanedFilesLjava/util/Set;
   * 13 Weak Mutation 91: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteField: cleanedFilesLjava/util/Set;
   * 14 Weak Mutation 90: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceComparisonOperator <= -> -1
   * 15 Weak Mutation 93: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 16 Weak Mutation 92: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceConstant - 1 -> 0
   * 17 Weak Mutation 94: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteStatement: size()I
   * 18 Weak Mutation 96: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceComparisonOperator <= -> <
   * 19 Weak Mutation 100: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceComparisonOperator != null -> = null
   * 20 Weak Mutation 99: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceConstant - 0 -> 1
   * 21 Weak Mutation 103: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:150 - ReplaceComparisonOperator = null -> != null
   * 22 Weak Mutation 104: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:151 - ReplaceConstant - 0 -> 1
   * 23 Weak Mutation 105: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:152 - ReplaceComparisonOperator = null -> != null
   * 24 Weak Mutation 108: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - ReplaceComparisonOperator == -> !=
   * 25 Weak Mutation 106: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - InsertUnaryOp Negation
   * 26 Weak Mutation 111: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:157 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 27 Weak Mutation 112: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:157 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 28 Weak Mutation 114: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteStatement: removeAll(Ljava/util/Collection;)Z
   * 29 Weak Mutation 113: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteField: cleanedFilesLjava/util/Set;
   * 30 Weak Mutation 115: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:161 - ReplaceConstant - 1 -> 0
   * 31 Weak Mutation 117: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceComparisonOperator = null -> != null
   * 32 Weak Mutation 116: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 33 Weak Mutation 159: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteField: pendingLNsLjava/util/Map;
   * 34 Weak Mutation 163: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - ReplaceComparisonOperator <= -> -1
   * 35 Weak Mutation 160: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 36 Weak Mutation 166: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 37 Weak Mutation 165: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: checkpointedFilesLjava/util/Set;
   * 38 Weak Mutation 164: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 39 Weak Mutation 168: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteStatement: clear()V
   * 40 Weak Mutation 167: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteField: checkpointedFilesLjava/util/Set;
   * 41 com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z: I31 Branch 12 IFGT L90 - true
   * 42 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I6 Branch 13 IFLE L135 - false
   * 43 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I25 Branch 14 IFLE L141 - false
   * 44 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I43 Branch 15 IFLE L142 - true
   * 45 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I59 Branch 16 IFNONNULL L143 - true
   * 46 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I3 Branch 18 IFNULL L150 - false
   * 47 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I13 Branch 19 IFNULL L152 - false
   * 48 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I18 Branch 20 IFEQ L153 - true
   * 49 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I52 Branch 21 IFNULL L162 - true
   * 50 com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V: I5 Branch 27 IFLE L259 - false
   * 51 Weak Mutation 29: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 52 Weak Mutation 28: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 53 Weak Mutation 30: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 54 Weak Mutation 34: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 55 Weak Mutation 35: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 56 Weak Mutation 33: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 57 Weak Mutation 38: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: cleanedFilesLjava/util/Set;
   * 58 Weak Mutation 39: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 59 Weak Mutation 43: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: checkpointedFilesLjava/util/Set;
   * 60 Weak Mutation 40: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 61 Weak Mutation 44: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 62 Weak Mutation 45: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 63 Weak Mutation 50: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> !=
   * 64 Weak Mutation 49: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 65 Weak Mutation 48: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 66 Weak Mutation 54: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteStatement: collectionContains(Ljava/util/Collection;Ljava/lang/Object;)I
   * 67 Weak Mutation 53: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 68 Weak Mutation 59: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceConstant - 1 -> 0
   * 69 Weak Mutation 64: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteField: cleanedFilesLjava/util/Set;
   * 70 Weak Mutation 65: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:105 - DeleteStatement: add(Ljava/lang/Object;)Z
   * 71 Weak Mutation 66: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 72 Weak Mutation 67: com.sleepycat.je.cleaner.FileSelector.addCleanedFile(Ljava/lang/Long;)V:106 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 73 Weak Mutation 57: com.sleepycat.je.cleaner.FileSelector.isFileCleaningInProgress(Ljava/lang/Long;)Z:90 - ReplaceComparisonOperator > -> -2
   * 74 Weak Mutation 78: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceComparisonOperator <= -> -1
   * 75 Weak Mutation 79: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceConstant - 0 -> 1
   * 76 Weak Mutation 74: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteField: pendingLNsLjava/util/Map;
   * 77 Weak Mutation 75: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 78 Weak Mutation 85: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceConstant - 0 -> 1
   * 79 Weak Mutation 84: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 3
   * 80 Weak Mutation 87: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteStatement: size()I
   * 81 Weak Mutation 86: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteField: cleanedFilesLjava/util/Set;
   * 82 Weak Mutation 81: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 0
   * 83 Weak Mutation 83: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> -1
   * 84 Weak Mutation 82: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 1
   * 85 Weak Mutation 93: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 86 Weak Mutation 92: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceConstant - 1 -> 0
   * 87 Weak Mutation 94: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteStatement: size()I
   * 88 Weak Mutation 91: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteField: cleanedFilesLjava/util/Set;
   * 89 Weak Mutation 90: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceComparisonOperator <= -> -1
   * 90 Weak Mutation 103: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:150 - ReplaceComparisonOperator = null -> != null
   * 91 Weak Mutation 100: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceComparisonOperator != null -> = null
   * 92 Weak Mutation 99: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceConstant - 0 -> 1
   * 93 Weak Mutation 96: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceComparisonOperator <= -> <
   * 94 Weak Mutation 111: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:157 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 95 Weak Mutation 108: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - ReplaceComparisonOperator == -> !=
   * 96 Weak Mutation 106: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - InsertUnaryOp Negation
   * 97 Weak Mutation 104: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:151 - ReplaceConstant - 0 -> 1
   * 98 Weak Mutation 105: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:152 - ReplaceComparisonOperator = null -> != null
   * 99 Weak Mutation 117: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceComparisonOperator = null -> != null
   * 100 Weak Mutation 116: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 101 Weak Mutation 115: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:161 - ReplaceConstant - 1 -> 0
   * 102 Weak Mutation 114: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteStatement: removeAll(Ljava/util/Collection;)Z
   * 103 Weak Mutation 113: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteField: cleanedFilesLjava/util/Set;
   * 104 Weak Mutation 112: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:157 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 105 Weak Mutation 159: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteField: pendingLNsLjava/util/Map;
   * 106 Weak Mutation 168: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteStatement: clear()V
   * 107 Weak Mutation 163: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - ReplaceComparisonOperator <= -> -1
   * 108 Weak Mutation 160: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 109 Weak Mutation 167: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteField: checkpointedFilesLjava/util/Set;
   * 110 Weak Mutation 166: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 111 Weak Mutation 165: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: checkpointedFilesLjava/util/Set;
   * 112 Weak Mutation 164: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: fullyProcessedFilesLjava/util/Set;
   */
  @Test
  public void test8()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Long long0 = new Long((-1851L));
      fileSelector0.addCleanedFile(long0);
      Set<?>[] setArray0 = fileSelector0.getFilesAtCheckpointStart();
      assertNotNull(setArray0);
      
      fileSelector0.updateFilesAtCheckpointEnd(setArray0);
      boolean boolean0 = fileSelector0.isFileCleaningInProgress(long0);
      assertEquals(true, boolean0);
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * 1 Weak Mutation 68: com.sleepycat.je.cleaner.FileSelector.getLowUtilizationFiles()Ljava/util/Set;:113 - DeleteField: lowUtilizationFilesLjava/util/Set;
   * 2 com.sleepycat.je.cleaner.FileSelector.getLowUtilizationFiles()Ljava/util/Set;: root-Branch
   * 3 Weak Mutation 68: com.sleepycat.je.cleaner.FileSelector.getLowUtilizationFiles()Ljava/util/Set;:113 - DeleteField: lowUtilizationFilesLjava/util/Set;
   */
  @Test
  public void test9()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Set<?> set0 = fileSelector0.getLowUtilizationFiles();
      assertEquals(true, set0.isEmpty());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * 1 Weak Mutation 69: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:120 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 2 Weak Mutation 70: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:121 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 3 Weak Mutation 71: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:121 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 4 com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;: root-Branch
   * 5 Weak Mutation 69: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:120 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 6 Weak Mutation 70: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:121 - DeleteField: beingCleanedFilesLjava/util/Set;
   * 7 Weak Mutation 71: com.sleepycat.je.cleaner.FileSelector.getMustBeCleanedFiles()Ljava/util/Set;:121 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   */
  @Test
  public void test10()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Set<?> set0 = fileSelector0.getMustBeCleanedFiles();
      assertEquals(0, set0.size());
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * 1 Weak Mutation 72: com.sleepycat.je.cleaner.FileSelector.getBacklog()I:128 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 2 Weak Mutation 73: com.sleepycat.je.cleaner.FileSelector.getBacklog()I:128 - DeleteStatement: size()I
   * 3 com.sleepycat.je.cleaner.FileSelector.getBacklog()I: root-Branch
   * 4 Weak Mutation 72: com.sleepycat.je.cleaner.FileSelector.getBacklog()I:128 - DeleteField: toBeCleanedFilesLjava/util/SortedSet;
   * 5 Weak Mutation 73: com.sleepycat.je.cleaner.FileSelector.getBacklog()I:128 - DeleteStatement: size()I
   */
  @Test
  public void test11()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      int int0 = fileSelector0.getBacklog();
      assertEquals(0, int0);
  }

  //Test case number: 12
  /*
   * 52 covered goals:
   * 1 Weak Mutation 76: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceComparisonOperator <= -> ==
   * 2 Weak Mutation 80: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceConstant - 1 -> 0
   * 3 Weak Mutation 89: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceComparisonOperator <= -> <
   * 4 Weak Mutation 102: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 101: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceConstant - 1 -> 0
   * 6 Weak Mutation 127: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != null -> = null
   * 7 Weak Mutation 126: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != -> ==
   * 8 Weak Mutation 124: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - InsertUnaryOp Negation
   * 9 Weak Mutation 129: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: getNodeId()J
   * 10 Weak Mutation 128: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteField: pendingLNsLjava/util/Map;
   * 11 Weak Mutation 133: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceComparisonOperator = null -> != null
   * 12 Weak Mutation 132: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 13 Weak Mutation 135: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceConstant - 0 -> 1
   * 14 Weak Mutation 136: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:175 - ReplaceConstant - 1 -> 0
   * 15 Weak Mutation 137: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:176 - InsertUnaryOp Negation of added
   * 16 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I6 Branch 13 IFLE L135 - true
   * 17 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I25 Branch 14 IFLE L141 - true
   * 18 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I59 Branch 16 IFNONNULL L143 - false
   * 19 com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;: I63 Branch 17 IFNULL L143 - true
   * 20 com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z: I3 Branch 22 IFNE L173 - false
   * 21 com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z: I5 Branch 23 IFNONNULL L173 - true
   * 22 com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z: I27 Branch 24 IFNULL L174 - true
   * 23 Weak Mutation 74: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteField: pendingLNsLjava/util/Map;
   * 24 Weak Mutation 75: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 25 Weak Mutation 85: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceConstant - 0 -> 1
   * 26 Weak Mutation 84: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 3
   * 27 Weak Mutation 87: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteStatement: size()I
   * 28 Weak Mutation 86: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - DeleteField: cleanedFilesLjava/util/Set;
   * 29 Weak Mutation 81: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 0
   * 30 Weak Mutation 83: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> -1
   * 31 Weak Mutation 82: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:140 - ReplaceConstant - 2 -> 1
   * 32 Weak Mutation 93: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 33 Weak Mutation 92: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceConstant - 1 -> 0
   * 34 Weak Mutation 94: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - DeleteStatement: size()I
   * 35 Weak Mutation 100: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceComparisonOperator != null -> = null
   * 36 Weak Mutation 99: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 96: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:142 - ReplaceComparisonOperator <= -> <
   * 38 Weak Mutation 76: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceComparisonOperator <= -> ==
   * 39 Weak Mutation 80: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:135 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 89: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:141 - ReplaceComparisonOperator <= -> <
   * 41 Weak Mutation 102: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceComparisonOperator = null -> != null
   * 42 Weak Mutation 101: com.sleepycat.je.cleaner.FileSelector.getFilesAtCheckpointStart()[Ljava/util/Set;:143 - ReplaceConstant - 1 -> 0
   * 43 Weak Mutation 127: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != null -> = null
   * 44 Weak Mutation 126: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != -> ==
   * 45 Weak Mutation 124: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - InsertUnaryOp Negation
   * 46 Weak Mutation 137: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:176 - InsertUnaryOp Negation of added
   * 47 Weak Mutation 136: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:175 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 129: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: getNodeId()J
   * 49 Weak Mutation 128: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteField: pendingLNsLjava/util/Map;
   * 50 Weak Mutation 133: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceComparisonOperator = null -> != null
   * 51 Weak Mutation 132: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 52 Weak Mutation 135: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test12()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      DupCountLN dupCountLN0 = new DupCountLN(0);
      byte[] byteArray0 = new byte[12];
      fileSelector0.addPendingLN((LN) dupCountLN0, (DatabaseId) null, byteArray0, byteArray0);
      Set<?>[] setArray0 = fileSelector0.getFilesAtCheckpointStart();
      assertNull(setArray0);
  }

  //Test case number: 13
  /*
   * 18 covered goals:
   * 1 Weak Mutation 107: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - DeleteField: anyPendingDuringCheckpointZ
   * 2 Weak Mutation 110: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:154 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 3 Weak Mutation 109: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:154 - DeleteField: checkpointedFilesLjava/util/Set;
   * 4 Weak Mutation 131: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable dupKey -> key
   * 5 Weak Mutation 130: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable key -> dupKey
   * 6 Weak Mutation 161: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - ReplaceComparisonOperator <= -> ==
   * 7 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I18 Branch 20 IFEQ L153 - false
   * 8 com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V: I5 Branch 27 IFLE L259 - true
   * 9 Weak Mutation 108: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - ReplaceComparisonOperator == -> !=
   * 10 Weak Mutation 106: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - InsertUnaryOp Negation
   * 11 Weak Mutation 114: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteStatement: removeAll(Ljava/util/Collection;)Z
   * 12 Weak Mutation 113: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:159 - DeleteField: cleanedFilesLjava/util/Set;
   * 13 Weak Mutation 110: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:154 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 14 Weak Mutation 109: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:154 - DeleteField: checkpointedFilesLjava/util/Set;
   * 15 Weak Mutation 107: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:153 - DeleteField: anyPendingDuringCheckpointZ
   * 16 Weak Mutation 131: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable dupKey -> key
   * 17 Weak Mutation 130: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable key -> dupKey
   * 18 Weak Mutation 161: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - ReplaceComparisonOperator <= -> ==
   */
  @Test
  public void test13()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[9];
      fileSelector0.addPendingLN(lN0, databaseId0, byteArray0, byteArray1);
      Set<FileSelector>[] setArray0 = (Set<FileSelector>[]) Array.newInstance(Set.class, 4);
      Set<?> set0 = LogEntryType.getAllTypes();
      setArray0[0] = set0;
      fileSelector0.updateFilesAtCheckpointEnd(setArray0);
      assertEquals(0, fileSelector0.getBacklog());
  }

  //Test case number: 14
  /*
   * 26 covered goals:
   * 1 Weak Mutation 153: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - ReplaceComparisonOperator != -> <
   * 2 Weak Mutation 156: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:242 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 3 com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;: I5 Branch 26 IFNE L238 - true
   * 4 Weak Mutation 104: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:151 - ReplaceConstant - 0 -> 1
   * 5 Weak Mutation 105: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:152 - ReplaceComparisonOperator = null -> != null
   * 6 Weak Mutation 119: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 7 Weak Mutation 118: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 8 Weak Mutation 117: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceComparisonOperator = null -> != null
   * 9 Weak Mutation 116: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:162 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 10 Weak Mutation 115: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:161 - ReplaceConstant - 1 -> 0
   * 11 Weak Mutation 123: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - DeleteStatement: removeAll(Ljava/util/Collection;)Z
   * 12 Weak Mutation 122: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 13 Weak Mutation 121: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 14 Weak Mutation 120: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 15 Weak Mutation 119: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 16 Weak Mutation 118: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 17 Weak Mutation 123: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - DeleteStatement: removeAll(Ljava/util/Collection;)Z
   * 18 Weak Mutation 122: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - ReplaceVariable previouslyProcessedFiles -> previouslyCleanedFiles
   * 19 Weak Mutation 121: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:164 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 20 Weak Mutation 120: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:163 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 21 Weak Mutation 152: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - DeleteStatement: size()I
   * 22 Weak Mutation 153: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - ReplaceComparisonOperator != -> <
   * 23 Weak Mutation 156: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:242 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 24 Weak Mutation 151: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 25 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I13 Branch 19 IFNULL L152 - true
   * 26 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I52 Branch 21 IFNULL L162 - false
   */
  @Test
  public void test14()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Set<FileSelector>[] setArray0 = (Set<FileSelector>[]) Array.newInstance(Set.class, 6);
      Set<?> set0 = LogEntryType.getAllTypes();
      setArray0[1] = set0;
      fileSelector0.updateFilesAtCheckpointEnd(setArray0);
      Set<?> set1 = fileSelector0.copySafeToDeleteFiles();
      assertNotSame(set1, set0);
  }

  //Test case number: 15
  /*
   * 5 covered goals:
   * 1 Weak Mutation 134: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceConstant - 1 -> 0
   * 2 com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z: I27 Branch 24 IFNULL L174 - false
   * 3 Weak Mutation 131: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable dupKey -> key
   * 4 Weak Mutation 130: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceVariable key -> dupKey
   * 5 Weak Mutation 134: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceConstant - 1 -> 0
   */
  @Test
  public void test15()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      LN lN0 = new LN();
      DatabaseId databaseId0 = new DatabaseId();
      byte[] byteArray0 = new byte[2];
      byte[] byteArray1 = new byte[9];
      fileSelector0.addPendingLN(lN0, databaseId0, byteArray0, byteArray1);
      boolean boolean0 = fileSelector0.addPendingLN(lN0, databaseId0, byteArray0, byteArray1);
      assertEquals(3324L, lN0.getLastId());
      assertEquals(true, boolean0);
  }

  //Test case number: 16
  /*
   * 7 covered goals:
   * 1 Weak Mutation 139: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteStatement: size()I
   * 2 Weak Mutation 138: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteField: pendingLNsLjava/util/Map;
   * 3 Weak Mutation 141: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - ReplaceComparisonOperator <= -> <
   * 4 com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;: I5 Branch 25 IFLE L183 - true
   * 5 Weak Mutation 139: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteStatement: size()I
   * 6 Weak Mutation 138: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteField: pendingLNsLjava/util/Map;
   * 7 Weak Mutation 141: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - ReplaceComparisonOperator <= -> <
   */
  @Test
  public void test16()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      LNInfo[] lNInfoArray0 = fileSelector0.getPendingLNs();
      assertNull(lNInfoArray0);
  }

  //Test case number: 17
  /*
   * 22 covered goals:
   * 1 Weak Mutation 142: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - ReplaceComparisonOperator <= -> -1
   * 2 Weak Mutation 143: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:184 - DeleteField: pendingLNsLjava/util/Map;
   * 3 Weak Mutation 144: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:184 - DeleteStatement: size()I
   * 4 Weak Mutation 145: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteField: pendingLNsLjava/util/Map;
   * 5 Weak Mutation 146: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteStatement: values()Ljava/util/Collection;
   * 6 Weak Mutation 147: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteStatement: toArray([Ljava/lang/Object;)[Ljava/lang/Object;
   * 7 com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;: I5 Branch 25 IFLE L183 - false
   * 8 Weak Mutation 137: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:176 - InsertUnaryOp Negation of added
   * 9 Weak Mutation 136: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:175 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 139: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteStatement: size()I
   * 11 Weak Mutation 138: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - DeleteField: pendingLNsLjava/util/Map;
   * 12 Weak Mutation 129: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: getNodeId()J
   * 13 Weak Mutation 128: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteField: pendingLNsLjava/util/Map;
   * 14 Weak Mutation 133: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceComparisonOperator = null -> != null
   * 15 Weak Mutation 132: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - DeleteStatement: put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   * 16 Weak Mutation 135: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:174 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 143: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:184 - DeleteField: pendingLNsLjava/util/Map;
   * 18 Weak Mutation 142: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:183 - ReplaceComparisonOperator <= -> -1
   * 19 Weak Mutation 144: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:184 - DeleteStatement: size()I
   * 20 Weak Mutation 145: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteField: pendingLNsLjava/util/Map;
   * 21 Weak Mutation 146: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteStatement: values()Ljava/util/Collection;
   * 22 Weak Mutation 147: com.sleepycat.je.cleaner.FileSelector.getPendingLNs()[Lcom/sleepycat/je/cleaner/LNInfo;:185 - DeleteStatement: toArray([Ljava/lang/Object;)[Ljava/lang/Object;
   */
  @Test
  public void test17()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      MapLN mapLN0 = new MapLN();
      byte[] byteArray0 = new byte[7];
      fileSelector0.addPendingLN((LN) mapLN0, (DatabaseId) null, byteArray0, byteArray0);
      LNInfo[] lNInfoArray0 = fileSelector0.getPendingLNs();
      assertNotNull(lNInfoArray0);
  }

  //Test case number: 18
  /*
   * 15 covered goals:
   * 1 Weak Mutation 148: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - DeleteField: pendingLNsLjava/util/Map;
   * 2 Weak Mutation 149: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - InsertUnaryOp Negation of nodeId
   * 3 Weak Mutation 150: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   * 4 com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V: root-Branch
   * 5 Weak Mutation 159: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteField: pendingLNsLjava/util/Map;
   * 6 Weak Mutation 168: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteStatement: clear()V
   * 7 Weak Mutation 163: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - ReplaceComparisonOperator <= -> -1
   * 8 Weak Mutation 160: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:259 - DeleteStatement: mapIsEmpty(Ljava/util/Map;)I
   * 9 Weak Mutation 167: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:265 - DeleteField: checkpointedFilesLjava/util/Set;
   * 10 Weak Mutation 166: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteStatement: addAll(Ljava/util/Collection;)Z
   * 11 Weak Mutation 165: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: checkpointedFilesLjava/util/Set;
   * 12 Weak Mutation 164: com.sleepycat.je.cleaner.FileSelector.updateProcessedFiles()V:264 - DeleteField: fullyProcessedFilesLjava/util/Set;
   * 13 Weak Mutation 148: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - DeleteField: pendingLNsLjava/util/Map;
   * 14 Weak Mutation 149: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - InsertUnaryOp Negation of nodeId
   * 15 Weak Mutation 150: com.sleepycat.je.cleaner.FileSelector.removePendingLN(J)V:196 - DeleteStatement: remove(Ljava/lang/Object;)Ljava/lang/Object;
   */
  @Test
  public void test18()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      fileSelector0.removePendingLN((-1293L));
      assertEquals(0, fileSelector0.getBacklog());
  }

  //Test case number: 19
  /*
   * 5 covered goals:
   * 1 Weak Mutation 152: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - DeleteStatement: size()I
   * 2 Weak Mutation 155: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - ReplaceComparisonOperator != -> -1
   * 3 Weak Mutation 151: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 4 com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;: I5 Branch 26 IFNE L238 - false
   * 5 Weak Mutation 155: com.sleepycat.je.cleaner.FileSelector.copySafeToDeleteFiles()Ljava/util/Set;:238 - ReplaceComparisonOperator != -> -1
   */
  @Test
  public void test19()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      Set<?> set0 = fileSelector0.copySafeToDeleteFiles();
      assertNull(set0);
  }

  //Test case number: 20
  /*
   * 5 covered goals:
   * 1 Weak Mutation 157: com.sleepycat.je.cleaner.FileSelector.removeDeletedFile(Ljava/lang/Long;)V:250 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 2 Weak Mutation 158: com.sleepycat.je.cleaner.FileSelector.removeDeletedFile(Ljava/lang/Long;)V:250 - DeleteStatement: remove(Ljava/lang/Object;)Z
   * 3 com.sleepycat.je.cleaner.FileSelector.removeDeletedFile(Ljava/lang/Long;)V: root-Branch
   * 4 Weak Mutation 157: com.sleepycat.je.cleaner.FileSelector.removeDeletedFile(Ljava/lang/Long;)V:250 - DeleteField: safeToDeleteFilesLjava/util/Set;
   * 5 Weak Mutation 158: com.sleepycat.je.cleaner.FileSelector.removeDeletedFile(Ljava/lang/Long;)V:250 - DeleteStatement: remove(Ljava/lang/Object;)Z
   */
  @Test
  public void test20()  throws Throwable  {
      Long long0 = new Long((-1293L));
      FileSelector fileSelector0 = new FileSelector();
      fileSelector0.removeDeletedFile(long0);
      assertEquals(-1293, long0.shortValue());
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * 1 com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V: I3 Branch 18 IFNULL L150 - true
   * 2 Weak Mutation 103: com.sleepycat.je.cleaner.FileSelector.updateFilesAtCheckpointEnd([Ljava/util/Set;)V:150 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test21()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      fileSelector0.updateFilesAtCheckpointEnd((Set[]) null);
      assertEquals(0, fileSelector0.getBacklog());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * 1 com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z: I5 Branch 23 IFNONNULL L173 - false
   * 2 Weak Mutation 0: com.sleepycat.je.cleaner.FileSelector.<init>()V:39 - DeleteField: EMPTY_SETLjava/util/Set;
   * 3 Weak Mutation 127: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != null -> = null
   * 4 Weak Mutation 126: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - ReplaceComparisonOperator != -> ==
   * 5 Weak Mutation 124: com.sleepycat.je.cleaner.FileSelector.addPendingLN(Lcom/sleepycat/je/tree/LN;Lcom/sleepycat/je/dbi/DatabaseId;[B[B)Z:173 - InsertUnaryOp Negation
   */
  @Test
  public void test22()  throws Throwable  {
      FileSelector fileSelector0 = new FileSelector();
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try {
        fileSelector0.addPendingLN((LN) null, (DatabaseId) null, byteArray0, byteArray0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }
}
