/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.cleaner;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.cleaner.PackedOffsets;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestPackedOffsets {


  //Test case number: 0
  /*
   * 193 covered goals:
   * 1 Weak Mutation 122: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - DeleteField: sizeI
   * 2 Weak Mutation 127: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp IINC -1 index
   * 3 Weak Mutation 126: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp IINC 1 index
   * 4 Weak Mutation 125: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp Negation of index
   * 5 Weak Mutation 128: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - DeleteStatement: next()J
   * 6 Weak Mutation 140: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - DeleteField: sizeI
   * 7 Weak Mutation 3: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp Negation
   * 8 Weak Mutation 4: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp +1
   * 9 Weak Mutation 5: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp -1
   * 10 Weak Mutation 6: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: indexI
   * 11 Weak Mutation 7: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 12 Weak Mutation 8: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 13 Weak Mutation 10: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> >
   * 14 Weak Mutation 11: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> -1
   * 15 Weak Mutation 12: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 14: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:90 - InsertUnaryOp Negation
   * 17 Weak Mutation 16: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:91 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 17: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 19 Weak Mutation 19: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp Negation
   * 20 Weak Mutation 18: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 21 Weak Mutation 21: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp -1
   * 22 Weak Mutation 20: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp +1
   * 23 Weak Mutation 23: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 22: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: indexI
   * 25 Weak Mutation 25: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 24: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> -
   * 27 Weak Mutation 27: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 26: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> /
   * 29 Weak Mutation 29: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - InsertUnaryOp Negation of s
   * 30 Weak Mutation 31: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> -1
   * 31 Weak Mutation 30: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> 1
   * 32 Weak Mutation 34: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceComparisonOperator >= -> >
   * 33 Weak Mutation 32: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - DeleteStatement: longSub(JJ)I
   * 34 Weak Mutation 59: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of s
   * 35 Weak Mutation 57: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of val
   * 36 Weak Mutation 62: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC -1 shift
   * 37 Weak Mutation 61: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC 1 shift
   * 38 Weak Mutation 60: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of shift
   * 39 Weak Mutation 66: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> %
   * 40 Weak Mutation 67: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> /
   * 41 Weak Mutation 69: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:101 - InsertUnaryOp Negation of val
   * 42 Weak Mutation 70: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:102 - InsertUnaryOp Negation of val
   * 43 com.sleepycat.je.cleaner.PackedOffsets.toArray()[J: I30 Branch 6 IFNE L53 - true
   * 44 com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z: I5 Branch 1 IFNULL L87 - false
   * 45 com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z: I12 Branch 2 IF_ICMPGE L87 - true
   * 46 com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z: I12 Branch 2 IF_ICMPGE L87 - false
   * 47 com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J: I29 Branch 3 IFGE L93 - true
   * 48 Weak Mutation 0: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 49 Weak Mutation 1: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 50 Weak Mutation 2: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator = null -> != null
   * 51 Weak Mutation 3: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp Negation
   * 52 Weak Mutation 4: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp +1
   * 53 Weak Mutation 5: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp -1
   * 54 Weak Mutation 6: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: indexI
   * 55 Weak Mutation 7: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 56 Weak Mutation 8: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 57 Weak Mutation 10: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> >
   * 58 Weak Mutation 11: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> -1
   * 59 Weak Mutation 12: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 1 -> 0
   * 60 Weak Mutation 13: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 0 -> 1
   * 61 Weak Mutation 14: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:90 - InsertUnaryOp Negation
   * 62 Weak Mutation 17: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 63 Weak Mutation 16: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:91 - ReplaceConstant - 0 -> 1
   * 64 Weak Mutation 19: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp Negation
   * 65 Weak Mutation 18: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 66 Weak Mutation 21: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp -1
   * 67 Weak Mutation 20: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp +1
   * 68 Weak Mutation 23: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceConstant - 1 -> 0
   * 69 Weak Mutation 22: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: indexI
   * 70 Weak Mutation 25: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> %
   * 71 Weak Mutation 24: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> -
   * 72 Weak Mutation 27: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> *
   * 73 Weak Mutation 26: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> /
   * 74 Weak Mutation 29: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - InsertUnaryOp Negation of s
   * 75 Weak Mutation 31: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> -1
   * 76 Weak Mutation 30: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> 1
   * 77 Weak Mutation 34: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceComparisonOperator >= -> >
   * 78 Weak Mutation 32: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - DeleteStatement: longSub(JJ)I
   * 79 Weak Mutation 59: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of s
   * 80 Weak Mutation 57: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of val
   * 81 Weak Mutation 62: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC -1 shift
   * 82 Weak Mutation 61: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC 1 shift
   * 83 Weak Mutation 60: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of shift
   * 84 Weak Mutation 69: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:101 - InsertUnaryOp Negation of val
   * 85 Weak Mutation 70: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:102 - InsertUnaryOp Negation of val
   * 86 Weak Mutation 71: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 0
   * 87 Weak Mutation 66: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> %
   * 88 Weak Mutation 67: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> /
   * 89 Weak Mutation 76: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> -
   * 90 Weak Mutation 77: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> +
   * 91 Weak Mutation 78: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> %
   * 92 Weak Mutation 79: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> /
   * 93 Weak Mutation 72: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 1
   * 94 Weak Mutation 73: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> -1
   * 95 Weak Mutation 74: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 2
   * 96 Weak Mutation 75: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 4
   * 97 Weak Mutation 84: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceConstant - 0 -> 1
   * 98 Weak Mutation 87: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp IINC 1 i
   * 99 Weak Mutation 86: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp Negation of i
   * 100 Weak Mutation 81: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:35 - ReplaceConstant - 0 -> 1
   * 101 Weak Mutation 80: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:34 - DeleteStatement: sort([J)V
   * 102 Weak Mutation 83: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:36 - ReplaceConstant - 0 -> -1
   * 103 Weak Mutation 82: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:36 - ReplaceConstant - 0 -> 1
   * 104 Weak Mutation 92: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp IINC -1 dataIndex
   * 105 Weak Mutation 94: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of val
   * 106 Weak Mutation 88: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp IINC -1 i
   * 107 Weak Mutation 91: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp IINC 1 dataIndex
   * 108 Weak Mutation 90: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of dataIndex
   * 109 Weak Mutation 102: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:40 - InsertUnaryOp Negation of val
   * 110 Weak Mutation 103: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceVariable i -> dataIndex
   * 111 Weak Mutation 99: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> /
   * 112 Weak Mutation 96: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of priorVal
   * 113 Weak Mutation 97: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> %
   * 114 Weak Mutation 110: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceComparisonOperator < -> <=
   * 115 Weak Mutation 111: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp Negation of dataIndex
   * 116 Weak Mutation 109: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceComparisonOperator < -> -2
   * 117 Weak Mutation 106: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp IINC 1 i
   * 118 Weak Mutation 107: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp IINC -1 i
   * 119 Weak Mutation 105: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp Negation of i
   * 120 Weak Mutation 119: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp Negation
   * 121 Weak Mutation 118: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 122 Weak Mutation 117: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - InsertUnaryOp Negation of dataIndex
   * 123 Weak Mutation 116: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - ReplaceConstant - 0 -> 1
   * 124 Weak Mutation 115: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - DeleteField: data[S
   * 125 Weak Mutation 114: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - ReplaceConstant - 0 -> 1
   * 126 Weak Mutation 113: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp IINC -1 dataIndex
   * 127 Weak Mutation 112: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp IINC 1 dataIndex
   * 128 Weak Mutation 127: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp IINC -1 index
   * 129 Weak Mutation 126: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp IINC 1 index
   * 130 Weak Mutation 125: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - InsertUnaryOp Negation of index
   * 131 Weak Mutation 124: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:52 - DeleteStatement: iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;
   * 132 Weak Mutation 123: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:51 - ReplaceConstant - 0 -> 1
   * 133 Weak Mutation 122: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - DeleteField: sizeI
   * 134 Weak Mutation 121: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp -1
   * 135 Weak Mutation 120: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp +1
   * 136 Weak Mutation 137: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 137 Weak Mutation 136: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC -1 index
   * 138 Weak Mutation 139: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp -1
   * 139 Weak Mutation 138: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp +1
   * 140 Weak Mutation 140: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - DeleteField: sizeI
   * 141 Weak Mutation 142: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator == -> -2
   * 142 Weak Mutation 129: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - DeleteStatement: hasNext()Z
   * 143 Weak Mutation 128: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:54 - DeleteStatement: next()J
   * 144 Weak Mutation 131: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 145 Weak Mutation 130: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - ReplaceComparisonOperator != -> ==
   * 146 Weak Mutation 133: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator != -> ==
   * 147 Weak Mutation 135: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC 1 index
   * 148 Weak Mutation 134: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation of index
   * 149 Weak Mutation 152: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> >
   * 150 Weak Mutation 154: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - InsertUnaryOp Negation of val
   * 151 Weak Mutation 155: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 0
   * 152 Weak Mutation 156: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 1
   * 153 Weak Mutation 157: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> -1
   * 154 Weak Mutation 158: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 32766
   * 155 Weak Mutation 159: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 32768
   * 156 Weak Mutation 144: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - InsertUnaryOp Negation
   * 157 Weak Mutation 146: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator != -> ==
   * 158 Weak Mutation 147: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - InsertUnaryOp Negation of val
   * 159 Weak Mutation 148: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceConstant - 0 -> 1
   * 160 Weak Mutation 149: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceConstant - 0 -> -1
   * 161 Weak Mutation 150: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - DeleteStatement: longSub(JJ)I
   * 162 Weak Mutation 171: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceConstant - 0 -> 1
   * 163 Weak Mutation 170: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - InsertUnaryOp Negation of val
   * 164 Weak Mutation 175: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceComparisonOperator <= -> <
   * 165 Weak Mutation 173: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - DeleteStatement: longSub(JJ)I
   * 166 Weak Mutation 172: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceConstant - 0 -> -1
   * 167 Weak Mutation 163: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 0
   * 168 Weak Mutation 162: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - InsertUnaryOp Negation of val
   * 169 Weak Mutation 161: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceBitwiseOperator & -> ^
   * 170 Weak Mutation 160: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceBitwiseOperator & -> |
   * 171 Weak Mutation 167: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 16
   * 172 Weak Mutation 166: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 14
   * 173 Weak Mutation 165: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> -1
   * 174 Weak Mutation 164: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 1
   * 175 Weak Mutation 190: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp Negation of index
   * 176 Weak Mutation 191: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC 1 index
   * 177 Weak Mutation 197: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp IINC 1 index
   * 178 Weak Mutation 196: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp Negation of index
   * 179 Weak Mutation 198: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp IINC -1 index
   * 180 Weak Mutation 193: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp Negation of s
   * 181 Weak Mutation 192: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC -1 index
   * 182 Weak Mutation 195: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC -1 s
   * 183 Weak Mutation 194: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC 1 s
   * 184 com.sleepycat.je.cleaner.PackedOffsets.<init>()V: root-Branch
   * 185 com.sleepycat.je.cleaner.PackedOffsets.iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;: root-Branch
   * 186 com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I: I3 Branch 9 IFNE L64 - false
   * 187 com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I: I7 Branch 10 IFGE L64 - true
   * 188 com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I: I31 Branch 11 IFLE L68 - true
   * 189 com.sleepycat.je.cleaner.PackedOffsets.toArray()[J: I30 Branch 6 IFNE L53 - false
   * 190 com.sleepycat.je.cleaner.PackedOffsets.toArray()[J: I34 Branch 7 IFNE L56 - false
   * 191 com.sleepycat.je.cleaner.PackedOffsets.toArray()[J: I38 Branch 8 IF_ICMPEQ L56 - true
   * 192 com.sleepycat.je.cleaner.PackedOffsets.pack([J)V: I53 Branch 5 IF_ICMPLT L37 - true
   * 193 com.sleepycat.je.cleaner.PackedOffsets.pack([J)V: I53 Branch 5 IF_ICMPLT L37 - false
   */
  @Test
  public void test0()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[10];
      packedOffsets0.pack(longArray0);
      packedOffsets0.toArray();
      assertEquals(28, packedOffsets0.getLogSize());
      assertEquals("<offsets size=\"10\">0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 </offsets>", packedOffsets0.toString());
  }

  //Test case number: 1
  /*
   * 7 covered goals:
   * 1 Weak Mutation 93: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable val -> priorVal
   * 2 Weak Mutation 95: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable priorVal -> val
   * 3 Weak Mutation 153: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> -1
   * 4 com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I: I7 Branch 10 IFGE L64 - false
   * 5 Weak Mutation 93: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable val -> priorVal
   * 6 Weak Mutation 95: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable priorVal -> val
   * 7 Weak Mutation 153: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> -1
   */
  @Test
  public void test1()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[7];
      longArray0[4] = (-2035L);
      // Undeclared exception!
      try {
        packedOffsets0.pack(longArray0);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
      }
  }

  //Test case number: 2
  /*
   * 100 covered goals:
   * 1 Weak Mutation 15: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:90 - DeleteField: priorValJ
   * 2 Weak Mutation 28: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceVariable s -> val
   * 3 Weak Mutation 33: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceComparisonOperator >= -> ==
   * 4 Weak Mutation 58: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceVariable s -> val
   * 5 Weak Mutation 56: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceVariable val -> s
   * 6 Weak Mutation 68: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> *
   * 7 Weak Mutation 65: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> -
   * 8 Weak Mutation 279: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp +1
   * 9 Weak Mutation 278: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp Negation
   * 10 Weak Mutation 281: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - DeleteField: sizeI
   * 11 Weak Mutation 280: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp -1
   * 12 Weak Mutation 284: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - ReplaceComparisonOperator <= -> -1
   * 13 Weak Mutation 285: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:144 - DeleteStatement: iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;
   * 14 Weak Mutation 287: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:145 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 15 Weak Mutation 286: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:145 - ReplaceConstant - <offsets size=" -> 
   * 16 Weak Mutation 288: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp Negation
   * 17 Weak Mutation 289: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp +1
   * 18 Weak Mutation 290: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp -1
   * 19 Weak Mutation 291: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - DeleteField: sizeI
   * 20 Weak Mutation 292: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 21 Weak Mutation 293: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:147 - ReplaceConstant - "> -> 
   * 22 Weak Mutation 294: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:147 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 23 Weak Mutation 307: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:148 - ReplaceComparisonOperator != -> ==
   * 24 Weak Mutation 306: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:148 - DeleteStatement: hasNext()Z
   * 25 Weak Mutation 295: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:149 - ReplaceConstant - 0x -> 
   * 26 Weak Mutation 296: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:149 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 27 Weak Mutation 297: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: next()J
   * 28 Weak Mutation 298: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: toHexString(J)Ljava/lang/String;
   * 29 Weak Mutation 299: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 30 Weak Mutation 305: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 31 Weak Mutation 304: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 33
   * 32 Weak Mutation 300: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 0
   * 33 Weak Mutation 301: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 1
   * 34 Weak Mutation 302: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> -1
   * 35 Weak Mutation 303: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 31
   * 36 Weak Mutation 309: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:153 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 37 Weak Mutation 308: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:153 - ReplaceConstant - </offsets> -> 
   * 38 Weak Mutation 317: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 39 Weak Mutation 316: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - ReplaceConstant - 1 -> 0
   * 40 Weak Mutation 318: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 41 com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;: root-Branch
   * 42 com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V: I4 Branch 17 IFLE L143 - false
   * 43 com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V: I56 Branch 18 IFNE L148 - true
   * 44 com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V: I56 Branch 18 IFNE L148 - false
   * 45 Weak Mutation 10: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> >
   * 46 Weak Mutation 11: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> -1
   * 47 Weak Mutation 12: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 1 -> 0
   * 48 Weak Mutation 22: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: indexI
   * 49 Weak Mutation 93: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable val -> priorVal
   * 50 Weak Mutation 95: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceVariable priorVal -> val
   * 51 Weak Mutation 100: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> *
   * 52 Weak Mutation 101: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:40 - ReplaceVariable val -> priorVal
   * 53 Weak Mutation 98: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> +
   * 54 Weak Mutation 151: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> ==
   * 55 Weak Mutation 169: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceBitwiseOperator >>> -> <<
   * 56 Weak Mutation 15: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:90 - DeleteField: priorValJ
   * 57 Weak Mutation 28: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceVariable s -> val
   * 58 Weak Mutation 33: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceComparisonOperator >= -> ==
   * 59 Weak Mutation 58: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceVariable s -> val
   * 60 Weak Mutation 56: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceVariable val -> s
   * 61 Weak Mutation 68: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> *
   * 62 Weak Mutation 65: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> -
   * 63 Weak Mutation 100: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> *
   * 64 Weak Mutation 101: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:40 - ReplaceVariable val -> priorVal
   * 65 Weak Mutation 98: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> +
   * 66 Weak Mutation 151: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> ==
   * 67 Weak Mutation 169: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceBitwiseOperator >>> -> <<
   * 68 Weak Mutation 279: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp +1
   * 69 Weak Mutation 278: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp Negation
   * 70 Weak Mutation 281: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - DeleteField: sizeI
   * 71 Weak Mutation 280: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp -1
   * 72 Weak Mutation 287: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:145 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 73 Weak Mutation 286: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:145 - ReplaceConstant - <offsets size=" -> 
   * 74 Weak Mutation 285: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:144 - DeleteStatement: iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;
   * 75 Weak Mutation 284: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - ReplaceComparisonOperator <= -> -1
   * 76 Weak Mutation 305: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - DeleteStatement: append(C)Ljava/lang/StringBuffer;
   * 77 Weak Mutation 304: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 33
   * 78 Weak Mutation 307: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:148 - ReplaceComparisonOperator != -> ==
   * 79 Weak Mutation 306: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:148 - DeleteStatement: hasNext()Z
   * 80 Weak Mutation 309: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:153 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 81 Weak Mutation 308: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:153 - ReplaceConstant - </offsets> -> 
   * 82 Weak Mutation 317: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 83 Weak Mutation 316: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - ReplaceConstant - 1 -> 0
   * 84 Weak Mutation 318: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 85 Weak Mutation 288: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp Negation
   * 86 Weak Mutation 289: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp +1
   * 87 Weak Mutation 290: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - InsertUnaryOp -1
   * 88 Weak Mutation 291: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - DeleteField: sizeI
   * 89 Weak Mutation 292: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:146 - DeleteStatement: append(I)Ljava/lang/StringBuffer;
   * 90 Weak Mutation 293: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:147 - ReplaceConstant - "> -> 
   * 91 Weak Mutation 294: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:147 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 92 Weak Mutation 295: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:149 - ReplaceConstant - 0x -> 
   * 93 Weak Mutation 296: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:149 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 94 Weak Mutation 297: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: next()J
   * 95 Weak Mutation 298: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: toHexString(J)Ljava/lang/String;
   * 96 Weak Mutation 299: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:150 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 97 Weak Mutation 300: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 0
   * 98 Weak Mutation 301: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 1
   * 99 Weak Mutation 302: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> -1
   * 100 Weak Mutation 303: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:151 - ReplaceConstant - 32 -> 31
   */
  @Test
  public void test2()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[12];
      longArray0[4] = (long) 8;
      longArray0[6] = (long) 8;
      packedOffsets0.pack(longArray0);
      String string0 = packedOffsets0.toString();
      assertEquals(32, packedOffsets0.getLogSize());
      assertEquals("<offsets size=\"12\">0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x8 0x8 </offsets>", string0);
  }

  //Test case number: 3
  /*
   * 55 covered goals:
   * 1 Weak Mutation 9: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> ==
   * 2 Weak Mutation 0: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 3 Weak Mutation 1: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 4 Weak Mutation 2: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 3: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp Negation
   * 6 Weak Mutation 4: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp +1
   * 7 Weak Mutation 5: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - InsertUnaryOp -1
   * 8 Weak Mutation 6: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: indexI
   * 9 Weak Mutation 7: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 10 Weak Mutation 8: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 11 Weak Mutation 13: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 14: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:90 - InsertUnaryOp Negation
   * 13 Weak Mutation 17: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 14 Weak Mutation 16: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:91 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 19: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp Negation
   * 16 Weak Mutation 18: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - DeleteStatement: access$0(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 17 Weak Mutation 21: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp -1
   * 18 Weak Mutation 20: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - InsertUnaryOp +1
   * 19 Weak Mutation 23: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceConstant - 1 -> 0
   * 20 Weak Mutation 25: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> %
   * 21 Weak Mutation 24: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> -
   * 22 Weak Mutation 27: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> *
   * 23 Weak Mutation 26: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:92 - ReplaceArithmeticOperator + -> /
   * 24 Weak Mutation 29: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - InsertUnaryOp Negation of s
   * 25 Weak Mutation 31: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> -1
   * 26 Weak Mutation 30: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 34: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - ReplaceComparisonOperator >= -> >
   * 28 Weak Mutation 32: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:93 - DeleteStatement: longSub(JJ)I
   * 29 Weak Mutation 59: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of s
   * 30 Weak Mutation 57: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of val
   * 31 Weak Mutation 62: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC -1 shift
   * 32 Weak Mutation 61: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp IINC 1 shift
   * 33 Weak Mutation 60: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - InsertUnaryOp Negation of shift
   * 34 Weak Mutation 69: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:101 - InsertUnaryOp Negation of val
   * 35 Weak Mutation 70: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:102 - InsertUnaryOp Negation of val
   * 36 Weak Mutation 66: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> %
   * 37 Weak Mutation 67: com.sleepycat.je.cleaner.PackedOffsets$Iterator.next()J:97 - ReplaceArithmeticOperator + -> /
   * 38 Weak Mutation 119: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp Negation
   * 39 Weak Mutation 124: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:52 - DeleteStatement: iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;
   * 40 Weak Mutation 123: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:51 - ReplaceConstant - 0 -> 1
   * 41 Weak Mutation 121: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp -1
   * 42 Weak Mutation 120: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp +1
   * 43 Weak Mutation 137: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 44 Weak Mutation 136: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC -1 index
   * 45 Weak Mutation 139: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp -1
   * 46 Weak Mutation 138: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp +1
   * 47 Weak Mutation 142: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator == -> -2
   * 48 Weak Mutation 129: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - DeleteStatement: hasNext()Z
   * 49 Weak Mutation 131: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 50 Weak Mutation 130: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - ReplaceComparisonOperator != -> ==
   * 51 Weak Mutation 133: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator != -> ==
   * 52 Weak Mutation 135: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC 1 index
   * 53 Weak Mutation 134: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation of index
   * 54 Weak Mutation 9: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator >= -> ==
   * 55 com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z: I5 Branch 1 IFNULL L87 - true
   */
  @Test
  public void test3()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[12];
      packedOffsets0.pack(longArray0);
      PackedOffsets.Iterator packedOffsets_Iterator0 = packedOffsets0.iterator();
      packedOffsets_Iterator0.next();
      assertEquals(32, packedOffsets0.getLogSize());
      
      PackedOffsets packedOffsets1 = new PackedOffsets();
      long[] longArray1 = packedOffsets1.toArray();
      packedOffsets0.pack(longArray1);
      boolean boolean0 = packedOffsets_Iterator0.hasNext();
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 27 covered goals:
   * 1 Weak Mutation 205: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> +
   * 2 Weak Mutation 204: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> -
   * 3 Weak Mutation 207: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> /
   * 4 Weak Mutation 206: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> %
   * 5 Weak Mutation 201: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> -1
   * 6 Weak Mutation 200: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 1
   * 7 Weak Mutation 203: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteStatement: getIntLogSize()I
   * 8 Weak Mutation 202: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 3
   * 9 Weak Mutation 199: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 0
   * 10 Weak Mutation 221: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> %
   * 11 Weak Mutation 222: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> /
   * 12 Weak Mutation 219: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 0 -> 1
   * 13 Weak Mutation 209: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceComparisonOperator = null -> != null
   * 14 com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I: I7 Branch 12 IFNULL L109 - true
   * 15 Weak Mutation 205: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> +
   * 16 Weak Mutation 204: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> -
   * 17 Weak Mutation 207: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> /
   * 18 Weak Mutation 206: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> %
   * 19 Weak Mutation 201: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> -1
   * 20 Weak Mutation 200: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 1
   * 21 Weak Mutation 203: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteStatement: getIntLogSize()I
   * 22 Weak Mutation 202: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 3
   * 23 Weak Mutation 199: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 0
   * 24 Weak Mutation 221: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> %
   * 25 Weak Mutation 222: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> /
   * 26 Weak Mutation 219: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 0 -> 1
   * 27 Weak Mutation 209: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceComparisonOperator = null -> != null
   */
  @Test
  public void test4()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      int int0 = packedOffsets0.getLogSize();
      assertEquals(8, int0);
  }

  //Test case number: 5
  /*
   * 37 covered goals:
   * 1 Weak Mutation 220: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> -
   * 2 Weak Mutation 223: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> *
   * 3 Weak Mutation 216: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> +
   * 4 Weak Mutation 217: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> %
   * 5 Weak Mutation 218: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> /
   * 6 Weak Mutation 212: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 1
   * 7 Weak Mutation 213: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> -1
   * 8 Weak Mutation 214: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 3
   * 9 Weak Mutation 215: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> -
   * 10 Weak Mutation 208: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteField: data[S
   * 11 Weak Mutation 210: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteField: data[S
   * 12 Weak Mutation 211: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 0
   * 13 com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I: I7 Branch 12 IFNULL L109 - false
   * 14 Weak Mutation 205: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> +
   * 15 Weak Mutation 204: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> -
   * 16 Weak Mutation 207: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> /
   * 17 Weak Mutation 206: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> %
   * 18 Weak Mutation 201: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> -1
   * 19 Weak Mutation 200: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 1
   * 20 Weak Mutation 203: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteStatement: getIntLogSize()I
   * 21 Weak Mutation 202: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 3
   * 22 Weak Mutation 199: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 0
   * 23 Weak Mutation 221: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> %
   * 24 Weak Mutation 222: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> /
   * 25 Weak Mutation 209: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceComparisonOperator = null -> != null
   * 26 Weak Mutation 220: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> -
   * 27 Weak Mutation 223: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 216: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> +
   * 29 Weak Mutation 217: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> %
   * 30 Weak Mutation 218: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> /
   * 31 Weak Mutation 212: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 1
   * 32 Weak Mutation 213: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> -1
   * 33 Weak Mutation 214: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 3
   * 34 Weak Mutation 215: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceArithmeticOperator * -> -
   * 35 Weak Mutation 208: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteField: data[S
   * 36 Weak Mutation 210: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - DeleteField: data[S
   * 37 Weak Mutation 211: com.sleepycat.je.cleaner.PackedOffsets.getLogSize()I:109 - ReplaceConstant - 2 -> 0
   */
  @Test
  public void test5()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[10];
      packedOffsets0.pack(longArray0);
      int int0 = packedOffsets0.getLogSize();
      assertEquals("<offsets size=\"10\">0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 0x0 </offsets>", packedOffsets0.toString());
      assertEquals(28, int0);
  }

  //Test case number: 6
  /*
   * 84 covered goals:
   * 1 Weak Mutation 227: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - DeleteField: sizeI
   * 2 Weak Mutation 71: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 0
   * 3 Weak Mutation 76: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> -
   * 4 Weak Mutation 77: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> +
   * 5 Weak Mutation 78: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> %
   * 6 Weak Mutation 79: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceArithmeticOperator * -> /
   * 7 Weak Mutation 72: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 1
   * 8 Weak Mutation 73: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> -1
   * 9 Weak Mutation 74: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 2
   * 10 Weak Mutation 75: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:33 - ReplaceConstant - 3 -> 4
   * 11 Weak Mutation 84: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceConstant - 0 -> 1
   * 12 Weak Mutation 87: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp IINC 1 i
   * 13 Weak Mutation 86: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp Negation of i
   * 14 Weak Mutation 81: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:35 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 80: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:34 - DeleteStatement: sort([J)V
   * 16 Weak Mutation 83: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:36 - ReplaceConstant - 0 -> -1
   * 17 Weak Mutation 82: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:36 - ReplaceConstant - 0 -> 1
   * 18 Weak Mutation 92: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp IINC -1 dataIndex
   * 19 Weak Mutation 94: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of val
   * 20 Weak Mutation 88: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:38 - InsertUnaryOp IINC -1 i
   * 21 Weak Mutation 91: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp IINC 1 dataIndex
   * 22 Weak Mutation 90: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of dataIndex
   * 23 Weak Mutation 102: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:40 - InsertUnaryOp Negation of val
   * 24 Weak Mutation 103: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceVariable i -> dataIndex
   * 25 Weak Mutation 99: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> /
   * 26 Weak Mutation 96: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - InsertUnaryOp Negation of priorVal
   * 27 Weak Mutation 97: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:39 - ReplaceArithmeticOperator - -> %
   * 28 Weak Mutation 110: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceComparisonOperator < -> <=
   * 29 Weak Mutation 111: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp Negation of dataIndex
   * 30 Weak Mutation 109: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - ReplaceComparisonOperator < -> -2
   * 31 Weak Mutation 106: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp IINC 1 i
   * 32 Weak Mutation 107: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp IINC -1 i
   * 33 Weak Mutation 105: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:37 - InsertUnaryOp Negation of i
   * 34 Weak Mutation 118: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - DeleteStatement: arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
   * 35 Weak Mutation 117: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - InsertUnaryOp Negation of dataIndex
   * 36 Weak Mutation 116: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - ReplaceConstant - 0 -> 1
   * 37 Weak Mutation 115: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - DeleteField: data[S
   * 38 Weak Mutation 114: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:43 - ReplaceConstant - 0 -> 1
   * 39 Weak Mutation 113: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp IINC -1 dataIndex
   * 40 Weak Mutation 112: com.sleepycat.je.cleaner.PackedOffsets.pack([J)V:42 - InsertUnaryOp IINC 1 dataIndex
   * 41 Weak Mutation 152: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator >= -> >
   * 42 Weak Mutation 154: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - InsertUnaryOp Negation of val
   * 43 Weak Mutation 155: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 0
   * 44 Weak Mutation 156: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 1
   * 45 Weak Mutation 157: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> -1
   * 46 Weak Mutation 158: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 32766
   * 47 Weak Mutation 159: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceConstant - 32767 -> 32768
   * 48 Weak Mutation 144: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - InsertUnaryOp Negation
   * 49 Weak Mutation 146: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceComparisonOperator != -> ==
   * 50 Weak Mutation 147: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - InsertUnaryOp Negation of val
   * 51 Weak Mutation 148: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceConstant - 0 -> 1
   * 52 Weak Mutation 149: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - ReplaceConstant - 0 -> -1
   * 53 Weak Mutation 150: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:64 - DeleteStatement: longSub(JJ)I
   * 54 Weak Mutation 171: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceConstant - 0 -> 1
   * 55 Weak Mutation 170: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - InsertUnaryOp Negation of val
   * 56 Weak Mutation 175: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceComparisonOperator <= -> <
   * 57 Weak Mutation 173: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - DeleteStatement: longSub(JJ)I
   * 58 Weak Mutation 172: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:68 - ReplaceConstant - 0 -> -1
   * 59 Weak Mutation 163: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 0
   * 60 Weak Mutation 162: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - InsertUnaryOp Negation of val
   * 61 Weak Mutation 161: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceBitwiseOperator & -> ^
   * 62 Weak Mutation 160: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:66 - ReplaceBitwiseOperator & -> |
   * 63 Weak Mutation 167: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 16
   * 64 Weak Mutation 166: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 14
   * 65 Weak Mutation 165: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> -1
   * 66 Weak Mutation 164: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:67 - ReplaceConstant - 15 -> 1
   * 67 Weak Mutation 190: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp Negation of index
   * 68 Weak Mutation 191: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC 1 index
   * 69 Weak Mutation 197: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp IINC 1 index
   * 70 Weak Mutation 196: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp Negation of index
   * 71 Weak Mutation 198: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:76 - InsertUnaryOp IINC -1 index
   * 72 Weak Mutation 193: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp Negation of s
   * 73 Weak Mutation 192: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC -1 index
   * 74 Weak Mutation 195: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC -1 s
   * 75 Weak Mutation 194: com.sleepycat.je.cleaner.PackedOffsets.append([SIJ)I:72 - InsertUnaryOp IINC 1 s
   * 76 Weak Mutation 228: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 77 Weak Mutation 226: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp -1
   * 78 Weak Mutation 225: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp +1
   * 79 Weak Mutation 224: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp Negation
   * 80 Weak Mutation 228: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - DeleteStatement: writeInt(Ljava/nio/ByteBuffer;I)V
   * 81 Weak Mutation 227: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - DeleteField: sizeI
   * 82 Weak Mutation 226: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp -1
   * 83 Weak Mutation 225: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp +1
   * 84 Weak Mutation 224: com.sleepycat.je.cleaner.PackedOffsets.writeToLog(Ljava/nio/ByteBuffer;)V:115 - InsertUnaryOp Negation
   */
  @Test
  public void test6()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = new long[18];
      packedOffsets0.pack(longArray0);
      // Undeclared exception!
      try {
        packedOffsets0.writeToLog((ByteBuffer) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * 1 Weak Mutation 248: com.sleepycat.je.cleaner.PackedOffsets.readFromLog(Ljava/nio/ByteBuffer;B)V:130 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   * 2 Weak Mutation 248: com.sleepycat.je.cleaner.PackedOffsets.readFromLog(Ljava/nio/ByteBuffer;B)V:130 - DeleteStatement: readInt(Ljava/nio/ByteBuffer;)I
   */
  @Test
  public void test7()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      // Undeclared exception!
      try {
        packedOffsets0.readFromLog((ByteBuffer) null, (byte) (-1));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  //Test case number: 8
  /*
   * 13 covered goals:
   * 1 Weak Mutation 283: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - ReplaceComparisonOperator <= -> <
   * 2 Weak Mutation 311: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:156 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 3 Weak Mutation 310: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:156 - ReplaceConstant - <offsets size="0"/> -> 
   * 4 com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V: I4 Branch 17 IFLE L143 - true
   * 5 Weak Mutation 279: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp +1
   * 6 Weak Mutation 278: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp Negation
   * 7 Weak Mutation 280: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - InsertUnaryOp -1
   * 8 Weak Mutation 317: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - DeleteStatement: dumpLog(Ljava/lang/StringBuffer;Z)V
   * 9 Weak Mutation 316: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:175 - ReplaceConstant - 1 -> 0
   * 10 Weak Mutation 318: com.sleepycat.je.cleaner.PackedOffsets.toString()Ljava/lang/String;:176 - DeleteStatement: toString()Ljava/lang/String;
   * 11 Weak Mutation 283: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:143 - ReplaceComparisonOperator <= -> <
   * 12 Weak Mutation 311: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:156 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuffer;
   * 13 Weak Mutation 310: com.sleepycat.je.cleaner.PackedOffsets.dumpLog(Ljava/lang/StringBuffer;Z)V:156 - ReplaceConstant - <offsets size="0"/> -> 
   */
  @Test
  public void test8()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      String string0 = packedOffsets0.toString();
      assertNotNull(string0);
      assertEquals("<offsets size=\"0\"/>", string0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * 1 Weak Mutation 313: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> 1
   * 2 Weak Mutation 312: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> 0
   * 3 Weak Mutation 314: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> -2
   * 4 com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J: root-Branch
   * 5 Weak Mutation 313: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> 1
   * 6 Weak Mutation 312: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> 0
   * 7 Weak Mutation 314: com.sleepycat.je.cleaner.PackedOffsets.getTransactionId()J:164 - ReplaceConstant - -1 -> -2
   */
  @Test
  public void test9()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long long0 = packedOffsets0.getTransactionId();
      assertEquals((-1L), long0);
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * 1 Weak Mutation 315: com.sleepycat.je.cleaner.PackedOffsets.logEntryIsTransactional()Z:171 - ReplaceConstant - 0 -> 1
   * 2 com.sleepycat.je.cleaner.PackedOffsets.logEntryIsTransactional()Z: root-Branch
   * 3 Weak Mutation 315: com.sleepycat.je.cleaner.PackedOffsets.logEntryIsTransactional()Z:171 - ReplaceConstant - 0 -> 1
   */
  @Test
  public void test10()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      boolean boolean0 = packedOffsets0.logEntryIsTransactional();
      assertEquals(false, boolean0);
  }
}
