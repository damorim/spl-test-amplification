/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.cleaner;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.cleaner.OffsetList;

@RunWith(EvoSuiteRunner.class)
public class TestOffsetList {


  //Test case number: 0
  /*
   * 127 covered goals:
   * 1 Weak Mutation 63: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation of value
   * 2 Weak Mutation 62: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceConstant - Dup Offset  -> 
   * 3 Weak Mutation 64: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: toHexString(J)Ljava/lang/String;
   * 4 Weak Mutation 65: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 5 Weak Mutation 66: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: toString()Ljava/lang/String;
   * 6 Weak Mutation 67: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
   * 7 Weak Mutation 180: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceComparisonOperator < -> -2
   * 8 Weak Mutation 170: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: longSub(JJ)I
   * 9 Weak Mutation 169: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of offset
   * 10 Weak Mutation 168: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: get(I)J
   * 11 Weak Mutation 173: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> -1
   * 12 Weak Mutation 167: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC -1 i
   * 13 Weak Mutation 166: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC 1 i
   * 14 Weak Mutation 165: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of i
   * 15 Weak Mutation 174: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:95 - ReplaceConstant - 1 -> 0
   * 16 Weak Mutation 38: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC 1 i
   * 17 Weak Mutation 39: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC -1 i
   * 18 Weak Mutation 36: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - DeleteField: values[I
   * 19 Weak Mutation 37: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 42: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> -2
   * 21 Weak Mutation 43: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> |
   * 22 Weak Mutation 40: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 0
   * 23 Weak Mutation 41: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 1
   * 24 Weak Mutation 44: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> ^
   * 25 Weak Mutation 50: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - DeleteField: indexI
   * 26 com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J: root-Branch
   * 27 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I11 Branch 5 IFEQ L34 - false
   * 28 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I32 Branch 16 IF_ICMPLT L93 - true
   * 29 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I20 Branch 15 IFNE L94 - false
   * 30 Weak Mutation 0: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 0
   * 31 Weak Mutation 1: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 1
   * 32 Weak Mutation 2: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> -1
   * 33 Weak Mutation 3: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 99
   * 34 Weak Mutation 4: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 101
   * 35 Weak Mutation 5: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp Negation
   * 36 Weak Mutation 6: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp +1
   * 37 Weak Mutation 7: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp -1
   * 38 Weak Mutation 9: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - DeleteField: values[I
   * 39 Weak Mutation 12: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - ReplaceComparisonOperator >= -> -1
   * 40 Weak Mutation 13: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - DeleteField: values[I
   * 41 Weak Mutation 14: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp Negation
   * 42 Weak Mutation 15: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp +1
   * 43 Weak Mutation 16: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp -1
   * 44 Weak Mutation 19: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp Negation
   * 45 Weak Mutation 18: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp Negation of value
   * 46 Weak Mutation 21: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp -1
   * 47 Weak Mutation 20: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp +1
   * 48 Weak Mutation 23: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceConstant - 1 -> 0
   * 49 Weak Mutation 25: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> %
   * 50 Weak Mutation 24: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> -
   * 51 Weak Mutation 27: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> *
   * 52 Weak Mutation 26: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> /
   * 53 Weak Mutation 38: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC 1 i
   * 54 Weak Mutation 39: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC -1 i
   * 55 Weak Mutation 36: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - DeleteField: values[I
   * 56 Weak Mutation 37: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 42: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> -2
   * 58 Weak Mutation 43: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> |
   * 59 Weak Mutation 40: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 0
   * 60 Weak Mutation 41: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 1
   * 61 Weak Mutation 47: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp Negation
   * 62 Weak Mutation 44: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> ^
   * 63 Weak Mutation 51: com.sleepycat.je.cleaner.OffsetList.<init>()V:27 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 64 Weak Mutation 50: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - DeleteField: indexI
   * 65 Weak Mutation 49: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp -1
   * 66 Weak Mutation 48: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp +1
   * 67 Weak Mutation 55: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - ReplaceComparisonOperator == -> !=
   * 68 Weak Mutation 54: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp IINC -1 checkDupOffsets
   * 69 Weak Mutation 53: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp IINC 1 checkDupOffsets
   * 70 Weak Mutation 52: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp Negation of checkDupOffsets
   * 71 Weak Mutation 59: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation of value
   * 72 Weak Mutation 58: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceComparisonOperator != -> ==
   * 73 Weak Mutation 56: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation
   * 74 Weak Mutation 63: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation of value
   * 75 Weak Mutation 62: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceConstant - Dup Offset  -> 
   * 76 Weak Mutation 61: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceComparisonOperator == -> !=
   * 77 Weak Mutation 60: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: contains(J)Z
   * 78 Weak Mutation 68: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:36 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 79 Weak Mutation 69: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 80 Weak Mutation 70: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - InsertUnaryOp Negation of value
   * 81 Weak Mutation 71: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - DeleteStatement: add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 82 Weak Mutation 64: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: toHexString(J)Ljava/lang/String;
   * 83 Weak Mutation 65: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: append(Ljava/lang/String;)Ljava/lang/StringBuilder;
   * 84 Weak Mutation 66: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: toString()Ljava/lang/String;
   * 85 Weak Mutation 67: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: getStackTrace(Ljava/lang/Throwable;)Ljava/lang/String;
   * 86 Weak Mutation 76: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceConstant - 1 -> 0
   * 87 Weak Mutation 77: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> -
   * 88 Weak Mutation 78: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> %
   * 89 Weak Mutation 79: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> /
   * 90 Weak Mutation 72: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp Negation
   * 91 Weak Mutation 73: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp +1
   * 92 Weak Mutation 74: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp -1
   * 93 Weak Mutation 84: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceConstant - 0 -> 1
   * 94 Weak Mutation 81: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 95 Weak Mutation 80: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> *
   * 96 Weak Mutation 82: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceComparisonOperator == -> !=
   * 97 Weak Mutation 170: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: longSub(JJ)I
   * 98 Weak Mutation 169: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of offset
   * 99 Weak Mutation 168: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: get(I)J
   * 100 Weak Mutation 175: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp Negation of i
   * 101 Weak Mutation 174: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:95 - ReplaceConstant - 1 -> 0
   * 102 Weak Mutation 173: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> -1
   * 103 Weak Mutation 163: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 104 Weak Mutation 167: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC -1 i
   * 105 Weak Mutation 166: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC 1 i
   * 106 Weak Mutation 165: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of i
   * 107 Weak Mutation 164: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceConstant - 0 -> 1
   * 108 Weak Mutation 184: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:99 - ReplaceConstant - 0 -> 1
   * 109 Weak Mutation 178: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - DeleteStatement: size()I
   * 110 Weak Mutation 176: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp IINC 1 i
   * 111 Weak Mutation 177: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp IINC -1 i
   * 112 Weak Mutation 182: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 113 Weak Mutation 183: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - ReplaceComparisonOperator != null -> = null
   * 114 Weak Mutation 180: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceComparisonOperator < -> -2
   * 115 Weak Mutation 181: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceComparisonOperator < -> <=
   * 116 com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V: root-Branch
   * 117 com.sleepycat.je.cleaner.OffsetList$Segment.next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;: root-Branch
   * 118 com.sleepycat.je.cleaner.OffsetList$Segment.size()I: root-Branch
   * 119 com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;: I7 Branch 1 IF_ICMPGE L117 - false
   * 120 com.sleepycat.je.cleaner.OffsetList.<init>()V: root-Branch
   * 121 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I32 Branch 16 IF_ICMPLT L93 - false
   * 122 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I40 Branch 17 IFNONNULL L92 - true
   * 123 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I40 Branch 17 IFNONNULL L92 - false
   * 124 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I3 Branch 3 IFEQ L33 - false
   * 125 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I7 Branch 4 IFNE L34 - false
   * 126 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I11 Branch 5 IFEQ L34 - true
   * 127 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I54 Branch 6 IF_ACMPEQ L39 - true
   */
  @Test
  public void test0()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      assertNotNull(offsetList0);
      
      offsetList0.add(1310L, true);
      // Undeclared exception!
      try {
        offsetList0.add(1310L, true);
        fail("Expecting exception: AssertionError");
      } catch(AssertionError e) {
        /*
         * java.lang.Exception: Dup Offset 51e
         * \tat com.sleepycat.je.cleaner.OffsetList.add(OffsetList.java:34)
         * \tat sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
         * \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
         * \tat java.lang.reflect.Method.invoke(Method.java:597)
         * \tat org.evosuite.testcase.MethodStatement$1.execute(MethodStatement.java:260)
         * \tat org.evosuite.testcase.AbstractStatement.exceptionHandler(AbstractStatement.java:142)
         * \tat org.evosuite.testcase.MethodStatement.execute(MethodStatement.java:215)
         * \tat org.evosuite.testcase.TestRunnable.call(TestRunnable.java:291)
         * \tat org.evosuite.testcase.TestRunnable.call(TestRunnable.java:44)
         * \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
         * \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)
         * \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
         * \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
         * \tat java.lang.Thread.run(Thread.java:680)
         */
      }
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * 1 Weak Mutation 88: com.sleepycat.je.cleaner.OffsetList.size()I:42 - DeleteField: sizeI
   * 2 Weak Mutation 85: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp Negation
   * 3 Weak Mutation 87: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp -1
   * 4 Weak Mutation 86: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp +1
   * 5 Weak Mutation 85: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp Negation
   * 6 Weak Mutation 87: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp -1
   * 7 Weak Mutation 86: com.sleepycat.je.cleaner.OffsetList.size()I:42 - InsertUnaryOp +1
   * 8 Weak Mutation 88: com.sleepycat.je.cleaner.OffsetList.size()I:42 - DeleteField: sizeI
   * 9 com.sleepycat.je.cleaner.OffsetList.size()I: root-Branch
   * 10 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I3 Branch 3 IFEQ L33 - true
   */
  @Test
  public void test1()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      assertNotNull(offsetList0);
      
      offsetList0.add(34L, false);
      int int0 = offsetList0.size();
      assertEquals(1, offsetList0.size());
      assertEquals(1, int0);
  }

  //Test case number: 2
  /*
   * 133 covered goals:
   * 1 Weak Mutation 141: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceComparisonOperator < -> <=
   * 2 com.sleepycat.je.cleaner.OffsetList.toArray()[J: I28 Branch 12 IF_ICMPLT L79 - false
   * 3 Weak Mutation 137: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp IINC 1 next
   * 4 Weak Mutation 136: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp Negation of next
   * 5 Weak Mutation 138: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp IINC -1 next
   * 6 Weak Mutation 140: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceComparisonOperator < -> -2
   * 7 Weak Mutation 143: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp Negation of next
   * 8 Weak Mutation 142: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - ReplaceVariable next -> i
   * 9 Weak Mutation 129: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp +1
   * 10 Weak Mutation 128: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp Negation
   * 11 Weak Mutation 131: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - DeleteField: sizeI
   * 12 Weak Mutation 130: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp -1
   * 13 Weak Mutation 133: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 14 Weak Mutation 132: com.sleepycat.je.cleaner.OffsetList.toArray()[J:76 - ReplaceConstant - 0 -> 1
   * 15 Weak Mutation 135: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceVariable next -> i
   * 16 Weak Mutation 134: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceConstant - 0 -> 1
   * 17 Weak Mutation 152: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceVariable i -> next
   * 18 Weak Mutation 153: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceVariable i -> next
   * 19 Weak Mutation 154: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp Negation of i
   * 20 Weak Mutation 155: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp IINC 1 i
   * 21 Weak Mutation 156: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp IINC -1 i
   * 22 Weak Mutation 157: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - DeleteStatement: size()I
   * 23 Weak Mutation 159: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceComparisonOperator < -> -2
   * 24 Weak Mutation 144: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC 1 next
   * 25 Weak Mutation 145: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC -1 next
   * 26 Weak Mutation 146: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - ReplaceVariable i -> next
   * 27 Weak Mutation 147: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp Negation of i
   * 28 Weak Mutation 148: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC 1 i
   * 29 Weak Mutation 149: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC -1 i
   * 30 Weak Mutation 150: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - DeleteStatement: get(I)J
   * 31 Weak Mutation 151: com.sleepycat.je.cleaner.OffsetList.toArray()[J:83 - ReplaceVariable next -> i
   * 32 Weak Mutation 162: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - ReplaceComparisonOperator != null -> = null
   * 33 Weak Mutation 161: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 34 Weak Mutation 160: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceComparisonOperator < -> <=
   * 35 Weak Mutation 8: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - DeleteField: indexI
   * 36 Weak Mutation 11: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - ReplaceComparisonOperator >= -> >
   * 37 Weak Mutation 17: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - DeleteField: indexI
   * 38 Weak Mutation 22: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - DeleteField: indexI
   * 39 Weak Mutation 29: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - DeleteField: values[I
   * 40 Weak Mutation 28: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - ReplaceVariable seg -> this
   * 41 Weak Mutation 31: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - InsertUnaryOp Negation of value
   * 42 Weak Mutation 30: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - ReplaceConstant - 0 -> 1
   * 43 Weak Mutation 34: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:126 - ReplaceVariable seg -> this
   * 44 Weak Mutation 35: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:127 - ReplaceVariable seg -> this
   * 45 Weak Mutation 32: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:125 - ReplaceVariable seg -> this
   * 46 Weak Mutation 33: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:125 - ReplaceConstant - 1 -> 0
   * 47 Weak Mutation 45: com.sleepycat.je.cleaner.OffsetList$Segment.next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;:140 - DeleteField: nextLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 48 Weak Mutation 75: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - DeleteField: sizeI
   * 49 Weak Mutation 83: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceConstant - 1 -> 0
   * 50 Weak Mutation 93: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:52 - ReplaceVariable next -> seg
   * 51 Weak Mutation 92: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:51 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 52 Weak Mutation 95: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - ReplaceVariable seg -> next
   * 53 Weak Mutation 94: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:52 - ReplaceComparisonOperator = null -> != null
   * 54 Weak Mutation 89: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:48 - ReplaceConstant - 1 -> 0
   * 55 Weak Mutation 91: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:49 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 56 Weak Mutation 102: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp Negation of i
   * 57 Weak Mutation 103: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp IINC 1 i
   * 58 Weak Mutation 100: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceConstant - 0 -> 1
   * 59 Weak Mutation 101: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceVariable seg -> next
   * 60 Weak Mutation 98: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:54 - ReplaceVariable seg -> next
   * 61 Weak Mutation 99: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:55 - ReplaceVariable next -> seg
   * 62 Weak Mutation 96: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 63 Weak Mutation 97: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - DeleteStatement: setNext(Lcom/sleepycat/je/cleaner/OffsetList$Segment;)V
   * 64 Weak Mutation 111: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - ReplaceComparisonOperator != -> ==
   * 65 Weak Mutation 108: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceComparisonOperator == -> !=
   * 66 Weak Mutation 109: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp Negation
   * 67 Weak Mutation 106: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceConstant - 0 -> 1
   * 68 Weak Mutation 107: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - DeleteStatement: add(JZ)Z
   * 69 Weak Mutation 104: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp IINC -1 i
   * 70 Weak Mutation 105: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - DeleteStatement: get(I)J
   * 71 Weak Mutation 119: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp IINC -1 i
   * 72 Weak Mutation 118: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp IINC 1 i
   * 73 Weak Mutation 117: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp Negation of i
   * 74 Weak Mutation 116: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:61 - ReplaceConstant - 0 -> 1
   * 75 Weak Mutation 115: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - ReplaceComparisonOperator != -> ==
   * 76 Weak Mutation 114: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp IINC -1 oneSegFreed
   * 77 Weak Mutation 113: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp IINC 1 oneSegFreed
   * 78 Weak Mutation 112: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp Negation of oneSegFreed
   * 79 Weak Mutation 127: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp IINC -1 oneSegFreed
   * 80 Weak Mutation 126: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp IINC 1 oneSegFreed
   * 81 Weak Mutation 125: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp Negation of oneSegFreed
   * 82 Weak Mutation 124: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceComparisonOperator < -> <=
   * 83 Weak Mutation 123: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceComparisonOperator < -> -2
   * 84 Weak Mutation 121: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - DeleteStatement: size()I
   * 85 Weak Mutation 120: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceVariable seg -> next
   * 86 Weak Mutation 137: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp IINC 1 next
   * 87 Weak Mutation 136: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp Negation of next
   * 88 Weak Mutation 138: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - InsertUnaryOp IINC -1 next
   * 89 Weak Mutation 141: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceComparisonOperator < -> <=
   * 90 Weak Mutation 140: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceComparisonOperator < -> -2
   * 91 Weak Mutation 143: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp Negation of next
   * 92 Weak Mutation 142: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - ReplaceVariable next -> i
   * 93 Weak Mutation 129: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp +1
   * 94 Weak Mutation 128: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp Negation
   * 95 Weak Mutation 131: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - DeleteField: sizeI
   * 96 Weak Mutation 130: com.sleepycat.je.cleaner.OffsetList.toArray()[J:75 - InsertUnaryOp -1
   * 97 Weak Mutation 133: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 98 Weak Mutation 132: com.sleepycat.je.cleaner.OffsetList.toArray()[J:76 - ReplaceConstant - 0 -> 1
   * 99 Weak Mutation 135: com.sleepycat.je.cleaner.OffsetList.toArray()[J:79 - ReplaceVariable next -> i
   * 100 Weak Mutation 134: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceConstant - 0 -> 1
   * 101 Weak Mutation 152: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceVariable i -> next
   * 102 Weak Mutation 153: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceVariable i -> next
   * 103 Weak Mutation 154: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp Negation of i
   * 104 Weak Mutation 155: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp IINC 1 i
   * 105 Weak Mutation 156: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - InsertUnaryOp IINC -1 i
   * 106 Weak Mutation 157: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - DeleteStatement: size()I
   * 107 Weak Mutation 159: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceComparisonOperator < -> -2
   * 108 Weak Mutation 144: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC 1 next
   * 109 Weak Mutation 145: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC -1 next
   * 110 Weak Mutation 146: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - ReplaceVariable i -> next
   * 111 Weak Mutation 147: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp Negation of i
   * 112 Weak Mutation 148: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC 1 i
   * 113 Weak Mutation 149: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - InsertUnaryOp IINC -1 i
   * 114 Weak Mutation 150: com.sleepycat.je.cleaner.OffsetList.toArray()[J:82 - DeleteStatement: get(I)J
   * 115 Weak Mutation 151: com.sleepycat.je.cleaner.OffsetList.toArray()[J:83 - ReplaceVariable next -> i
   * 116 Weak Mutation 162: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - ReplaceComparisonOperator != null -> = null
   * 117 Weak Mutation 161: com.sleepycat.je.cleaner.OffsetList.toArray()[J:77 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 118 Weak Mutation 160: com.sleepycat.je.cleaner.OffsetList.toArray()[J:78 - ReplaceComparisonOperator < -> <=
   * 119 com.sleepycat.je.cleaner.OffsetList$Segment.setNext(Lcom/sleepycat/je/cleaner/OffsetList$Segment;)V: root-Branch
   * 120 com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;: I7 Branch 1 IF_ICMPGE L117 - true
   * 121 com.sleepycat.je.cleaner.OffsetList.toArray()[J: I28 Branch 12 IF_ICMPLT L79 - true
   * 122 com.sleepycat.je.cleaner.OffsetList.toArray()[J: I50 Branch 13 IF_ICMPLT L78 - true
   * 123 com.sleepycat.je.cleaner.OffsetList.toArray()[J: I50 Branch 13 IF_ICMPLT L78 - false
   * 124 com.sleepycat.je.cleaner.OffsetList.toArray()[J: I58 Branch 14 IFNONNULL L77 - true
   * 125 com.sleepycat.je.cleaner.OffsetList.add(JZ)Z: I54 Branch 6 IF_ACMPEQ L39 - false
   * 126 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I17 Branch 7 IFNULL L52 - true
   * 127 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I17 Branch 7 IFNULL L52 - false
   * 128 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I50 Branch 8 IFEQ L59 - true
   * 129 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I50 Branch 8 IFEQ L59 - false
   * 130 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I54 Branch 9 IFNE L60 - false
   * 131 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I56 Branch 10 IFNE L60 - true
   * 132 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I72 Branch 11 IF_ICMPLT L58 - true
   * 133 com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z: I72 Branch 11 IF_ICMPLT L58 - false
   */
  @Test
  public void test2()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      offsetList0.add((-1L), true);
      offsetList0.merge(offsetList0);
      offsetList0.merge(offsetList0);
      offsetList0.toArray();
      assertEquals(201, offsetList0.size());
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * 1 Weak Mutation 171: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> <
   * 2 com.sleepycat.je.cleaner.OffsetList.contains(J)Z: I20 Branch 15 IFNE L94 - true
   * 3 Weak Mutation 43: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> |
   * 4 Weak Mutation 171: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> <
   */
  @Test
  public void test3()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      assertNotNull(offsetList0);
      
      offsetList0.add(34L, false);
      boolean boolean0 = offsetList0.contains(1L);
      assertEquals(1, offsetList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * 1 Weak Mutation 172: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> >
   * 2 Weak Mutation 170: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: longSub(JJ)I
   * 3 Weak Mutation 169: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of offset
   * 4 Weak Mutation 168: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - DeleteStatement: get(I)J
   * 5 Weak Mutation 167: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC -1 i
   * 6 Weak Mutation 166: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp IINC 1 i
   * 7 Weak Mutation 165: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - InsertUnaryOp Negation of i
   * 8 Weak Mutation 180: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceComparisonOperator < -> -2
   * 9 Weak Mutation 172: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:94 - ReplaceComparisonOperator != -> >
   */
  @Test
  public void test4()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      assertNotNull(offsetList0);
      
      offsetList0.add((-1L), true);
      boolean boolean0 = offsetList0.contains(0L);
      assertEquals(1, offsetList0.size());
      assertEquals(false, boolean0);
  }

  //Test case number: 5
  /*
   * 125 covered goals:
   * 1 Weak Mutation 46: com.sleepycat.je.cleaner.OffsetList$Segment.setNext(Lcom/sleepycat/je/cleaner/OffsetList$Segment;)V:146 - ReplaceVariable next -> this
   * 2 Weak Mutation 0: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 0
   * 3 Weak Mutation 1: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 1
   * 4 Weak Mutation 2: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> -1
   * 5 Weak Mutation 3: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 99
   * 6 Weak Mutation 4: com.sleepycat.je.cleaner.OffsetList$Segment.<init>()V:110 - ReplaceConstant - 100 -> 101
   * 7 Weak Mutation 5: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp Negation
   * 8 Weak Mutation 6: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp +1
   * 9 Weak Mutation 7: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - InsertUnaryOp -1
   * 10 Weak Mutation 8: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - DeleteField: indexI
   * 11 Weak Mutation 9: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - DeleteField: values[I
   * 12 Weak Mutation 11: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - ReplaceComparisonOperator >= -> >
   * 13 Weak Mutation 12: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:117 - ReplaceComparisonOperator >= -> -1
   * 14 Weak Mutation 13: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - DeleteField: values[I
   * 15 Weak Mutation 14: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp Negation
   * 16 Weak Mutation 15: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp +1
   * 17 Weak Mutation 17: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - DeleteField: indexI
   * 18 Weak Mutation 16: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp -1
   * 19 Weak Mutation 19: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp Negation
   * 20 Weak Mutation 18: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:118 - InsertUnaryOp Negation of value
   * 21 Weak Mutation 21: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp -1
   * 22 Weak Mutation 20: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - InsertUnaryOp +1
   * 23 Weak Mutation 23: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceConstant - 1 -> 0
   * 24 Weak Mutation 22: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - DeleteField: indexI
   * 25 Weak Mutation 25: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> %
   * 26 Weak Mutation 24: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> -
   * 27 Weak Mutation 27: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> *
   * 28 Weak Mutation 26: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:119 - ReplaceArithmeticOperator + -> /
   * 29 Weak Mutation 29: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - DeleteField: values[I
   * 30 Weak Mutation 28: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - ReplaceVariable seg -> this
   * 31 Weak Mutation 31: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - InsertUnaryOp Negation of value
   * 32 Weak Mutation 30: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:124 - ReplaceConstant - 0 -> 1
   * 33 Weak Mutation 34: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:126 - ReplaceVariable seg -> this
   * 34 Weak Mutation 35: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:127 - ReplaceVariable seg -> this
   * 35 Weak Mutation 32: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:125 - ReplaceVariable seg -> this
   * 36 Weak Mutation 33: com.sleepycat.je.cleaner.OffsetList$Segment.add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;:125 - ReplaceConstant - 1 -> 0
   * 37 Weak Mutation 38: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC 1 i
   * 38 Weak Mutation 39: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp IINC -1 i
   * 39 Weak Mutation 36: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - DeleteField: values[I
   * 40 Weak Mutation 37: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - InsertUnaryOp Negation of i
   * 41 Weak Mutation 42: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> -2
   * 42 Weak Mutation 40: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 0
   * 43 Weak Mutation 41: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceConstant - -1 -> 1
   * 44 Weak Mutation 47: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp Negation
   * 45 Weak Mutation 44: com.sleepycat.je.cleaner.OffsetList$Segment.get(I)J:134 - ReplaceBitwiseOperator & -> ^
   * 46 Weak Mutation 45: com.sleepycat.je.cleaner.OffsetList$Segment.next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;:140 - DeleteField: nextLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 47 Weak Mutation 51: com.sleepycat.je.cleaner.OffsetList.<init>()V:27 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 48 Weak Mutation 50: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - DeleteField: indexI
   * 49 Weak Mutation 49: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp -1
   * 50 Weak Mutation 48: com.sleepycat.je.cleaner.OffsetList$Segment.size()I:152 - InsertUnaryOp +1
   * 51 Weak Mutation 55: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - ReplaceComparisonOperator == -> !=
   * 52 Weak Mutation 54: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp IINC -1 checkDupOffsets
   * 53 Weak Mutation 53: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp IINC 1 checkDupOffsets
   * 54 Weak Mutation 52: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:33 - InsertUnaryOp Negation of checkDupOffsets
   * 55 Weak Mutation 59: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation of value
   * 56 Weak Mutation 58: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceComparisonOperator != -> ==
   * 57 Weak Mutation 56: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - InsertUnaryOp Negation
   * 58 Weak Mutation 61: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - ReplaceComparisonOperator == -> !=
   * 59 Weak Mutation 60: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:34 - DeleteStatement: contains(J)Z
   * 60 Weak Mutation 68: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:36 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 61 Weak Mutation 69: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 62 Weak Mutation 70: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - InsertUnaryOp Negation of value
   * 63 Weak Mutation 71: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:37 - DeleteStatement: add(J)Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 64 Weak Mutation 76: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceConstant - 1 -> 0
   * 65 Weak Mutation 77: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> -
   * 66 Weak Mutation 78: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> %
   * 67 Weak Mutation 79: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> /
   * 68 Weak Mutation 72: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp Negation
   * 69 Weak Mutation 73: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp +1
   * 70 Weak Mutation 74: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - InsertUnaryOp -1
   * 71 Weak Mutation 75: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - DeleteField: sizeI
   * 72 Weak Mutation 84: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceConstant - 0 -> 1
   * 73 Weak Mutation 81: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - DeleteField: tailLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 74 Weak Mutation 80: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:38 - ReplaceArithmeticOperator + -> *
   * 75 Weak Mutation 83: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceConstant - 1 -> 0
   * 76 Weak Mutation 82: com.sleepycat.je.cleaner.OffsetList.add(JZ)Z:39 - ReplaceComparisonOperator == -> !=
   * 77 Weak Mutation 93: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:52 - ReplaceVariable next -> seg
   * 78 Weak Mutation 92: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:51 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 79 Weak Mutation 95: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - ReplaceVariable seg -> next
   * 80 Weak Mutation 94: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:52 - ReplaceComparisonOperator = null -> != null
   * 81 Weak Mutation 89: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:48 - ReplaceConstant - 1 -> 0
   * 82 Weak Mutation 91: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:49 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 83 Weak Mutation 90: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:49 - ReplaceVariable other -> this
   * 84 Weak Mutation 102: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp Negation of i
   * 85 Weak Mutation 103: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp IINC 1 i
   * 86 Weak Mutation 100: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceConstant - 0 -> 1
   * 87 Weak Mutation 101: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceVariable seg -> next
   * 88 Weak Mutation 98: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:54 - ReplaceVariable seg -> next
   * 89 Weak Mutation 99: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:55 - ReplaceVariable next -> seg
   * 90 Weak Mutation 96: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 91 Weak Mutation 97: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:53 - DeleteStatement: setNext(Lcom/sleepycat/je/cleaner/OffsetList$Segment;)V
   * 92 Weak Mutation 111: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - ReplaceComparisonOperator != -> ==
   * 93 Weak Mutation 108: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceComparisonOperator == -> !=
   * 94 Weak Mutation 109: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp Negation
   * 95 Weak Mutation 106: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - ReplaceConstant - 0 -> 1
   * 96 Weak Mutation 107: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - DeleteStatement: add(JZ)Z
   * 97 Weak Mutation 104: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - InsertUnaryOp IINC -1 i
   * 98 Weak Mutation 105: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:59 - DeleteStatement: get(I)J
   * 99 Weak Mutation 119: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp IINC -1 i
   * 100 Weak Mutation 118: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp IINC 1 i
   * 101 Weak Mutation 117: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - InsertUnaryOp Negation of i
   * 102 Weak Mutation 116: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:61 - ReplaceConstant - 0 -> 1
   * 103 Weak Mutation 115: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - ReplaceComparisonOperator != -> ==
   * 104 Weak Mutation 114: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp IINC -1 oneSegFreed
   * 105 Weak Mutation 113: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp IINC 1 oneSegFreed
   * 106 Weak Mutation 112: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:60 - InsertUnaryOp Negation of oneSegFreed
   * 107 Weak Mutation 127: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp IINC -1 oneSegFreed
   * 108 Weak Mutation 126: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp IINC 1 oneSegFreed
   * 109 Weak Mutation 125: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:67 - InsertUnaryOp Negation of oneSegFreed
   * 110 Weak Mutation 124: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceComparisonOperator < -> <=
   * 111 Weak Mutation 123: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceComparisonOperator < -> -2
   * 112 Weak Mutation 121: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - DeleteStatement: size()I
   * 113 Weak Mutation 120: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:58 - ReplaceVariable seg -> next
   * 114 Weak Mutation 175: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp Negation of i
   * 115 Weak Mutation 163: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - DeleteField: headLcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 116 Weak Mutation 164: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceConstant - 0 -> 1
   * 117 Weak Mutation 184: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:99 - ReplaceConstant - 0 -> 1
   * 118 Weak Mutation 178: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - DeleteStatement: size()I
   * 119 Weak Mutation 176: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp IINC 1 i
   * 120 Weak Mutation 177: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - InsertUnaryOp IINC -1 i
   * 121 Weak Mutation 182: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - DeleteStatement: next()Lcom/sleepycat/je/cleaner/OffsetList$Segment;
   * 122 Weak Mutation 183: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:92 - ReplaceComparisonOperator != null -> = null
   * 123 Weak Mutation 181: com.sleepycat.je.cleaner.OffsetList.contains(J)Z:93 - ReplaceComparisonOperator < -> <=
   * 124 Weak Mutation 46: com.sleepycat.je.cleaner.OffsetList$Segment.setNext(Lcom/sleepycat/je/cleaner/OffsetList$Segment;)V:146 - ReplaceVariable next -> this
   * 125 Weak Mutation 90: com.sleepycat.je.cleaner.OffsetList.merge(Lcom/sleepycat/je/cleaner/OffsetList;)Z:49 - ReplaceVariable other -> this
   */
  @Test
  public void test5()  throws Throwable  {
      OffsetList offsetList0 = new OffsetList();
      assertNotNull(offsetList0);
      
      offsetList0.add((-1L), true);
      offsetList0.merge(offsetList0);
      OffsetList offsetList1 = new OffsetList();
      boolean boolean0 = offsetList1.merge(offsetList0);
      assertEquals(101, offsetList0.size());
      assertEquals(true, boolean0);
  }
}
