/*
 * This file was automatically generated by EvoSuite
 */

package com.sleepycat.je.cleaner;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import com.sleepycat.je.cleaner.PackedOffsets;
import java.nio.ByteBuffer;

@RunWith(EvoSuiteRunner.class)
public class TestPackedOffsets_12 {


  //Test case number: 12
  /*
   * 21 covered goals:
   * 1 com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z: I5 Branch 1 IFNULL L87 - true
   * 2 Weak Mutation 0: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteField: this$0Lcom/sleepycat/je/cleaner/PackedOffsets;
   * 3 Weak Mutation 1: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - DeleteStatement: access$100(Lcom/sleepycat/je/cleaner/PackedOffsets;)[S
   * 4 Weak Mutation 2: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceComparisonOperator = null -> != null
   * 5 Weak Mutation 13: com.sleepycat.je.cleaner.PackedOffsets$Iterator.hasNext()Z:87 - ReplaceConstant - 0 -> 1
   * 6 Weak Mutation 111: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:51 - ReplaceConstant - 0 -> 1
   * 7 Weak Mutation 108: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp +1
   * 8 Weak Mutation 109: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp -1
   * 9 Weak Mutation 107: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:50 - InsertUnaryOp Negation
   * 10 Weak Mutation 119: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 11 Weak Mutation 114: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - ReplaceComparisonOperator == -> !=
   * 12 Weak Mutation 113: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:53 - DeleteStatement: hasNext()Z
   * 13 Weak Mutation 112: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:52 - DeleteStatement: iterator()Lcom/sleepycat/je/cleaner/PackedOffsets$Iterator;
   * 14 Weak Mutation 127: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp -1
   * 15 Weak Mutation 126: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp +1
   * 16 Weak Mutation 125: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 17 Weak Mutation 124: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC -1
   * 18 Weak Mutation 123: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp IINC 1
   * 19 Weak Mutation 122: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - InsertUnaryOp Negation
   * 20 Weak Mutation 121: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator != -> ==
   * 21 Weak Mutation 130: com.sleepycat.je.cleaner.PackedOffsets.toArray()[J:56 - ReplaceComparisonOperator == -> -2
   */
  @Test
  public void test12()  throws Throwable  {
      PackedOffsets packedOffsets0 = new PackedOffsets();
      long[] longArray0 = packedOffsets0.toArray();
      assertNotNull(longArray0);
  }
}
